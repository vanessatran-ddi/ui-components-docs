var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};
var __accessCheck = (obj, member, msg) => {
  if (!member.has(obj))
    throw TypeError("Cannot " + msg);
};
var __privateAdd = (obj, member, value) => {
  if (member.has(obj))
    throw TypeError("Cannot add the same private member more than once");
  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);
};
var __privateMethod = (obj, member, method) => {
  __accessCheck(obj, member, "access private method");
  return method;
};
var _dynamicProp, dynamicProp_fn, _toFunc, toFunc_fn, _serializeComponent, serializeComponent_fn, _serializeProp, serializeProp_fn, _componentToString, componentToString_fn, _dynamicProp2, dynamicProp_fn2, _toFunc2, toFunc_fn2;
function _mergeNamespaces(n2, m2) {
  for (var i = 0; i < m2.length; i++) {
    const e = m2[i];
    if (typeof e !== "string" && !Array.isArray(e)) {
      for (const k2 in e) {
        if (k2 !== "default" && !(k2 in n2)) {
          const d = Object.getOwnPropertyDescriptor(e, k2);
          if (d) {
            Object.defineProperty(n2, k2, d.get ? d : {
              enumerable: true,
              get: () => e[k2]
            });
          }
        }
      }
    }
  }
  return Object.freeze(Object.defineProperty(n2, Symbol.toStringTag, { value: "Module" }));
}
(function polyfill() {
  const relList = document.createElement("link").relList;
  if (relList && relList.supports && relList.supports("modulepreload")) {
    return;
  }
  for (const link of document.querySelectorAll('link[rel="modulepreload"]')) {
    processPreload(link);
  }
  new MutationObserver((mutations) => {
    for (const mutation of mutations) {
      if (mutation.type !== "childList") {
        continue;
      }
      for (const node of mutation.addedNodes) {
        if (node.tagName === "LINK" && node.rel === "modulepreload")
          processPreload(node);
      }
    }
  }).observe(document, { childList: true, subtree: true });
  function getFetchOpts(link) {
    const fetchOpts = {};
    if (link.integrity)
      fetchOpts.integrity = link.integrity;
    if (link.referrerPolicy)
      fetchOpts.referrerPolicy = link.referrerPolicy;
    if (link.crossOrigin === "use-credentials")
      fetchOpts.credentials = "include";
    else if (link.crossOrigin === "anonymous")
      fetchOpts.credentials = "omit";
    else
      fetchOpts.credentials = "same-origin";
    return fetchOpts;
  }
  function processPreload(link) {
    if (link.ep)
      return;
    link.ep = true;
    const fetchOpts = getFetchOpts(link);
    fetch(link.href, fetchOpts);
  }
})();
function getDefaultExportFromCjs(x2) {
  return x2 && x2.__esModule && Object.prototype.hasOwnProperty.call(x2, "default") ? x2["default"] : x2;
}
var jsxRuntime$1 = { exports: {} };
var reactJsxRuntime_production_min$1 = {};
var react$1 = { exports: {} };
var react_production_min$1 = {};
/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var l$5 = Symbol.for("react.element"), n$4 = Symbol.for("react.portal"), p$6 = Symbol.for("react.fragment"), q$3 = Symbol.for("react.strict_mode"), r$2 = Symbol.for("react.profiler"), t$3 = Symbol.for("react.provider"), u$3 = Symbol.for("react.context"), v$3 = Symbol.for("react.forward_ref"), w$3 = Symbol.for("react.suspense"), x$3 = Symbol.for("react.memo"), y$3 = Symbol.for("react.lazy"), z$3 = Symbol.iterator;
function A$3(a) {
  if (null === a || "object" !== typeof a)
    return null;
  a = z$3 && a[z$3] || a["@@iterator"];
  return "function" === typeof a ? a : null;
}
var B$4 = { isMounted: function() {
  return false;
}, enqueueForceUpdate: function() {
}, enqueueReplaceState: function() {
}, enqueueSetState: function() {
} }, C$3 = Object.assign, D$3 = {};
function E$4(a, b, e) {
  this.props = a;
  this.context = b;
  this.refs = D$3;
  this.updater = e || B$4;
}
E$4.prototype.isReactComponent = {};
E$4.prototype.setState = function(a, b) {
  if ("object" !== typeof a && "function" !== typeof a && null != a)
    throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
  this.updater.enqueueSetState(this, a, b, "setState");
};
E$4.prototype.forceUpdate = function(a) {
  this.updater.enqueueForceUpdate(this, a, "forceUpdate");
};
function F$2() {
}
F$2.prototype = E$4.prototype;
function G$3(a, b, e) {
  this.props = a;
  this.context = b;
  this.refs = D$3;
  this.updater = e || B$4;
}
var H$4 = G$3.prototype = new F$2();
H$4.constructor = G$3;
C$3(H$4, E$4.prototype);
H$4.isPureReactComponent = true;
var I$4 = Array.isArray, J$3 = Object.prototype.hasOwnProperty, K$4 = { current: null }, L$4 = { key: true, ref: true, __self: true, __source: true };
function M$4(a, b, e) {
  var d, c = {}, k2 = null, h = null;
  if (null != b)
    for (d in void 0 !== b.ref && (h = b.ref), void 0 !== b.key && (k2 = "" + b.key), b)
      J$3.call(b, d) && !L$4.hasOwnProperty(d) && (c[d] = b[d]);
  var g2 = arguments.length - 2;
  if (1 === g2)
    c.children = e;
  else if (1 < g2) {
    for (var f2 = Array(g2), m2 = 0; m2 < g2; m2++)
      f2[m2] = arguments[m2 + 2];
    c.children = f2;
  }
  if (a && a.defaultProps)
    for (d in g2 = a.defaultProps, g2)
      void 0 === c[d] && (c[d] = g2[d]);
  return { $$typeof: l$5, type: a, key: k2, ref: h, props: c, _owner: K$4.current };
}
function N$4(a, b) {
  return { $$typeof: l$5, type: a.type, key: b, ref: a.ref, props: a.props, _owner: a._owner };
}
function O$4(a) {
  return "object" === typeof a && null !== a && a.$$typeof === l$5;
}
function escape$2(a) {
  var b = { "=": "=0", ":": "=2" };
  return "$" + a.replace(/[=:]/g, function(a2) {
    return b[a2];
  });
}
var P$4 = /\/+/g;
function Q$4(a, b) {
  return "object" === typeof a && null !== a && null != a.key ? escape$2("" + a.key) : b.toString(36);
}
function R$4(a, b, e, d, c) {
  var k2 = typeof a;
  if ("undefined" === k2 || "boolean" === k2)
    a = null;
  var h = false;
  if (null === a)
    h = true;
  else
    switch (k2) {
      case "string":
      case "number":
        h = true;
        break;
      case "object":
        switch (a.$$typeof) {
          case l$5:
          case n$4:
            h = true;
        }
    }
  if (h)
    return h = a, c = c(h), a = "" === d ? "." + Q$4(h, 0) : d, I$4(c) ? (e = "", null != a && (e = a.replace(P$4, "$&/") + "/"), R$4(c, b, e, "", function(a2) {
      return a2;
    })) : null != c && (O$4(c) && (c = N$4(c, e + (!c.key || h && h.key === c.key ? "" : ("" + c.key).replace(P$4, "$&/") + "/") + a)), b.push(c)), 1;
  h = 0;
  d = "" === d ? "." : d + ":";
  if (I$4(a))
    for (var g2 = 0; g2 < a.length; g2++) {
      k2 = a[g2];
      var f2 = d + Q$4(k2, g2);
      h += R$4(k2, b, e, f2, c);
    }
  else if (f2 = A$3(a), "function" === typeof f2)
    for (a = f2.call(a), g2 = 0; !(k2 = a.next()).done; )
      k2 = k2.value, f2 = d + Q$4(k2, g2++), h += R$4(k2, b, e, f2, c);
  else if ("object" === k2)
    throw b = String(a), Error("Objects are not valid as a React child (found: " + ("[object Object]" === b ? "object with keys {" + Object.keys(a).join(", ") + "}" : b) + "). If you meant to render a collection of children, use an array instead.");
  return h;
}
function S$4(a, b, e) {
  if (null == a)
    return a;
  var d = [], c = 0;
  R$4(a, d, "", "", function(a2) {
    return b.call(e, a2, c++);
  });
  return d;
}
function T$4(a) {
  if (-1 === a._status) {
    var b = a._result;
    b = b();
    b.then(function(b2) {
      if (0 === a._status || -1 === a._status)
        a._status = 1, a._result = b2;
    }, function(b2) {
      if (0 === a._status || -1 === a._status)
        a._status = 2, a._result = b2;
    });
    -1 === a._status && (a._status = 0, a._result = b);
  }
  if (1 === a._status)
    return a._result.default;
  throw a._result;
}
var U$3 = { current: null }, V$3 = { transition: null }, W$3 = { ReactCurrentDispatcher: U$3, ReactCurrentBatchConfig: V$3, ReactCurrentOwner: K$4 };
react_production_min$1.Children = { map: S$4, forEach: function(a, b, e) {
  S$4(a, function() {
    b.apply(this, arguments);
  }, e);
}, count: function(a) {
  var b = 0;
  S$4(a, function() {
    b++;
  });
  return b;
}, toArray: function(a) {
  return S$4(a, function(a2) {
    return a2;
  }) || [];
}, only: function(a) {
  if (!O$4(a))
    throw Error("React.Children.only expected to receive a single React element child.");
  return a;
} };
react_production_min$1.Component = E$4;
react_production_min$1.Fragment = p$6;
react_production_min$1.Profiler = r$2;
react_production_min$1.PureComponent = G$3;
react_production_min$1.StrictMode = q$3;
react_production_min$1.Suspense = w$3;
react_production_min$1.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = W$3;
react_production_min$1.cloneElement = function(a, b, e) {
  if (null === a || void 0 === a)
    throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + a + ".");
  var d = C$3({}, a.props), c = a.key, k2 = a.ref, h = a._owner;
  if (null != b) {
    void 0 !== b.ref && (k2 = b.ref, h = K$4.current);
    void 0 !== b.key && (c = "" + b.key);
    if (a.type && a.type.defaultProps)
      var g2 = a.type.defaultProps;
    for (f2 in b)
      J$3.call(b, f2) && !L$4.hasOwnProperty(f2) && (d[f2] = void 0 === b[f2] && void 0 !== g2 ? g2[f2] : b[f2]);
  }
  var f2 = arguments.length - 2;
  if (1 === f2)
    d.children = e;
  else if (1 < f2) {
    g2 = Array(f2);
    for (var m2 = 0; m2 < f2; m2++)
      g2[m2] = arguments[m2 + 2];
    d.children = g2;
  }
  return { $$typeof: l$5, type: a.type, key: c, ref: k2, props: d, _owner: h };
};
react_production_min$1.createContext = function(a) {
  a = { $$typeof: u$3, _currentValue: a, _currentValue2: a, _threadCount: 0, Provider: null, Consumer: null, _defaultValue: null, _globalName: null };
  a.Provider = { $$typeof: t$3, _context: a };
  return a.Consumer = a;
};
react_production_min$1.createElement = M$4;
react_production_min$1.createFactory = function(a) {
  var b = M$4.bind(null, a);
  b.type = a;
  return b;
};
react_production_min$1.createRef = function() {
  return { current: null };
};
react_production_min$1.forwardRef = function(a) {
  return { $$typeof: v$3, render: a };
};
react_production_min$1.isValidElement = O$4;
react_production_min$1.lazy = function(a) {
  return { $$typeof: y$3, _payload: { _status: -1, _result: a }, _init: T$4 };
};
react_production_min$1.memo = function(a, b) {
  return { $$typeof: x$3, type: a, compare: void 0 === b ? null : b };
};
react_production_min$1.startTransition = function(a) {
  var b = V$3.transition;
  V$3.transition = {};
  try {
    a();
  } finally {
    V$3.transition = b;
  }
};
react_production_min$1.unstable_act = function() {
  throw Error("act(...) is not supported in production builds of React.");
};
react_production_min$1.useCallback = function(a, b) {
  return U$3.current.useCallback(a, b);
};
react_production_min$1.useContext = function(a) {
  return U$3.current.useContext(a);
};
react_production_min$1.useDebugValue = function() {
};
react_production_min$1.useDeferredValue = function(a) {
  return U$3.current.useDeferredValue(a);
};
react_production_min$1.useEffect = function(a, b) {
  return U$3.current.useEffect(a, b);
};
react_production_min$1.useId = function() {
  return U$3.current.useId();
};
react_production_min$1.useImperativeHandle = function(a, b, e) {
  return U$3.current.useImperativeHandle(a, b, e);
};
react_production_min$1.useInsertionEffect = function(a, b) {
  return U$3.current.useInsertionEffect(a, b);
};
react_production_min$1.useLayoutEffect = function(a, b) {
  return U$3.current.useLayoutEffect(a, b);
};
react_production_min$1.useMemo = function(a, b) {
  return U$3.current.useMemo(a, b);
};
react_production_min$1.useReducer = function(a, b, e) {
  return U$3.current.useReducer(a, b, e);
};
react_production_min$1.useRef = function(a) {
  return U$3.current.useRef(a);
};
react_production_min$1.useState = function(a) {
  return U$3.current.useState(a);
};
react_production_min$1.useSyncExternalStore = function(a, b, e) {
  return U$3.current.useSyncExternalStore(a, b, e);
};
react_production_min$1.useTransition = function() {
  return U$3.current.useTransition();
};
react_production_min$1.version = "18.2.0";
{
  react$1.exports = react_production_min$1;
}
var reactExports$1 = react$1.exports;
const React = /* @__PURE__ */ getDefaultExportFromCjs(reactExports$1);
const React$1 = /* @__PURE__ */ _mergeNamespaces({
  __proto__: null,
  default: React
}, [reactExports$1]);
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var f$1 = reactExports$1, k$1 = Symbol.for("react.element"), l$4 = Symbol.for("react.fragment"), m$2 = Object.prototype.hasOwnProperty, n$3 = f$1.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, p$5 = { key: true, ref: true, __self: true, __source: true };
function q$2(c, a, g2) {
  var b, d = {}, e = null, h = null;
  void 0 !== g2 && (e = "" + g2);
  void 0 !== a.key && (e = "" + a.key);
  void 0 !== a.ref && (h = a.ref);
  for (b in a)
    m$2.call(a, b) && !p$5.hasOwnProperty(b) && (d[b] = a[b]);
  if (c && c.defaultProps)
    for (b in a = c.defaultProps, a)
      void 0 === d[b] && (d[b] = a[b]);
  return { $$typeof: k$1, type: c, key: e, ref: h, props: d, _owner: n$3.current };
}
reactJsxRuntime_production_min$1.Fragment = l$4;
reactJsxRuntime_production_min$1.jsx = q$2;
reactJsxRuntime_production_min$1.jsxs = q$2;
{
  jsxRuntime$1.exports = reactJsxRuntime_production_min$1;
}
var jsxRuntimeExports$1 = jsxRuntime$1.exports;
var client = {};
var reactDom = { exports: {} };
var reactDom_production_min = {};
var scheduler = { exports: {} };
var scheduler_production_min = {};
/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
(function(exports) {
  function f2(a, b) {
    var c = a.length;
    a.push(b);
    a:
      for (; 0 < c; ) {
        var d = c - 1 >>> 1, e = a[d];
        if (0 < g2(e, b))
          a[d] = b, a[c] = e, c = d;
        else
          break a;
      }
  }
  function h(a) {
    return 0 === a.length ? null : a[0];
  }
  function k2(a) {
    if (0 === a.length)
      return null;
    var b = a[0], c = a.pop();
    if (c !== b) {
      a[0] = c;
      a:
        for (var d = 0, e = a.length, w2 = e >>> 1; d < w2; ) {
          var m2 = 2 * (d + 1) - 1, C2 = a[m2], n2 = m2 + 1, x2 = a[n2];
          if (0 > g2(C2, c))
            n2 < e && 0 > g2(x2, C2) ? (a[d] = x2, a[n2] = c, d = n2) : (a[d] = C2, a[m2] = c, d = m2);
          else if (n2 < e && 0 > g2(x2, c))
            a[d] = x2, a[n2] = c, d = n2;
          else
            break a;
        }
    }
    return b;
  }
  function g2(a, b) {
    var c = a.sortIndex - b.sortIndex;
    return 0 !== c ? c : a.id - b.id;
  }
  if ("object" === typeof performance && "function" === typeof performance.now) {
    var l2 = performance;
    exports.unstable_now = function() {
      return l2.now();
    };
  } else {
    var p2 = Date, q2 = p2.now();
    exports.unstable_now = function() {
      return p2.now() - q2;
    };
  }
  var r2 = [], t2 = [], u2 = 1, v2 = null, y2 = 3, z2 = false, A2 = false, B2 = false, D2 = "function" === typeof setTimeout ? setTimeout : null, E2 = "function" === typeof clearTimeout ? clearTimeout : null, F2 = "undefined" !== typeof setImmediate ? setImmediate : null;
  "undefined" !== typeof navigator && void 0 !== navigator.scheduling && void 0 !== navigator.scheduling.isInputPending && navigator.scheduling.isInputPending.bind(navigator.scheduling);
  function G2(a) {
    for (var b = h(t2); null !== b; ) {
      if (null === b.callback)
        k2(t2);
      else if (b.startTime <= a)
        k2(t2), b.sortIndex = b.expirationTime, f2(r2, b);
      else
        break;
      b = h(t2);
    }
  }
  function H2(a) {
    B2 = false;
    G2(a);
    if (!A2)
      if (null !== h(r2))
        A2 = true, I2(J2);
      else {
        var b = h(t2);
        null !== b && K2(H2, b.startTime - a);
      }
  }
  function J2(a, b) {
    A2 = false;
    B2 && (B2 = false, E2(L2), L2 = -1);
    z2 = true;
    var c = y2;
    try {
      G2(b);
      for (v2 = h(r2); null !== v2 && (!(v2.expirationTime > b) || a && !M2()); ) {
        var d = v2.callback;
        if ("function" === typeof d) {
          v2.callback = null;
          y2 = v2.priorityLevel;
          var e = d(v2.expirationTime <= b);
          b = exports.unstable_now();
          "function" === typeof e ? v2.callback = e : v2 === h(r2) && k2(r2);
          G2(b);
        } else
          k2(r2);
        v2 = h(r2);
      }
      if (null !== v2)
        var w2 = true;
      else {
        var m2 = h(t2);
        null !== m2 && K2(H2, m2.startTime - b);
        w2 = false;
      }
      return w2;
    } finally {
      v2 = null, y2 = c, z2 = false;
    }
  }
  var N2 = false, O2 = null, L2 = -1, P2 = 5, Q2 = -1;
  function M2() {
    return exports.unstable_now() - Q2 < P2 ? false : true;
  }
  function R2() {
    if (null !== O2) {
      var a = exports.unstable_now();
      Q2 = a;
      var b = true;
      try {
        b = O2(true, a);
      } finally {
        b ? S2() : (N2 = false, O2 = null);
      }
    } else
      N2 = false;
  }
  var S2;
  if ("function" === typeof F2)
    S2 = function() {
      F2(R2);
    };
  else if ("undefined" !== typeof MessageChannel) {
    var T2 = new MessageChannel(), U2 = T2.port2;
    T2.port1.onmessage = R2;
    S2 = function() {
      U2.postMessage(null);
    };
  } else
    S2 = function() {
      D2(R2, 0);
    };
  function I2(a) {
    O2 = a;
    N2 || (N2 = true, S2());
  }
  function K2(a, b) {
    L2 = D2(function() {
      a(exports.unstable_now());
    }, b);
  }
  exports.unstable_IdlePriority = 5;
  exports.unstable_ImmediatePriority = 1;
  exports.unstable_LowPriority = 4;
  exports.unstable_NormalPriority = 3;
  exports.unstable_Profiling = null;
  exports.unstable_UserBlockingPriority = 2;
  exports.unstable_cancelCallback = function(a) {
    a.callback = null;
  };
  exports.unstable_continueExecution = function() {
    A2 || z2 || (A2 = true, I2(J2));
  };
  exports.unstable_forceFrameRate = function(a) {
    0 > a || 125 < a ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : P2 = 0 < a ? Math.floor(1e3 / a) : 5;
  };
  exports.unstable_getCurrentPriorityLevel = function() {
    return y2;
  };
  exports.unstable_getFirstCallbackNode = function() {
    return h(r2);
  };
  exports.unstable_next = function(a) {
    switch (y2) {
      case 1:
      case 2:
      case 3:
        var b = 3;
        break;
      default:
        b = y2;
    }
    var c = y2;
    y2 = b;
    try {
      return a();
    } finally {
      y2 = c;
    }
  };
  exports.unstable_pauseExecution = function() {
  };
  exports.unstable_requestPaint = function() {
  };
  exports.unstable_runWithPriority = function(a, b) {
    switch (a) {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
        break;
      default:
        a = 3;
    }
    var c = y2;
    y2 = a;
    try {
      return b();
    } finally {
      y2 = c;
    }
  };
  exports.unstable_scheduleCallback = function(a, b, c) {
    var d = exports.unstable_now();
    "object" === typeof c && null !== c ? (c = c.delay, c = "number" === typeof c && 0 < c ? d + c : d) : c = d;
    switch (a) {
      case 1:
        var e = -1;
        break;
      case 2:
        e = 250;
        break;
      case 5:
        e = 1073741823;
        break;
      case 4:
        e = 1e4;
        break;
      default:
        e = 5e3;
    }
    e = c + e;
    a = { id: u2++, callback: b, priorityLevel: a, startTime: c, expirationTime: e, sortIndex: -1 };
    c > d ? (a.sortIndex = c, f2(t2, a), null === h(r2) && a === h(t2) && (B2 ? (E2(L2), L2 = -1) : B2 = true, K2(H2, c - d))) : (a.sortIndex = e, f2(r2, a), A2 || z2 || (A2 = true, I2(J2)));
    return a;
  };
  exports.unstable_shouldYield = M2;
  exports.unstable_wrapCallback = function(a) {
    var b = y2;
    return function() {
      var c = y2;
      y2 = b;
      try {
        return a.apply(this, arguments);
      } finally {
        y2 = c;
      }
    };
  };
})(scheduler_production_min);
{
  scheduler.exports = scheduler_production_min;
}
var schedulerExports = scheduler.exports;
/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var aa$2 = reactExports$1, ca$1 = schedulerExports;
function p$4(a) {
  for (var b = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, c = 1; c < arguments.length; c++)
    b += "&args[]=" + encodeURIComponent(arguments[c]);
  return "Minified React error #" + a + "; visit " + b + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
}
var da$1 = /* @__PURE__ */ new Set(), ea$1 = {};
function fa$2(a, b) {
  ha$2(a, b);
  ha$2(a + "Capture", b);
}
function ha$2(a, b) {
  ea$1[a] = b;
  for (a = 0; a < b.length; a++)
    da$1.add(b[a]);
}
var ia$2 = !("undefined" === typeof window || "undefined" === typeof window.document || "undefined" === typeof window.document.createElement), ja$2 = Object.prototype.hasOwnProperty, ka$2 = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/, la$2 = {}, ma$1 = {};
function oa$2(a) {
  if (ja$2.call(ma$1, a))
    return true;
  if (ja$2.call(la$2, a))
    return false;
  if (ka$2.test(a))
    return ma$1[a] = true;
  la$2[a] = true;
  return false;
}
function pa$2(a, b, c, d) {
  if (null !== c && 0 === c.type)
    return false;
  switch (typeof b) {
    case "function":
    case "symbol":
      return true;
    case "boolean":
      if (d)
        return false;
      if (null !== c)
        return !c.acceptsBooleans;
      a = a.toLowerCase().slice(0, 5);
      return "data-" !== a && "aria-" !== a;
    default:
      return false;
  }
}
function qa$2(a, b, c, d) {
  if (null === b || "undefined" === typeof b || pa$2(a, b, c, d))
    return true;
  if (d)
    return false;
  if (null !== c)
    switch (c.type) {
      case 3:
        return !b;
      case 4:
        return false === b;
      case 5:
        return isNaN(b);
      case 6:
        return isNaN(b) || 1 > b;
    }
  return false;
}
function v$2(a, b, c, d, e, f2, g2) {
  this.acceptsBooleans = 2 === b || 3 === b || 4 === b;
  this.attributeName = d;
  this.attributeNamespace = e;
  this.mustUseProperty = c;
  this.propertyName = a;
  this.type = b;
  this.sanitizeURL = f2;
  this.removeEmptyString = g2;
}
var z$2 = {};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a) {
  z$2[a] = new v$2(a, 0, false, a, null, false, false);
});
[["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(a) {
  var b = a[0];
  z$2[b] = new v$2(b, 1, false, a[1], null, false, false);
});
["contentEditable", "draggable", "spellCheck", "value"].forEach(function(a) {
  z$2[a] = new v$2(a, 2, false, a.toLowerCase(), null, false, false);
});
["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(a) {
  z$2[a] = new v$2(a, 2, false, a, null, false, false);
});
"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a) {
  z$2[a] = new v$2(a, 3, false, a.toLowerCase(), null, false, false);
});
["checked", "multiple", "muted", "selected"].forEach(function(a) {
  z$2[a] = new v$2(a, 3, true, a, null, false, false);
});
["capture", "download"].forEach(function(a) {
  z$2[a] = new v$2(a, 4, false, a, null, false, false);
});
["cols", "rows", "size", "span"].forEach(function(a) {
  z$2[a] = new v$2(a, 6, false, a, null, false, false);
});
["rowSpan", "start"].forEach(function(a) {
  z$2[a] = new v$2(a, 5, false, a.toLowerCase(), null, false, false);
});
var ra$2 = /[\-:]([a-z])/g;
function sa$2(a) {
  return a[1].toUpperCase();
}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a) {
  var b = a.replace(
    ra$2,
    sa$2
  );
  z$2[b] = new v$2(b, 1, false, a, null, false, false);
});
"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a) {
  var b = a.replace(ra$2, sa$2);
  z$2[b] = new v$2(b, 1, false, a, "http://www.w3.org/1999/xlink", false, false);
});
["xml:base", "xml:lang", "xml:space"].forEach(function(a) {
  var b = a.replace(ra$2, sa$2);
  z$2[b] = new v$2(b, 1, false, a, "http://www.w3.org/XML/1998/namespace", false, false);
});
["tabIndex", "crossOrigin"].forEach(function(a) {
  z$2[a] = new v$2(a, 1, false, a.toLowerCase(), null, false, false);
});
z$2.xlinkHref = new v$2("xlinkHref", 1, false, "xlink:href", "http://www.w3.org/1999/xlink", true, false);
["src", "href", "action", "formAction"].forEach(function(a) {
  z$2[a] = new v$2(a, 1, false, a.toLowerCase(), null, true, true);
});
function ta$2(a, b, c, d) {
  var e = z$2.hasOwnProperty(b) ? z$2[b] : null;
  if (null !== e ? 0 !== e.type : d || !(2 < b.length) || "o" !== b[0] && "O" !== b[0] || "n" !== b[1] && "N" !== b[1])
    qa$2(b, c, e, d) && (c = null), d || null === e ? oa$2(b) && (null === c ? a.removeAttribute(b) : a.setAttribute(b, "" + c)) : e.mustUseProperty ? a[e.propertyName] = null === c ? 3 === e.type ? false : "" : c : (b = e.attributeName, d = e.attributeNamespace, null === c ? a.removeAttribute(b) : (e = e.type, c = 3 === e || 4 === e && true === c ? "" : "" + c, d ? a.setAttributeNS(d, b, c) : a.setAttribute(b, c)));
}
var ua$2 = aa$2.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, va$2 = Symbol.for("react.element"), wa$2 = Symbol.for("react.portal"), ya$2 = Symbol.for("react.fragment"), za$2 = Symbol.for("react.strict_mode"), Aa$2 = Symbol.for("react.profiler"), Ba$2 = Symbol.for("react.provider"), Ca$2 = Symbol.for("react.context"), Da$2 = Symbol.for("react.forward_ref"), Ea$2 = Symbol.for("react.suspense"), Fa$2 = Symbol.for("react.suspense_list"), Ga$2 = Symbol.for("react.memo"), Ha$2 = Symbol.for("react.lazy");
var Ia$2 = Symbol.for("react.offscreen");
var Ja$2 = Symbol.iterator;
function Ka$2(a) {
  if (null === a || "object" !== typeof a)
    return null;
  a = Ja$2 && a[Ja$2] || a["@@iterator"];
  return "function" === typeof a ? a : null;
}
var A$2 = Object.assign, La$2;
function Ma$2(a) {
  if (void 0 === La$2)
    try {
      throw Error();
    } catch (c) {
      var b = c.stack.trim().match(/\n( *(at )?)/);
      La$2 = b && b[1] || "";
    }
  return "\n" + La$2 + a;
}
var Na$2 = false;
function Oa$2(a, b) {
  if (!a || Na$2)
    return "";
  Na$2 = true;
  var c = Error.prepareStackTrace;
  Error.prepareStackTrace = void 0;
  try {
    if (b)
      if (b = function() {
        throw Error();
      }, Object.defineProperty(b.prototype, "props", { set: function() {
        throw Error();
      } }), "object" === typeof Reflect && Reflect.construct) {
        try {
          Reflect.construct(b, []);
        } catch (l2) {
          var d = l2;
        }
        Reflect.construct(a, [], b);
      } else {
        try {
          b.call();
        } catch (l2) {
          d = l2;
        }
        a.call(b.prototype);
      }
    else {
      try {
        throw Error();
      } catch (l2) {
        d = l2;
      }
      a();
    }
  } catch (l2) {
    if (l2 && d && "string" === typeof l2.stack) {
      for (var e = l2.stack.split("\n"), f2 = d.stack.split("\n"), g2 = e.length - 1, h = f2.length - 1; 1 <= g2 && 0 <= h && e[g2] !== f2[h]; )
        h--;
      for (; 1 <= g2 && 0 <= h; g2--, h--)
        if (e[g2] !== f2[h]) {
          if (1 !== g2 || 1 !== h) {
            do
              if (g2--, h--, 0 > h || e[g2] !== f2[h]) {
                var k2 = "\n" + e[g2].replace(" at new ", " at ");
                a.displayName && k2.includes("<anonymous>") && (k2 = k2.replace("<anonymous>", a.displayName));
                return k2;
              }
            while (1 <= g2 && 0 <= h);
          }
          break;
        }
    }
  } finally {
    Na$2 = false, Error.prepareStackTrace = c;
  }
  return (a = a ? a.displayName || a.name : "") ? Ma$2(a) : "";
}
function Pa$2(a) {
  switch (a.tag) {
    case 5:
      return Ma$2(a.type);
    case 16:
      return Ma$2("Lazy");
    case 13:
      return Ma$2("Suspense");
    case 19:
      return Ma$2("SuspenseList");
    case 0:
    case 2:
    case 15:
      return a = Oa$2(a.type, false), a;
    case 11:
      return a = Oa$2(a.type.render, false), a;
    case 1:
      return a = Oa$2(a.type, true), a;
    default:
      return "";
  }
}
function Qa$2(a) {
  if (null == a)
    return null;
  if ("function" === typeof a)
    return a.displayName || a.name || null;
  if ("string" === typeof a)
    return a;
  switch (a) {
    case ya$2:
      return "Fragment";
    case wa$2:
      return "Portal";
    case Aa$2:
      return "Profiler";
    case za$2:
      return "StrictMode";
    case Ea$2:
      return "Suspense";
    case Fa$2:
      return "SuspenseList";
  }
  if ("object" === typeof a)
    switch (a.$$typeof) {
      case Ca$2:
        return (a.displayName || "Context") + ".Consumer";
      case Ba$2:
        return (a._context.displayName || "Context") + ".Provider";
      case Da$2:
        var b = a.render;
        a = a.displayName;
        a || (a = b.displayName || b.name || "", a = "" !== a ? "ForwardRef(" + a + ")" : "ForwardRef");
        return a;
      case Ga$2:
        return b = a.displayName || null, null !== b ? b : Qa$2(a.type) || "Memo";
      case Ha$2:
        b = a._payload;
        a = a._init;
        try {
          return Qa$2(a(b));
        } catch (c) {
        }
    }
  return null;
}
function Ra$2(a) {
  var b = a.type;
  switch (a.tag) {
    case 24:
      return "Cache";
    case 9:
      return (b.displayName || "Context") + ".Consumer";
    case 10:
      return (b._context.displayName || "Context") + ".Provider";
    case 18:
      return "DehydratedFragment";
    case 11:
      return a = b.render, a = a.displayName || a.name || "", b.displayName || ("" !== a ? "ForwardRef(" + a + ")" : "ForwardRef");
    case 7:
      return "Fragment";
    case 5:
      return b;
    case 4:
      return "Portal";
    case 3:
      return "Root";
    case 6:
      return "Text";
    case 16:
      return Qa$2(b);
    case 8:
      return b === za$2 ? "StrictMode" : "Mode";
    case 22:
      return "Offscreen";
    case 12:
      return "Profiler";
    case 21:
      return "Scope";
    case 13:
      return "Suspense";
    case 19:
      return "SuspenseList";
    case 25:
      return "TracingMarker";
    case 1:
    case 0:
    case 17:
    case 2:
    case 14:
    case 15:
      if ("function" === typeof b)
        return b.displayName || b.name || null;
      if ("string" === typeof b)
        return b;
  }
  return null;
}
function Sa$2(a) {
  switch (typeof a) {
    case "boolean":
    case "number":
    case "string":
    case "undefined":
      return a;
    case "object":
      return a;
    default:
      return "";
  }
}
function Ta$2(a) {
  var b = a.type;
  return (a = a.nodeName) && "input" === a.toLowerCase() && ("checkbox" === b || "radio" === b);
}
function Ua$2(a) {
  var b = Ta$2(a) ? "checked" : "value", c = Object.getOwnPropertyDescriptor(a.constructor.prototype, b), d = "" + a[b];
  if (!a.hasOwnProperty(b) && "undefined" !== typeof c && "function" === typeof c.get && "function" === typeof c.set) {
    var e = c.get, f2 = c.set;
    Object.defineProperty(a, b, { configurable: true, get: function() {
      return e.call(this);
    }, set: function(a2) {
      d = "" + a2;
      f2.call(this, a2);
    } });
    Object.defineProperty(a, b, { enumerable: c.enumerable });
    return { getValue: function() {
      return d;
    }, setValue: function(a2) {
      d = "" + a2;
    }, stopTracking: function() {
      a._valueTracker = null;
      delete a[b];
    } };
  }
}
function Va$2(a) {
  a._valueTracker || (a._valueTracker = Ua$2(a));
}
function Wa$2(a) {
  if (!a)
    return false;
  var b = a._valueTracker;
  if (!b)
    return true;
  var c = b.getValue();
  var d = "";
  a && (d = Ta$2(a) ? a.checked ? "true" : "false" : a.value);
  a = d;
  return a !== c ? (b.setValue(a), true) : false;
}
function Xa$2(a) {
  a = a || ("undefined" !== typeof document ? document : void 0);
  if ("undefined" === typeof a)
    return null;
  try {
    return a.activeElement || a.body;
  } catch (b) {
    return a.body;
  }
}
function Ya$2(a, b) {
  var c = b.checked;
  return A$2({}, b, { defaultChecked: void 0, defaultValue: void 0, value: void 0, checked: null != c ? c : a._wrapperState.initialChecked });
}
function Za$2(a, b) {
  var c = null == b.defaultValue ? "" : b.defaultValue, d = null != b.checked ? b.checked : b.defaultChecked;
  c = Sa$2(null != b.value ? b.value : c);
  a._wrapperState = { initialChecked: d, initialValue: c, controlled: "checkbox" === b.type || "radio" === b.type ? null != b.checked : null != b.value };
}
function ab$2(a, b) {
  b = b.checked;
  null != b && ta$2(a, "checked", b, false);
}
function bb$2(a, b) {
  ab$2(a, b);
  var c = Sa$2(b.value), d = b.type;
  if (null != c)
    if ("number" === d) {
      if (0 === c && "" === a.value || a.value != c)
        a.value = "" + c;
    } else
      a.value !== "" + c && (a.value = "" + c);
  else if ("submit" === d || "reset" === d) {
    a.removeAttribute("value");
    return;
  }
  b.hasOwnProperty("value") ? cb$2(a, b.type, c) : b.hasOwnProperty("defaultValue") && cb$2(a, b.type, Sa$2(b.defaultValue));
  null == b.checked && null != b.defaultChecked && (a.defaultChecked = !!b.defaultChecked);
}
function db$2(a, b, c) {
  if (b.hasOwnProperty("value") || b.hasOwnProperty("defaultValue")) {
    var d = b.type;
    if (!("submit" !== d && "reset" !== d || void 0 !== b.value && null !== b.value))
      return;
    b = "" + a._wrapperState.initialValue;
    c || b === a.value || (a.value = b);
    a.defaultValue = b;
  }
  c = a.name;
  "" !== c && (a.name = "");
  a.defaultChecked = !!a._wrapperState.initialChecked;
  "" !== c && (a.name = c);
}
function cb$2(a, b, c) {
  if ("number" !== b || Xa$2(a.ownerDocument) !== a)
    null == c ? a.defaultValue = "" + a._wrapperState.initialValue : a.defaultValue !== "" + c && (a.defaultValue = "" + c);
}
var eb$2 = Array.isArray;
function fb$2(a, b, c, d) {
  a = a.options;
  if (b) {
    b = {};
    for (var e = 0; e < c.length; e++)
      b["$" + c[e]] = true;
    for (c = 0; c < a.length; c++)
      e = b.hasOwnProperty("$" + a[c].value), a[c].selected !== e && (a[c].selected = e), e && d && (a[c].defaultSelected = true);
  } else {
    c = "" + Sa$2(c);
    b = null;
    for (e = 0; e < a.length; e++) {
      if (a[e].value === c) {
        a[e].selected = true;
        d && (a[e].defaultSelected = true);
        return;
      }
      null !== b || a[e].disabled || (b = a[e]);
    }
    null !== b && (b.selected = true);
  }
}
function gb$2(a, b) {
  if (null != b.dangerouslySetInnerHTML)
    throw Error(p$4(91));
  return A$2({}, b, { value: void 0, defaultValue: void 0, children: "" + a._wrapperState.initialValue });
}
function hb$2(a, b) {
  var c = b.value;
  if (null == c) {
    c = b.children;
    b = b.defaultValue;
    if (null != c) {
      if (null != b)
        throw Error(p$4(92));
      if (eb$2(c)) {
        if (1 < c.length)
          throw Error(p$4(93));
        c = c[0];
      }
      b = c;
    }
    null == b && (b = "");
    c = b;
  }
  a._wrapperState = { initialValue: Sa$2(c) };
}
function ib$2(a, b) {
  var c = Sa$2(b.value), d = Sa$2(b.defaultValue);
  null != c && (c = "" + c, c !== a.value && (a.value = c), null == b.defaultValue && a.defaultValue !== c && (a.defaultValue = c));
  null != d && (a.defaultValue = "" + d);
}
function jb$2(a) {
  var b = a.textContent;
  b === a._wrapperState.initialValue && "" !== b && null !== b && (a.value = b);
}
function kb$2(a) {
  switch (a) {
    case "svg":
      return "http://www.w3.org/2000/svg";
    case "math":
      return "http://www.w3.org/1998/Math/MathML";
    default:
      return "http://www.w3.org/1999/xhtml";
  }
}
function lb$2(a, b) {
  return null == a || "http://www.w3.org/1999/xhtml" === a ? kb$2(b) : "http://www.w3.org/2000/svg" === a && "foreignObject" === b ? "http://www.w3.org/1999/xhtml" : a;
}
var mb$1, nb$1 = function(a) {
  return "undefined" !== typeof MSApp && MSApp.execUnsafeLocalFunction ? function(b, c, d, e) {
    MSApp.execUnsafeLocalFunction(function() {
      return a(b, c, d, e);
    });
  } : a;
}(function(a, b) {
  if ("http://www.w3.org/2000/svg" !== a.namespaceURI || "innerHTML" in a)
    a.innerHTML = b;
  else {
    mb$1 = mb$1 || document.createElement("div");
    mb$1.innerHTML = "<svg>" + b.valueOf().toString() + "</svg>";
    for (b = mb$1.firstChild; a.firstChild; )
      a.removeChild(a.firstChild);
    for (; b.firstChild; )
      a.appendChild(b.firstChild);
  }
});
function ob$2(a, b) {
  if (b) {
    var c = a.firstChild;
    if (c && c === a.lastChild && 3 === c.nodeType) {
      c.nodeValue = b;
      return;
    }
  }
  a.textContent = b;
}
var pb$2 = {
  animationIterationCount: true,
  aspectRatio: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  columns: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridArea: true,
  gridRow: true,
  gridRowEnd: true,
  gridRowSpan: true,
  gridRowStart: true,
  gridColumn: true,
  gridColumnEnd: true,
  gridColumnSpan: true,
  gridColumnStart: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
}, qb$2 = ["Webkit", "ms", "Moz", "O"];
Object.keys(pb$2).forEach(function(a) {
  qb$2.forEach(function(b) {
    b = b + a.charAt(0).toUpperCase() + a.substring(1);
    pb$2[b] = pb$2[a];
  });
});
function rb$2(a, b, c) {
  return null == b || "boolean" === typeof b || "" === b ? "" : c || "number" !== typeof b || 0 === b || pb$2.hasOwnProperty(a) && pb$2[a] ? ("" + b).trim() : b + "px";
}
function sb$2(a, b) {
  a = a.style;
  for (var c in b)
    if (b.hasOwnProperty(c)) {
      var d = 0 === c.indexOf("--"), e = rb$2(c, b[c], d);
      "float" === c && (c = "cssFloat");
      d ? a.setProperty(c, e) : a[c] = e;
    }
}
var tb$2 = A$2({ menuitem: true }, { area: true, base: true, br: true, col: true, embed: true, hr: true, img: true, input: true, keygen: true, link: true, meta: true, param: true, source: true, track: true, wbr: true });
function ub$2(a, b) {
  if (b) {
    if (tb$2[a] && (null != b.children || null != b.dangerouslySetInnerHTML))
      throw Error(p$4(137, a));
    if (null != b.dangerouslySetInnerHTML) {
      if (null != b.children)
        throw Error(p$4(60));
      if ("object" !== typeof b.dangerouslySetInnerHTML || !("__html" in b.dangerouslySetInnerHTML))
        throw Error(p$4(61));
    }
    if (null != b.style && "object" !== typeof b.style)
      throw Error(p$4(62));
  }
}
function vb$2(a, b) {
  if (-1 === a.indexOf("-"))
    return "string" === typeof b.is;
  switch (a) {
    case "annotation-xml":
    case "color-profile":
    case "font-face":
    case "font-face-src":
    case "font-face-uri":
    case "font-face-format":
    case "font-face-name":
    case "missing-glyph":
      return false;
    default:
      return true;
  }
}
var wb$2 = null;
function xb$2(a) {
  a = a.target || a.srcElement || window;
  a.correspondingUseElement && (a = a.correspondingUseElement);
  return 3 === a.nodeType ? a.parentNode : a;
}
var yb$2 = null, zb$2 = null, Ab$2 = null;
function Bb$2(a) {
  if (a = Cb$2(a)) {
    if ("function" !== typeof yb$2)
      throw Error(p$4(280));
    var b = a.stateNode;
    b && (b = Db$2(b), yb$2(a.stateNode, a.type, b));
  }
}
function Eb$2(a) {
  zb$2 ? Ab$2 ? Ab$2.push(a) : Ab$2 = [a] : zb$2 = a;
}
function Fb$1() {
  if (zb$2) {
    var a = zb$2, b = Ab$2;
    Ab$2 = zb$2 = null;
    Bb$2(a);
    if (b)
      for (a = 0; a < b.length; a++)
        Bb$2(b[a]);
  }
}
function Gb$2(a, b) {
  return a(b);
}
function Hb$2() {
}
var Ib$2 = false;
function Jb$2(a, b, c) {
  if (Ib$2)
    return a(b, c);
  Ib$2 = true;
  try {
    return Gb$2(a, b, c);
  } finally {
    if (Ib$2 = false, null !== zb$2 || null !== Ab$2)
      Hb$2(), Fb$1();
  }
}
function Kb$2(a, b) {
  var c = a.stateNode;
  if (null === c)
    return null;
  var d = Db$2(c);
  if (null === d)
    return null;
  c = d[b];
  a:
    switch (b) {
      case "onClick":
      case "onClickCapture":
      case "onDoubleClick":
      case "onDoubleClickCapture":
      case "onMouseDown":
      case "onMouseDownCapture":
      case "onMouseMove":
      case "onMouseMoveCapture":
      case "onMouseUp":
      case "onMouseUpCapture":
      case "onMouseEnter":
        (d = !d.disabled) || (a = a.type, d = !("button" === a || "input" === a || "select" === a || "textarea" === a));
        a = !d;
        break a;
      default:
        a = false;
    }
  if (a)
    return null;
  if (c && "function" !== typeof c)
    throw Error(p$4(231, b, typeof c));
  return c;
}
var Lb$2 = false;
if (ia$2)
  try {
    var Mb$2 = {};
    Object.defineProperty(Mb$2, "passive", { get: function() {
      Lb$2 = true;
    } });
    window.addEventListener("test", Mb$2, Mb$2);
    window.removeEventListener("test", Mb$2, Mb$2);
  } catch (a) {
    Lb$2 = false;
  }
function Nb$2(a, b, c, d, e, f2, g2, h, k2) {
  var l2 = Array.prototype.slice.call(arguments, 3);
  try {
    b.apply(c, l2);
  } catch (m2) {
    this.onError(m2);
  }
}
var Ob$2 = false, Pb$2 = null, Qb$2 = false, Rb$2 = null, Sb$2 = { onError: function(a) {
  Ob$2 = true;
  Pb$2 = a;
} };
function Tb$2(a, b, c, d, e, f2, g2, h, k2) {
  Ob$2 = false;
  Pb$2 = null;
  Nb$2.apply(Sb$2, arguments);
}
function Ub$1(a, b, c, d, e, f2, g2, h, k2) {
  Tb$2.apply(this, arguments);
  if (Ob$2) {
    if (Ob$2) {
      var l2 = Pb$2;
      Ob$2 = false;
      Pb$2 = null;
    } else
      throw Error(p$4(198));
    Qb$2 || (Qb$2 = true, Rb$2 = l2);
  }
}
function Vb$1(a) {
  var b = a, c = a;
  if (a.alternate)
    for (; b.return; )
      b = b.return;
  else {
    a = b;
    do
      b = a, 0 !== (b.flags & 4098) && (c = b.return), a = b.return;
    while (a);
  }
  return 3 === b.tag ? c : null;
}
function Wb$1(a) {
  if (13 === a.tag) {
    var b = a.memoizedState;
    null === b && (a = a.alternate, null !== a && (b = a.memoizedState));
    if (null !== b)
      return b.dehydrated;
  }
  return null;
}
function Xb$1(a) {
  if (Vb$1(a) !== a)
    throw Error(p$4(188));
}
function Yb$1(a) {
  var b = a.alternate;
  if (!b) {
    b = Vb$1(a);
    if (null === b)
      throw Error(p$4(188));
    return b !== a ? null : a;
  }
  for (var c = a, d = b; ; ) {
    var e = c.return;
    if (null === e)
      break;
    var f2 = e.alternate;
    if (null === f2) {
      d = e.return;
      if (null !== d) {
        c = d;
        continue;
      }
      break;
    }
    if (e.child === f2.child) {
      for (f2 = e.child; f2; ) {
        if (f2 === c)
          return Xb$1(e), a;
        if (f2 === d)
          return Xb$1(e), b;
        f2 = f2.sibling;
      }
      throw Error(p$4(188));
    }
    if (c.return !== d.return)
      c = e, d = f2;
    else {
      for (var g2 = false, h = e.child; h; ) {
        if (h === c) {
          g2 = true;
          c = e;
          d = f2;
          break;
        }
        if (h === d) {
          g2 = true;
          d = e;
          c = f2;
          break;
        }
        h = h.sibling;
      }
      if (!g2) {
        for (h = f2.child; h; ) {
          if (h === c) {
            g2 = true;
            c = f2;
            d = e;
            break;
          }
          if (h === d) {
            g2 = true;
            d = f2;
            c = e;
            break;
          }
          h = h.sibling;
        }
        if (!g2)
          throw Error(p$4(189));
      }
    }
    if (c.alternate !== d)
      throw Error(p$4(190));
  }
  if (3 !== c.tag)
    throw Error(p$4(188));
  return c.stateNode.current === c ? a : b;
}
function Zb$1(a) {
  a = Yb$1(a);
  return null !== a ? $b$1(a) : null;
}
function $b$1(a) {
  if (5 === a.tag || 6 === a.tag)
    return a;
  for (a = a.child; null !== a; ) {
    var b = $b$1(a);
    if (null !== b)
      return b;
    a = a.sibling;
  }
  return null;
}
var ac$1 = ca$1.unstable_scheduleCallback, bc$1 = ca$1.unstable_cancelCallback, cc$1 = ca$1.unstable_shouldYield, dc$1 = ca$1.unstable_requestPaint, B$3 = ca$1.unstable_now, ec$1 = ca$1.unstable_getCurrentPriorityLevel, fc$1 = ca$1.unstable_ImmediatePriority, gc$1 = ca$1.unstable_UserBlockingPriority, hc$1 = ca$1.unstable_NormalPriority, ic$1 = ca$1.unstable_LowPriority, jc$1 = ca$1.unstable_IdlePriority, kc$1 = null, lc$1 = null;
function mc$1(a) {
  if (lc$1 && "function" === typeof lc$1.onCommitFiberRoot)
    try {
      lc$1.onCommitFiberRoot(kc$1, a, void 0, 128 === (a.current.flags & 128));
    } catch (b) {
    }
}
var oc$1 = Math.clz32 ? Math.clz32 : nc$1, pc$1 = Math.log, qc$1 = Math.LN2;
function nc$1(a) {
  a >>>= 0;
  return 0 === a ? 32 : 31 - (pc$1(a) / qc$1 | 0) | 0;
}
var rc$1 = 64, sc$1 = 4194304;
function tc$1(a) {
  switch (a & -a) {
    case 1:
      return 1;
    case 2:
      return 2;
    case 4:
      return 4;
    case 8:
      return 8;
    case 16:
      return 16;
    case 32:
      return 32;
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return a & 4194240;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
      return a & 130023424;
    case 134217728:
      return 134217728;
    case 268435456:
      return 268435456;
    case 536870912:
      return 536870912;
    case 1073741824:
      return 1073741824;
    default:
      return a;
  }
}
function uc$1(a, b) {
  var c = a.pendingLanes;
  if (0 === c)
    return 0;
  var d = 0, e = a.suspendedLanes, f2 = a.pingedLanes, g2 = c & 268435455;
  if (0 !== g2) {
    var h = g2 & ~e;
    0 !== h ? d = tc$1(h) : (f2 &= g2, 0 !== f2 && (d = tc$1(f2)));
  } else
    g2 = c & ~e, 0 !== g2 ? d = tc$1(g2) : 0 !== f2 && (d = tc$1(f2));
  if (0 === d)
    return 0;
  if (0 !== b && b !== d && 0 === (b & e) && (e = d & -d, f2 = b & -b, e >= f2 || 16 === e && 0 !== (f2 & 4194240)))
    return b;
  0 !== (d & 4) && (d |= c & 16);
  b = a.entangledLanes;
  if (0 !== b)
    for (a = a.entanglements, b &= d; 0 < b; )
      c = 31 - oc$1(b), e = 1 << c, d |= a[c], b &= ~e;
  return d;
}
function vc$1(a, b) {
  switch (a) {
    case 1:
    case 2:
    case 4:
      return b + 250;
    case 8:
    case 16:
    case 32:
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return b + 5e3;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
      return -1;
    case 134217728:
    case 268435456:
    case 536870912:
    case 1073741824:
      return -1;
    default:
      return -1;
  }
}
function wc$1(a, b) {
  for (var c = a.suspendedLanes, d = a.pingedLanes, e = a.expirationTimes, f2 = a.pendingLanes; 0 < f2; ) {
    var g2 = 31 - oc$1(f2), h = 1 << g2, k2 = e[g2];
    if (-1 === k2) {
      if (0 === (h & c) || 0 !== (h & d))
        e[g2] = vc$1(h, b);
    } else
      k2 <= b && (a.expiredLanes |= h);
    f2 &= ~h;
  }
}
function xc$1(a) {
  a = a.pendingLanes & -1073741825;
  return 0 !== a ? a : a & 1073741824 ? 1073741824 : 0;
}
function yc$1() {
  var a = rc$1;
  rc$1 <<= 1;
  0 === (rc$1 & 4194240) && (rc$1 = 64);
  return a;
}
function zc$1(a) {
  for (var b = [], c = 0; 31 > c; c++)
    b.push(a);
  return b;
}
function Ac$1(a, b, c) {
  a.pendingLanes |= b;
  536870912 !== b && (a.suspendedLanes = 0, a.pingedLanes = 0);
  a = a.eventTimes;
  b = 31 - oc$1(b);
  a[b] = c;
}
function Bc$1(a, b) {
  var c = a.pendingLanes & ~b;
  a.pendingLanes = b;
  a.suspendedLanes = 0;
  a.pingedLanes = 0;
  a.expiredLanes &= b;
  a.mutableReadLanes &= b;
  a.entangledLanes &= b;
  b = a.entanglements;
  var d = a.eventTimes;
  for (a = a.expirationTimes; 0 < c; ) {
    var e = 31 - oc$1(c), f2 = 1 << e;
    b[e] = 0;
    d[e] = -1;
    a[e] = -1;
    c &= ~f2;
  }
}
function Cc$1(a, b) {
  var c = a.entangledLanes |= b;
  for (a = a.entanglements; c; ) {
    var d = 31 - oc$1(c), e = 1 << d;
    e & b | a[d] & b && (a[d] |= b);
    c &= ~e;
  }
}
var C$2 = 0;
function Dc$1(a) {
  a &= -a;
  return 1 < a ? 4 < a ? 0 !== (a & 268435455) ? 16 : 536870912 : 4 : 1;
}
var Ec$1, Fc$1, Gc$1, Hc$1, Ic$1, Jc$1 = false, Kc$1 = [], Lc$1 = null, Mc$1 = null, Nc$1 = null, Oc$1 = /* @__PURE__ */ new Map(), Pc$1 = /* @__PURE__ */ new Map(), Qc$1 = [], Rc$1 = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");
function Sc$1(a, b) {
  switch (a) {
    case "focusin":
    case "focusout":
      Lc$1 = null;
      break;
    case "dragenter":
    case "dragleave":
      Mc$1 = null;
      break;
    case "mouseover":
    case "mouseout":
      Nc$1 = null;
      break;
    case "pointerover":
    case "pointerout":
      Oc$1.delete(b.pointerId);
      break;
    case "gotpointercapture":
    case "lostpointercapture":
      Pc$1.delete(b.pointerId);
  }
}
function Tc$1(a, b, c, d, e, f2) {
  if (null === a || a.nativeEvent !== f2)
    return a = { blockedOn: b, domEventName: c, eventSystemFlags: d, nativeEvent: f2, targetContainers: [e] }, null !== b && (b = Cb$2(b), null !== b && Fc$1(b)), a;
  a.eventSystemFlags |= d;
  b = a.targetContainers;
  null !== e && -1 === b.indexOf(e) && b.push(e);
  return a;
}
function Uc$1(a, b, c, d, e) {
  switch (b) {
    case "focusin":
      return Lc$1 = Tc$1(Lc$1, a, b, c, d, e), true;
    case "dragenter":
      return Mc$1 = Tc$1(Mc$1, a, b, c, d, e), true;
    case "mouseover":
      return Nc$1 = Tc$1(Nc$1, a, b, c, d, e), true;
    case "pointerover":
      var f2 = e.pointerId;
      Oc$1.set(f2, Tc$1(Oc$1.get(f2) || null, a, b, c, d, e));
      return true;
    case "gotpointercapture":
      return f2 = e.pointerId, Pc$1.set(f2, Tc$1(Pc$1.get(f2) || null, a, b, c, d, e)), true;
  }
  return false;
}
function Vc$1(a) {
  var b = Wc$1(a.target);
  if (null !== b) {
    var c = Vb$1(b);
    if (null !== c) {
      if (b = c.tag, 13 === b) {
        if (b = Wb$1(c), null !== b) {
          a.blockedOn = b;
          Ic$1(a.priority, function() {
            Gc$1(c);
          });
          return;
        }
      } else if (3 === b && c.stateNode.current.memoizedState.isDehydrated) {
        a.blockedOn = 3 === c.tag ? c.stateNode.containerInfo : null;
        return;
      }
    }
  }
  a.blockedOn = null;
}
function Xc$1(a) {
  if (null !== a.blockedOn)
    return false;
  for (var b = a.targetContainers; 0 < b.length; ) {
    var c = Yc$1(a.domEventName, a.eventSystemFlags, b[0], a.nativeEvent);
    if (null === c) {
      c = a.nativeEvent;
      var d = new c.constructor(c.type, c);
      wb$2 = d;
      c.target.dispatchEvent(d);
      wb$2 = null;
    } else
      return b = Cb$2(c), null !== b && Fc$1(b), a.blockedOn = c, false;
    b.shift();
  }
  return true;
}
function Zc$1(a, b, c) {
  Xc$1(a) && c.delete(b);
}
function $c$1() {
  Jc$1 = false;
  null !== Lc$1 && Xc$1(Lc$1) && (Lc$1 = null);
  null !== Mc$1 && Xc$1(Mc$1) && (Mc$1 = null);
  null !== Nc$1 && Xc$1(Nc$1) && (Nc$1 = null);
  Oc$1.forEach(Zc$1);
  Pc$1.forEach(Zc$1);
}
function ad$1(a, b) {
  a.blockedOn === b && (a.blockedOn = null, Jc$1 || (Jc$1 = true, ca$1.unstable_scheduleCallback(ca$1.unstable_NormalPriority, $c$1)));
}
function bd$1(a) {
  function b(b2) {
    return ad$1(b2, a);
  }
  if (0 < Kc$1.length) {
    ad$1(Kc$1[0], a);
    for (var c = 1; c < Kc$1.length; c++) {
      var d = Kc$1[c];
      d.blockedOn === a && (d.blockedOn = null);
    }
  }
  null !== Lc$1 && ad$1(Lc$1, a);
  null !== Mc$1 && ad$1(Mc$1, a);
  null !== Nc$1 && ad$1(Nc$1, a);
  Oc$1.forEach(b);
  Pc$1.forEach(b);
  for (c = 0; c < Qc$1.length; c++)
    d = Qc$1[c], d.blockedOn === a && (d.blockedOn = null);
  for (; 0 < Qc$1.length && (c = Qc$1[0], null === c.blockedOn); )
    Vc$1(c), null === c.blockedOn && Qc$1.shift();
}
var cd$1 = ua$2.ReactCurrentBatchConfig, dd$1 = true;
function ed$1(a, b, c, d) {
  var e = C$2, f2 = cd$1.transition;
  cd$1.transition = null;
  try {
    C$2 = 1, fd$1(a, b, c, d);
  } finally {
    C$2 = e, cd$1.transition = f2;
  }
}
function gd$1(a, b, c, d) {
  var e = C$2, f2 = cd$1.transition;
  cd$1.transition = null;
  try {
    C$2 = 4, fd$1(a, b, c, d);
  } finally {
    C$2 = e, cd$1.transition = f2;
  }
}
function fd$1(a, b, c, d) {
  if (dd$1) {
    var e = Yc$1(a, b, c, d);
    if (null === e)
      hd$1(a, b, d, id$1, c), Sc$1(a, d);
    else if (Uc$1(e, a, b, c, d))
      d.stopPropagation();
    else if (Sc$1(a, d), b & 4 && -1 < Rc$1.indexOf(a)) {
      for (; null !== e; ) {
        var f2 = Cb$2(e);
        null !== f2 && Ec$1(f2);
        f2 = Yc$1(a, b, c, d);
        null === f2 && hd$1(a, b, d, id$1, c);
        if (f2 === e)
          break;
        e = f2;
      }
      null !== e && d.stopPropagation();
    } else
      hd$1(a, b, d, null, c);
  }
}
var id$1 = null;
function Yc$1(a, b, c, d) {
  id$1 = null;
  a = xb$2(d);
  a = Wc$1(a);
  if (null !== a)
    if (b = Vb$1(a), null === b)
      a = null;
    else if (c = b.tag, 13 === c) {
      a = Wb$1(b);
      if (null !== a)
        return a;
      a = null;
    } else if (3 === c) {
      if (b.stateNode.current.memoizedState.isDehydrated)
        return 3 === b.tag ? b.stateNode.containerInfo : null;
      a = null;
    } else
      b !== a && (a = null);
  id$1 = a;
  return null;
}
function jd$1(a) {
  switch (a) {
    case "cancel":
    case "click":
    case "close":
    case "contextmenu":
    case "copy":
    case "cut":
    case "auxclick":
    case "dblclick":
    case "dragend":
    case "dragstart":
    case "drop":
    case "focusin":
    case "focusout":
    case "input":
    case "invalid":
    case "keydown":
    case "keypress":
    case "keyup":
    case "mousedown":
    case "mouseup":
    case "paste":
    case "pause":
    case "play":
    case "pointercancel":
    case "pointerdown":
    case "pointerup":
    case "ratechange":
    case "reset":
    case "resize":
    case "seeked":
    case "submit":
    case "touchcancel":
    case "touchend":
    case "touchstart":
    case "volumechange":
    case "change":
    case "selectionchange":
    case "textInput":
    case "compositionstart":
    case "compositionend":
    case "compositionupdate":
    case "beforeblur":
    case "afterblur":
    case "beforeinput":
    case "blur":
    case "fullscreenchange":
    case "focus":
    case "hashchange":
    case "popstate":
    case "select":
    case "selectstart":
      return 1;
    case "drag":
    case "dragenter":
    case "dragexit":
    case "dragleave":
    case "dragover":
    case "mousemove":
    case "mouseout":
    case "mouseover":
    case "pointermove":
    case "pointerout":
    case "pointerover":
    case "scroll":
    case "toggle":
    case "touchmove":
    case "wheel":
    case "mouseenter":
    case "mouseleave":
    case "pointerenter":
    case "pointerleave":
      return 4;
    case "message":
      switch (ec$1()) {
        case fc$1:
          return 1;
        case gc$1:
          return 4;
        case hc$1:
        case ic$1:
          return 16;
        case jc$1:
          return 536870912;
        default:
          return 16;
      }
    default:
      return 16;
  }
}
var kd$1 = null, ld$1 = null, md = null;
function nd() {
  if (md)
    return md;
  var a, b = ld$1, c = b.length, d, e = "value" in kd$1 ? kd$1.value : kd$1.textContent, f2 = e.length;
  for (a = 0; a < c && b[a] === e[a]; a++)
    ;
  var g2 = c - a;
  for (d = 1; d <= g2 && b[c - d] === e[f2 - d]; d++)
    ;
  return md = e.slice(a, 1 < d ? 1 - d : void 0);
}
function od(a) {
  var b = a.keyCode;
  "charCode" in a ? (a = a.charCode, 0 === a && 13 === b && (a = 13)) : a = b;
  10 === a && (a = 13);
  return 32 <= a || 13 === a ? a : 0;
}
function pd() {
  return true;
}
function qd() {
  return false;
}
function rd(a) {
  function b(b2, d, e, f2, g2) {
    this._reactName = b2;
    this._targetInst = e;
    this.type = d;
    this.nativeEvent = f2;
    this.target = g2;
    this.currentTarget = null;
    for (var c in a)
      a.hasOwnProperty(c) && (b2 = a[c], this[c] = b2 ? b2(f2) : f2[c]);
    this.isDefaultPrevented = (null != f2.defaultPrevented ? f2.defaultPrevented : false === f2.returnValue) ? pd : qd;
    this.isPropagationStopped = qd;
    return this;
  }
  A$2(b.prototype, { preventDefault: function() {
    this.defaultPrevented = true;
    var a2 = this.nativeEvent;
    a2 && (a2.preventDefault ? a2.preventDefault() : "unknown" !== typeof a2.returnValue && (a2.returnValue = false), this.isDefaultPrevented = pd);
  }, stopPropagation: function() {
    var a2 = this.nativeEvent;
    a2 && (a2.stopPropagation ? a2.stopPropagation() : "unknown" !== typeof a2.cancelBubble && (a2.cancelBubble = true), this.isPropagationStopped = pd);
  }, persist: function() {
  }, isPersistent: pd });
  return b;
}
var sd = { eventPhase: 0, bubbles: 0, cancelable: 0, timeStamp: function(a) {
  return a.timeStamp || Date.now();
}, defaultPrevented: 0, isTrusted: 0 }, td = rd(sd), ud = A$2({}, sd, { view: 0, detail: 0 }), vd = rd(ud), wd, xd, yd, Ad = A$2({}, ud, { screenX: 0, screenY: 0, clientX: 0, clientY: 0, pageX: 0, pageY: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, getModifierState: zd, button: 0, buttons: 0, relatedTarget: function(a) {
  return void 0 === a.relatedTarget ? a.fromElement === a.srcElement ? a.toElement : a.fromElement : a.relatedTarget;
}, movementX: function(a) {
  if ("movementX" in a)
    return a.movementX;
  a !== yd && (yd && "mousemove" === a.type ? (wd = a.screenX - yd.screenX, xd = a.screenY - yd.screenY) : xd = wd = 0, yd = a);
  return wd;
}, movementY: function(a) {
  return "movementY" in a ? a.movementY : xd;
} }), Bd = rd(Ad), Cd = A$2({}, Ad, { dataTransfer: 0 }), Dd = rd(Cd), Ed = A$2({}, ud, { relatedTarget: 0 }), Fd = rd(Ed), Gd = A$2({}, sd, { animationName: 0, elapsedTime: 0, pseudoElement: 0 }), Hd = rd(Gd), Id = A$2({}, sd, { clipboardData: function(a) {
  return "clipboardData" in a ? a.clipboardData : window.clipboardData;
} }), Jd = rd(Id), Kd = A$2({}, sd, { data: 0 }), Ld = rd(Kd), Md = {
  Esc: "Escape",
  Spacebar: " ",
  Left: "ArrowLeft",
  Up: "ArrowUp",
  Right: "ArrowRight",
  Down: "ArrowDown",
  Del: "Delete",
  Win: "OS",
  Menu: "ContextMenu",
  Apps: "ContextMenu",
  Scroll: "ScrollLock",
  MozPrintableKey: "Unidentified"
}, Nd = {
  8: "Backspace",
  9: "Tab",
  12: "Clear",
  13: "Enter",
  16: "Shift",
  17: "Control",
  18: "Alt",
  19: "Pause",
  20: "CapsLock",
  27: "Escape",
  32: " ",
  33: "PageUp",
  34: "PageDown",
  35: "End",
  36: "Home",
  37: "ArrowLeft",
  38: "ArrowUp",
  39: "ArrowRight",
  40: "ArrowDown",
  45: "Insert",
  46: "Delete",
  112: "F1",
  113: "F2",
  114: "F3",
  115: "F4",
  116: "F5",
  117: "F6",
  118: "F7",
  119: "F8",
  120: "F9",
  121: "F10",
  122: "F11",
  123: "F12",
  144: "NumLock",
  145: "ScrollLock",
  224: "Meta"
}, Od = { Alt: "altKey", Control: "ctrlKey", Meta: "metaKey", Shift: "shiftKey" };
function Pd(a) {
  var b = this.nativeEvent;
  return b.getModifierState ? b.getModifierState(a) : (a = Od[a]) ? !!b[a] : false;
}
function zd() {
  return Pd;
}
var Qd = A$2({}, ud, { key: function(a) {
  if (a.key) {
    var b = Md[a.key] || a.key;
    if ("Unidentified" !== b)
      return b;
  }
  return "keypress" === a.type ? (a = od(a), 13 === a ? "Enter" : String.fromCharCode(a)) : "keydown" === a.type || "keyup" === a.type ? Nd[a.keyCode] || "Unidentified" : "";
}, code: 0, location: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, repeat: 0, locale: 0, getModifierState: zd, charCode: function(a) {
  return "keypress" === a.type ? od(a) : 0;
}, keyCode: function(a) {
  return "keydown" === a.type || "keyup" === a.type ? a.keyCode : 0;
}, which: function(a) {
  return "keypress" === a.type ? od(a) : "keydown" === a.type || "keyup" === a.type ? a.keyCode : 0;
} }), Rd = rd(Qd), Sd = A$2({}, Ad, { pointerId: 0, width: 0, height: 0, pressure: 0, tangentialPressure: 0, tiltX: 0, tiltY: 0, twist: 0, pointerType: 0, isPrimary: 0 }), Td = rd(Sd), Ud = A$2({}, ud, { touches: 0, targetTouches: 0, changedTouches: 0, altKey: 0, metaKey: 0, ctrlKey: 0, shiftKey: 0, getModifierState: zd }), Vd = rd(Ud), Wd = A$2({}, sd, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 }), Xd = rd(Wd), Yd = A$2({}, Ad, {
  deltaX: function(a) {
    return "deltaX" in a ? a.deltaX : "wheelDeltaX" in a ? -a.wheelDeltaX : 0;
  },
  deltaY: function(a) {
    return "deltaY" in a ? a.deltaY : "wheelDeltaY" in a ? -a.wheelDeltaY : "wheelDelta" in a ? -a.wheelDelta : 0;
  },
  deltaZ: 0,
  deltaMode: 0
}), Zd = rd(Yd), $d = [9, 13, 27, 32], ae = ia$2 && "CompositionEvent" in window, be = null;
ia$2 && "documentMode" in document && (be = document.documentMode);
var ce = ia$2 && "TextEvent" in window && !be, de = ia$2 && (!ae || be && 8 < be && 11 >= be), ee = String.fromCharCode(32), fe = false;
function ge(a, b) {
  switch (a) {
    case "keyup":
      return -1 !== $d.indexOf(b.keyCode);
    case "keydown":
      return 229 !== b.keyCode;
    case "keypress":
    case "mousedown":
    case "focusout":
      return true;
    default:
      return false;
  }
}
function he(a) {
  a = a.detail;
  return "object" === typeof a && "data" in a ? a.data : null;
}
var ie = false;
function je(a, b) {
  switch (a) {
    case "compositionend":
      return he(b);
    case "keypress":
      if (32 !== b.which)
        return null;
      fe = true;
      return ee;
    case "textInput":
      return a = b.data, a === ee && fe ? null : a;
    default:
      return null;
  }
}
function ke(a, b) {
  if (ie)
    return "compositionend" === a || !ae && ge(a, b) ? (a = nd(), md = ld$1 = kd$1 = null, ie = false, a) : null;
  switch (a) {
    case "paste":
      return null;
    case "keypress":
      if (!(b.ctrlKey || b.altKey || b.metaKey) || b.ctrlKey && b.altKey) {
        if (b.char && 1 < b.char.length)
          return b.char;
        if (b.which)
          return String.fromCharCode(b.which);
      }
      return null;
    case "compositionend":
      return de && "ko" !== b.locale ? null : b.data;
    default:
      return null;
  }
}
var le = { color: true, date: true, datetime: true, "datetime-local": true, email: true, month: true, number: true, password: true, range: true, search: true, tel: true, text: true, time: true, url: true, week: true };
function me(a) {
  var b = a && a.nodeName && a.nodeName.toLowerCase();
  return "input" === b ? !!le[a.type] : "textarea" === b ? true : false;
}
function ne(a, b, c, d) {
  Eb$2(d);
  b = oe(b, "onChange");
  0 < b.length && (c = new td("onChange", "change", null, c, d), a.push({ event: c, listeners: b }));
}
var pe = null, qe = null;
function re(a) {
  se(a, 0);
}
function te(a) {
  var b = ue(a);
  if (Wa$2(b))
    return a;
}
function ve(a, b) {
  if ("change" === a)
    return b;
}
var we = false;
if (ia$2) {
  var xe;
  if (ia$2) {
    var ye = "oninput" in document;
    if (!ye) {
      var ze = document.createElement("div");
      ze.setAttribute("oninput", "return;");
      ye = "function" === typeof ze.oninput;
    }
    xe = ye;
  } else
    xe = false;
  we = xe && (!document.documentMode || 9 < document.documentMode);
}
function Ae() {
  pe && (pe.detachEvent("onpropertychange", Be), qe = pe = null);
}
function Be(a) {
  if ("value" === a.propertyName && te(qe)) {
    var b = [];
    ne(b, qe, a, xb$2(a));
    Jb$2(re, b);
  }
}
function Ce(a, b, c) {
  "focusin" === a ? (Ae(), pe = b, qe = c, pe.attachEvent("onpropertychange", Be)) : "focusout" === a && Ae();
}
function De(a) {
  if ("selectionchange" === a || "keyup" === a || "keydown" === a)
    return te(qe);
}
function Ee(a, b) {
  if ("click" === a)
    return te(b);
}
function Fe(a, b) {
  if ("input" === a || "change" === a)
    return te(b);
}
function Ge(a, b) {
  return a === b && (0 !== a || 1 / a === 1 / b) || a !== a && b !== b;
}
var He = "function" === typeof Object.is ? Object.is : Ge;
function Ie(a, b) {
  if (He(a, b))
    return true;
  if ("object" !== typeof a || null === a || "object" !== typeof b || null === b)
    return false;
  var c = Object.keys(a), d = Object.keys(b);
  if (c.length !== d.length)
    return false;
  for (d = 0; d < c.length; d++) {
    var e = c[d];
    if (!ja$2.call(b, e) || !He(a[e], b[e]))
      return false;
  }
  return true;
}
function Je(a) {
  for (; a && a.firstChild; )
    a = a.firstChild;
  return a;
}
function Ke(a, b) {
  var c = Je(a);
  a = 0;
  for (var d; c; ) {
    if (3 === c.nodeType) {
      d = a + c.textContent.length;
      if (a <= b && d >= b)
        return { node: c, offset: b - a };
      a = d;
    }
    a: {
      for (; c; ) {
        if (c.nextSibling) {
          c = c.nextSibling;
          break a;
        }
        c = c.parentNode;
      }
      c = void 0;
    }
    c = Je(c);
  }
}
function Le(a, b) {
  return a && b ? a === b ? true : a && 3 === a.nodeType ? false : b && 3 === b.nodeType ? Le(a, b.parentNode) : "contains" in a ? a.contains(b) : a.compareDocumentPosition ? !!(a.compareDocumentPosition(b) & 16) : false : false;
}
function Me() {
  for (var a = window, b = Xa$2(); b instanceof a.HTMLIFrameElement; ) {
    try {
      var c = "string" === typeof b.contentWindow.location.href;
    } catch (d) {
      c = false;
    }
    if (c)
      a = b.contentWindow;
    else
      break;
    b = Xa$2(a.document);
  }
  return b;
}
function Ne(a) {
  var b = a && a.nodeName && a.nodeName.toLowerCase();
  return b && ("input" === b && ("text" === a.type || "search" === a.type || "tel" === a.type || "url" === a.type || "password" === a.type) || "textarea" === b || "true" === a.contentEditable);
}
function Oe(a) {
  var b = Me(), c = a.focusedElem, d = a.selectionRange;
  if (b !== c && c && c.ownerDocument && Le(c.ownerDocument.documentElement, c)) {
    if (null !== d && Ne(c)) {
      if (b = d.start, a = d.end, void 0 === a && (a = b), "selectionStart" in c)
        c.selectionStart = b, c.selectionEnd = Math.min(a, c.value.length);
      else if (a = (b = c.ownerDocument || document) && b.defaultView || window, a.getSelection) {
        a = a.getSelection();
        var e = c.textContent.length, f2 = Math.min(d.start, e);
        d = void 0 === d.end ? f2 : Math.min(d.end, e);
        !a.extend && f2 > d && (e = d, d = f2, f2 = e);
        e = Ke(c, f2);
        var g2 = Ke(
          c,
          d
        );
        e && g2 && (1 !== a.rangeCount || a.anchorNode !== e.node || a.anchorOffset !== e.offset || a.focusNode !== g2.node || a.focusOffset !== g2.offset) && (b = b.createRange(), b.setStart(e.node, e.offset), a.removeAllRanges(), f2 > d ? (a.addRange(b), a.extend(g2.node, g2.offset)) : (b.setEnd(g2.node, g2.offset), a.addRange(b)));
      }
    }
    b = [];
    for (a = c; a = a.parentNode; )
      1 === a.nodeType && b.push({ element: a, left: a.scrollLeft, top: a.scrollTop });
    "function" === typeof c.focus && c.focus();
    for (c = 0; c < b.length; c++)
      a = b[c], a.element.scrollLeft = a.left, a.element.scrollTop = a.top;
  }
}
var Pe = ia$2 && "documentMode" in document && 11 >= document.documentMode, Qe = null, Re = null, Se = null, Te = false;
function Ue(a, b, c) {
  var d = c.window === c ? c.document : 9 === c.nodeType ? c : c.ownerDocument;
  Te || null == Qe || Qe !== Xa$2(d) || (d = Qe, "selectionStart" in d && Ne(d) ? d = { start: d.selectionStart, end: d.selectionEnd } : (d = (d.ownerDocument && d.ownerDocument.defaultView || window).getSelection(), d = { anchorNode: d.anchorNode, anchorOffset: d.anchorOffset, focusNode: d.focusNode, focusOffset: d.focusOffset }), Se && Ie(Se, d) || (Se = d, d = oe(Re, "onSelect"), 0 < d.length && (b = new td("onSelect", "select", null, b, c), a.push({ event: b, listeners: d }), b.target = Qe)));
}
function Ve(a, b) {
  var c = {};
  c[a.toLowerCase()] = b.toLowerCase();
  c["Webkit" + a] = "webkit" + b;
  c["Moz" + a] = "moz" + b;
  return c;
}
var We = { animationend: Ve("Animation", "AnimationEnd"), animationiteration: Ve("Animation", "AnimationIteration"), animationstart: Ve("Animation", "AnimationStart"), transitionend: Ve("Transition", "TransitionEnd") }, Xe = {}, Ye = {};
ia$2 && (Ye = document.createElement("div").style, "AnimationEvent" in window || (delete We.animationend.animation, delete We.animationiteration.animation, delete We.animationstart.animation), "TransitionEvent" in window || delete We.transitionend.transition);
function Ze(a) {
  if (Xe[a])
    return Xe[a];
  if (!We[a])
    return a;
  var b = We[a], c;
  for (c in b)
    if (b.hasOwnProperty(c) && c in Ye)
      return Xe[a] = b[c];
  return a;
}
var $e = Ze("animationend"), af = Ze("animationiteration"), bf = Ze("animationstart"), cf = Ze("transitionend"), df = /* @__PURE__ */ new Map(), ef = "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");
function ff(a, b) {
  df.set(a, b);
  fa$2(b, [a]);
}
for (var gf = 0; gf < ef.length; gf++) {
  var hf = ef[gf], jf = hf.toLowerCase(), kf = hf[0].toUpperCase() + hf.slice(1);
  ff(jf, "on" + kf);
}
ff($e, "onAnimationEnd");
ff(af, "onAnimationIteration");
ff(bf, "onAnimationStart");
ff("dblclick", "onDoubleClick");
ff("focusin", "onFocus");
ff("focusout", "onBlur");
ff(cf, "onTransitionEnd");
ha$2("onMouseEnter", ["mouseout", "mouseover"]);
ha$2("onMouseLeave", ["mouseout", "mouseover"]);
ha$2("onPointerEnter", ["pointerout", "pointerover"]);
ha$2("onPointerLeave", ["pointerout", "pointerover"]);
fa$2("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" "));
fa$2("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));
fa$2("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]);
fa$2("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" "));
fa$2("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" "));
fa$2("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
var lf = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "), mf = new Set("cancel close invalid load scroll toggle".split(" ").concat(lf));
function nf(a, b, c) {
  var d = a.type || "unknown-event";
  a.currentTarget = c;
  Ub$1(d, b, void 0, a);
  a.currentTarget = null;
}
function se(a, b) {
  b = 0 !== (b & 4);
  for (var c = 0; c < a.length; c++) {
    var d = a[c], e = d.event;
    d = d.listeners;
    a: {
      var f2 = void 0;
      if (b)
        for (var g2 = d.length - 1; 0 <= g2; g2--) {
          var h = d[g2], k2 = h.instance, l2 = h.currentTarget;
          h = h.listener;
          if (k2 !== f2 && e.isPropagationStopped())
            break a;
          nf(e, h, l2);
          f2 = k2;
        }
      else
        for (g2 = 0; g2 < d.length; g2++) {
          h = d[g2];
          k2 = h.instance;
          l2 = h.currentTarget;
          h = h.listener;
          if (k2 !== f2 && e.isPropagationStopped())
            break a;
          nf(e, h, l2);
          f2 = k2;
        }
    }
  }
  if (Qb$2)
    throw a = Rb$2, Qb$2 = false, Rb$2 = null, a;
}
function D$2(a, b) {
  var c = b[of];
  void 0 === c && (c = b[of] = /* @__PURE__ */ new Set());
  var d = a + "__bubble";
  c.has(d) || (pf(b, a, 2, false), c.add(d));
}
function qf(a, b, c) {
  var d = 0;
  b && (d |= 4);
  pf(c, a, d, b);
}
var rf = "_reactListening" + Math.random().toString(36).slice(2);
function sf(a) {
  if (!a[rf]) {
    a[rf] = true;
    da$1.forEach(function(b2) {
      "selectionchange" !== b2 && (mf.has(b2) || qf(b2, false, a), qf(b2, true, a));
    });
    var b = 9 === a.nodeType ? a : a.ownerDocument;
    null === b || b[rf] || (b[rf] = true, qf("selectionchange", false, b));
  }
}
function pf(a, b, c, d) {
  switch (jd$1(b)) {
    case 1:
      var e = ed$1;
      break;
    case 4:
      e = gd$1;
      break;
    default:
      e = fd$1;
  }
  c = e.bind(null, b, c, a);
  e = void 0;
  !Lb$2 || "touchstart" !== b && "touchmove" !== b && "wheel" !== b || (e = true);
  d ? void 0 !== e ? a.addEventListener(b, c, { capture: true, passive: e }) : a.addEventListener(b, c, true) : void 0 !== e ? a.addEventListener(b, c, { passive: e }) : a.addEventListener(b, c, false);
}
function hd$1(a, b, c, d, e) {
  var f2 = d;
  if (0 === (b & 1) && 0 === (b & 2) && null !== d)
    a:
      for (; ; ) {
        if (null === d)
          return;
        var g2 = d.tag;
        if (3 === g2 || 4 === g2) {
          var h = d.stateNode.containerInfo;
          if (h === e || 8 === h.nodeType && h.parentNode === e)
            break;
          if (4 === g2)
            for (g2 = d.return; null !== g2; ) {
              var k2 = g2.tag;
              if (3 === k2 || 4 === k2) {
                if (k2 = g2.stateNode.containerInfo, k2 === e || 8 === k2.nodeType && k2.parentNode === e)
                  return;
              }
              g2 = g2.return;
            }
          for (; null !== h; ) {
            g2 = Wc$1(h);
            if (null === g2)
              return;
            k2 = g2.tag;
            if (5 === k2 || 6 === k2) {
              d = f2 = g2;
              continue a;
            }
            h = h.parentNode;
          }
        }
        d = d.return;
      }
  Jb$2(function() {
    var d2 = f2, e2 = xb$2(c), g3 = [];
    a: {
      var h2 = df.get(a);
      if (void 0 !== h2) {
        var k3 = td, n2 = a;
        switch (a) {
          case "keypress":
            if (0 === od(c))
              break a;
          case "keydown":
          case "keyup":
            k3 = Rd;
            break;
          case "focusin":
            n2 = "focus";
            k3 = Fd;
            break;
          case "focusout":
            n2 = "blur";
            k3 = Fd;
            break;
          case "beforeblur":
          case "afterblur":
            k3 = Fd;
            break;
          case "click":
            if (2 === c.button)
              break a;
          case "auxclick":
          case "dblclick":
          case "mousedown":
          case "mousemove":
          case "mouseup":
          case "mouseout":
          case "mouseover":
          case "contextmenu":
            k3 = Bd;
            break;
          case "drag":
          case "dragend":
          case "dragenter":
          case "dragexit":
          case "dragleave":
          case "dragover":
          case "dragstart":
          case "drop":
            k3 = Dd;
            break;
          case "touchcancel":
          case "touchend":
          case "touchmove":
          case "touchstart":
            k3 = Vd;
            break;
          case $e:
          case af:
          case bf:
            k3 = Hd;
            break;
          case cf:
            k3 = Xd;
            break;
          case "scroll":
            k3 = vd;
            break;
          case "wheel":
            k3 = Zd;
            break;
          case "copy":
          case "cut":
          case "paste":
            k3 = Jd;
            break;
          case "gotpointercapture":
          case "lostpointercapture":
          case "pointercancel":
          case "pointerdown":
          case "pointermove":
          case "pointerout":
          case "pointerover":
          case "pointerup":
            k3 = Td;
        }
        var t2 = 0 !== (b & 4), J2 = !t2 && "scroll" === a, x2 = t2 ? null !== h2 ? h2 + "Capture" : null : h2;
        t2 = [];
        for (var w2 = d2, u2; null !== w2; ) {
          u2 = w2;
          var F2 = u2.stateNode;
          5 === u2.tag && null !== F2 && (u2 = F2, null !== x2 && (F2 = Kb$2(w2, x2), null != F2 && t2.push(tf(w2, F2, u2))));
          if (J2)
            break;
          w2 = w2.return;
        }
        0 < t2.length && (h2 = new k3(h2, n2, null, c, e2), g3.push({ event: h2, listeners: t2 }));
      }
    }
    if (0 === (b & 7)) {
      a: {
        h2 = "mouseover" === a || "pointerover" === a;
        k3 = "mouseout" === a || "pointerout" === a;
        if (h2 && c !== wb$2 && (n2 = c.relatedTarget || c.fromElement) && (Wc$1(n2) || n2[uf]))
          break a;
        if (k3 || h2) {
          h2 = e2.window === e2 ? e2 : (h2 = e2.ownerDocument) ? h2.defaultView || h2.parentWindow : window;
          if (k3) {
            if (n2 = c.relatedTarget || c.toElement, k3 = d2, n2 = n2 ? Wc$1(n2) : null, null !== n2 && (J2 = Vb$1(n2), n2 !== J2 || 5 !== n2.tag && 6 !== n2.tag))
              n2 = null;
          } else
            k3 = null, n2 = d2;
          if (k3 !== n2) {
            t2 = Bd;
            F2 = "onMouseLeave";
            x2 = "onMouseEnter";
            w2 = "mouse";
            if ("pointerout" === a || "pointerover" === a)
              t2 = Td, F2 = "onPointerLeave", x2 = "onPointerEnter", w2 = "pointer";
            J2 = null == k3 ? h2 : ue(k3);
            u2 = null == n2 ? h2 : ue(n2);
            h2 = new t2(F2, w2 + "leave", k3, c, e2);
            h2.target = J2;
            h2.relatedTarget = u2;
            F2 = null;
            Wc$1(e2) === d2 && (t2 = new t2(x2, w2 + "enter", n2, c, e2), t2.target = u2, t2.relatedTarget = J2, F2 = t2);
            J2 = F2;
            if (k3 && n2)
              b: {
                t2 = k3;
                x2 = n2;
                w2 = 0;
                for (u2 = t2; u2; u2 = vf(u2))
                  w2++;
                u2 = 0;
                for (F2 = x2; F2; F2 = vf(F2))
                  u2++;
                for (; 0 < w2 - u2; )
                  t2 = vf(t2), w2--;
                for (; 0 < u2 - w2; )
                  x2 = vf(x2), u2--;
                for (; w2--; ) {
                  if (t2 === x2 || null !== x2 && t2 === x2.alternate)
                    break b;
                  t2 = vf(t2);
                  x2 = vf(x2);
                }
                t2 = null;
              }
            else
              t2 = null;
            null !== k3 && wf(g3, h2, k3, t2, false);
            null !== n2 && null !== J2 && wf(g3, J2, n2, t2, true);
          }
        }
      }
      a: {
        h2 = d2 ? ue(d2) : window;
        k3 = h2.nodeName && h2.nodeName.toLowerCase();
        if ("select" === k3 || "input" === k3 && "file" === h2.type)
          var na2 = ve;
        else if (me(h2))
          if (we)
            na2 = Fe;
          else {
            na2 = De;
            var xa2 = Ce;
          }
        else
          (k3 = h2.nodeName) && "input" === k3.toLowerCase() && ("checkbox" === h2.type || "radio" === h2.type) && (na2 = Ee);
        if (na2 && (na2 = na2(a, d2))) {
          ne(g3, na2, c, e2);
          break a;
        }
        xa2 && xa2(a, h2, d2);
        "focusout" === a && (xa2 = h2._wrapperState) && xa2.controlled && "number" === h2.type && cb$2(h2, "number", h2.value);
      }
      xa2 = d2 ? ue(d2) : window;
      switch (a) {
        case "focusin":
          if (me(xa2) || "true" === xa2.contentEditable)
            Qe = xa2, Re = d2, Se = null;
          break;
        case "focusout":
          Se = Re = Qe = null;
          break;
        case "mousedown":
          Te = true;
          break;
        case "contextmenu":
        case "mouseup":
        case "dragend":
          Te = false;
          Ue(g3, c, e2);
          break;
        case "selectionchange":
          if (Pe)
            break;
        case "keydown":
        case "keyup":
          Ue(g3, c, e2);
      }
      var $a2;
      if (ae)
        b: {
          switch (a) {
            case "compositionstart":
              var ba2 = "onCompositionStart";
              break b;
            case "compositionend":
              ba2 = "onCompositionEnd";
              break b;
            case "compositionupdate":
              ba2 = "onCompositionUpdate";
              break b;
          }
          ba2 = void 0;
        }
      else
        ie ? ge(a, c) && (ba2 = "onCompositionEnd") : "keydown" === a && 229 === c.keyCode && (ba2 = "onCompositionStart");
      ba2 && (de && "ko" !== c.locale && (ie || "onCompositionStart" !== ba2 ? "onCompositionEnd" === ba2 && ie && ($a2 = nd()) : (kd$1 = e2, ld$1 = "value" in kd$1 ? kd$1.value : kd$1.textContent, ie = true)), xa2 = oe(d2, ba2), 0 < xa2.length && (ba2 = new Ld(ba2, a, null, c, e2), g3.push({ event: ba2, listeners: xa2 }), $a2 ? ba2.data = $a2 : ($a2 = he(c), null !== $a2 && (ba2.data = $a2))));
      if ($a2 = ce ? je(a, c) : ke(a, c))
        d2 = oe(d2, "onBeforeInput"), 0 < d2.length && (e2 = new Ld("onBeforeInput", "beforeinput", null, c, e2), g3.push({ event: e2, listeners: d2 }), e2.data = $a2);
    }
    se(g3, b);
  });
}
function tf(a, b, c) {
  return { instance: a, listener: b, currentTarget: c };
}
function oe(a, b) {
  for (var c = b + "Capture", d = []; null !== a; ) {
    var e = a, f2 = e.stateNode;
    5 === e.tag && null !== f2 && (e = f2, f2 = Kb$2(a, c), null != f2 && d.unshift(tf(a, f2, e)), f2 = Kb$2(a, b), null != f2 && d.push(tf(a, f2, e)));
    a = a.return;
  }
  return d;
}
function vf(a) {
  if (null === a)
    return null;
  do
    a = a.return;
  while (a && 5 !== a.tag);
  return a ? a : null;
}
function wf(a, b, c, d, e) {
  for (var f2 = b._reactName, g2 = []; null !== c && c !== d; ) {
    var h = c, k2 = h.alternate, l2 = h.stateNode;
    if (null !== k2 && k2 === d)
      break;
    5 === h.tag && null !== l2 && (h = l2, e ? (k2 = Kb$2(c, f2), null != k2 && g2.unshift(tf(c, k2, h))) : e || (k2 = Kb$2(c, f2), null != k2 && g2.push(tf(c, k2, h))));
    c = c.return;
  }
  0 !== g2.length && a.push({ event: b, listeners: g2 });
}
var xf = /\r\n?/g, yf = /\u0000|\uFFFD/g;
function zf(a) {
  return ("string" === typeof a ? a : "" + a).replace(xf, "\n").replace(yf, "");
}
function Af(a, b, c) {
  b = zf(b);
  if (zf(a) !== b && c)
    throw Error(p$4(425));
}
function Bf() {
}
var Cf = null, Df = null;
function Ef(a, b) {
  return "textarea" === a || "noscript" === a || "string" === typeof b.children || "number" === typeof b.children || "object" === typeof b.dangerouslySetInnerHTML && null !== b.dangerouslySetInnerHTML && null != b.dangerouslySetInnerHTML.__html;
}
var Ff = "function" === typeof setTimeout ? setTimeout : void 0, Gf = "function" === typeof clearTimeout ? clearTimeout : void 0, Hf = "function" === typeof Promise ? Promise : void 0, Jf = "function" === typeof queueMicrotask ? queueMicrotask : "undefined" !== typeof Hf ? function(a) {
  return Hf.resolve(null).then(a).catch(If);
} : Ff;
function If(a) {
  setTimeout(function() {
    throw a;
  });
}
function Kf(a, b) {
  var c = b, d = 0;
  do {
    var e = c.nextSibling;
    a.removeChild(c);
    if (e && 8 === e.nodeType)
      if (c = e.data, "/$" === c) {
        if (0 === d) {
          a.removeChild(e);
          bd$1(b);
          return;
        }
        d--;
      } else
        "$" !== c && "$?" !== c && "$!" !== c || d++;
    c = e;
  } while (c);
  bd$1(b);
}
function Lf(a) {
  for (; null != a; a = a.nextSibling) {
    var b = a.nodeType;
    if (1 === b || 3 === b)
      break;
    if (8 === b) {
      b = a.data;
      if ("$" === b || "$!" === b || "$?" === b)
        break;
      if ("/$" === b)
        return null;
    }
  }
  return a;
}
function Mf(a) {
  a = a.previousSibling;
  for (var b = 0; a; ) {
    if (8 === a.nodeType) {
      var c = a.data;
      if ("$" === c || "$!" === c || "$?" === c) {
        if (0 === b)
          return a;
        b--;
      } else
        "/$" === c && b++;
    }
    a = a.previousSibling;
  }
  return null;
}
var Nf = Math.random().toString(36).slice(2), Of = "__reactFiber$" + Nf, Pf = "__reactProps$" + Nf, uf = "__reactContainer$" + Nf, of = "__reactEvents$" + Nf, Qf = "__reactListeners$" + Nf, Rf = "__reactHandles$" + Nf;
function Wc$1(a) {
  var b = a[Of];
  if (b)
    return b;
  for (var c = a.parentNode; c; ) {
    if (b = c[uf] || c[Of]) {
      c = b.alternate;
      if (null !== b.child || null !== c && null !== c.child)
        for (a = Mf(a); null !== a; ) {
          if (c = a[Of])
            return c;
          a = Mf(a);
        }
      return b;
    }
    a = c;
    c = a.parentNode;
  }
  return null;
}
function Cb$2(a) {
  a = a[Of] || a[uf];
  return !a || 5 !== a.tag && 6 !== a.tag && 13 !== a.tag && 3 !== a.tag ? null : a;
}
function ue(a) {
  if (5 === a.tag || 6 === a.tag)
    return a.stateNode;
  throw Error(p$4(33));
}
function Db$2(a) {
  return a[Pf] || null;
}
var Sf = [], Tf = -1;
function Uf(a) {
  return { current: a };
}
function E$3(a) {
  0 > Tf || (a.current = Sf[Tf], Sf[Tf] = null, Tf--);
}
function G$2(a, b) {
  Tf++;
  Sf[Tf] = a.current;
  a.current = b;
}
var Vf = {}, H$3 = Uf(Vf), Wf = Uf(false), Xf = Vf;
function Yf(a, b) {
  var c = a.type.contextTypes;
  if (!c)
    return Vf;
  var d = a.stateNode;
  if (d && d.__reactInternalMemoizedUnmaskedChildContext === b)
    return d.__reactInternalMemoizedMaskedChildContext;
  var e = {}, f2;
  for (f2 in c)
    e[f2] = b[f2];
  d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = b, a.__reactInternalMemoizedMaskedChildContext = e);
  return e;
}
function Zf(a) {
  a = a.childContextTypes;
  return null !== a && void 0 !== a;
}
function $f() {
  E$3(Wf);
  E$3(H$3);
}
function ag(a, b, c) {
  if (H$3.current !== Vf)
    throw Error(p$4(168));
  G$2(H$3, b);
  G$2(Wf, c);
}
function bg(a, b, c) {
  var d = a.stateNode;
  b = b.childContextTypes;
  if ("function" !== typeof d.getChildContext)
    return c;
  d = d.getChildContext();
  for (var e in d)
    if (!(e in b))
      throw Error(p$4(108, Ra$2(a) || "Unknown", e));
  return A$2({}, c, d);
}
function cg(a) {
  a = (a = a.stateNode) && a.__reactInternalMemoizedMergedChildContext || Vf;
  Xf = H$3.current;
  G$2(H$3, a);
  G$2(Wf, Wf.current);
  return true;
}
function dg(a, b, c) {
  var d = a.stateNode;
  if (!d)
    throw Error(p$4(169));
  c ? (a = bg(a, b, Xf), d.__reactInternalMemoizedMergedChildContext = a, E$3(Wf), E$3(H$3), G$2(H$3, a)) : E$3(Wf);
  G$2(Wf, c);
}
var eg = null, fg = false, gg = false;
function hg(a) {
  null === eg ? eg = [a] : eg.push(a);
}
function ig(a) {
  fg = true;
  hg(a);
}
function jg() {
  if (!gg && null !== eg) {
    gg = true;
    var a = 0, b = C$2;
    try {
      var c = eg;
      for (C$2 = 1; a < c.length; a++) {
        var d = c[a];
        do
          d = d(true);
        while (null !== d);
      }
      eg = null;
      fg = false;
    } catch (e) {
      throw null !== eg && (eg = eg.slice(a + 1)), ac$1(fc$1, jg), e;
    } finally {
      C$2 = b, gg = false;
    }
  }
  return null;
}
var kg = [], lg = 0, mg = null, ng = 0, og = [], pg = 0, qg = null, rg = 1, sg = "";
function tg(a, b) {
  kg[lg++] = ng;
  kg[lg++] = mg;
  mg = a;
  ng = b;
}
function ug(a, b, c) {
  og[pg++] = rg;
  og[pg++] = sg;
  og[pg++] = qg;
  qg = a;
  var d = rg;
  a = sg;
  var e = 32 - oc$1(d) - 1;
  d &= ~(1 << e);
  c += 1;
  var f2 = 32 - oc$1(b) + e;
  if (30 < f2) {
    var g2 = e - e % 5;
    f2 = (d & (1 << g2) - 1).toString(32);
    d >>= g2;
    e -= g2;
    rg = 1 << 32 - oc$1(b) + e | c << e | d;
    sg = f2 + a;
  } else
    rg = 1 << f2 | c << e | d, sg = a;
}
function vg(a) {
  null !== a.return && (tg(a, 1), ug(a, 1, 0));
}
function wg(a) {
  for (; a === mg; )
    mg = kg[--lg], kg[lg] = null, ng = kg[--lg], kg[lg] = null;
  for (; a === qg; )
    qg = og[--pg], og[pg] = null, sg = og[--pg], og[pg] = null, rg = og[--pg], og[pg] = null;
}
var xg = null, yg = null, I$3 = false, zg = null;
function Ag(a, b) {
  var c = Bg(5, null, null, 0);
  c.elementType = "DELETED";
  c.stateNode = b;
  c.return = a;
  b = a.deletions;
  null === b ? (a.deletions = [c], a.flags |= 16) : b.push(c);
}
function Cg(a, b) {
  switch (a.tag) {
    case 5:
      var c = a.type;
      b = 1 !== b.nodeType || c.toLowerCase() !== b.nodeName.toLowerCase() ? null : b;
      return null !== b ? (a.stateNode = b, xg = a, yg = Lf(b.firstChild), true) : false;
    case 6:
      return b = "" === a.pendingProps || 3 !== b.nodeType ? null : b, null !== b ? (a.stateNode = b, xg = a, yg = null, true) : false;
    case 13:
      return b = 8 !== b.nodeType ? null : b, null !== b ? (c = null !== qg ? { id: rg, overflow: sg } : null, a.memoizedState = { dehydrated: b, treeContext: c, retryLane: 1073741824 }, c = Bg(18, null, null, 0), c.stateNode = b, c.return = a, a.child = c, xg = a, yg = null, true) : false;
    default:
      return false;
  }
}
function Dg(a) {
  return 0 !== (a.mode & 1) && 0 === (a.flags & 128);
}
function Eg(a) {
  if (I$3) {
    var b = yg;
    if (b) {
      var c = b;
      if (!Cg(a, b)) {
        if (Dg(a))
          throw Error(p$4(418));
        b = Lf(c.nextSibling);
        var d = xg;
        b && Cg(a, b) ? Ag(d, c) : (a.flags = a.flags & -4097 | 2, I$3 = false, xg = a);
      }
    } else {
      if (Dg(a))
        throw Error(p$4(418));
      a.flags = a.flags & -4097 | 2;
      I$3 = false;
      xg = a;
    }
  }
}
function Fg(a) {
  for (a = a.return; null !== a && 5 !== a.tag && 3 !== a.tag && 13 !== a.tag; )
    a = a.return;
  xg = a;
}
function Gg(a) {
  if (a !== xg)
    return false;
  if (!I$3)
    return Fg(a), I$3 = true, false;
  var b;
  (b = 3 !== a.tag) && !(b = 5 !== a.tag) && (b = a.type, b = "head" !== b && "body" !== b && !Ef(a.type, a.memoizedProps));
  if (b && (b = yg)) {
    if (Dg(a))
      throw Hg(), Error(p$4(418));
    for (; b; )
      Ag(a, b), b = Lf(b.nextSibling);
  }
  Fg(a);
  if (13 === a.tag) {
    a = a.memoizedState;
    a = null !== a ? a.dehydrated : null;
    if (!a)
      throw Error(p$4(317));
    a: {
      a = a.nextSibling;
      for (b = 0; a; ) {
        if (8 === a.nodeType) {
          var c = a.data;
          if ("/$" === c) {
            if (0 === b) {
              yg = Lf(a.nextSibling);
              break a;
            }
            b--;
          } else
            "$" !== c && "$!" !== c && "$?" !== c || b++;
        }
        a = a.nextSibling;
      }
      yg = null;
    }
  } else
    yg = xg ? Lf(a.stateNode.nextSibling) : null;
  return true;
}
function Hg() {
  for (var a = yg; a; )
    a = Lf(a.nextSibling);
}
function Ig() {
  yg = xg = null;
  I$3 = false;
}
function Jg(a) {
  null === zg ? zg = [a] : zg.push(a);
}
var Kg = ua$2.ReactCurrentBatchConfig;
function Lg(a, b) {
  if (a && a.defaultProps) {
    b = A$2({}, b);
    a = a.defaultProps;
    for (var c in a)
      void 0 === b[c] && (b[c] = a[c]);
    return b;
  }
  return b;
}
var Mg = Uf(null), Ng = null, Og = null, Pg = null;
function Qg() {
  Pg = Og = Ng = null;
}
function Rg(a) {
  var b = Mg.current;
  E$3(Mg);
  a._currentValue = b;
}
function Sg(a, b, c) {
  for (; null !== a; ) {
    var d = a.alternate;
    (a.childLanes & b) !== b ? (a.childLanes |= b, null !== d && (d.childLanes |= b)) : null !== d && (d.childLanes & b) !== b && (d.childLanes |= b);
    if (a === c)
      break;
    a = a.return;
  }
}
function Tg(a, b) {
  Ng = a;
  Pg = Og = null;
  a = a.dependencies;
  null !== a && null !== a.firstContext && (0 !== (a.lanes & b) && (Ug = true), a.firstContext = null);
}
function Vg(a) {
  var b = a._currentValue;
  if (Pg !== a)
    if (a = { context: a, memoizedValue: b, next: null }, null === Og) {
      if (null === Ng)
        throw Error(p$4(308));
      Og = a;
      Ng.dependencies = { lanes: 0, firstContext: a };
    } else
      Og = Og.next = a;
  return b;
}
var Wg = null;
function Xg(a) {
  null === Wg ? Wg = [a] : Wg.push(a);
}
function Yg(a, b, c, d) {
  var e = b.interleaved;
  null === e ? (c.next = c, Xg(b)) : (c.next = e.next, e.next = c);
  b.interleaved = c;
  return Zg(a, d);
}
function Zg(a, b) {
  a.lanes |= b;
  var c = a.alternate;
  null !== c && (c.lanes |= b);
  c = a;
  for (a = a.return; null !== a; )
    a.childLanes |= b, c = a.alternate, null !== c && (c.childLanes |= b), c = a, a = a.return;
  return 3 === c.tag ? c.stateNode : null;
}
var $g = false;
function ah(a) {
  a.updateQueue = { baseState: a.memoizedState, firstBaseUpdate: null, lastBaseUpdate: null, shared: { pending: null, interleaved: null, lanes: 0 }, effects: null };
}
function bh(a, b) {
  a = a.updateQueue;
  b.updateQueue === a && (b.updateQueue = { baseState: a.baseState, firstBaseUpdate: a.firstBaseUpdate, lastBaseUpdate: a.lastBaseUpdate, shared: a.shared, effects: a.effects });
}
function ch(a, b) {
  return { eventTime: a, lane: b, tag: 0, payload: null, callback: null, next: null };
}
function dh(a, b, c) {
  var d = a.updateQueue;
  if (null === d)
    return null;
  d = d.shared;
  if (0 !== (K$3 & 2)) {
    var e = d.pending;
    null === e ? b.next = b : (b.next = e.next, e.next = b);
    d.pending = b;
    return Zg(a, c);
  }
  e = d.interleaved;
  null === e ? (b.next = b, Xg(d)) : (b.next = e.next, e.next = b);
  d.interleaved = b;
  return Zg(a, c);
}
function eh(a, b, c) {
  b = b.updateQueue;
  if (null !== b && (b = b.shared, 0 !== (c & 4194240))) {
    var d = b.lanes;
    d &= a.pendingLanes;
    c |= d;
    b.lanes = c;
    Cc$1(a, c);
  }
}
function fh(a, b) {
  var c = a.updateQueue, d = a.alternate;
  if (null !== d && (d = d.updateQueue, c === d)) {
    var e = null, f2 = null;
    c = c.firstBaseUpdate;
    if (null !== c) {
      do {
        var g2 = { eventTime: c.eventTime, lane: c.lane, tag: c.tag, payload: c.payload, callback: c.callback, next: null };
        null === f2 ? e = f2 = g2 : f2 = f2.next = g2;
        c = c.next;
      } while (null !== c);
      null === f2 ? e = f2 = b : f2 = f2.next = b;
    } else
      e = f2 = b;
    c = { baseState: d.baseState, firstBaseUpdate: e, lastBaseUpdate: f2, shared: d.shared, effects: d.effects };
    a.updateQueue = c;
    return;
  }
  a = c.lastBaseUpdate;
  null === a ? c.firstBaseUpdate = b : a.next = b;
  c.lastBaseUpdate = b;
}
function gh(a, b, c, d) {
  var e = a.updateQueue;
  $g = false;
  var f2 = e.firstBaseUpdate, g2 = e.lastBaseUpdate, h = e.shared.pending;
  if (null !== h) {
    e.shared.pending = null;
    var k2 = h, l2 = k2.next;
    k2.next = null;
    null === g2 ? f2 = l2 : g2.next = l2;
    g2 = k2;
    var m2 = a.alternate;
    null !== m2 && (m2 = m2.updateQueue, h = m2.lastBaseUpdate, h !== g2 && (null === h ? m2.firstBaseUpdate = l2 : h.next = l2, m2.lastBaseUpdate = k2));
  }
  if (null !== f2) {
    var q2 = e.baseState;
    g2 = 0;
    m2 = l2 = k2 = null;
    h = f2;
    do {
      var r2 = h.lane, y2 = h.eventTime;
      if ((d & r2) === r2) {
        null !== m2 && (m2 = m2.next = {
          eventTime: y2,
          lane: 0,
          tag: h.tag,
          payload: h.payload,
          callback: h.callback,
          next: null
        });
        a: {
          var n2 = a, t2 = h;
          r2 = b;
          y2 = c;
          switch (t2.tag) {
            case 1:
              n2 = t2.payload;
              if ("function" === typeof n2) {
                q2 = n2.call(y2, q2, r2);
                break a;
              }
              q2 = n2;
              break a;
            case 3:
              n2.flags = n2.flags & -65537 | 128;
            case 0:
              n2 = t2.payload;
              r2 = "function" === typeof n2 ? n2.call(y2, q2, r2) : n2;
              if (null === r2 || void 0 === r2)
                break a;
              q2 = A$2({}, q2, r2);
              break a;
            case 2:
              $g = true;
          }
        }
        null !== h.callback && 0 !== h.lane && (a.flags |= 64, r2 = e.effects, null === r2 ? e.effects = [h] : r2.push(h));
      } else
        y2 = { eventTime: y2, lane: r2, tag: h.tag, payload: h.payload, callback: h.callback, next: null }, null === m2 ? (l2 = m2 = y2, k2 = q2) : m2 = m2.next = y2, g2 |= r2;
      h = h.next;
      if (null === h)
        if (h = e.shared.pending, null === h)
          break;
        else
          r2 = h, h = r2.next, r2.next = null, e.lastBaseUpdate = r2, e.shared.pending = null;
    } while (1);
    null === m2 && (k2 = q2);
    e.baseState = k2;
    e.firstBaseUpdate = l2;
    e.lastBaseUpdate = m2;
    b = e.shared.interleaved;
    if (null !== b) {
      e = b;
      do
        g2 |= e.lane, e = e.next;
      while (e !== b);
    } else
      null === f2 && (e.shared.lanes = 0);
    hh |= g2;
    a.lanes = g2;
    a.memoizedState = q2;
  }
}
function ih(a, b, c) {
  a = b.effects;
  b.effects = null;
  if (null !== a)
    for (b = 0; b < a.length; b++) {
      var d = a[b], e = d.callback;
      if (null !== e) {
        d.callback = null;
        d = c;
        if ("function" !== typeof e)
          throw Error(p$4(191, e));
        e.call(d);
      }
    }
}
var jh = new aa$2.Component().refs;
function kh(a, b, c, d) {
  b = a.memoizedState;
  c = c(d, b);
  c = null === c || void 0 === c ? b : A$2({}, b, c);
  a.memoizedState = c;
  0 === a.lanes && (a.updateQueue.baseState = c);
}
var nh = { isMounted: function(a) {
  return (a = a._reactInternals) ? Vb$1(a) === a : false;
}, enqueueSetState: function(a, b, c) {
  a = a._reactInternals;
  var d = L$3(), e = lh(a), f2 = ch(d, e);
  f2.payload = b;
  void 0 !== c && null !== c && (f2.callback = c);
  b = dh(a, f2, e);
  null !== b && (mh(b, a, e, d), eh(b, a, e));
}, enqueueReplaceState: function(a, b, c) {
  a = a._reactInternals;
  var d = L$3(), e = lh(a), f2 = ch(d, e);
  f2.tag = 1;
  f2.payload = b;
  void 0 !== c && null !== c && (f2.callback = c);
  b = dh(a, f2, e);
  null !== b && (mh(b, a, e, d), eh(b, a, e));
}, enqueueForceUpdate: function(a, b) {
  a = a._reactInternals;
  var c = L$3(), d = lh(a), e = ch(c, d);
  e.tag = 2;
  void 0 !== b && null !== b && (e.callback = b);
  b = dh(a, e, d);
  null !== b && (mh(b, a, d, c), eh(b, a, d));
} };
function oh(a, b, c, d, e, f2, g2) {
  a = a.stateNode;
  return "function" === typeof a.shouldComponentUpdate ? a.shouldComponentUpdate(d, f2, g2) : b.prototype && b.prototype.isPureReactComponent ? !Ie(c, d) || !Ie(e, f2) : true;
}
function ph(a, b, c) {
  var d = false, e = Vf;
  var f2 = b.contextType;
  "object" === typeof f2 && null !== f2 ? f2 = Vg(f2) : (e = Zf(b) ? Xf : H$3.current, d = b.contextTypes, f2 = (d = null !== d && void 0 !== d) ? Yf(a, e) : Vf);
  b = new b(c, f2);
  a.memoizedState = null !== b.state && void 0 !== b.state ? b.state : null;
  b.updater = nh;
  a.stateNode = b;
  b._reactInternals = a;
  d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = e, a.__reactInternalMemoizedMaskedChildContext = f2);
  return b;
}
function qh(a, b, c, d) {
  a = b.state;
  "function" === typeof b.componentWillReceiveProps && b.componentWillReceiveProps(c, d);
  "function" === typeof b.UNSAFE_componentWillReceiveProps && b.UNSAFE_componentWillReceiveProps(c, d);
  b.state !== a && nh.enqueueReplaceState(b, b.state, null);
}
function rh(a, b, c, d) {
  var e = a.stateNode;
  e.props = c;
  e.state = a.memoizedState;
  e.refs = jh;
  ah(a);
  var f2 = b.contextType;
  "object" === typeof f2 && null !== f2 ? e.context = Vg(f2) : (f2 = Zf(b) ? Xf : H$3.current, e.context = Yf(a, f2));
  e.state = a.memoizedState;
  f2 = b.getDerivedStateFromProps;
  "function" === typeof f2 && (kh(a, b, f2, c), e.state = a.memoizedState);
  "function" === typeof b.getDerivedStateFromProps || "function" === typeof e.getSnapshotBeforeUpdate || "function" !== typeof e.UNSAFE_componentWillMount && "function" !== typeof e.componentWillMount || (b = e.state, "function" === typeof e.componentWillMount && e.componentWillMount(), "function" === typeof e.UNSAFE_componentWillMount && e.UNSAFE_componentWillMount(), b !== e.state && nh.enqueueReplaceState(e, e.state, null), gh(a, c, e, d), e.state = a.memoizedState);
  "function" === typeof e.componentDidMount && (a.flags |= 4194308);
}
function sh(a, b, c) {
  a = c.ref;
  if (null !== a && "function" !== typeof a && "object" !== typeof a) {
    if (c._owner) {
      c = c._owner;
      if (c) {
        if (1 !== c.tag)
          throw Error(p$4(309));
        var d = c.stateNode;
      }
      if (!d)
        throw Error(p$4(147, a));
      var e = d, f2 = "" + a;
      if (null !== b && null !== b.ref && "function" === typeof b.ref && b.ref._stringRef === f2)
        return b.ref;
      b = function(a2) {
        var b2 = e.refs;
        b2 === jh && (b2 = e.refs = {});
        null === a2 ? delete b2[f2] : b2[f2] = a2;
      };
      b._stringRef = f2;
      return b;
    }
    if ("string" !== typeof a)
      throw Error(p$4(284));
    if (!c._owner)
      throw Error(p$4(290, a));
  }
  return a;
}
function th(a, b) {
  a = Object.prototype.toString.call(b);
  throw Error(p$4(31, "[object Object]" === a ? "object with keys {" + Object.keys(b).join(", ") + "}" : a));
}
function uh(a) {
  var b = a._init;
  return b(a._payload);
}
function vh(a) {
  function b(b2, c2) {
    if (a) {
      var d2 = b2.deletions;
      null === d2 ? (b2.deletions = [c2], b2.flags |= 16) : d2.push(c2);
    }
  }
  function c(c2, d2) {
    if (!a)
      return null;
    for (; null !== d2; )
      b(c2, d2), d2 = d2.sibling;
    return null;
  }
  function d(a2, b2) {
    for (a2 = /* @__PURE__ */ new Map(); null !== b2; )
      null !== b2.key ? a2.set(b2.key, b2) : a2.set(b2.index, b2), b2 = b2.sibling;
    return a2;
  }
  function e(a2, b2) {
    a2 = wh(a2, b2);
    a2.index = 0;
    a2.sibling = null;
    return a2;
  }
  function f2(b2, c2, d2) {
    b2.index = d2;
    if (!a)
      return b2.flags |= 1048576, c2;
    d2 = b2.alternate;
    if (null !== d2)
      return d2 = d2.index, d2 < c2 ? (b2.flags |= 2, c2) : d2;
    b2.flags |= 2;
    return c2;
  }
  function g2(b2) {
    a && null === b2.alternate && (b2.flags |= 2);
    return b2;
  }
  function h(a2, b2, c2, d2) {
    if (null === b2 || 6 !== b2.tag)
      return b2 = xh(c2, a2.mode, d2), b2.return = a2, b2;
    b2 = e(b2, c2);
    b2.return = a2;
    return b2;
  }
  function k2(a2, b2, c2, d2) {
    var f3 = c2.type;
    if (f3 === ya$2)
      return m2(a2, b2, c2.props.children, d2, c2.key);
    if (null !== b2 && (b2.elementType === f3 || "object" === typeof f3 && null !== f3 && f3.$$typeof === Ha$2 && uh(f3) === b2.type))
      return d2 = e(b2, c2.props), d2.ref = sh(a2, b2, c2), d2.return = a2, d2;
    d2 = yh(c2.type, c2.key, c2.props, null, a2.mode, d2);
    d2.ref = sh(a2, b2, c2);
    d2.return = a2;
    return d2;
  }
  function l2(a2, b2, c2, d2) {
    if (null === b2 || 4 !== b2.tag || b2.stateNode.containerInfo !== c2.containerInfo || b2.stateNode.implementation !== c2.implementation)
      return b2 = zh(c2, a2.mode, d2), b2.return = a2, b2;
    b2 = e(b2, c2.children || []);
    b2.return = a2;
    return b2;
  }
  function m2(a2, b2, c2, d2, f3) {
    if (null === b2 || 7 !== b2.tag)
      return b2 = Ah(c2, a2.mode, d2, f3), b2.return = a2, b2;
    b2 = e(b2, c2);
    b2.return = a2;
    return b2;
  }
  function q2(a2, b2, c2) {
    if ("string" === typeof b2 && "" !== b2 || "number" === typeof b2)
      return b2 = xh("" + b2, a2.mode, c2), b2.return = a2, b2;
    if ("object" === typeof b2 && null !== b2) {
      switch (b2.$$typeof) {
        case va$2:
          return c2 = yh(b2.type, b2.key, b2.props, null, a2.mode, c2), c2.ref = sh(a2, null, b2), c2.return = a2, c2;
        case wa$2:
          return b2 = zh(b2, a2.mode, c2), b2.return = a2, b2;
        case Ha$2:
          var d2 = b2._init;
          return q2(a2, d2(b2._payload), c2);
      }
      if (eb$2(b2) || Ka$2(b2))
        return b2 = Ah(b2, a2.mode, c2, null), b2.return = a2, b2;
      th(a2, b2);
    }
    return null;
  }
  function r2(a2, b2, c2, d2) {
    var e2 = null !== b2 ? b2.key : null;
    if ("string" === typeof c2 && "" !== c2 || "number" === typeof c2)
      return null !== e2 ? null : h(a2, b2, "" + c2, d2);
    if ("object" === typeof c2 && null !== c2) {
      switch (c2.$$typeof) {
        case va$2:
          return c2.key === e2 ? k2(a2, b2, c2, d2) : null;
        case wa$2:
          return c2.key === e2 ? l2(a2, b2, c2, d2) : null;
        case Ha$2:
          return e2 = c2._init, r2(
            a2,
            b2,
            e2(c2._payload),
            d2
          );
      }
      if (eb$2(c2) || Ka$2(c2))
        return null !== e2 ? null : m2(a2, b2, c2, d2, null);
      th(a2, c2);
    }
    return null;
  }
  function y2(a2, b2, c2, d2, e2) {
    if ("string" === typeof d2 && "" !== d2 || "number" === typeof d2)
      return a2 = a2.get(c2) || null, h(b2, a2, "" + d2, e2);
    if ("object" === typeof d2 && null !== d2) {
      switch (d2.$$typeof) {
        case va$2:
          return a2 = a2.get(null === d2.key ? c2 : d2.key) || null, k2(b2, a2, d2, e2);
        case wa$2:
          return a2 = a2.get(null === d2.key ? c2 : d2.key) || null, l2(b2, a2, d2, e2);
        case Ha$2:
          var f3 = d2._init;
          return y2(a2, b2, c2, f3(d2._payload), e2);
      }
      if (eb$2(d2) || Ka$2(d2))
        return a2 = a2.get(c2) || null, m2(b2, a2, d2, e2, null);
      th(b2, d2);
    }
    return null;
  }
  function n2(e2, g3, h2, k3) {
    for (var l3 = null, m3 = null, u2 = g3, w2 = g3 = 0, x2 = null; null !== u2 && w2 < h2.length; w2++) {
      u2.index > w2 ? (x2 = u2, u2 = null) : x2 = u2.sibling;
      var n3 = r2(e2, u2, h2[w2], k3);
      if (null === n3) {
        null === u2 && (u2 = x2);
        break;
      }
      a && u2 && null === n3.alternate && b(e2, u2);
      g3 = f2(n3, g3, w2);
      null === m3 ? l3 = n3 : m3.sibling = n3;
      m3 = n3;
      u2 = x2;
    }
    if (w2 === h2.length)
      return c(e2, u2), I$3 && tg(e2, w2), l3;
    if (null === u2) {
      for (; w2 < h2.length; w2++)
        u2 = q2(e2, h2[w2], k3), null !== u2 && (g3 = f2(u2, g3, w2), null === m3 ? l3 = u2 : m3.sibling = u2, m3 = u2);
      I$3 && tg(e2, w2);
      return l3;
    }
    for (u2 = d(e2, u2); w2 < h2.length; w2++)
      x2 = y2(u2, e2, w2, h2[w2], k3), null !== x2 && (a && null !== x2.alternate && u2.delete(null === x2.key ? w2 : x2.key), g3 = f2(x2, g3, w2), null === m3 ? l3 = x2 : m3.sibling = x2, m3 = x2);
    a && u2.forEach(function(a2) {
      return b(e2, a2);
    });
    I$3 && tg(e2, w2);
    return l3;
  }
  function t2(e2, g3, h2, k3) {
    var l3 = Ka$2(h2);
    if ("function" !== typeof l3)
      throw Error(p$4(150));
    h2 = l3.call(h2);
    if (null == h2)
      throw Error(p$4(151));
    for (var u2 = l3 = null, m3 = g3, w2 = g3 = 0, x2 = null, n3 = h2.next(); null !== m3 && !n3.done; w2++, n3 = h2.next()) {
      m3.index > w2 ? (x2 = m3, m3 = null) : x2 = m3.sibling;
      var t3 = r2(e2, m3, n3.value, k3);
      if (null === t3) {
        null === m3 && (m3 = x2);
        break;
      }
      a && m3 && null === t3.alternate && b(e2, m3);
      g3 = f2(t3, g3, w2);
      null === u2 ? l3 = t3 : u2.sibling = t3;
      u2 = t3;
      m3 = x2;
    }
    if (n3.done)
      return c(
        e2,
        m3
      ), I$3 && tg(e2, w2), l3;
    if (null === m3) {
      for (; !n3.done; w2++, n3 = h2.next())
        n3 = q2(e2, n3.value, k3), null !== n3 && (g3 = f2(n3, g3, w2), null === u2 ? l3 = n3 : u2.sibling = n3, u2 = n3);
      I$3 && tg(e2, w2);
      return l3;
    }
    for (m3 = d(e2, m3); !n3.done; w2++, n3 = h2.next())
      n3 = y2(m3, e2, w2, n3.value, k3), null !== n3 && (a && null !== n3.alternate && m3.delete(null === n3.key ? w2 : n3.key), g3 = f2(n3, g3, w2), null === u2 ? l3 = n3 : u2.sibling = n3, u2 = n3);
    a && m3.forEach(function(a2) {
      return b(e2, a2);
    });
    I$3 && tg(e2, w2);
    return l3;
  }
  function J2(a2, d2, f3, h2) {
    "object" === typeof f3 && null !== f3 && f3.type === ya$2 && null === f3.key && (f3 = f3.props.children);
    if ("object" === typeof f3 && null !== f3) {
      switch (f3.$$typeof) {
        case va$2:
          a: {
            for (var k3 = f3.key, l3 = d2; null !== l3; ) {
              if (l3.key === k3) {
                k3 = f3.type;
                if (k3 === ya$2) {
                  if (7 === l3.tag) {
                    c(a2, l3.sibling);
                    d2 = e(l3, f3.props.children);
                    d2.return = a2;
                    a2 = d2;
                    break a;
                  }
                } else if (l3.elementType === k3 || "object" === typeof k3 && null !== k3 && k3.$$typeof === Ha$2 && uh(k3) === l3.type) {
                  c(a2, l3.sibling);
                  d2 = e(l3, f3.props);
                  d2.ref = sh(a2, l3, f3);
                  d2.return = a2;
                  a2 = d2;
                  break a;
                }
                c(a2, l3);
                break;
              } else
                b(a2, l3);
              l3 = l3.sibling;
            }
            f3.type === ya$2 ? (d2 = Ah(f3.props.children, a2.mode, h2, f3.key), d2.return = a2, a2 = d2) : (h2 = yh(f3.type, f3.key, f3.props, null, a2.mode, h2), h2.ref = sh(a2, d2, f3), h2.return = a2, a2 = h2);
          }
          return g2(a2);
        case wa$2:
          a: {
            for (l3 = f3.key; null !== d2; ) {
              if (d2.key === l3)
                if (4 === d2.tag && d2.stateNode.containerInfo === f3.containerInfo && d2.stateNode.implementation === f3.implementation) {
                  c(a2, d2.sibling);
                  d2 = e(d2, f3.children || []);
                  d2.return = a2;
                  a2 = d2;
                  break a;
                } else {
                  c(a2, d2);
                  break;
                }
              else
                b(a2, d2);
              d2 = d2.sibling;
            }
            d2 = zh(f3, a2.mode, h2);
            d2.return = a2;
            a2 = d2;
          }
          return g2(a2);
        case Ha$2:
          return l3 = f3._init, J2(a2, d2, l3(f3._payload), h2);
      }
      if (eb$2(f3))
        return n2(a2, d2, f3, h2);
      if (Ka$2(f3))
        return t2(a2, d2, f3, h2);
      th(a2, f3);
    }
    return "string" === typeof f3 && "" !== f3 || "number" === typeof f3 ? (f3 = "" + f3, null !== d2 && 6 === d2.tag ? (c(a2, d2.sibling), d2 = e(d2, f3), d2.return = a2, a2 = d2) : (c(a2, d2), d2 = xh(f3, a2.mode, h2), d2.return = a2, a2 = d2), g2(a2)) : c(a2, d2);
  }
  return J2;
}
var Bh = vh(true), Ch = vh(false), Dh = {}, Eh = Uf(Dh), Fh = Uf(Dh), Gh = Uf(Dh);
function Hh(a) {
  if (a === Dh)
    throw Error(p$4(174));
  return a;
}
function Ih(a, b) {
  G$2(Gh, b);
  G$2(Fh, a);
  G$2(Eh, Dh);
  a = b.nodeType;
  switch (a) {
    case 9:
    case 11:
      b = (b = b.documentElement) ? b.namespaceURI : lb$2(null, "");
      break;
    default:
      a = 8 === a ? b.parentNode : b, b = a.namespaceURI || null, a = a.tagName, b = lb$2(b, a);
  }
  E$3(Eh);
  G$2(Eh, b);
}
function Jh() {
  E$3(Eh);
  E$3(Fh);
  E$3(Gh);
}
function Kh(a) {
  Hh(Gh.current);
  var b = Hh(Eh.current);
  var c = lb$2(b, a.type);
  b !== c && (G$2(Fh, a), G$2(Eh, c));
}
function Lh(a) {
  Fh.current === a && (E$3(Eh), E$3(Fh));
}
var M$3 = Uf(0);
function Mh(a) {
  for (var b = a; null !== b; ) {
    if (13 === b.tag) {
      var c = b.memoizedState;
      if (null !== c && (c = c.dehydrated, null === c || "$?" === c.data || "$!" === c.data))
        return b;
    } else if (19 === b.tag && void 0 !== b.memoizedProps.revealOrder) {
      if (0 !== (b.flags & 128))
        return b;
    } else if (null !== b.child) {
      b.child.return = b;
      b = b.child;
      continue;
    }
    if (b === a)
      break;
    for (; null === b.sibling; ) {
      if (null === b.return || b.return === a)
        return null;
      b = b.return;
    }
    b.sibling.return = b.return;
    b = b.sibling;
  }
  return null;
}
var Nh = [];
function Oh() {
  for (var a = 0; a < Nh.length; a++)
    Nh[a]._workInProgressVersionPrimary = null;
  Nh.length = 0;
}
var Ph = ua$2.ReactCurrentDispatcher, Qh = ua$2.ReactCurrentBatchConfig, Rh = 0, N$3 = null, O$3 = null, P$3 = null, Sh = false, Th = false, Uh = 0, Vh = 0;
function Q$3() {
  throw Error(p$4(321));
}
function Wh(a, b) {
  if (null === b)
    return false;
  for (var c = 0; c < b.length && c < a.length; c++)
    if (!He(a[c], b[c]))
      return false;
  return true;
}
function Xh(a, b, c, d, e, f2) {
  Rh = f2;
  N$3 = b;
  b.memoizedState = null;
  b.updateQueue = null;
  b.lanes = 0;
  Ph.current = null === a || null === a.memoizedState ? Yh : Zh;
  a = c(d, e);
  if (Th) {
    f2 = 0;
    do {
      Th = false;
      Uh = 0;
      if (25 <= f2)
        throw Error(p$4(301));
      f2 += 1;
      P$3 = O$3 = null;
      b.updateQueue = null;
      Ph.current = $h;
      a = c(d, e);
    } while (Th);
  }
  Ph.current = ai;
  b = null !== O$3 && null !== O$3.next;
  Rh = 0;
  P$3 = O$3 = N$3 = null;
  Sh = false;
  if (b)
    throw Error(p$4(300));
  return a;
}
function bi() {
  var a = 0 !== Uh;
  Uh = 0;
  return a;
}
function ci() {
  var a = { memoizedState: null, baseState: null, baseQueue: null, queue: null, next: null };
  null === P$3 ? N$3.memoizedState = P$3 = a : P$3 = P$3.next = a;
  return P$3;
}
function di() {
  if (null === O$3) {
    var a = N$3.alternate;
    a = null !== a ? a.memoizedState : null;
  } else
    a = O$3.next;
  var b = null === P$3 ? N$3.memoizedState : P$3.next;
  if (null !== b)
    P$3 = b, O$3 = a;
  else {
    if (null === a)
      throw Error(p$4(310));
    O$3 = a;
    a = { memoizedState: O$3.memoizedState, baseState: O$3.baseState, baseQueue: O$3.baseQueue, queue: O$3.queue, next: null };
    null === P$3 ? N$3.memoizedState = P$3 = a : P$3 = P$3.next = a;
  }
  return P$3;
}
function ei(a, b) {
  return "function" === typeof b ? b(a) : b;
}
function fi(a) {
  var b = di(), c = b.queue;
  if (null === c)
    throw Error(p$4(311));
  c.lastRenderedReducer = a;
  var d = O$3, e = d.baseQueue, f2 = c.pending;
  if (null !== f2) {
    if (null !== e) {
      var g2 = e.next;
      e.next = f2.next;
      f2.next = g2;
    }
    d.baseQueue = e = f2;
    c.pending = null;
  }
  if (null !== e) {
    f2 = e.next;
    d = d.baseState;
    var h = g2 = null, k2 = null, l2 = f2;
    do {
      var m2 = l2.lane;
      if ((Rh & m2) === m2)
        null !== k2 && (k2 = k2.next = { lane: 0, action: l2.action, hasEagerState: l2.hasEagerState, eagerState: l2.eagerState, next: null }), d = l2.hasEagerState ? l2.eagerState : a(d, l2.action);
      else {
        var q2 = {
          lane: m2,
          action: l2.action,
          hasEagerState: l2.hasEagerState,
          eagerState: l2.eagerState,
          next: null
        };
        null === k2 ? (h = k2 = q2, g2 = d) : k2 = k2.next = q2;
        N$3.lanes |= m2;
        hh |= m2;
      }
      l2 = l2.next;
    } while (null !== l2 && l2 !== f2);
    null === k2 ? g2 = d : k2.next = h;
    He(d, b.memoizedState) || (Ug = true);
    b.memoizedState = d;
    b.baseState = g2;
    b.baseQueue = k2;
    c.lastRenderedState = d;
  }
  a = c.interleaved;
  if (null !== a) {
    e = a;
    do
      f2 = e.lane, N$3.lanes |= f2, hh |= f2, e = e.next;
    while (e !== a);
  } else
    null === e && (c.lanes = 0);
  return [b.memoizedState, c.dispatch];
}
function gi(a) {
  var b = di(), c = b.queue;
  if (null === c)
    throw Error(p$4(311));
  c.lastRenderedReducer = a;
  var d = c.dispatch, e = c.pending, f2 = b.memoizedState;
  if (null !== e) {
    c.pending = null;
    var g2 = e = e.next;
    do
      f2 = a(f2, g2.action), g2 = g2.next;
    while (g2 !== e);
    He(f2, b.memoizedState) || (Ug = true);
    b.memoizedState = f2;
    null === b.baseQueue && (b.baseState = f2);
    c.lastRenderedState = f2;
  }
  return [f2, d];
}
function hi() {
}
function ii(a, b) {
  var c = N$3, d = di(), e = b(), f2 = !He(d.memoizedState, e);
  f2 && (d.memoizedState = e, Ug = true);
  d = d.queue;
  ji(ki.bind(null, c, d, a), [a]);
  if (d.getSnapshot !== b || f2 || null !== P$3 && P$3.memoizedState.tag & 1) {
    c.flags |= 2048;
    li(9, mi.bind(null, c, d, e, b), void 0, null);
    if (null === R$3)
      throw Error(p$4(349));
    0 !== (Rh & 30) || ni(c, b, e);
  }
  return e;
}
function ni(a, b, c) {
  a.flags |= 16384;
  a = { getSnapshot: b, value: c };
  b = N$3.updateQueue;
  null === b ? (b = { lastEffect: null, stores: null }, N$3.updateQueue = b, b.stores = [a]) : (c = b.stores, null === c ? b.stores = [a] : c.push(a));
}
function mi(a, b, c, d) {
  b.value = c;
  b.getSnapshot = d;
  oi(b) && pi(a);
}
function ki(a, b, c) {
  return c(function() {
    oi(b) && pi(a);
  });
}
function oi(a) {
  var b = a.getSnapshot;
  a = a.value;
  try {
    var c = b();
    return !He(a, c);
  } catch (d) {
    return true;
  }
}
function pi(a) {
  var b = Zg(a, 1);
  null !== b && mh(b, a, 1, -1);
}
function qi(a) {
  var b = ci();
  "function" === typeof a && (a = a());
  b.memoizedState = b.baseState = a;
  a = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: ei, lastRenderedState: a };
  b.queue = a;
  a = a.dispatch = ri.bind(null, N$3, a);
  return [b.memoizedState, a];
}
function li(a, b, c, d) {
  a = { tag: a, create: b, destroy: c, deps: d, next: null };
  b = N$3.updateQueue;
  null === b ? (b = { lastEffect: null, stores: null }, N$3.updateQueue = b, b.lastEffect = a.next = a) : (c = b.lastEffect, null === c ? b.lastEffect = a.next = a : (d = c.next, c.next = a, a.next = d, b.lastEffect = a));
  return a;
}
function si() {
  return di().memoizedState;
}
function ti(a, b, c, d) {
  var e = ci();
  N$3.flags |= a;
  e.memoizedState = li(1 | b, c, void 0, void 0 === d ? null : d);
}
function ui(a, b, c, d) {
  var e = di();
  d = void 0 === d ? null : d;
  var f2 = void 0;
  if (null !== O$3) {
    var g2 = O$3.memoizedState;
    f2 = g2.destroy;
    if (null !== d && Wh(d, g2.deps)) {
      e.memoizedState = li(b, c, f2, d);
      return;
    }
  }
  N$3.flags |= a;
  e.memoizedState = li(1 | b, c, f2, d);
}
function vi(a, b) {
  return ti(8390656, 8, a, b);
}
function ji(a, b) {
  return ui(2048, 8, a, b);
}
function wi(a, b) {
  return ui(4, 2, a, b);
}
function xi(a, b) {
  return ui(4, 4, a, b);
}
function yi(a, b) {
  if ("function" === typeof b)
    return a = a(), b(a), function() {
      b(null);
    };
  if (null !== b && void 0 !== b)
    return a = a(), b.current = a, function() {
      b.current = null;
    };
}
function zi(a, b, c) {
  c = null !== c && void 0 !== c ? c.concat([a]) : null;
  return ui(4, 4, yi.bind(null, b, a), c);
}
function Ai() {
}
function Bi(a, b) {
  var c = di();
  b = void 0 === b ? null : b;
  var d = c.memoizedState;
  if (null !== d && null !== b && Wh(b, d[1]))
    return d[0];
  c.memoizedState = [a, b];
  return a;
}
function Ci(a, b) {
  var c = di();
  b = void 0 === b ? null : b;
  var d = c.memoizedState;
  if (null !== d && null !== b && Wh(b, d[1]))
    return d[0];
  a = a();
  c.memoizedState = [a, b];
  return a;
}
function Di(a, b, c) {
  if (0 === (Rh & 21))
    return a.baseState && (a.baseState = false, Ug = true), a.memoizedState = c;
  He(c, b) || (c = yc$1(), N$3.lanes |= c, hh |= c, a.baseState = true);
  return b;
}
function Ei(a, b) {
  var c = C$2;
  C$2 = 0 !== c && 4 > c ? c : 4;
  a(true);
  var d = Qh.transition;
  Qh.transition = {};
  try {
    a(false), b();
  } finally {
    C$2 = c, Qh.transition = d;
  }
}
function Fi() {
  return di().memoizedState;
}
function Gi(a, b, c) {
  var d = lh(a);
  c = { lane: d, action: c, hasEagerState: false, eagerState: null, next: null };
  if (Hi(a))
    Ii(b, c);
  else if (c = Yg(a, b, c, d), null !== c) {
    var e = L$3();
    mh(c, a, d, e);
    Ji(c, b, d);
  }
}
function ri(a, b, c) {
  var d = lh(a), e = { lane: d, action: c, hasEagerState: false, eagerState: null, next: null };
  if (Hi(a))
    Ii(b, e);
  else {
    var f2 = a.alternate;
    if (0 === a.lanes && (null === f2 || 0 === f2.lanes) && (f2 = b.lastRenderedReducer, null !== f2))
      try {
        var g2 = b.lastRenderedState, h = f2(g2, c);
        e.hasEagerState = true;
        e.eagerState = h;
        if (He(h, g2)) {
          var k2 = b.interleaved;
          null === k2 ? (e.next = e, Xg(b)) : (e.next = k2.next, k2.next = e);
          b.interleaved = e;
          return;
        }
      } catch (l2) {
      } finally {
      }
    c = Yg(a, b, e, d);
    null !== c && (e = L$3(), mh(c, a, d, e), Ji(c, b, d));
  }
}
function Hi(a) {
  var b = a.alternate;
  return a === N$3 || null !== b && b === N$3;
}
function Ii(a, b) {
  Th = Sh = true;
  var c = a.pending;
  null === c ? b.next = b : (b.next = c.next, c.next = b);
  a.pending = b;
}
function Ji(a, b, c) {
  if (0 !== (c & 4194240)) {
    var d = b.lanes;
    d &= a.pendingLanes;
    c |= d;
    b.lanes = c;
    Cc$1(a, c);
  }
}
var ai = { readContext: Vg, useCallback: Q$3, useContext: Q$3, useEffect: Q$3, useImperativeHandle: Q$3, useInsertionEffect: Q$3, useLayoutEffect: Q$3, useMemo: Q$3, useReducer: Q$3, useRef: Q$3, useState: Q$3, useDebugValue: Q$3, useDeferredValue: Q$3, useTransition: Q$3, useMutableSource: Q$3, useSyncExternalStore: Q$3, useId: Q$3, unstable_isNewReconciler: false }, Yh = { readContext: Vg, useCallback: function(a, b) {
  ci().memoizedState = [a, void 0 === b ? null : b];
  return a;
}, useContext: Vg, useEffect: vi, useImperativeHandle: function(a, b, c) {
  c = null !== c && void 0 !== c ? c.concat([a]) : null;
  return ti(
    4194308,
    4,
    yi.bind(null, b, a),
    c
  );
}, useLayoutEffect: function(a, b) {
  return ti(4194308, 4, a, b);
}, useInsertionEffect: function(a, b) {
  return ti(4, 2, a, b);
}, useMemo: function(a, b) {
  var c = ci();
  b = void 0 === b ? null : b;
  a = a();
  c.memoizedState = [a, b];
  return a;
}, useReducer: function(a, b, c) {
  var d = ci();
  b = void 0 !== c ? c(b) : b;
  d.memoizedState = d.baseState = b;
  a = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: a, lastRenderedState: b };
  d.queue = a;
  a = a.dispatch = Gi.bind(null, N$3, a);
  return [d.memoizedState, a];
}, useRef: function(a) {
  var b = ci();
  a = { current: a };
  return b.memoizedState = a;
}, useState: qi, useDebugValue: Ai, useDeferredValue: function(a) {
  return ci().memoizedState = a;
}, useTransition: function() {
  var a = qi(false), b = a[0];
  a = Ei.bind(null, a[1]);
  ci().memoizedState = a;
  return [b, a];
}, useMutableSource: function() {
}, useSyncExternalStore: function(a, b, c) {
  var d = N$3, e = ci();
  if (I$3) {
    if (void 0 === c)
      throw Error(p$4(407));
    c = c();
  } else {
    c = b();
    if (null === R$3)
      throw Error(p$4(349));
    0 !== (Rh & 30) || ni(d, b, c);
  }
  e.memoizedState = c;
  var f2 = { value: c, getSnapshot: b };
  e.queue = f2;
  vi(ki.bind(
    null,
    d,
    f2,
    a
  ), [a]);
  d.flags |= 2048;
  li(9, mi.bind(null, d, f2, c, b), void 0, null);
  return c;
}, useId: function() {
  var a = ci(), b = R$3.identifierPrefix;
  if (I$3) {
    var c = sg;
    var d = rg;
    c = (d & ~(1 << 32 - oc$1(d) - 1)).toString(32) + c;
    b = ":" + b + "R" + c;
    c = Uh++;
    0 < c && (b += "H" + c.toString(32));
    b += ":";
  } else
    c = Vh++, b = ":" + b + "r" + c.toString(32) + ":";
  return a.memoizedState = b;
}, unstable_isNewReconciler: false }, Zh = {
  readContext: Vg,
  useCallback: Bi,
  useContext: Vg,
  useEffect: ji,
  useImperativeHandle: zi,
  useInsertionEffect: wi,
  useLayoutEffect: xi,
  useMemo: Ci,
  useReducer: fi,
  useRef: si,
  useState: function() {
    return fi(ei);
  },
  useDebugValue: Ai,
  useDeferredValue: function(a) {
    var b = di();
    return Di(b, O$3.memoizedState, a);
  },
  useTransition: function() {
    var a = fi(ei)[0], b = di().memoizedState;
    return [a, b];
  },
  useMutableSource: hi,
  useSyncExternalStore: ii,
  useId: Fi,
  unstable_isNewReconciler: false
}, $h = { readContext: Vg, useCallback: Bi, useContext: Vg, useEffect: ji, useImperativeHandle: zi, useInsertionEffect: wi, useLayoutEffect: xi, useMemo: Ci, useReducer: gi, useRef: si, useState: function() {
  return gi(ei);
}, useDebugValue: Ai, useDeferredValue: function(a) {
  var b = di();
  return null === O$3 ? b.memoizedState = a : Di(b, O$3.memoizedState, a);
}, useTransition: function() {
  var a = gi(ei)[0], b = di().memoizedState;
  return [a, b];
}, useMutableSource: hi, useSyncExternalStore: ii, useId: Fi, unstable_isNewReconciler: false };
function Ki(a, b) {
  try {
    var c = "", d = b;
    do
      c += Pa$2(d), d = d.return;
    while (d);
    var e = c;
  } catch (f2) {
    e = "\nError generating stack: " + f2.message + "\n" + f2.stack;
  }
  return { value: a, source: b, stack: e, digest: null };
}
function Li(a, b, c) {
  return { value: a, source: null, stack: null != c ? c : null, digest: null != b ? b : null };
}
function Mi(a, b) {
  try {
    console.error(b.value);
  } catch (c) {
    setTimeout(function() {
      throw c;
    });
  }
}
var Ni = "function" === typeof WeakMap ? WeakMap : Map;
function Oi(a, b, c) {
  c = ch(-1, c);
  c.tag = 3;
  c.payload = { element: null };
  var d = b.value;
  c.callback = function() {
    Pi || (Pi = true, Qi = d);
    Mi(a, b);
  };
  return c;
}
function Ri(a, b, c) {
  c = ch(-1, c);
  c.tag = 3;
  var d = a.type.getDerivedStateFromError;
  if ("function" === typeof d) {
    var e = b.value;
    c.payload = function() {
      return d(e);
    };
    c.callback = function() {
      Mi(a, b);
    };
  }
  var f2 = a.stateNode;
  null !== f2 && "function" === typeof f2.componentDidCatch && (c.callback = function() {
    Mi(a, b);
    "function" !== typeof d && (null === Si ? Si = /* @__PURE__ */ new Set([this]) : Si.add(this));
    var c2 = b.stack;
    this.componentDidCatch(b.value, { componentStack: null !== c2 ? c2 : "" });
  });
  return c;
}
function Ti(a, b, c) {
  var d = a.pingCache;
  if (null === d) {
    d = a.pingCache = new Ni();
    var e = /* @__PURE__ */ new Set();
    d.set(b, e);
  } else
    e = d.get(b), void 0 === e && (e = /* @__PURE__ */ new Set(), d.set(b, e));
  e.has(c) || (e.add(c), a = Ui.bind(null, a, b, c), b.then(a, a));
}
function Vi(a) {
  do {
    var b;
    if (b = 13 === a.tag)
      b = a.memoizedState, b = null !== b ? null !== b.dehydrated ? true : false : true;
    if (b)
      return a;
    a = a.return;
  } while (null !== a);
  return null;
}
function Wi(a, b, c, d, e) {
  if (0 === (a.mode & 1))
    return a === b ? a.flags |= 65536 : (a.flags |= 128, c.flags |= 131072, c.flags &= -52805, 1 === c.tag && (null === c.alternate ? c.tag = 17 : (b = ch(-1, 1), b.tag = 2, dh(c, b, 1))), c.lanes |= 1), a;
  a.flags |= 65536;
  a.lanes = e;
  return a;
}
var Xi = ua$2.ReactCurrentOwner, Ug = false;
function Yi(a, b, c, d) {
  b.child = null === a ? Ch(b, null, c, d) : Bh(b, a.child, c, d);
}
function Zi(a, b, c, d, e) {
  c = c.render;
  var f2 = b.ref;
  Tg(b, e);
  d = Xh(a, b, c, d, f2, e);
  c = bi();
  if (null !== a && !Ug)
    return b.updateQueue = a.updateQueue, b.flags &= -2053, a.lanes &= ~e, $i(a, b, e);
  I$3 && c && vg(b);
  b.flags |= 1;
  Yi(a, b, d, e);
  return b.child;
}
function aj(a, b, c, d, e) {
  if (null === a) {
    var f2 = c.type;
    if ("function" === typeof f2 && !bj(f2) && void 0 === f2.defaultProps && null === c.compare && void 0 === c.defaultProps)
      return b.tag = 15, b.type = f2, cj(a, b, f2, d, e);
    a = yh(c.type, null, d, b, b.mode, e);
    a.ref = b.ref;
    a.return = b;
    return b.child = a;
  }
  f2 = a.child;
  if (0 === (a.lanes & e)) {
    var g2 = f2.memoizedProps;
    c = c.compare;
    c = null !== c ? c : Ie;
    if (c(g2, d) && a.ref === b.ref)
      return $i(a, b, e);
  }
  b.flags |= 1;
  a = wh(f2, d);
  a.ref = b.ref;
  a.return = b;
  return b.child = a;
}
function cj(a, b, c, d, e) {
  if (null !== a) {
    var f2 = a.memoizedProps;
    if (Ie(f2, d) && a.ref === b.ref)
      if (Ug = false, b.pendingProps = d = f2, 0 !== (a.lanes & e))
        0 !== (a.flags & 131072) && (Ug = true);
      else
        return b.lanes = a.lanes, $i(a, b, e);
  }
  return dj(a, b, c, d, e);
}
function ej(a, b, c) {
  var d = b.pendingProps, e = d.children, f2 = null !== a ? a.memoizedState : null;
  if ("hidden" === d.mode)
    if (0 === (b.mode & 1))
      b.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }, G$2(fj, gj), gj |= c;
    else {
      if (0 === (c & 1073741824))
        return a = null !== f2 ? f2.baseLanes | c : c, b.lanes = b.childLanes = 1073741824, b.memoizedState = { baseLanes: a, cachePool: null, transitions: null }, b.updateQueue = null, G$2(fj, gj), gj |= a, null;
      b.memoizedState = { baseLanes: 0, cachePool: null, transitions: null };
      d = null !== f2 ? f2.baseLanes : c;
      G$2(fj, gj);
      gj |= d;
    }
  else
    null !== f2 ? (d = f2.baseLanes | c, b.memoizedState = null) : d = c, G$2(fj, gj), gj |= d;
  Yi(a, b, e, c);
  return b.child;
}
function hj(a, b) {
  var c = b.ref;
  if (null === a && null !== c || null !== a && a.ref !== c)
    b.flags |= 512, b.flags |= 2097152;
}
function dj(a, b, c, d, e) {
  var f2 = Zf(c) ? Xf : H$3.current;
  f2 = Yf(b, f2);
  Tg(b, e);
  c = Xh(a, b, c, d, f2, e);
  d = bi();
  if (null !== a && !Ug)
    return b.updateQueue = a.updateQueue, b.flags &= -2053, a.lanes &= ~e, $i(a, b, e);
  I$3 && d && vg(b);
  b.flags |= 1;
  Yi(a, b, c, e);
  return b.child;
}
function ij(a, b, c, d, e) {
  if (Zf(c)) {
    var f2 = true;
    cg(b);
  } else
    f2 = false;
  Tg(b, e);
  if (null === b.stateNode)
    jj(a, b), ph(b, c, d), rh(b, c, d, e), d = true;
  else if (null === a) {
    var g2 = b.stateNode, h = b.memoizedProps;
    g2.props = h;
    var k2 = g2.context, l2 = c.contextType;
    "object" === typeof l2 && null !== l2 ? l2 = Vg(l2) : (l2 = Zf(c) ? Xf : H$3.current, l2 = Yf(b, l2));
    var m2 = c.getDerivedStateFromProps, q2 = "function" === typeof m2 || "function" === typeof g2.getSnapshotBeforeUpdate;
    q2 || "function" !== typeof g2.UNSAFE_componentWillReceiveProps && "function" !== typeof g2.componentWillReceiveProps || (h !== d || k2 !== l2) && qh(b, g2, d, l2);
    $g = false;
    var r2 = b.memoizedState;
    g2.state = r2;
    gh(b, d, g2, e);
    k2 = b.memoizedState;
    h !== d || r2 !== k2 || Wf.current || $g ? ("function" === typeof m2 && (kh(b, c, m2, d), k2 = b.memoizedState), (h = $g || oh(b, c, h, d, r2, k2, l2)) ? (q2 || "function" !== typeof g2.UNSAFE_componentWillMount && "function" !== typeof g2.componentWillMount || ("function" === typeof g2.componentWillMount && g2.componentWillMount(), "function" === typeof g2.UNSAFE_componentWillMount && g2.UNSAFE_componentWillMount()), "function" === typeof g2.componentDidMount && (b.flags |= 4194308)) : ("function" === typeof g2.componentDidMount && (b.flags |= 4194308), b.memoizedProps = d, b.memoizedState = k2), g2.props = d, g2.state = k2, g2.context = l2, d = h) : ("function" === typeof g2.componentDidMount && (b.flags |= 4194308), d = false);
  } else {
    g2 = b.stateNode;
    bh(a, b);
    h = b.memoizedProps;
    l2 = b.type === b.elementType ? h : Lg(b.type, h);
    g2.props = l2;
    q2 = b.pendingProps;
    r2 = g2.context;
    k2 = c.contextType;
    "object" === typeof k2 && null !== k2 ? k2 = Vg(k2) : (k2 = Zf(c) ? Xf : H$3.current, k2 = Yf(b, k2));
    var y2 = c.getDerivedStateFromProps;
    (m2 = "function" === typeof y2 || "function" === typeof g2.getSnapshotBeforeUpdate) || "function" !== typeof g2.UNSAFE_componentWillReceiveProps && "function" !== typeof g2.componentWillReceiveProps || (h !== q2 || r2 !== k2) && qh(b, g2, d, k2);
    $g = false;
    r2 = b.memoizedState;
    g2.state = r2;
    gh(b, d, g2, e);
    var n2 = b.memoizedState;
    h !== q2 || r2 !== n2 || Wf.current || $g ? ("function" === typeof y2 && (kh(b, c, y2, d), n2 = b.memoizedState), (l2 = $g || oh(b, c, l2, d, r2, n2, k2) || false) ? (m2 || "function" !== typeof g2.UNSAFE_componentWillUpdate && "function" !== typeof g2.componentWillUpdate || ("function" === typeof g2.componentWillUpdate && g2.componentWillUpdate(d, n2, k2), "function" === typeof g2.UNSAFE_componentWillUpdate && g2.UNSAFE_componentWillUpdate(d, n2, k2)), "function" === typeof g2.componentDidUpdate && (b.flags |= 4), "function" === typeof g2.getSnapshotBeforeUpdate && (b.flags |= 1024)) : ("function" !== typeof g2.componentDidUpdate || h === a.memoizedProps && r2 === a.memoizedState || (b.flags |= 4), "function" !== typeof g2.getSnapshotBeforeUpdate || h === a.memoizedProps && r2 === a.memoizedState || (b.flags |= 1024), b.memoizedProps = d, b.memoizedState = n2), g2.props = d, g2.state = n2, g2.context = k2, d = l2) : ("function" !== typeof g2.componentDidUpdate || h === a.memoizedProps && r2 === a.memoizedState || (b.flags |= 4), "function" !== typeof g2.getSnapshotBeforeUpdate || h === a.memoizedProps && r2 === a.memoizedState || (b.flags |= 1024), d = false);
  }
  return kj(a, b, c, d, f2, e);
}
function kj(a, b, c, d, e, f2) {
  hj(a, b);
  var g2 = 0 !== (b.flags & 128);
  if (!d && !g2)
    return e && dg(b, c, false), $i(a, b, f2);
  d = b.stateNode;
  Xi.current = b;
  var h = g2 && "function" !== typeof c.getDerivedStateFromError ? null : d.render();
  b.flags |= 1;
  null !== a && g2 ? (b.child = Bh(b, a.child, null, f2), b.child = Bh(b, null, h, f2)) : Yi(a, b, h, f2);
  b.memoizedState = d.state;
  e && dg(b, c, true);
  return b.child;
}
function lj(a) {
  var b = a.stateNode;
  b.pendingContext ? ag(a, b.pendingContext, b.pendingContext !== b.context) : b.context && ag(a, b.context, false);
  Ih(a, b.containerInfo);
}
function mj(a, b, c, d, e) {
  Ig();
  Jg(e);
  b.flags |= 256;
  Yi(a, b, c, d);
  return b.child;
}
var nj = { dehydrated: null, treeContext: null, retryLane: 0 };
function oj(a) {
  return { baseLanes: a, cachePool: null, transitions: null };
}
function pj(a, b, c) {
  var d = b.pendingProps, e = M$3.current, f2 = false, g2 = 0 !== (b.flags & 128), h;
  (h = g2) || (h = null !== a && null === a.memoizedState ? false : 0 !== (e & 2));
  if (h)
    f2 = true, b.flags &= -129;
  else if (null === a || null !== a.memoizedState)
    e |= 1;
  G$2(M$3, e & 1);
  if (null === a) {
    Eg(b);
    a = b.memoizedState;
    if (null !== a && (a = a.dehydrated, null !== a))
      return 0 === (b.mode & 1) ? b.lanes = 1 : "$!" === a.data ? b.lanes = 8 : b.lanes = 1073741824, null;
    g2 = d.children;
    a = d.fallback;
    return f2 ? (d = b.mode, f2 = b.child, g2 = { mode: "hidden", children: g2 }, 0 === (d & 1) && null !== f2 ? (f2.childLanes = 0, f2.pendingProps = g2) : f2 = qj(g2, d, 0, null), a = Ah(a, d, c, null), f2.return = b, a.return = b, f2.sibling = a, b.child = f2, b.child.memoizedState = oj(c), b.memoizedState = nj, a) : rj(b, g2);
  }
  e = a.memoizedState;
  if (null !== e && (h = e.dehydrated, null !== h))
    return sj(a, b, g2, d, h, e, c);
  if (f2) {
    f2 = d.fallback;
    g2 = b.mode;
    e = a.child;
    h = e.sibling;
    var k2 = { mode: "hidden", children: d.children };
    0 === (g2 & 1) && b.child !== e ? (d = b.child, d.childLanes = 0, d.pendingProps = k2, b.deletions = null) : (d = wh(e, k2), d.subtreeFlags = e.subtreeFlags & 14680064);
    null !== h ? f2 = wh(h, f2) : (f2 = Ah(f2, g2, c, null), f2.flags |= 2);
    f2.return = b;
    d.return = b;
    d.sibling = f2;
    b.child = d;
    d = f2;
    f2 = b.child;
    g2 = a.child.memoizedState;
    g2 = null === g2 ? oj(c) : { baseLanes: g2.baseLanes | c, cachePool: null, transitions: g2.transitions };
    f2.memoizedState = g2;
    f2.childLanes = a.childLanes & ~c;
    b.memoizedState = nj;
    return d;
  }
  f2 = a.child;
  a = f2.sibling;
  d = wh(f2, { mode: "visible", children: d.children });
  0 === (b.mode & 1) && (d.lanes = c);
  d.return = b;
  d.sibling = null;
  null !== a && (c = b.deletions, null === c ? (b.deletions = [a], b.flags |= 16) : c.push(a));
  b.child = d;
  b.memoizedState = null;
  return d;
}
function rj(a, b) {
  b = qj({ mode: "visible", children: b }, a.mode, 0, null);
  b.return = a;
  return a.child = b;
}
function tj(a, b, c, d) {
  null !== d && Jg(d);
  Bh(b, a.child, null, c);
  a = rj(b, b.pendingProps.children);
  a.flags |= 2;
  b.memoizedState = null;
  return a;
}
function sj(a, b, c, d, e, f2, g2) {
  if (c) {
    if (b.flags & 256)
      return b.flags &= -257, d = Li(Error(p$4(422))), tj(a, b, g2, d);
    if (null !== b.memoizedState)
      return b.child = a.child, b.flags |= 128, null;
    f2 = d.fallback;
    e = b.mode;
    d = qj({ mode: "visible", children: d.children }, e, 0, null);
    f2 = Ah(f2, e, g2, null);
    f2.flags |= 2;
    d.return = b;
    f2.return = b;
    d.sibling = f2;
    b.child = d;
    0 !== (b.mode & 1) && Bh(b, a.child, null, g2);
    b.child.memoizedState = oj(g2);
    b.memoizedState = nj;
    return f2;
  }
  if (0 === (b.mode & 1))
    return tj(a, b, g2, null);
  if ("$!" === e.data) {
    d = e.nextSibling && e.nextSibling.dataset;
    if (d)
      var h = d.dgst;
    d = h;
    f2 = Error(p$4(419));
    d = Li(f2, d, void 0);
    return tj(a, b, g2, d);
  }
  h = 0 !== (g2 & a.childLanes);
  if (Ug || h) {
    d = R$3;
    if (null !== d) {
      switch (g2 & -g2) {
        case 4:
          e = 2;
          break;
        case 16:
          e = 8;
          break;
        case 64:
        case 128:
        case 256:
        case 512:
        case 1024:
        case 2048:
        case 4096:
        case 8192:
        case 16384:
        case 32768:
        case 65536:
        case 131072:
        case 262144:
        case 524288:
        case 1048576:
        case 2097152:
        case 4194304:
        case 8388608:
        case 16777216:
        case 33554432:
        case 67108864:
          e = 32;
          break;
        case 536870912:
          e = 268435456;
          break;
        default:
          e = 0;
      }
      e = 0 !== (e & (d.suspendedLanes | g2)) ? 0 : e;
      0 !== e && e !== f2.retryLane && (f2.retryLane = e, Zg(a, e), mh(d, a, e, -1));
    }
    uj();
    d = Li(Error(p$4(421)));
    return tj(a, b, g2, d);
  }
  if ("$?" === e.data)
    return b.flags |= 128, b.child = a.child, b = vj.bind(null, a), e._reactRetry = b, null;
  a = f2.treeContext;
  yg = Lf(e.nextSibling);
  xg = b;
  I$3 = true;
  zg = null;
  null !== a && (og[pg++] = rg, og[pg++] = sg, og[pg++] = qg, rg = a.id, sg = a.overflow, qg = b);
  b = rj(b, d.children);
  b.flags |= 4096;
  return b;
}
function wj(a, b, c) {
  a.lanes |= b;
  var d = a.alternate;
  null !== d && (d.lanes |= b);
  Sg(a.return, b, c);
}
function xj(a, b, c, d, e) {
  var f2 = a.memoizedState;
  null === f2 ? a.memoizedState = { isBackwards: b, rendering: null, renderingStartTime: 0, last: d, tail: c, tailMode: e } : (f2.isBackwards = b, f2.rendering = null, f2.renderingStartTime = 0, f2.last = d, f2.tail = c, f2.tailMode = e);
}
function yj(a, b, c) {
  var d = b.pendingProps, e = d.revealOrder, f2 = d.tail;
  Yi(a, b, d.children, c);
  d = M$3.current;
  if (0 !== (d & 2))
    d = d & 1 | 2, b.flags |= 128;
  else {
    if (null !== a && 0 !== (a.flags & 128))
      a:
        for (a = b.child; null !== a; ) {
          if (13 === a.tag)
            null !== a.memoizedState && wj(a, c, b);
          else if (19 === a.tag)
            wj(a, c, b);
          else if (null !== a.child) {
            a.child.return = a;
            a = a.child;
            continue;
          }
          if (a === b)
            break a;
          for (; null === a.sibling; ) {
            if (null === a.return || a.return === b)
              break a;
            a = a.return;
          }
          a.sibling.return = a.return;
          a = a.sibling;
        }
    d &= 1;
  }
  G$2(M$3, d);
  if (0 === (b.mode & 1))
    b.memoizedState = null;
  else
    switch (e) {
      case "forwards":
        c = b.child;
        for (e = null; null !== c; )
          a = c.alternate, null !== a && null === Mh(a) && (e = c), c = c.sibling;
        c = e;
        null === c ? (e = b.child, b.child = null) : (e = c.sibling, c.sibling = null);
        xj(b, false, e, c, f2);
        break;
      case "backwards":
        c = null;
        e = b.child;
        for (b.child = null; null !== e; ) {
          a = e.alternate;
          if (null !== a && null === Mh(a)) {
            b.child = e;
            break;
          }
          a = e.sibling;
          e.sibling = c;
          c = e;
          e = a;
        }
        xj(b, true, c, null, f2);
        break;
      case "together":
        xj(b, false, null, null, void 0);
        break;
      default:
        b.memoizedState = null;
    }
  return b.child;
}
function jj(a, b) {
  0 === (b.mode & 1) && null !== a && (a.alternate = null, b.alternate = null, b.flags |= 2);
}
function $i(a, b, c) {
  null !== a && (b.dependencies = a.dependencies);
  hh |= b.lanes;
  if (0 === (c & b.childLanes))
    return null;
  if (null !== a && b.child !== a.child)
    throw Error(p$4(153));
  if (null !== b.child) {
    a = b.child;
    c = wh(a, a.pendingProps);
    b.child = c;
    for (c.return = b; null !== a.sibling; )
      a = a.sibling, c = c.sibling = wh(a, a.pendingProps), c.return = b;
    c.sibling = null;
  }
  return b.child;
}
function zj(a, b, c) {
  switch (b.tag) {
    case 3:
      lj(b);
      Ig();
      break;
    case 5:
      Kh(b);
      break;
    case 1:
      Zf(b.type) && cg(b);
      break;
    case 4:
      Ih(b, b.stateNode.containerInfo);
      break;
    case 10:
      var d = b.type._context, e = b.memoizedProps.value;
      G$2(Mg, d._currentValue);
      d._currentValue = e;
      break;
    case 13:
      d = b.memoizedState;
      if (null !== d) {
        if (null !== d.dehydrated)
          return G$2(M$3, M$3.current & 1), b.flags |= 128, null;
        if (0 !== (c & b.child.childLanes))
          return pj(a, b, c);
        G$2(M$3, M$3.current & 1);
        a = $i(a, b, c);
        return null !== a ? a.sibling : null;
      }
      G$2(M$3, M$3.current & 1);
      break;
    case 19:
      d = 0 !== (c & b.childLanes);
      if (0 !== (a.flags & 128)) {
        if (d)
          return yj(a, b, c);
        b.flags |= 128;
      }
      e = b.memoizedState;
      null !== e && (e.rendering = null, e.tail = null, e.lastEffect = null);
      G$2(M$3, M$3.current);
      if (d)
        break;
      else
        return null;
    case 22:
    case 23:
      return b.lanes = 0, ej(a, b, c);
  }
  return $i(a, b, c);
}
var Aj, Bj, Cj, Dj;
Aj = function(a, b) {
  for (var c = b.child; null !== c; ) {
    if (5 === c.tag || 6 === c.tag)
      a.appendChild(c.stateNode);
    else if (4 !== c.tag && null !== c.child) {
      c.child.return = c;
      c = c.child;
      continue;
    }
    if (c === b)
      break;
    for (; null === c.sibling; ) {
      if (null === c.return || c.return === b)
        return;
      c = c.return;
    }
    c.sibling.return = c.return;
    c = c.sibling;
  }
};
Bj = function() {
};
Cj = function(a, b, c, d) {
  var e = a.memoizedProps;
  if (e !== d) {
    a = b.stateNode;
    Hh(Eh.current);
    var f2 = null;
    switch (c) {
      case "input":
        e = Ya$2(a, e);
        d = Ya$2(a, d);
        f2 = [];
        break;
      case "select":
        e = A$2({}, e, { value: void 0 });
        d = A$2({}, d, { value: void 0 });
        f2 = [];
        break;
      case "textarea":
        e = gb$2(a, e);
        d = gb$2(a, d);
        f2 = [];
        break;
      default:
        "function" !== typeof e.onClick && "function" === typeof d.onClick && (a.onclick = Bf);
    }
    ub$2(c, d);
    var g2;
    c = null;
    for (l2 in e)
      if (!d.hasOwnProperty(l2) && e.hasOwnProperty(l2) && null != e[l2])
        if ("style" === l2) {
          var h = e[l2];
          for (g2 in h)
            h.hasOwnProperty(g2) && (c || (c = {}), c[g2] = "");
        } else
          "dangerouslySetInnerHTML" !== l2 && "children" !== l2 && "suppressContentEditableWarning" !== l2 && "suppressHydrationWarning" !== l2 && "autoFocus" !== l2 && (ea$1.hasOwnProperty(l2) ? f2 || (f2 = []) : (f2 = f2 || []).push(l2, null));
    for (l2 in d) {
      var k2 = d[l2];
      h = null != e ? e[l2] : void 0;
      if (d.hasOwnProperty(l2) && k2 !== h && (null != k2 || null != h))
        if ("style" === l2)
          if (h) {
            for (g2 in h)
              !h.hasOwnProperty(g2) || k2 && k2.hasOwnProperty(g2) || (c || (c = {}), c[g2] = "");
            for (g2 in k2)
              k2.hasOwnProperty(g2) && h[g2] !== k2[g2] && (c || (c = {}), c[g2] = k2[g2]);
          } else
            c || (f2 || (f2 = []), f2.push(
              l2,
              c
            )), c = k2;
        else
          "dangerouslySetInnerHTML" === l2 ? (k2 = k2 ? k2.__html : void 0, h = h ? h.__html : void 0, null != k2 && h !== k2 && (f2 = f2 || []).push(l2, k2)) : "children" === l2 ? "string" !== typeof k2 && "number" !== typeof k2 || (f2 = f2 || []).push(l2, "" + k2) : "suppressContentEditableWarning" !== l2 && "suppressHydrationWarning" !== l2 && (ea$1.hasOwnProperty(l2) ? (null != k2 && "onScroll" === l2 && D$2("scroll", a), f2 || h === k2 || (f2 = [])) : (f2 = f2 || []).push(l2, k2));
    }
    c && (f2 = f2 || []).push("style", c);
    var l2 = f2;
    if (b.updateQueue = l2)
      b.flags |= 4;
  }
};
Dj = function(a, b, c, d) {
  c !== d && (b.flags |= 4);
};
function Ej(a, b) {
  if (!I$3)
    switch (a.tailMode) {
      case "hidden":
        b = a.tail;
        for (var c = null; null !== b; )
          null !== b.alternate && (c = b), b = b.sibling;
        null === c ? a.tail = null : c.sibling = null;
        break;
      case "collapsed":
        c = a.tail;
        for (var d = null; null !== c; )
          null !== c.alternate && (d = c), c = c.sibling;
        null === d ? b || null === a.tail ? a.tail = null : a.tail.sibling = null : d.sibling = null;
    }
}
function S$3(a) {
  var b = null !== a.alternate && a.alternate.child === a.child, c = 0, d = 0;
  if (b)
    for (var e = a.child; null !== e; )
      c |= e.lanes | e.childLanes, d |= e.subtreeFlags & 14680064, d |= e.flags & 14680064, e.return = a, e = e.sibling;
  else
    for (e = a.child; null !== e; )
      c |= e.lanes | e.childLanes, d |= e.subtreeFlags, d |= e.flags, e.return = a, e = e.sibling;
  a.subtreeFlags |= d;
  a.childLanes = c;
  return b;
}
function Fj(a, b, c) {
  var d = b.pendingProps;
  wg(b);
  switch (b.tag) {
    case 2:
    case 16:
    case 15:
    case 0:
    case 11:
    case 7:
    case 8:
    case 12:
    case 9:
    case 14:
      return S$3(b), null;
    case 1:
      return Zf(b.type) && $f(), S$3(b), null;
    case 3:
      d = b.stateNode;
      Jh();
      E$3(Wf);
      E$3(H$3);
      Oh();
      d.pendingContext && (d.context = d.pendingContext, d.pendingContext = null);
      if (null === a || null === a.child)
        Gg(b) ? b.flags |= 4 : null === a || a.memoizedState.isDehydrated && 0 === (b.flags & 256) || (b.flags |= 1024, null !== zg && (Gj(zg), zg = null));
      Bj(a, b);
      S$3(b);
      return null;
    case 5:
      Lh(b);
      var e = Hh(Gh.current);
      c = b.type;
      if (null !== a && null != b.stateNode)
        Cj(a, b, c, d, e), a.ref !== b.ref && (b.flags |= 512, b.flags |= 2097152);
      else {
        if (!d) {
          if (null === b.stateNode)
            throw Error(p$4(166));
          S$3(b);
          return null;
        }
        a = Hh(Eh.current);
        if (Gg(b)) {
          d = b.stateNode;
          c = b.type;
          var f2 = b.memoizedProps;
          d[Of] = b;
          d[Pf] = f2;
          a = 0 !== (b.mode & 1);
          switch (c) {
            case "dialog":
              D$2("cancel", d);
              D$2("close", d);
              break;
            case "iframe":
            case "object":
            case "embed":
              D$2("load", d);
              break;
            case "video":
            case "audio":
              for (e = 0; e < lf.length; e++)
                D$2(lf[e], d);
              break;
            case "source":
              D$2("error", d);
              break;
            case "img":
            case "image":
            case "link":
              D$2(
                "error",
                d
              );
              D$2("load", d);
              break;
            case "details":
              D$2("toggle", d);
              break;
            case "input":
              Za$2(d, f2);
              D$2("invalid", d);
              break;
            case "select":
              d._wrapperState = { wasMultiple: !!f2.multiple };
              D$2("invalid", d);
              break;
            case "textarea":
              hb$2(d, f2), D$2("invalid", d);
          }
          ub$2(c, f2);
          e = null;
          for (var g2 in f2)
            if (f2.hasOwnProperty(g2)) {
              var h = f2[g2];
              "children" === g2 ? "string" === typeof h ? d.textContent !== h && (true !== f2.suppressHydrationWarning && Af(d.textContent, h, a), e = ["children", h]) : "number" === typeof h && d.textContent !== "" + h && (true !== f2.suppressHydrationWarning && Af(
                d.textContent,
                h,
                a
              ), e = ["children", "" + h]) : ea$1.hasOwnProperty(g2) && null != h && "onScroll" === g2 && D$2("scroll", d);
            }
          switch (c) {
            case "input":
              Va$2(d);
              db$2(d, f2, true);
              break;
            case "textarea":
              Va$2(d);
              jb$2(d);
              break;
            case "select":
            case "option":
              break;
            default:
              "function" === typeof f2.onClick && (d.onclick = Bf);
          }
          d = e;
          b.updateQueue = d;
          null !== d && (b.flags |= 4);
        } else {
          g2 = 9 === e.nodeType ? e : e.ownerDocument;
          "http://www.w3.org/1999/xhtml" === a && (a = kb$2(c));
          "http://www.w3.org/1999/xhtml" === a ? "script" === c ? (a = g2.createElement("div"), a.innerHTML = "<script><\/script>", a = a.removeChild(a.firstChild)) : "string" === typeof d.is ? a = g2.createElement(c, { is: d.is }) : (a = g2.createElement(c), "select" === c && (g2 = a, d.multiple ? g2.multiple = true : d.size && (g2.size = d.size))) : a = g2.createElementNS(a, c);
          a[Of] = b;
          a[Pf] = d;
          Aj(a, b, false, false);
          b.stateNode = a;
          a: {
            g2 = vb$2(c, d);
            switch (c) {
              case "dialog":
                D$2("cancel", a);
                D$2("close", a);
                e = d;
                break;
              case "iframe":
              case "object":
              case "embed":
                D$2("load", a);
                e = d;
                break;
              case "video":
              case "audio":
                for (e = 0; e < lf.length; e++)
                  D$2(lf[e], a);
                e = d;
                break;
              case "source":
                D$2("error", a);
                e = d;
                break;
              case "img":
              case "image":
              case "link":
                D$2(
                  "error",
                  a
                );
                D$2("load", a);
                e = d;
                break;
              case "details":
                D$2("toggle", a);
                e = d;
                break;
              case "input":
                Za$2(a, d);
                e = Ya$2(a, d);
                D$2("invalid", a);
                break;
              case "option":
                e = d;
                break;
              case "select":
                a._wrapperState = { wasMultiple: !!d.multiple };
                e = A$2({}, d, { value: void 0 });
                D$2("invalid", a);
                break;
              case "textarea":
                hb$2(a, d);
                e = gb$2(a, d);
                D$2("invalid", a);
                break;
              default:
                e = d;
            }
            ub$2(c, e);
            h = e;
            for (f2 in h)
              if (h.hasOwnProperty(f2)) {
                var k2 = h[f2];
                "style" === f2 ? sb$2(a, k2) : "dangerouslySetInnerHTML" === f2 ? (k2 = k2 ? k2.__html : void 0, null != k2 && nb$1(a, k2)) : "children" === f2 ? "string" === typeof k2 ? ("textarea" !== c || "" !== k2) && ob$2(a, k2) : "number" === typeof k2 && ob$2(a, "" + k2) : "suppressContentEditableWarning" !== f2 && "suppressHydrationWarning" !== f2 && "autoFocus" !== f2 && (ea$1.hasOwnProperty(f2) ? null != k2 && "onScroll" === f2 && D$2("scroll", a) : null != k2 && ta$2(a, f2, k2, g2));
              }
            switch (c) {
              case "input":
                Va$2(a);
                db$2(a, d, false);
                break;
              case "textarea":
                Va$2(a);
                jb$2(a);
                break;
              case "option":
                null != d.value && a.setAttribute("value", "" + Sa$2(d.value));
                break;
              case "select":
                a.multiple = !!d.multiple;
                f2 = d.value;
                null != f2 ? fb$2(a, !!d.multiple, f2, false) : null != d.defaultValue && fb$2(
                  a,
                  !!d.multiple,
                  d.defaultValue,
                  true
                );
                break;
              default:
                "function" === typeof e.onClick && (a.onclick = Bf);
            }
            switch (c) {
              case "button":
              case "input":
              case "select":
              case "textarea":
                d = !!d.autoFocus;
                break a;
              case "img":
                d = true;
                break a;
              default:
                d = false;
            }
          }
          d && (b.flags |= 4);
        }
        null !== b.ref && (b.flags |= 512, b.flags |= 2097152);
      }
      S$3(b);
      return null;
    case 6:
      if (a && null != b.stateNode)
        Dj(a, b, a.memoizedProps, d);
      else {
        if ("string" !== typeof d && null === b.stateNode)
          throw Error(p$4(166));
        c = Hh(Gh.current);
        Hh(Eh.current);
        if (Gg(b)) {
          d = b.stateNode;
          c = b.memoizedProps;
          d[Of] = b;
          if (f2 = d.nodeValue !== c) {
            if (a = xg, null !== a)
              switch (a.tag) {
                case 3:
                  Af(d.nodeValue, c, 0 !== (a.mode & 1));
                  break;
                case 5:
                  true !== a.memoizedProps.suppressHydrationWarning && Af(d.nodeValue, c, 0 !== (a.mode & 1));
              }
          }
          f2 && (b.flags |= 4);
        } else
          d = (9 === c.nodeType ? c : c.ownerDocument).createTextNode(d), d[Of] = b, b.stateNode = d;
      }
      S$3(b);
      return null;
    case 13:
      E$3(M$3);
      d = b.memoizedState;
      if (null === a || null !== a.memoizedState && null !== a.memoizedState.dehydrated) {
        if (I$3 && null !== yg && 0 !== (b.mode & 1) && 0 === (b.flags & 128))
          Hg(), Ig(), b.flags |= 98560, f2 = false;
        else if (f2 = Gg(b), null !== d && null !== d.dehydrated) {
          if (null === a) {
            if (!f2)
              throw Error(p$4(318));
            f2 = b.memoizedState;
            f2 = null !== f2 ? f2.dehydrated : null;
            if (!f2)
              throw Error(p$4(317));
            f2[Of] = b;
          } else
            Ig(), 0 === (b.flags & 128) && (b.memoizedState = null), b.flags |= 4;
          S$3(b);
          f2 = false;
        } else
          null !== zg && (Gj(zg), zg = null), f2 = true;
        if (!f2)
          return b.flags & 65536 ? b : null;
      }
      if (0 !== (b.flags & 128))
        return b.lanes = c, b;
      d = null !== d;
      d !== (null !== a && null !== a.memoizedState) && d && (b.child.flags |= 8192, 0 !== (b.mode & 1) && (null === a || 0 !== (M$3.current & 1) ? 0 === T$3 && (T$3 = 3) : uj()));
      null !== b.updateQueue && (b.flags |= 4);
      S$3(b);
      return null;
    case 4:
      return Jh(), Bj(a, b), null === a && sf(b.stateNode.containerInfo), S$3(b), null;
    case 10:
      return Rg(b.type._context), S$3(b), null;
    case 17:
      return Zf(b.type) && $f(), S$3(b), null;
    case 19:
      E$3(M$3);
      f2 = b.memoizedState;
      if (null === f2)
        return S$3(b), null;
      d = 0 !== (b.flags & 128);
      g2 = f2.rendering;
      if (null === g2)
        if (d)
          Ej(f2, false);
        else {
          if (0 !== T$3 || null !== a && 0 !== (a.flags & 128))
            for (a = b.child; null !== a; ) {
              g2 = Mh(a);
              if (null !== g2) {
                b.flags |= 128;
                Ej(f2, false);
                d = g2.updateQueue;
                null !== d && (b.updateQueue = d, b.flags |= 4);
                b.subtreeFlags = 0;
                d = c;
                for (c = b.child; null !== c; )
                  f2 = c, a = d, f2.flags &= 14680066, g2 = f2.alternate, null === g2 ? (f2.childLanes = 0, f2.lanes = a, f2.child = null, f2.subtreeFlags = 0, f2.memoizedProps = null, f2.memoizedState = null, f2.updateQueue = null, f2.dependencies = null, f2.stateNode = null) : (f2.childLanes = g2.childLanes, f2.lanes = g2.lanes, f2.child = g2.child, f2.subtreeFlags = 0, f2.deletions = null, f2.memoizedProps = g2.memoizedProps, f2.memoizedState = g2.memoizedState, f2.updateQueue = g2.updateQueue, f2.type = g2.type, a = g2.dependencies, f2.dependencies = null === a ? null : { lanes: a.lanes, firstContext: a.firstContext }), c = c.sibling;
                G$2(M$3, M$3.current & 1 | 2);
                return b.child;
              }
              a = a.sibling;
            }
          null !== f2.tail && B$3() > Hj && (b.flags |= 128, d = true, Ej(f2, false), b.lanes = 4194304);
        }
      else {
        if (!d)
          if (a = Mh(g2), null !== a) {
            if (b.flags |= 128, d = true, c = a.updateQueue, null !== c && (b.updateQueue = c, b.flags |= 4), Ej(f2, true), null === f2.tail && "hidden" === f2.tailMode && !g2.alternate && !I$3)
              return S$3(b), null;
          } else
            2 * B$3() - f2.renderingStartTime > Hj && 1073741824 !== c && (b.flags |= 128, d = true, Ej(f2, false), b.lanes = 4194304);
        f2.isBackwards ? (g2.sibling = b.child, b.child = g2) : (c = f2.last, null !== c ? c.sibling = g2 : b.child = g2, f2.last = g2);
      }
      if (null !== f2.tail)
        return b = f2.tail, f2.rendering = b, f2.tail = b.sibling, f2.renderingStartTime = B$3(), b.sibling = null, c = M$3.current, G$2(M$3, d ? c & 1 | 2 : c & 1), b;
      S$3(b);
      return null;
    case 22:
    case 23:
      return Ij(), d = null !== b.memoizedState, null !== a && null !== a.memoizedState !== d && (b.flags |= 8192), d && 0 !== (b.mode & 1) ? 0 !== (gj & 1073741824) && (S$3(b), b.subtreeFlags & 6 && (b.flags |= 8192)) : S$3(b), null;
    case 24:
      return null;
    case 25:
      return null;
  }
  throw Error(p$4(156, b.tag));
}
function Jj(a, b) {
  wg(b);
  switch (b.tag) {
    case 1:
      return Zf(b.type) && $f(), a = b.flags, a & 65536 ? (b.flags = a & -65537 | 128, b) : null;
    case 3:
      return Jh(), E$3(Wf), E$3(H$3), Oh(), a = b.flags, 0 !== (a & 65536) && 0 === (a & 128) ? (b.flags = a & -65537 | 128, b) : null;
    case 5:
      return Lh(b), null;
    case 13:
      E$3(M$3);
      a = b.memoizedState;
      if (null !== a && null !== a.dehydrated) {
        if (null === b.alternate)
          throw Error(p$4(340));
        Ig();
      }
      a = b.flags;
      return a & 65536 ? (b.flags = a & -65537 | 128, b) : null;
    case 19:
      return E$3(M$3), null;
    case 4:
      return Jh(), null;
    case 10:
      return Rg(b.type._context), null;
    case 22:
    case 23:
      return Ij(), null;
    case 24:
      return null;
    default:
      return null;
  }
}
var Kj = false, U$2 = false, Lj = "function" === typeof WeakSet ? WeakSet : Set, V$2 = null;
function Mj(a, b) {
  var c = a.ref;
  if (null !== c)
    if ("function" === typeof c)
      try {
        c(null);
      } catch (d) {
        W$2(a, b, d);
      }
    else
      c.current = null;
}
function Nj(a, b, c) {
  try {
    c();
  } catch (d) {
    W$2(a, b, d);
  }
}
var Oj = false;
function Pj(a, b) {
  Cf = dd$1;
  a = Me();
  if (Ne(a)) {
    if ("selectionStart" in a)
      var c = { start: a.selectionStart, end: a.selectionEnd };
    else
      a: {
        c = (c = a.ownerDocument) && c.defaultView || window;
        var d = c.getSelection && c.getSelection();
        if (d && 0 !== d.rangeCount) {
          c = d.anchorNode;
          var e = d.anchorOffset, f2 = d.focusNode;
          d = d.focusOffset;
          try {
            c.nodeType, f2.nodeType;
          } catch (F2) {
            c = null;
            break a;
          }
          var g2 = 0, h = -1, k2 = -1, l2 = 0, m2 = 0, q2 = a, r2 = null;
          b:
            for (; ; ) {
              for (var y2; ; ) {
                q2 !== c || 0 !== e && 3 !== q2.nodeType || (h = g2 + e);
                q2 !== f2 || 0 !== d && 3 !== q2.nodeType || (k2 = g2 + d);
                3 === q2.nodeType && (g2 += q2.nodeValue.length);
                if (null === (y2 = q2.firstChild))
                  break;
                r2 = q2;
                q2 = y2;
              }
              for (; ; ) {
                if (q2 === a)
                  break b;
                r2 === c && ++l2 === e && (h = g2);
                r2 === f2 && ++m2 === d && (k2 = g2);
                if (null !== (y2 = q2.nextSibling))
                  break;
                q2 = r2;
                r2 = q2.parentNode;
              }
              q2 = y2;
            }
          c = -1 === h || -1 === k2 ? null : { start: h, end: k2 };
        } else
          c = null;
      }
    c = c || { start: 0, end: 0 };
  } else
    c = null;
  Df = { focusedElem: a, selectionRange: c };
  dd$1 = false;
  for (V$2 = b; null !== V$2; )
    if (b = V$2, a = b.child, 0 !== (b.subtreeFlags & 1028) && null !== a)
      a.return = b, V$2 = a;
    else
      for (; null !== V$2; ) {
        b = V$2;
        try {
          var n2 = b.alternate;
          if (0 !== (b.flags & 1024))
            switch (b.tag) {
              case 0:
              case 11:
              case 15:
                break;
              case 1:
                if (null !== n2) {
                  var t2 = n2.memoizedProps, J2 = n2.memoizedState, x2 = b.stateNode, w2 = x2.getSnapshotBeforeUpdate(b.elementType === b.type ? t2 : Lg(b.type, t2), J2);
                  x2.__reactInternalSnapshotBeforeUpdate = w2;
                }
                break;
              case 3:
                var u2 = b.stateNode.containerInfo;
                1 === u2.nodeType ? u2.textContent = "" : 9 === u2.nodeType && u2.documentElement && u2.removeChild(u2.documentElement);
                break;
              case 5:
              case 6:
              case 4:
              case 17:
                break;
              default:
                throw Error(p$4(163));
            }
        } catch (F2) {
          W$2(b, b.return, F2);
        }
        a = b.sibling;
        if (null !== a) {
          a.return = b.return;
          V$2 = a;
          break;
        }
        V$2 = b.return;
      }
  n2 = Oj;
  Oj = false;
  return n2;
}
function Qj(a, b, c) {
  var d = b.updateQueue;
  d = null !== d ? d.lastEffect : null;
  if (null !== d) {
    var e = d = d.next;
    do {
      if ((e.tag & a) === a) {
        var f2 = e.destroy;
        e.destroy = void 0;
        void 0 !== f2 && Nj(b, c, f2);
      }
      e = e.next;
    } while (e !== d);
  }
}
function Rj(a, b) {
  b = b.updateQueue;
  b = null !== b ? b.lastEffect : null;
  if (null !== b) {
    var c = b = b.next;
    do {
      if ((c.tag & a) === a) {
        var d = c.create;
        c.destroy = d();
      }
      c = c.next;
    } while (c !== b);
  }
}
function Sj(a) {
  var b = a.ref;
  if (null !== b) {
    var c = a.stateNode;
    switch (a.tag) {
      case 5:
        a = c;
        break;
      default:
        a = c;
    }
    "function" === typeof b ? b(a) : b.current = a;
  }
}
function Tj(a) {
  var b = a.alternate;
  null !== b && (a.alternate = null, Tj(b));
  a.child = null;
  a.deletions = null;
  a.sibling = null;
  5 === a.tag && (b = a.stateNode, null !== b && (delete b[Of], delete b[Pf], delete b[of], delete b[Qf], delete b[Rf]));
  a.stateNode = null;
  a.return = null;
  a.dependencies = null;
  a.memoizedProps = null;
  a.memoizedState = null;
  a.pendingProps = null;
  a.stateNode = null;
  a.updateQueue = null;
}
function Uj(a) {
  return 5 === a.tag || 3 === a.tag || 4 === a.tag;
}
function Vj(a) {
  a:
    for (; ; ) {
      for (; null === a.sibling; ) {
        if (null === a.return || Uj(a.return))
          return null;
        a = a.return;
      }
      a.sibling.return = a.return;
      for (a = a.sibling; 5 !== a.tag && 6 !== a.tag && 18 !== a.tag; ) {
        if (a.flags & 2)
          continue a;
        if (null === a.child || 4 === a.tag)
          continue a;
        else
          a.child.return = a, a = a.child;
      }
      if (!(a.flags & 2))
        return a.stateNode;
    }
}
function Wj(a, b, c) {
  var d = a.tag;
  if (5 === d || 6 === d)
    a = a.stateNode, b ? 8 === c.nodeType ? c.parentNode.insertBefore(a, b) : c.insertBefore(a, b) : (8 === c.nodeType ? (b = c.parentNode, b.insertBefore(a, c)) : (b = c, b.appendChild(a)), c = c._reactRootContainer, null !== c && void 0 !== c || null !== b.onclick || (b.onclick = Bf));
  else if (4 !== d && (a = a.child, null !== a))
    for (Wj(a, b, c), a = a.sibling; null !== a; )
      Wj(a, b, c), a = a.sibling;
}
function Xj(a, b, c) {
  var d = a.tag;
  if (5 === d || 6 === d)
    a = a.stateNode, b ? c.insertBefore(a, b) : c.appendChild(a);
  else if (4 !== d && (a = a.child, null !== a))
    for (Xj(a, b, c), a = a.sibling; null !== a; )
      Xj(a, b, c), a = a.sibling;
}
var X$2 = null, Yj = false;
function Zj(a, b, c) {
  for (c = c.child; null !== c; )
    ak(a, b, c), c = c.sibling;
}
function ak(a, b, c) {
  if (lc$1 && "function" === typeof lc$1.onCommitFiberUnmount)
    try {
      lc$1.onCommitFiberUnmount(kc$1, c);
    } catch (h) {
    }
  switch (c.tag) {
    case 5:
      U$2 || Mj(c, b);
    case 6:
      var d = X$2, e = Yj;
      X$2 = null;
      Zj(a, b, c);
      X$2 = d;
      Yj = e;
      null !== X$2 && (Yj ? (a = X$2, c = c.stateNode, 8 === a.nodeType ? a.parentNode.removeChild(c) : a.removeChild(c)) : X$2.removeChild(c.stateNode));
      break;
    case 18:
      null !== X$2 && (Yj ? (a = X$2, c = c.stateNode, 8 === a.nodeType ? Kf(a.parentNode, c) : 1 === a.nodeType && Kf(a, c), bd$1(a)) : Kf(X$2, c.stateNode));
      break;
    case 4:
      d = X$2;
      e = Yj;
      X$2 = c.stateNode.containerInfo;
      Yj = true;
      Zj(a, b, c);
      X$2 = d;
      Yj = e;
      break;
    case 0:
    case 11:
    case 14:
    case 15:
      if (!U$2 && (d = c.updateQueue, null !== d && (d = d.lastEffect, null !== d))) {
        e = d = d.next;
        do {
          var f2 = e, g2 = f2.destroy;
          f2 = f2.tag;
          void 0 !== g2 && (0 !== (f2 & 2) ? Nj(c, b, g2) : 0 !== (f2 & 4) && Nj(c, b, g2));
          e = e.next;
        } while (e !== d);
      }
      Zj(a, b, c);
      break;
    case 1:
      if (!U$2 && (Mj(c, b), d = c.stateNode, "function" === typeof d.componentWillUnmount))
        try {
          d.props = c.memoizedProps, d.state = c.memoizedState, d.componentWillUnmount();
        } catch (h) {
          W$2(c, b, h);
        }
      Zj(a, b, c);
      break;
    case 21:
      Zj(a, b, c);
      break;
    case 22:
      c.mode & 1 ? (U$2 = (d = U$2) || null !== c.memoizedState, Zj(a, b, c), U$2 = d) : Zj(a, b, c);
      break;
    default:
      Zj(a, b, c);
  }
}
function bk(a) {
  var b = a.updateQueue;
  if (null !== b) {
    a.updateQueue = null;
    var c = a.stateNode;
    null === c && (c = a.stateNode = new Lj());
    b.forEach(function(b2) {
      var d = ck.bind(null, a, b2);
      c.has(b2) || (c.add(b2), b2.then(d, d));
    });
  }
}
function dk(a, b) {
  var c = b.deletions;
  if (null !== c)
    for (var d = 0; d < c.length; d++) {
      var e = c[d];
      try {
        var f2 = a, g2 = b, h = g2;
        a:
          for (; null !== h; ) {
            switch (h.tag) {
              case 5:
                X$2 = h.stateNode;
                Yj = false;
                break a;
              case 3:
                X$2 = h.stateNode.containerInfo;
                Yj = true;
                break a;
              case 4:
                X$2 = h.stateNode.containerInfo;
                Yj = true;
                break a;
            }
            h = h.return;
          }
        if (null === X$2)
          throw Error(p$4(160));
        ak(f2, g2, e);
        X$2 = null;
        Yj = false;
        var k2 = e.alternate;
        null !== k2 && (k2.return = null);
        e.return = null;
      } catch (l2) {
        W$2(e, b, l2);
      }
    }
  if (b.subtreeFlags & 12854)
    for (b = b.child; null !== b; )
      ek(b, a), b = b.sibling;
}
function ek(a, b) {
  var c = a.alternate, d = a.flags;
  switch (a.tag) {
    case 0:
    case 11:
    case 14:
    case 15:
      dk(b, a);
      fk(a);
      if (d & 4) {
        try {
          Qj(3, a, a.return), Rj(3, a);
        } catch (t2) {
          W$2(a, a.return, t2);
        }
        try {
          Qj(5, a, a.return);
        } catch (t2) {
          W$2(a, a.return, t2);
        }
      }
      break;
    case 1:
      dk(b, a);
      fk(a);
      d & 512 && null !== c && Mj(c, c.return);
      break;
    case 5:
      dk(b, a);
      fk(a);
      d & 512 && null !== c && Mj(c, c.return);
      if (a.flags & 32) {
        var e = a.stateNode;
        try {
          ob$2(e, "");
        } catch (t2) {
          W$2(a, a.return, t2);
        }
      }
      if (d & 4 && (e = a.stateNode, null != e)) {
        var f2 = a.memoizedProps, g2 = null !== c ? c.memoizedProps : f2, h = a.type, k2 = a.updateQueue;
        a.updateQueue = null;
        if (null !== k2)
          try {
            "input" === h && "radio" === f2.type && null != f2.name && ab$2(e, f2);
            vb$2(h, g2);
            var l2 = vb$2(h, f2);
            for (g2 = 0; g2 < k2.length; g2 += 2) {
              var m2 = k2[g2], q2 = k2[g2 + 1];
              "style" === m2 ? sb$2(e, q2) : "dangerouslySetInnerHTML" === m2 ? nb$1(e, q2) : "children" === m2 ? ob$2(e, q2) : ta$2(e, m2, q2, l2);
            }
            switch (h) {
              case "input":
                bb$2(e, f2);
                break;
              case "textarea":
                ib$2(e, f2);
                break;
              case "select":
                var r2 = e._wrapperState.wasMultiple;
                e._wrapperState.wasMultiple = !!f2.multiple;
                var y2 = f2.value;
                null != y2 ? fb$2(e, !!f2.multiple, y2, false) : r2 !== !!f2.multiple && (null != f2.defaultValue ? fb$2(
                  e,
                  !!f2.multiple,
                  f2.defaultValue,
                  true
                ) : fb$2(e, !!f2.multiple, f2.multiple ? [] : "", false));
            }
            e[Pf] = f2;
          } catch (t2) {
            W$2(a, a.return, t2);
          }
      }
      break;
    case 6:
      dk(b, a);
      fk(a);
      if (d & 4) {
        if (null === a.stateNode)
          throw Error(p$4(162));
        e = a.stateNode;
        f2 = a.memoizedProps;
        try {
          e.nodeValue = f2;
        } catch (t2) {
          W$2(a, a.return, t2);
        }
      }
      break;
    case 3:
      dk(b, a);
      fk(a);
      if (d & 4 && null !== c && c.memoizedState.isDehydrated)
        try {
          bd$1(b.containerInfo);
        } catch (t2) {
          W$2(a, a.return, t2);
        }
      break;
    case 4:
      dk(b, a);
      fk(a);
      break;
    case 13:
      dk(b, a);
      fk(a);
      e = a.child;
      e.flags & 8192 && (f2 = null !== e.memoizedState, e.stateNode.isHidden = f2, !f2 || null !== e.alternate && null !== e.alternate.memoizedState || (gk = B$3()));
      d & 4 && bk(a);
      break;
    case 22:
      m2 = null !== c && null !== c.memoizedState;
      a.mode & 1 ? (U$2 = (l2 = U$2) || m2, dk(b, a), U$2 = l2) : dk(b, a);
      fk(a);
      if (d & 8192) {
        l2 = null !== a.memoizedState;
        if ((a.stateNode.isHidden = l2) && !m2 && 0 !== (a.mode & 1))
          for (V$2 = a, m2 = a.child; null !== m2; ) {
            for (q2 = V$2 = m2; null !== V$2; ) {
              r2 = V$2;
              y2 = r2.child;
              switch (r2.tag) {
                case 0:
                case 11:
                case 14:
                case 15:
                  Qj(4, r2, r2.return);
                  break;
                case 1:
                  Mj(r2, r2.return);
                  var n2 = r2.stateNode;
                  if ("function" === typeof n2.componentWillUnmount) {
                    d = r2;
                    c = r2.return;
                    try {
                      b = d, n2.props = b.memoizedProps, n2.state = b.memoizedState, n2.componentWillUnmount();
                    } catch (t2) {
                      W$2(d, c, t2);
                    }
                  }
                  break;
                case 5:
                  Mj(r2, r2.return);
                  break;
                case 22:
                  if (null !== r2.memoizedState) {
                    hk(q2);
                    continue;
                  }
              }
              null !== y2 ? (y2.return = r2, V$2 = y2) : hk(q2);
            }
            m2 = m2.sibling;
          }
        a:
          for (m2 = null, q2 = a; ; ) {
            if (5 === q2.tag) {
              if (null === m2) {
                m2 = q2;
                try {
                  e = q2.stateNode, l2 ? (f2 = e.style, "function" === typeof f2.setProperty ? f2.setProperty("display", "none", "important") : f2.display = "none") : (h = q2.stateNode, k2 = q2.memoizedProps.style, g2 = void 0 !== k2 && null !== k2 && k2.hasOwnProperty("display") ? k2.display : null, h.style.display = rb$2("display", g2));
                } catch (t2) {
                  W$2(a, a.return, t2);
                }
              }
            } else if (6 === q2.tag) {
              if (null === m2)
                try {
                  q2.stateNode.nodeValue = l2 ? "" : q2.memoizedProps;
                } catch (t2) {
                  W$2(a, a.return, t2);
                }
            } else if ((22 !== q2.tag && 23 !== q2.tag || null === q2.memoizedState || q2 === a) && null !== q2.child) {
              q2.child.return = q2;
              q2 = q2.child;
              continue;
            }
            if (q2 === a)
              break a;
            for (; null === q2.sibling; ) {
              if (null === q2.return || q2.return === a)
                break a;
              m2 === q2 && (m2 = null);
              q2 = q2.return;
            }
            m2 === q2 && (m2 = null);
            q2.sibling.return = q2.return;
            q2 = q2.sibling;
          }
      }
      break;
    case 19:
      dk(b, a);
      fk(a);
      d & 4 && bk(a);
      break;
    case 21:
      break;
    default:
      dk(
        b,
        a
      ), fk(a);
  }
}
function fk(a) {
  var b = a.flags;
  if (b & 2) {
    try {
      a: {
        for (var c = a.return; null !== c; ) {
          if (Uj(c)) {
            var d = c;
            break a;
          }
          c = c.return;
        }
        throw Error(p$4(160));
      }
      switch (d.tag) {
        case 5:
          var e = d.stateNode;
          d.flags & 32 && (ob$2(e, ""), d.flags &= -33);
          var f2 = Vj(a);
          Xj(a, f2, e);
          break;
        case 3:
        case 4:
          var g2 = d.stateNode.containerInfo, h = Vj(a);
          Wj(a, h, g2);
          break;
        default:
          throw Error(p$4(161));
      }
    } catch (k2) {
      W$2(a, a.return, k2);
    }
    a.flags &= -3;
  }
  b & 4096 && (a.flags &= -4097);
}
function ik(a, b, c) {
  V$2 = a;
  jk(a);
}
function jk(a, b, c) {
  for (var d = 0 !== (a.mode & 1); null !== V$2; ) {
    var e = V$2, f2 = e.child;
    if (22 === e.tag && d) {
      var g2 = null !== e.memoizedState || Kj;
      if (!g2) {
        var h = e.alternate, k2 = null !== h && null !== h.memoizedState || U$2;
        h = Kj;
        var l2 = U$2;
        Kj = g2;
        if ((U$2 = k2) && !l2)
          for (V$2 = e; null !== V$2; )
            g2 = V$2, k2 = g2.child, 22 === g2.tag && null !== g2.memoizedState ? kk(e) : null !== k2 ? (k2.return = g2, V$2 = k2) : kk(e);
        for (; null !== f2; )
          V$2 = f2, jk(f2), f2 = f2.sibling;
        V$2 = e;
        Kj = h;
        U$2 = l2;
      }
      lk(a);
    } else
      0 !== (e.subtreeFlags & 8772) && null !== f2 ? (f2.return = e, V$2 = f2) : lk(a);
  }
}
function lk(a) {
  for (; null !== V$2; ) {
    var b = V$2;
    if (0 !== (b.flags & 8772)) {
      var c = b.alternate;
      try {
        if (0 !== (b.flags & 8772))
          switch (b.tag) {
            case 0:
            case 11:
            case 15:
              U$2 || Rj(5, b);
              break;
            case 1:
              var d = b.stateNode;
              if (b.flags & 4 && !U$2)
                if (null === c)
                  d.componentDidMount();
                else {
                  var e = b.elementType === b.type ? c.memoizedProps : Lg(b.type, c.memoizedProps);
                  d.componentDidUpdate(e, c.memoizedState, d.__reactInternalSnapshotBeforeUpdate);
                }
              var f2 = b.updateQueue;
              null !== f2 && ih(b, f2, d);
              break;
            case 3:
              var g2 = b.updateQueue;
              if (null !== g2) {
                c = null;
                if (null !== b.child)
                  switch (b.child.tag) {
                    case 5:
                      c = b.child.stateNode;
                      break;
                    case 1:
                      c = b.child.stateNode;
                  }
                ih(b, g2, c);
              }
              break;
            case 5:
              var h = b.stateNode;
              if (null === c && b.flags & 4) {
                c = h;
                var k2 = b.memoizedProps;
                switch (b.type) {
                  case "button":
                  case "input":
                  case "select":
                  case "textarea":
                    k2.autoFocus && c.focus();
                    break;
                  case "img":
                    k2.src && (c.src = k2.src);
                }
              }
              break;
            case 6:
              break;
            case 4:
              break;
            case 12:
              break;
            case 13:
              if (null === b.memoizedState) {
                var l2 = b.alternate;
                if (null !== l2) {
                  var m2 = l2.memoizedState;
                  if (null !== m2) {
                    var q2 = m2.dehydrated;
                    null !== q2 && bd$1(q2);
                  }
                }
              }
              break;
            case 19:
            case 17:
            case 21:
            case 22:
            case 23:
            case 25:
              break;
            default:
              throw Error(p$4(163));
          }
        U$2 || b.flags & 512 && Sj(b);
      } catch (r2) {
        W$2(b, b.return, r2);
      }
    }
    if (b === a) {
      V$2 = null;
      break;
    }
    c = b.sibling;
    if (null !== c) {
      c.return = b.return;
      V$2 = c;
      break;
    }
    V$2 = b.return;
  }
}
function hk(a) {
  for (; null !== V$2; ) {
    var b = V$2;
    if (b === a) {
      V$2 = null;
      break;
    }
    var c = b.sibling;
    if (null !== c) {
      c.return = b.return;
      V$2 = c;
      break;
    }
    V$2 = b.return;
  }
}
function kk(a) {
  for (; null !== V$2; ) {
    var b = V$2;
    try {
      switch (b.tag) {
        case 0:
        case 11:
        case 15:
          var c = b.return;
          try {
            Rj(4, b);
          } catch (k2) {
            W$2(b, c, k2);
          }
          break;
        case 1:
          var d = b.stateNode;
          if ("function" === typeof d.componentDidMount) {
            var e = b.return;
            try {
              d.componentDidMount();
            } catch (k2) {
              W$2(b, e, k2);
            }
          }
          var f2 = b.return;
          try {
            Sj(b);
          } catch (k2) {
            W$2(b, f2, k2);
          }
          break;
        case 5:
          var g2 = b.return;
          try {
            Sj(b);
          } catch (k2) {
            W$2(b, g2, k2);
          }
      }
    } catch (k2) {
      W$2(b, b.return, k2);
    }
    if (b === a) {
      V$2 = null;
      break;
    }
    var h = b.sibling;
    if (null !== h) {
      h.return = b.return;
      V$2 = h;
      break;
    }
    V$2 = b.return;
  }
}
var mk = Math.ceil, nk = ua$2.ReactCurrentDispatcher, ok = ua$2.ReactCurrentOwner, pk = ua$2.ReactCurrentBatchConfig, K$3 = 0, R$3 = null, Y$2 = null, Z$2 = 0, gj = 0, fj = Uf(0), T$3 = 0, qk = null, hh = 0, rk = 0, sk = 0, tk = null, uk = null, gk = 0, Hj = Infinity, vk = null, Pi = false, Qi = null, Si = null, wk = false, xk = null, yk = 0, zk = 0, Ak = null, Bk = -1, Ck = 0;
function L$3() {
  return 0 !== (K$3 & 6) ? B$3() : -1 !== Bk ? Bk : Bk = B$3();
}
function lh(a) {
  if (0 === (a.mode & 1))
    return 1;
  if (0 !== (K$3 & 2) && 0 !== Z$2)
    return Z$2 & -Z$2;
  if (null !== Kg.transition)
    return 0 === Ck && (Ck = yc$1()), Ck;
  a = C$2;
  if (0 !== a)
    return a;
  a = window.event;
  a = void 0 === a ? 16 : jd$1(a.type);
  return a;
}
function mh(a, b, c, d) {
  if (50 < zk)
    throw zk = 0, Ak = null, Error(p$4(185));
  Ac$1(a, c, d);
  if (0 === (K$3 & 2) || a !== R$3)
    a === R$3 && (0 === (K$3 & 2) && (rk |= c), 4 === T$3 && Dk(a, Z$2)), Ek(a, d), 1 === c && 0 === K$3 && 0 === (b.mode & 1) && (Hj = B$3() + 500, fg && jg());
}
function Ek(a, b) {
  var c = a.callbackNode;
  wc$1(a, b);
  var d = uc$1(a, a === R$3 ? Z$2 : 0);
  if (0 === d)
    null !== c && bc$1(c), a.callbackNode = null, a.callbackPriority = 0;
  else if (b = d & -d, a.callbackPriority !== b) {
    null != c && bc$1(c);
    if (1 === b)
      0 === a.tag ? ig(Fk.bind(null, a)) : hg(Fk.bind(null, a)), Jf(function() {
        0 === (K$3 & 6) && jg();
      }), c = null;
    else {
      switch (Dc$1(d)) {
        case 1:
          c = fc$1;
          break;
        case 4:
          c = gc$1;
          break;
        case 16:
          c = hc$1;
          break;
        case 536870912:
          c = jc$1;
          break;
        default:
          c = hc$1;
      }
      c = Gk(c, Hk.bind(null, a));
    }
    a.callbackPriority = b;
    a.callbackNode = c;
  }
}
function Hk(a, b) {
  Bk = -1;
  Ck = 0;
  if (0 !== (K$3 & 6))
    throw Error(p$4(327));
  var c = a.callbackNode;
  if (Ik() && a.callbackNode !== c)
    return null;
  var d = uc$1(a, a === R$3 ? Z$2 : 0);
  if (0 === d)
    return null;
  if (0 !== (d & 30) || 0 !== (d & a.expiredLanes) || b)
    b = Jk(a, d);
  else {
    b = d;
    var e = K$3;
    K$3 |= 2;
    var f2 = Kk();
    if (R$3 !== a || Z$2 !== b)
      vk = null, Hj = B$3() + 500, Lk(a, b);
    do
      try {
        Mk();
        break;
      } catch (h) {
        Nk(a, h);
      }
    while (1);
    Qg();
    nk.current = f2;
    K$3 = e;
    null !== Y$2 ? b = 0 : (R$3 = null, Z$2 = 0, b = T$3);
  }
  if (0 !== b) {
    2 === b && (e = xc$1(a), 0 !== e && (d = e, b = Ok(a, e)));
    if (1 === b)
      throw c = qk, Lk(a, 0), Dk(a, d), Ek(a, B$3()), c;
    if (6 === b)
      Dk(a, d);
    else {
      e = a.current.alternate;
      if (0 === (d & 30) && !Pk(e) && (b = Jk(a, d), 2 === b && (f2 = xc$1(a), 0 !== f2 && (d = f2, b = Ok(a, f2))), 1 === b))
        throw c = qk, Lk(a, 0), Dk(a, d), Ek(a, B$3()), c;
      a.finishedWork = e;
      a.finishedLanes = d;
      switch (b) {
        case 0:
        case 1:
          throw Error(p$4(345));
        case 2:
          Qk(a, uk, vk);
          break;
        case 3:
          Dk(a, d);
          if ((d & 130023424) === d && (b = gk + 500 - B$3(), 10 < b)) {
            if (0 !== uc$1(a, 0))
              break;
            e = a.suspendedLanes;
            if ((e & d) !== d) {
              L$3();
              a.pingedLanes |= a.suspendedLanes & e;
              break;
            }
            a.timeoutHandle = Ff(Qk.bind(null, a, uk, vk), b);
            break;
          }
          Qk(a, uk, vk);
          break;
        case 4:
          Dk(a, d);
          if ((d & 4194240) === d)
            break;
          b = a.eventTimes;
          for (e = -1; 0 < d; ) {
            var g2 = 31 - oc$1(d);
            f2 = 1 << g2;
            g2 = b[g2];
            g2 > e && (e = g2);
            d &= ~f2;
          }
          d = e;
          d = B$3() - d;
          d = (120 > d ? 120 : 480 > d ? 480 : 1080 > d ? 1080 : 1920 > d ? 1920 : 3e3 > d ? 3e3 : 4320 > d ? 4320 : 1960 * mk(d / 1960)) - d;
          if (10 < d) {
            a.timeoutHandle = Ff(Qk.bind(null, a, uk, vk), d);
            break;
          }
          Qk(a, uk, vk);
          break;
        case 5:
          Qk(a, uk, vk);
          break;
        default:
          throw Error(p$4(329));
      }
    }
  }
  Ek(a, B$3());
  return a.callbackNode === c ? Hk.bind(null, a) : null;
}
function Ok(a, b) {
  var c = tk;
  a.current.memoizedState.isDehydrated && (Lk(a, b).flags |= 256);
  a = Jk(a, b);
  2 !== a && (b = uk, uk = c, null !== b && Gj(b));
  return a;
}
function Gj(a) {
  null === uk ? uk = a : uk.push.apply(uk, a);
}
function Pk(a) {
  for (var b = a; ; ) {
    if (b.flags & 16384) {
      var c = b.updateQueue;
      if (null !== c && (c = c.stores, null !== c))
        for (var d = 0; d < c.length; d++) {
          var e = c[d], f2 = e.getSnapshot;
          e = e.value;
          try {
            if (!He(f2(), e))
              return false;
          } catch (g2) {
            return false;
          }
        }
    }
    c = b.child;
    if (b.subtreeFlags & 16384 && null !== c)
      c.return = b, b = c;
    else {
      if (b === a)
        break;
      for (; null === b.sibling; ) {
        if (null === b.return || b.return === a)
          return true;
        b = b.return;
      }
      b.sibling.return = b.return;
      b = b.sibling;
    }
  }
  return true;
}
function Dk(a, b) {
  b &= ~sk;
  b &= ~rk;
  a.suspendedLanes |= b;
  a.pingedLanes &= ~b;
  for (a = a.expirationTimes; 0 < b; ) {
    var c = 31 - oc$1(b), d = 1 << c;
    a[c] = -1;
    b &= ~d;
  }
}
function Fk(a) {
  if (0 !== (K$3 & 6))
    throw Error(p$4(327));
  Ik();
  var b = uc$1(a, 0);
  if (0 === (b & 1))
    return Ek(a, B$3()), null;
  var c = Jk(a, b);
  if (0 !== a.tag && 2 === c) {
    var d = xc$1(a);
    0 !== d && (b = d, c = Ok(a, d));
  }
  if (1 === c)
    throw c = qk, Lk(a, 0), Dk(a, b), Ek(a, B$3()), c;
  if (6 === c)
    throw Error(p$4(345));
  a.finishedWork = a.current.alternate;
  a.finishedLanes = b;
  Qk(a, uk, vk);
  Ek(a, B$3());
  return null;
}
function Rk(a, b) {
  var c = K$3;
  K$3 |= 1;
  try {
    return a(b);
  } finally {
    K$3 = c, 0 === K$3 && (Hj = B$3() + 500, fg && jg());
  }
}
function Sk(a) {
  null !== xk && 0 === xk.tag && 0 === (K$3 & 6) && Ik();
  var b = K$3;
  K$3 |= 1;
  var c = pk.transition, d = C$2;
  try {
    if (pk.transition = null, C$2 = 1, a)
      return a();
  } finally {
    C$2 = d, pk.transition = c, K$3 = b, 0 === (K$3 & 6) && jg();
  }
}
function Ij() {
  gj = fj.current;
  E$3(fj);
}
function Lk(a, b) {
  a.finishedWork = null;
  a.finishedLanes = 0;
  var c = a.timeoutHandle;
  -1 !== c && (a.timeoutHandle = -1, Gf(c));
  if (null !== Y$2)
    for (c = Y$2.return; null !== c; ) {
      var d = c;
      wg(d);
      switch (d.tag) {
        case 1:
          d = d.type.childContextTypes;
          null !== d && void 0 !== d && $f();
          break;
        case 3:
          Jh();
          E$3(Wf);
          E$3(H$3);
          Oh();
          break;
        case 5:
          Lh(d);
          break;
        case 4:
          Jh();
          break;
        case 13:
          E$3(M$3);
          break;
        case 19:
          E$3(M$3);
          break;
        case 10:
          Rg(d.type._context);
          break;
        case 22:
        case 23:
          Ij();
      }
      c = c.return;
    }
  R$3 = a;
  Y$2 = a = wh(a.current, null);
  Z$2 = gj = b;
  T$3 = 0;
  qk = null;
  sk = rk = hh = 0;
  uk = tk = null;
  if (null !== Wg) {
    for (b = 0; b < Wg.length; b++)
      if (c = Wg[b], d = c.interleaved, null !== d) {
        c.interleaved = null;
        var e = d.next, f2 = c.pending;
        if (null !== f2) {
          var g2 = f2.next;
          f2.next = e;
          d.next = g2;
        }
        c.pending = d;
      }
    Wg = null;
  }
  return a;
}
function Nk(a, b) {
  do {
    var c = Y$2;
    try {
      Qg();
      Ph.current = ai;
      if (Sh) {
        for (var d = N$3.memoizedState; null !== d; ) {
          var e = d.queue;
          null !== e && (e.pending = null);
          d = d.next;
        }
        Sh = false;
      }
      Rh = 0;
      P$3 = O$3 = N$3 = null;
      Th = false;
      Uh = 0;
      ok.current = null;
      if (null === c || null === c.return) {
        T$3 = 1;
        qk = b;
        Y$2 = null;
        break;
      }
      a: {
        var f2 = a, g2 = c.return, h = c, k2 = b;
        b = Z$2;
        h.flags |= 32768;
        if (null !== k2 && "object" === typeof k2 && "function" === typeof k2.then) {
          var l2 = k2, m2 = h, q2 = m2.tag;
          if (0 === (m2.mode & 1) && (0 === q2 || 11 === q2 || 15 === q2)) {
            var r2 = m2.alternate;
            r2 ? (m2.updateQueue = r2.updateQueue, m2.memoizedState = r2.memoizedState, m2.lanes = r2.lanes) : (m2.updateQueue = null, m2.memoizedState = null);
          }
          var y2 = Vi(g2);
          if (null !== y2) {
            y2.flags &= -257;
            Wi(y2, g2, h, f2, b);
            y2.mode & 1 && Ti(f2, l2, b);
            b = y2;
            k2 = l2;
            var n2 = b.updateQueue;
            if (null === n2) {
              var t2 = /* @__PURE__ */ new Set();
              t2.add(k2);
              b.updateQueue = t2;
            } else
              n2.add(k2);
            break a;
          } else {
            if (0 === (b & 1)) {
              Ti(f2, l2, b);
              uj();
              break a;
            }
            k2 = Error(p$4(426));
          }
        } else if (I$3 && h.mode & 1) {
          var J2 = Vi(g2);
          if (null !== J2) {
            0 === (J2.flags & 65536) && (J2.flags |= 256);
            Wi(J2, g2, h, f2, b);
            Jg(Ki(k2, h));
            break a;
          }
        }
        f2 = k2 = Ki(k2, h);
        4 !== T$3 && (T$3 = 2);
        null === tk ? tk = [f2] : tk.push(f2);
        f2 = g2;
        do {
          switch (f2.tag) {
            case 3:
              f2.flags |= 65536;
              b &= -b;
              f2.lanes |= b;
              var x2 = Oi(f2, k2, b);
              fh(f2, x2);
              break a;
            case 1:
              h = k2;
              var w2 = f2.type, u2 = f2.stateNode;
              if (0 === (f2.flags & 128) && ("function" === typeof w2.getDerivedStateFromError || null !== u2 && "function" === typeof u2.componentDidCatch && (null === Si || !Si.has(u2)))) {
                f2.flags |= 65536;
                b &= -b;
                f2.lanes |= b;
                var F2 = Ri(f2, h, b);
                fh(f2, F2);
                break a;
              }
          }
          f2 = f2.return;
        } while (null !== f2);
      }
      Tk(c);
    } catch (na2) {
      b = na2;
      Y$2 === c && null !== c && (Y$2 = c = c.return);
      continue;
    }
    break;
  } while (1);
}
function Kk() {
  var a = nk.current;
  nk.current = ai;
  return null === a ? ai : a;
}
function uj() {
  if (0 === T$3 || 3 === T$3 || 2 === T$3)
    T$3 = 4;
  null === R$3 || 0 === (hh & 268435455) && 0 === (rk & 268435455) || Dk(R$3, Z$2);
}
function Jk(a, b) {
  var c = K$3;
  K$3 |= 2;
  var d = Kk();
  if (R$3 !== a || Z$2 !== b)
    vk = null, Lk(a, b);
  do
    try {
      Uk();
      break;
    } catch (e) {
      Nk(a, e);
    }
  while (1);
  Qg();
  K$3 = c;
  nk.current = d;
  if (null !== Y$2)
    throw Error(p$4(261));
  R$3 = null;
  Z$2 = 0;
  return T$3;
}
function Uk() {
  for (; null !== Y$2; )
    Vk(Y$2);
}
function Mk() {
  for (; null !== Y$2 && !cc$1(); )
    Vk(Y$2);
}
function Vk(a) {
  var b = Wk(a.alternate, a, gj);
  a.memoizedProps = a.pendingProps;
  null === b ? Tk(a) : Y$2 = b;
  ok.current = null;
}
function Tk(a) {
  var b = a;
  do {
    var c = b.alternate;
    a = b.return;
    if (0 === (b.flags & 32768)) {
      if (c = Fj(c, b, gj), null !== c) {
        Y$2 = c;
        return;
      }
    } else {
      c = Jj(c, b);
      if (null !== c) {
        c.flags &= 32767;
        Y$2 = c;
        return;
      }
      if (null !== a)
        a.flags |= 32768, a.subtreeFlags = 0, a.deletions = null;
      else {
        T$3 = 6;
        Y$2 = null;
        return;
      }
    }
    b = b.sibling;
    if (null !== b) {
      Y$2 = b;
      return;
    }
    Y$2 = b = a;
  } while (null !== b);
  0 === T$3 && (T$3 = 5);
}
function Qk(a, b, c) {
  var d = C$2, e = pk.transition;
  try {
    pk.transition = null, C$2 = 1, Xk(a, b, c, d);
  } finally {
    pk.transition = e, C$2 = d;
  }
  return null;
}
function Xk(a, b, c, d) {
  do
    Ik();
  while (null !== xk);
  if (0 !== (K$3 & 6))
    throw Error(p$4(327));
  c = a.finishedWork;
  var e = a.finishedLanes;
  if (null === c)
    return null;
  a.finishedWork = null;
  a.finishedLanes = 0;
  if (c === a.current)
    throw Error(p$4(177));
  a.callbackNode = null;
  a.callbackPriority = 0;
  var f2 = c.lanes | c.childLanes;
  Bc$1(a, f2);
  a === R$3 && (Y$2 = R$3 = null, Z$2 = 0);
  0 === (c.subtreeFlags & 2064) && 0 === (c.flags & 2064) || wk || (wk = true, Gk(hc$1, function() {
    Ik();
    return null;
  }));
  f2 = 0 !== (c.flags & 15990);
  if (0 !== (c.subtreeFlags & 15990) || f2) {
    f2 = pk.transition;
    pk.transition = null;
    var g2 = C$2;
    C$2 = 1;
    var h = K$3;
    K$3 |= 4;
    ok.current = null;
    Pj(a, c);
    ek(c, a);
    Oe(Df);
    dd$1 = !!Cf;
    Df = Cf = null;
    a.current = c;
    ik(c);
    dc$1();
    K$3 = h;
    C$2 = g2;
    pk.transition = f2;
  } else
    a.current = c;
  wk && (wk = false, xk = a, yk = e);
  f2 = a.pendingLanes;
  0 === f2 && (Si = null);
  mc$1(c.stateNode);
  Ek(a, B$3());
  if (null !== b)
    for (d = a.onRecoverableError, c = 0; c < b.length; c++)
      e = b[c], d(e.value, { componentStack: e.stack, digest: e.digest });
  if (Pi)
    throw Pi = false, a = Qi, Qi = null, a;
  0 !== (yk & 1) && 0 !== a.tag && Ik();
  f2 = a.pendingLanes;
  0 !== (f2 & 1) ? a === Ak ? zk++ : (zk = 0, Ak = a) : zk = 0;
  jg();
  return null;
}
function Ik() {
  if (null !== xk) {
    var a = Dc$1(yk), b = pk.transition, c = C$2;
    try {
      pk.transition = null;
      C$2 = 16 > a ? 16 : a;
      if (null === xk)
        var d = false;
      else {
        a = xk;
        xk = null;
        yk = 0;
        if (0 !== (K$3 & 6))
          throw Error(p$4(331));
        var e = K$3;
        K$3 |= 4;
        for (V$2 = a.current; null !== V$2; ) {
          var f2 = V$2, g2 = f2.child;
          if (0 !== (V$2.flags & 16)) {
            var h = f2.deletions;
            if (null !== h) {
              for (var k2 = 0; k2 < h.length; k2++) {
                var l2 = h[k2];
                for (V$2 = l2; null !== V$2; ) {
                  var m2 = V$2;
                  switch (m2.tag) {
                    case 0:
                    case 11:
                    case 15:
                      Qj(8, m2, f2);
                  }
                  var q2 = m2.child;
                  if (null !== q2)
                    q2.return = m2, V$2 = q2;
                  else
                    for (; null !== V$2; ) {
                      m2 = V$2;
                      var r2 = m2.sibling, y2 = m2.return;
                      Tj(m2);
                      if (m2 === l2) {
                        V$2 = null;
                        break;
                      }
                      if (null !== r2) {
                        r2.return = y2;
                        V$2 = r2;
                        break;
                      }
                      V$2 = y2;
                    }
                }
              }
              var n2 = f2.alternate;
              if (null !== n2) {
                var t2 = n2.child;
                if (null !== t2) {
                  n2.child = null;
                  do {
                    var J2 = t2.sibling;
                    t2.sibling = null;
                    t2 = J2;
                  } while (null !== t2);
                }
              }
              V$2 = f2;
            }
          }
          if (0 !== (f2.subtreeFlags & 2064) && null !== g2)
            g2.return = f2, V$2 = g2;
          else
            b:
              for (; null !== V$2; ) {
                f2 = V$2;
                if (0 !== (f2.flags & 2048))
                  switch (f2.tag) {
                    case 0:
                    case 11:
                    case 15:
                      Qj(9, f2, f2.return);
                  }
                var x2 = f2.sibling;
                if (null !== x2) {
                  x2.return = f2.return;
                  V$2 = x2;
                  break b;
                }
                V$2 = f2.return;
              }
        }
        var w2 = a.current;
        for (V$2 = w2; null !== V$2; ) {
          g2 = V$2;
          var u2 = g2.child;
          if (0 !== (g2.subtreeFlags & 2064) && null !== u2)
            u2.return = g2, V$2 = u2;
          else
            b:
              for (g2 = w2; null !== V$2; ) {
                h = V$2;
                if (0 !== (h.flags & 2048))
                  try {
                    switch (h.tag) {
                      case 0:
                      case 11:
                      case 15:
                        Rj(9, h);
                    }
                  } catch (na2) {
                    W$2(h, h.return, na2);
                  }
                if (h === g2) {
                  V$2 = null;
                  break b;
                }
                var F2 = h.sibling;
                if (null !== F2) {
                  F2.return = h.return;
                  V$2 = F2;
                  break b;
                }
                V$2 = h.return;
              }
        }
        K$3 = e;
        jg();
        if (lc$1 && "function" === typeof lc$1.onPostCommitFiberRoot)
          try {
            lc$1.onPostCommitFiberRoot(kc$1, a);
          } catch (na2) {
          }
        d = true;
      }
      return d;
    } finally {
      C$2 = c, pk.transition = b;
    }
  }
  return false;
}
function Yk(a, b, c) {
  b = Ki(c, b);
  b = Oi(a, b, 1);
  a = dh(a, b, 1);
  b = L$3();
  null !== a && (Ac$1(a, 1, b), Ek(a, b));
}
function W$2(a, b, c) {
  if (3 === a.tag)
    Yk(a, a, c);
  else
    for (; null !== b; ) {
      if (3 === b.tag) {
        Yk(b, a, c);
        break;
      } else if (1 === b.tag) {
        var d = b.stateNode;
        if ("function" === typeof b.type.getDerivedStateFromError || "function" === typeof d.componentDidCatch && (null === Si || !Si.has(d))) {
          a = Ki(c, a);
          a = Ri(b, a, 1);
          b = dh(b, a, 1);
          a = L$3();
          null !== b && (Ac$1(b, 1, a), Ek(b, a));
          break;
        }
      }
      b = b.return;
    }
}
function Ui(a, b, c) {
  var d = a.pingCache;
  null !== d && d.delete(b);
  b = L$3();
  a.pingedLanes |= a.suspendedLanes & c;
  R$3 === a && (Z$2 & c) === c && (4 === T$3 || 3 === T$3 && (Z$2 & 130023424) === Z$2 && 500 > B$3() - gk ? Lk(a, 0) : sk |= c);
  Ek(a, b);
}
function Zk(a, b) {
  0 === b && (0 === (a.mode & 1) ? b = 1 : (b = sc$1, sc$1 <<= 1, 0 === (sc$1 & 130023424) && (sc$1 = 4194304)));
  var c = L$3();
  a = Zg(a, b);
  null !== a && (Ac$1(a, b, c), Ek(a, c));
}
function vj(a) {
  var b = a.memoizedState, c = 0;
  null !== b && (c = b.retryLane);
  Zk(a, c);
}
function ck(a, b) {
  var c = 0;
  switch (a.tag) {
    case 13:
      var d = a.stateNode;
      var e = a.memoizedState;
      null !== e && (c = e.retryLane);
      break;
    case 19:
      d = a.stateNode;
      break;
    default:
      throw Error(p$4(314));
  }
  null !== d && d.delete(b);
  Zk(a, c);
}
var Wk;
Wk = function(a, b, c) {
  if (null !== a)
    if (a.memoizedProps !== b.pendingProps || Wf.current)
      Ug = true;
    else {
      if (0 === (a.lanes & c) && 0 === (b.flags & 128))
        return Ug = false, zj(a, b, c);
      Ug = 0 !== (a.flags & 131072) ? true : false;
    }
  else
    Ug = false, I$3 && 0 !== (b.flags & 1048576) && ug(b, ng, b.index);
  b.lanes = 0;
  switch (b.tag) {
    case 2:
      var d = b.type;
      jj(a, b);
      a = b.pendingProps;
      var e = Yf(b, H$3.current);
      Tg(b, c);
      e = Xh(null, b, d, a, e, c);
      var f2 = bi();
      b.flags |= 1;
      "object" === typeof e && null !== e && "function" === typeof e.render && void 0 === e.$$typeof ? (b.tag = 1, b.memoizedState = null, b.updateQueue = null, Zf(d) ? (f2 = true, cg(b)) : f2 = false, b.memoizedState = null !== e.state && void 0 !== e.state ? e.state : null, ah(b), e.updater = nh, b.stateNode = e, e._reactInternals = b, rh(b, d, a, c), b = kj(null, b, d, true, f2, c)) : (b.tag = 0, I$3 && f2 && vg(b), Yi(null, b, e, c), b = b.child);
      return b;
    case 16:
      d = b.elementType;
      a: {
        jj(a, b);
        a = b.pendingProps;
        e = d._init;
        d = e(d._payload);
        b.type = d;
        e = b.tag = $k(d);
        a = Lg(d, a);
        switch (e) {
          case 0:
            b = dj(null, b, d, a, c);
            break a;
          case 1:
            b = ij(null, b, d, a, c);
            break a;
          case 11:
            b = Zi(null, b, d, a, c);
            break a;
          case 14:
            b = aj(null, b, d, Lg(d.type, a), c);
            break a;
        }
        throw Error(p$4(
          306,
          d,
          ""
        ));
      }
      return b;
    case 0:
      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : Lg(d, e), dj(a, b, d, e, c);
    case 1:
      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : Lg(d, e), ij(a, b, d, e, c);
    case 3:
      a: {
        lj(b);
        if (null === a)
          throw Error(p$4(387));
        d = b.pendingProps;
        f2 = b.memoizedState;
        e = f2.element;
        bh(a, b);
        gh(b, d, null, c);
        var g2 = b.memoizedState;
        d = g2.element;
        if (f2.isDehydrated)
          if (f2 = { element: d, isDehydrated: false, cache: g2.cache, pendingSuspenseBoundaries: g2.pendingSuspenseBoundaries, transitions: g2.transitions }, b.updateQueue.baseState = f2, b.memoizedState = f2, b.flags & 256) {
            e = Ki(Error(p$4(423)), b);
            b = mj(a, b, d, c, e);
            break a;
          } else if (d !== e) {
            e = Ki(Error(p$4(424)), b);
            b = mj(a, b, d, c, e);
            break a;
          } else
            for (yg = Lf(b.stateNode.containerInfo.firstChild), xg = b, I$3 = true, zg = null, c = Ch(b, null, d, c), b.child = c; c; )
              c.flags = c.flags & -3 | 4096, c = c.sibling;
        else {
          Ig();
          if (d === e) {
            b = $i(a, b, c);
            break a;
          }
          Yi(a, b, d, c);
        }
        b = b.child;
      }
      return b;
    case 5:
      return Kh(b), null === a && Eg(b), d = b.type, e = b.pendingProps, f2 = null !== a ? a.memoizedProps : null, g2 = e.children, Ef(d, e) ? g2 = null : null !== f2 && Ef(d, f2) && (b.flags |= 32), hj(a, b), Yi(a, b, g2, c), b.child;
    case 6:
      return null === a && Eg(b), null;
    case 13:
      return pj(a, b, c);
    case 4:
      return Ih(b, b.stateNode.containerInfo), d = b.pendingProps, null === a ? b.child = Bh(b, null, d, c) : Yi(a, b, d, c), b.child;
    case 11:
      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : Lg(d, e), Zi(a, b, d, e, c);
    case 7:
      return Yi(a, b, b.pendingProps, c), b.child;
    case 8:
      return Yi(a, b, b.pendingProps.children, c), b.child;
    case 12:
      return Yi(a, b, b.pendingProps.children, c), b.child;
    case 10:
      a: {
        d = b.type._context;
        e = b.pendingProps;
        f2 = b.memoizedProps;
        g2 = e.value;
        G$2(Mg, d._currentValue);
        d._currentValue = g2;
        if (null !== f2)
          if (He(f2.value, g2)) {
            if (f2.children === e.children && !Wf.current) {
              b = $i(a, b, c);
              break a;
            }
          } else
            for (f2 = b.child, null !== f2 && (f2.return = b); null !== f2; ) {
              var h = f2.dependencies;
              if (null !== h) {
                g2 = f2.child;
                for (var k2 = h.firstContext; null !== k2; ) {
                  if (k2.context === d) {
                    if (1 === f2.tag) {
                      k2 = ch(-1, c & -c);
                      k2.tag = 2;
                      var l2 = f2.updateQueue;
                      if (null !== l2) {
                        l2 = l2.shared;
                        var m2 = l2.pending;
                        null === m2 ? k2.next = k2 : (k2.next = m2.next, m2.next = k2);
                        l2.pending = k2;
                      }
                    }
                    f2.lanes |= c;
                    k2 = f2.alternate;
                    null !== k2 && (k2.lanes |= c);
                    Sg(
                      f2.return,
                      c,
                      b
                    );
                    h.lanes |= c;
                    break;
                  }
                  k2 = k2.next;
                }
              } else if (10 === f2.tag)
                g2 = f2.type === b.type ? null : f2.child;
              else if (18 === f2.tag) {
                g2 = f2.return;
                if (null === g2)
                  throw Error(p$4(341));
                g2.lanes |= c;
                h = g2.alternate;
                null !== h && (h.lanes |= c);
                Sg(g2, c, b);
                g2 = f2.sibling;
              } else
                g2 = f2.child;
              if (null !== g2)
                g2.return = f2;
              else
                for (g2 = f2; null !== g2; ) {
                  if (g2 === b) {
                    g2 = null;
                    break;
                  }
                  f2 = g2.sibling;
                  if (null !== f2) {
                    f2.return = g2.return;
                    g2 = f2;
                    break;
                  }
                  g2 = g2.return;
                }
              f2 = g2;
            }
        Yi(a, b, e.children, c);
        b = b.child;
      }
      return b;
    case 9:
      return e = b.type, d = b.pendingProps.children, Tg(b, c), e = Vg(e), d = d(e), b.flags |= 1, Yi(a, b, d, c), b.child;
    case 14:
      return d = b.type, e = Lg(d, b.pendingProps), e = Lg(d.type, e), aj(a, b, d, e, c);
    case 15:
      return cj(a, b, b.type, b.pendingProps, c);
    case 17:
      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : Lg(d, e), jj(a, b), b.tag = 1, Zf(d) ? (a = true, cg(b)) : a = false, Tg(b, c), ph(b, d, e), rh(b, d, e, c), kj(null, b, d, true, a, c);
    case 19:
      return yj(a, b, c);
    case 22:
      return ej(a, b, c);
  }
  throw Error(p$4(156, b.tag));
};
function Gk(a, b) {
  return ac$1(a, b);
}
function al(a, b, c, d) {
  this.tag = a;
  this.key = c;
  this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;
  this.index = 0;
  this.ref = null;
  this.pendingProps = b;
  this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;
  this.mode = d;
  this.subtreeFlags = this.flags = 0;
  this.deletions = null;
  this.childLanes = this.lanes = 0;
  this.alternate = null;
}
function Bg(a, b, c, d) {
  return new al(a, b, c, d);
}
function bj(a) {
  a = a.prototype;
  return !(!a || !a.isReactComponent);
}
function $k(a) {
  if ("function" === typeof a)
    return bj(a) ? 1 : 0;
  if (void 0 !== a && null !== a) {
    a = a.$$typeof;
    if (a === Da$2)
      return 11;
    if (a === Ga$2)
      return 14;
  }
  return 2;
}
function wh(a, b) {
  var c = a.alternate;
  null === c ? (c = Bg(a.tag, b, a.key, a.mode), c.elementType = a.elementType, c.type = a.type, c.stateNode = a.stateNode, c.alternate = a, a.alternate = c) : (c.pendingProps = b, c.type = a.type, c.flags = 0, c.subtreeFlags = 0, c.deletions = null);
  c.flags = a.flags & 14680064;
  c.childLanes = a.childLanes;
  c.lanes = a.lanes;
  c.child = a.child;
  c.memoizedProps = a.memoizedProps;
  c.memoizedState = a.memoizedState;
  c.updateQueue = a.updateQueue;
  b = a.dependencies;
  c.dependencies = null === b ? null : { lanes: b.lanes, firstContext: b.firstContext };
  c.sibling = a.sibling;
  c.index = a.index;
  c.ref = a.ref;
  return c;
}
function yh(a, b, c, d, e, f2) {
  var g2 = 2;
  d = a;
  if ("function" === typeof a)
    bj(a) && (g2 = 1);
  else if ("string" === typeof a)
    g2 = 5;
  else
    a:
      switch (a) {
        case ya$2:
          return Ah(c.children, e, f2, b);
        case za$2:
          g2 = 8;
          e |= 8;
          break;
        case Aa$2:
          return a = Bg(12, c, b, e | 2), a.elementType = Aa$2, a.lanes = f2, a;
        case Ea$2:
          return a = Bg(13, c, b, e), a.elementType = Ea$2, a.lanes = f2, a;
        case Fa$2:
          return a = Bg(19, c, b, e), a.elementType = Fa$2, a.lanes = f2, a;
        case Ia$2:
          return qj(c, e, f2, b);
        default:
          if ("object" === typeof a && null !== a)
            switch (a.$$typeof) {
              case Ba$2:
                g2 = 10;
                break a;
              case Ca$2:
                g2 = 9;
                break a;
              case Da$2:
                g2 = 11;
                break a;
              case Ga$2:
                g2 = 14;
                break a;
              case Ha$2:
                g2 = 16;
                d = null;
                break a;
            }
          throw Error(p$4(130, null == a ? a : typeof a, ""));
      }
  b = Bg(g2, c, b, e);
  b.elementType = a;
  b.type = d;
  b.lanes = f2;
  return b;
}
function Ah(a, b, c, d) {
  a = Bg(7, a, d, b);
  a.lanes = c;
  return a;
}
function qj(a, b, c, d) {
  a = Bg(22, a, d, b);
  a.elementType = Ia$2;
  a.lanes = c;
  a.stateNode = { isHidden: false };
  return a;
}
function xh(a, b, c) {
  a = Bg(6, a, null, b);
  a.lanes = c;
  return a;
}
function zh(a, b, c) {
  b = Bg(4, null !== a.children ? a.children : [], a.key, b);
  b.lanes = c;
  b.stateNode = { containerInfo: a.containerInfo, pendingChildren: null, implementation: a.implementation };
  return b;
}
function bl(a, b, c, d, e) {
  this.tag = b;
  this.containerInfo = a;
  this.finishedWork = this.pingCache = this.current = this.pendingChildren = null;
  this.timeoutHandle = -1;
  this.callbackNode = this.pendingContext = this.context = null;
  this.callbackPriority = 0;
  this.eventTimes = zc$1(0);
  this.expirationTimes = zc$1(-1);
  this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0;
  this.entanglements = zc$1(0);
  this.identifierPrefix = d;
  this.onRecoverableError = e;
  this.mutableSourceEagerHydrationData = null;
}
function cl(a, b, c, d, e, f2, g2, h, k2) {
  a = new bl(a, b, c, h, k2);
  1 === b ? (b = 1, true === f2 && (b |= 8)) : b = 0;
  f2 = Bg(3, null, null, b);
  a.current = f2;
  f2.stateNode = a;
  f2.memoizedState = { element: d, isDehydrated: c, cache: null, transitions: null, pendingSuspenseBoundaries: null };
  ah(f2);
  return a;
}
function dl(a, b, c) {
  var d = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;
  return { $$typeof: wa$2, key: null == d ? null : "" + d, children: a, containerInfo: b, implementation: c };
}
function el(a) {
  if (!a)
    return Vf;
  a = a._reactInternals;
  a: {
    if (Vb$1(a) !== a || 1 !== a.tag)
      throw Error(p$4(170));
    var b = a;
    do {
      switch (b.tag) {
        case 3:
          b = b.stateNode.context;
          break a;
        case 1:
          if (Zf(b.type)) {
            b = b.stateNode.__reactInternalMemoizedMergedChildContext;
            break a;
          }
      }
      b = b.return;
    } while (null !== b);
    throw Error(p$4(171));
  }
  if (1 === a.tag) {
    var c = a.type;
    if (Zf(c))
      return bg(a, c, b);
  }
  return b;
}
function fl(a, b, c, d, e, f2, g2, h, k2) {
  a = cl(c, d, true, a, e, f2, g2, h, k2);
  a.context = el(null);
  c = a.current;
  d = L$3();
  e = lh(c);
  f2 = ch(d, e);
  f2.callback = void 0 !== b && null !== b ? b : null;
  dh(c, f2, e);
  a.current.lanes = e;
  Ac$1(a, e, d);
  Ek(a, d);
  return a;
}
function gl(a, b, c, d) {
  var e = b.current, f2 = L$3(), g2 = lh(e);
  c = el(c);
  null === b.context ? b.context = c : b.pendingContext = c;
  b = ch(f2, g2);
  b.payload = { element: a };
  d = void 0 === d ? null : d;
  null !== d && (b.callback = d);
  a = dh(e, b, g2);
  null !== a && (mh(a, e, g2, f2), eh(a, e, g2));
  return g2;
}
function hl(a) {
  a = a.current;
  if (!a.child)
    return null;
  switch (a.child.tag) {
    case 5:
      return a.child.stateNode;
    default:
      return a.child.stateNode;
  }
}
function il(a, b) {
  a = a.memoizedState;
  if (null !== a && null !== a.dehydrated) {
    var c = a.retryLane;
    a.retryLane = 0 !== c && c < b ? c : b;
  }
}
function jl(a, b) {
  il(a, b);
  (a = a.alternate) && il(a, b);
}
function kl() {
  return null;
}
var ll = "function" === typeof reportError ? reportError : function(a) {
  console.error(a);
};
function ml(a) {
  this._internalRoot = a;
}
nl.prototype.render = ml.prototype.render = function(a) {
  var b = this._internalRoot;
  if (null === b)
    throw Error(p$4(409));
  gl(a, b, null, null);
};
nl.prototype.unmount = ml.prototype.unmount = function() {
  var a = this._internalRoot;
  if (null !== a) {
    this._internalRoot = null;
    var b = a.containerInfo;
    Sk(function() {
      gl(null, a, null, null);
    });
    b[uf] = null;
  }
};
function nl(a) {
  this._internalRoot = a;
}
nl.prototype.unstable_scheduleHydration = function(a) {
  if (a) {
    var b = Hc$1();
    a = { blockedOn: null, target: a, priority: b };
    for (var c = 0; c < Qc$1.length && 0 !== b && b < Qc$1[c].priority; c++)
      ;
    Qc$1.splice(c, 0, a);
    0 === c && Vc$1(a);
  }
};
function ol(a) {
  return !(!a || 1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType);
}
function pl(a) {
  return !(!a || 1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType && (8 !== a.nodeType || " react-mount-point-unstable " !== a.nodeValue));
}
function ql() {
}
function rl(a, b, c, d, e) {
  if (e) {
    if ("function" === typeof d) {
      var f2 = d;
      d = function() {
        var a2 = hl(g2);
        f2.call(a2);
      };
    }
    var g2 = fl(b, d, a, 0, null, false, false, "", ql);
    a._reactRootContainer = g2;
    a[uf] = g2.current;
    sf(8 === a.nodeType ? a.parentNode : a);
    Sk();
    return g2;
  }
  for (; e = a.lastChild; )
    a.removeChild(e);
  if ("function" === typeof d) {
    var h = d;
    d = function() {
      var a2 = hl(k2);
      h.call(a2);
    };
  }
  var k2 = cl(a, 0, false, null, null, false, false, "", ql);
  a._reactRootContainer = k2;
  a[uf] = k2.current;
  sf(8 === a.nodeType ? a.parentNode : a);
  Sk(function() {
    gl(b, k2, c, d);
  });
  return k2;
}
function sl(a, b, c, d, e) {
  var f2 = c._reactRootContainer;
  if (f2) {
    var g2 = f2;
    if ("function" === typeof e) {
      var h = e;
      e = function() {
        var a2 = hl(g2);
        h.call(a2);
      };
    }
    gl(b, g2, a, e);
  } else
    g2 = rl(c, b, a, e, d);
  return hl(g2);
}
Ec$1 = function(a) {
  switch (a.tag) {
    case 3:
      var b = a.stateNode;
      if (b.current.memoizedState.isDehydrated) {
        var c = tc$1(b.pendingLanes);
        0 !== c && (Cc$1(b, c | 1), Ek(b, B$3()), 0 === (K$3 & 6) && (Hj = B$3() + 500, jg()));
      }
      break;
    case 13:
      Sk(function() {
        var b2 = Zg(a, 1);
        if (null !== b2) {
          var c2 = L$3();
          mh(b2, a, 1, c2);
        }
      }), jl(a, 1);
  }
};
Fc$1 = function(a) {
  if (13 === a.tag) {
    var b = Zg(a, 134217728);
    if (null !== b) {
      var c = L$3();
      mh(b, a, 134217728, c);
    }
    jl(a, 134217728);
  }
};
Gc$1 = function(a) {
  if (13 === a.tag) {
    var b = lh(a), c = Zg(a, b);
    if (null !== c) {
      var d = L$3();
      mh(c, a, b, d);
    }
    jl(a, b);
  }
};
Hc$1 = function() {
  return C$2;
};
Ic$1 = function(a, b) {
  var c = C$2;
  try {
    return C$2 = a, b();
  } finally {
    C$2 = c;
  }
};
yb$2 = function(a, b, c) {
  switch (b) {
    case "input":
      bb$2(a, c);
      b = c.name;
      if ("radio" === c.type && null != b) {
        for (c = a; c.parentNode; )
          c = c.parentNode;
        c = c.querySelectorAll("input[name=" + JSON.stringify("" + b) + '][type="radio"]');
        for (b = 0; b < c.length; b++) {
          var d = c[b];
          if (d !== a && d.form === a.form) {
            var e = Db$2(d);
            if (!e)
              throw Error(p$4(90));
            Wa$2(d);
            bb$2(d, e);
          }
        }
      }
      break;
    case "textarea":
      ib$2(a, c);
      break;
    case "select":
      b = c.value, null != b && fb$2(a, !!c.multiple, b, false);
  }
};
Gb$2 = Rk;
Hb$2 = Sk;
var tl = { usingClientEntryPoint: false, Events: [Cb$2, ue, Db$2, Eb$2, Fb$1, Rk] }, ul = { findFiberByHostInstance: Wc$1, bundleType: 0, version: "18.2.0", rendererPackageName: "react-dom" };
var vl = { bundleType: ul.bundleType, version: ul.version, rendererPackageName: ul.rendererPackageName, rendererConfig: ul.rendererConfig, overrideHookState: null, overrideHookStateDeletePath: null, overrideHookStateRenamePath: null, overrideProps: null, overridePropsDeletePath: null, overridePropsRenamePath: null, setErrorHandler: null, setSuspenseHandler: null, scheduleUpdate: null, currentDispatcherRef: ua$2.ReactCurrentDispatcher, findHostInstanceByFiber: function(a) {
  a = Zb$1(a);
  return null === a ? null : a.stateNode;
}, findFiberByHostInstance: ul.findFiberByHostInstance || kl, findHostInstancesForRefresh: null, scheduleRefresh: null, scheduleRoot: null, setRefreshHandler: null, getCurrentFiber: null, reconcilerVersion: "18.2.0-next-9e3b772b8-20220608" };
if ("undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
  var wl = __REACT_DEVTOOLS_GLOBAL_HOOK__;
  if (!wl.isDisabled && wl.supportsFiber)
    try {
      kc$1 = wl.inject(vl), lc$1 = wl;
    } catch (a) {
    }
}
reactDom_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = tl;
reactDom_production_min.createPortal = function(a, b) {
  var c = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;
  if (!ol(b))
    throw Error(p$4(200));
  return dl(a, b, null, c);
};
reactDom_production_min.createRoot = function(a, b) {
  if (!ol(a))
    throw Error(p$4(299));
  var c = false, d = "", e = ll;
  null !== b && void 0 !== b && (true === b.unstable_strictMode && (c = true), void 0 !== b.identifierPrefix && (d = b.identifierPrefix), void 0 !== b.onRecoverableError && (e = b.onRecoverableError));
  b = cl(a, 1, false, null, null, c, false, d, e);
  a[uf] = b.current;
  sf(8 === a.nodeType ? a.parentNode : a);
  return new ml(b);
};
reactDom_production_min.findDOMNode = function(a) {
  if (null == a)
    return null;
  if (1 === a.nodeType)
    return a;
  var b = a._reactInternals;
  if (void 0 === b) {
    if ("function" === typeof a.render)
      throw Error(p$4(188));
    a = Object.keys(a).join(",");
    throw Error(p$4(268, a));
  }
  a = Zb$1(b);
  a = null === a ? null : a.stateNode;
  return a;
};
reactDom_production_min.flushSync = function(a) {
  return Sk(a);
};
reactDom_production_min.hydrate = function(a, b, c) {
  if (!pl(b))
    throw Error(p$4(200));
  return sl(null, a, b, true, c);
};
reactDom_production_min.hydrateRoot = function(a, b, c) {
  if (!ol(a))
    throw Error(p$4(405));
  var d = null != c && c.hydratedSources || null, e = false, f2 = "", g2 = ll;
  null !== c && void 0 !== c && (true === c.unstable_strictMode && (e = true), void 0 !== c.identifierPrefix && (f2 = c.identifierPrefix), void 0 !== c.onRecoverableError && (g2 = c.onRecoverableError));
  b = fl(b, null, a, 1, null != c ? c : null, e, false, f2, g2);
  a[uf] = b.current;
  sf(a);
  if (d)
    for (a = 0; a < d.length; a++)
      c = d[a], e = c._getVersion, e = e(c._source), null == b.mutableSourceEagerHydrationData ? b.mutableSourceEagerHydrationData = [c, e] : b.mutableSourceEagerHydrationData.push(
        c,
        e
      );
  return new nl(b);
};
reactDom_production_min.render = function(a, b, c) {
  if (!pl(b))
    throw Error(p$4(200));
  return sl(null, a, b, false, c);
};
reactDom_production_min.unmountComponentAtNode = function(a) {
  if (!pl(a))
    throw Error(p$4(40));
  return a._reactRootContainer ? (Sk(function() {
    sl(null, null, a, false, function() {
      a._reactRootContainer = null;
      a[uf] = null;
    });
  }), true) : false;
};
reactDom_production_min.unstable_batchedUpdates = Rk;
reactDom_production_min.unstable_renderSubtreeIntoContainer = function(a, b, c, d) {
  if (!pl(c))
    throw Error(p$4(200));
  if (null == a || void 0 === a._reactInternals)
    throw Error(p$4(38));
  return sl(a, b, c, false, d);
};
reactDom_production_min.version = "18.2.0-next-9e3b772b8-20220608";
function checkDCE() {
  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === "undefined" || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== "function") {
    return;
  }
  try {
    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
  } catch (err) {
    console.error(err);
  }
}
{
  checkDCE();
  reactDom.exports = reactDom_production_min;
}
var reactDomExports = reactDom.exports;
var m$1 = reactDomExports;
{
  client.createRoot = m$1.createRoot;
  client.hydrateRoot = m$1.hydrateRoot;
}
/**
 * @remix-run/router v1.9.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
function _extends$2() {
  _extends$2 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source2 = arguments[i];
      for (var key in source2) {
        if (Object.prototype.hasOwnProperty.call(source2, key)) {
          target[key] = source2[key];
        }
      }
    }
    return target;
  };
  return _extends$2.apply(this, arguments);
}
var Action;
(function(Action2) {
  Action2["Pop"] = "POP";
  Action2["Push"] = "PUSH";
  Action2["Replace"] = "REPLACE";
})(Action || (Action = {}));
const PopStateEventType = "popstate";
function createBrowserHistory(options) {
  if (options === void 0) {
    options = {};
  }
  function createBrowserLocation(window2, globalHistory) {
    let {
      pathname,
      search,
      hash: hash2
    } = window2.location;
    return createLocation(
      "",
      {
        pathname,
        search,
        hash: hash2
      },
      // state defaults to `null` because `window.history.state` does
      globalHistory.state && globalHistory.state.usr || null,
      globalHistory.state && globalHistory.state.key || "default"
    );
  }
  function createBrowserHref(window2, to) {
    return typeof to === "string" ? to : createPath(to);
  }
  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);
}
function invariant(value, message) {
  if (value === false || value === null || typeof value === "undefined") {
    throw new Error(message);
  }
}
function warning(cond, message) {
  if (!cond) {
    if (typeof console !== "undefined")
      console.warn(message);
    try {
      throw new Error(message);
    } catch (e) {
    }
  }
}
function createKey() {
  return Math.random().toString(36).substr(2, 8);
}
function getHistoryState(location, index2) {
  return {
    usr: location.state,
    key: location.key,
    idx: index2
  };
}
function createLocation(current, to, state, key) {
  if (state === void 0) {
    state = null;
  }
  let location = _extends$2({
    pathname: typeof current === "string" ? current : current.pathname,
    search: "",
    hash: ""
  }, typeof to === "string" ? parsePath(to) : to, {
    state,
    // TODO: This could be cleaned up.  push/replace should probably just take
    // full Locations now and avoid the need to run through this flow at all
    // But that's a pretty big refactor to the current test suite so going to
    // keep as is for the time being and just let any incoming keys take precedence
    key: to && to.key || key || createKey()
  });
  return location;
}
function createPath(_ref) {
  let {
    pathname = "/",
    search = "",
    hash: hash2 = ""
  } = _ref;
  if (search && search !== "?")
    pathname += search.charAt(0) === "?" ? search : "?" + search;
  if (hash2 && hash2 !== "#")
    pathname += hash2.charAt(0) === "#" ? hash2 : "#" + hash2;
  return pathname;
}
function parsePath(path) {
  let parsedPath = {};
  if (path) {
    let hashIndex = path.indexOf("#");
    if (hashIndex >= 0) {
      parsedPath.hash = path.substr(hashIndex);
      path = path.substr(0, hashIndex);
    }
    let searchIndex = path.indexOf("?");
    if (searchIndex >= 0) {
      parsedPath.search = path.substr(searchIndex);
      path = path.substr(0, searchIndex);
    }
    if (path) {
      parsedPath.pathname = path;
    }
  }
  return parsedPath;
}
function getUrlBasedHistory(getLocation, createHref, validateLocation, options) {
  if (options === void 0) {
    options = {};
  }
  let {
    window: window2 = document.defaultView,
    v5Compat = false
  } = options;
  let globalHistory = window2.history;
  let action = Action.Pop;
  let listener = null;
  let index2 = getIndex();
  if (index2 == null) {
    index2 = 0;
    globalHistory.replaceState(_extends$2({}, globalHistory.state, {
      idx: index2
    }), "");
  }
  function getIndex() {
    let state = globalHistory.state || {
      idx: null
    };
    return state.idx;
  }
  function handlePop() {
    action = Action.Pop;
    let nextIndex = getIndex();
    let delta = nextIndex == null ? null : nextIndex - index2;
    index2 = nextIndex;
    if (listener) {
      listener({
        action,
        location: history.location,
        delta
      });
    }
  }
  function push(to, state) {
    action = Action.Push;
    let location = createLocation(history.location, to, state);
    if (validateLocation)
      validateLocation(location, to);
    index2 = getIndex() + 1;
    let historyState = getHistoryState(location, index2);
    let url = history.createHref(location);
    try {
      globalHistory.pushState(historyState, "", url);
    } catch (error2) {
      if (error2 instanceof DOMException && error2.name === "DataCloneError") {
        throw error2;
      }
      window2.location.assign(url);
    }
    if (v5Compat && listener) {
      listener({
        action,
        location: history.location,
        delta: 1
      });
    }
  }
  function replace(to, state) {
    action = Action.Replace;
    let location = createLocation(history.location, to, state);
    if (validateLocation)
      validateLocation(location, to);
    index2 = getIndex();
    let historyState = getHistoryState(location, index2);
    let url = history.createHref(location);
    globalHistory.replaceState(historyState, "", url);
    if (v5Compat && listener) {
      listener({
        action,
        location: history.location,
        delta: 0
      });
    }
  }
  function createURL(to) {
    let base2 = window2.location.origin !== "null" ? window2.location.origin : window2.location.href;
    let href = typeof to === "string" ? to : createPath(to);
    invariant(base2, "No window.location.(origin|href) available to create URL for href: " + href);
    return new URL(href, base2);
  }
  let history = {
    get action() {
      return action;
    },
    get location() {
      return getLocation(window2, globalHistory);
    },
    listen(fn) {
      if (listener) {
        throw new Error("A history only accepts one active listener");
      }
      window2.addEventListener(PopStateEventType, handlePop);
      listener = fn;
      return () => {
        window2.removeEventListener(PopStateEventType, handlePop);
        listener = null;
      };
    },
    createHref(to) {
      return createHref(window2, to);
    },
    createURL,
    encodeLocation(to) {
      let url = createURL(to);
      return {
        pathname: url.pathname,
        search: url.search,
        hash: url.hash
      };
    },
    push,
    replace,
    go(n2) {
      return globalHistory.go(n2);
    }
  };
  return history;
}
var ResultType;
(function(ResultType2) {
  ResultType2["data"] = "data";
  ResultType2["deferred"] = "deferred";
  ResultType2["redirect"] = "redirect";
  ResultType2["error"] = "error";
})(ResultType || (ResultType = {}));
const immutableRouteKeys = /* @__PURE__ */ new Set(["lazy", "caseSensitive", "path", "id", "index", "children"]);
function isIndexRoute(route) {
  return route.index === true;
}
function convertRoutesToDataRoutes(routes, mapRouteProperties2, parentPath, manifest) {
  if (parentPath === void 0) {
    parentPath = [];
  }
  if (manifest === void 0) {
    manifest = {};
  }
  return routes.map((route, index2) => {
    let treePath = [...parentPath, index2];
    let id2 = typeof route.id === "string" ? route.id : treePath.join("-");
    invariant(route.index !== true || !route.children, "Cannot specify children on an index route");
    invariant(!manifest[id2], 'Found a route id collision on id "' + id2 + `".  Route id's must be globally unique within Data Router usages`);
    if (isIndexRoute(route)) {
      let indexRoute = _extends$2({}, route, mapRouteProperties2(route), {
        id: id2
      });
      manifest[id2] = indexRoute;
      return indexRoute;
    } else {
      let pathOrLayoutRoute = _extends$2({}, route, mapRouteProperties2(route), {
        id: id2,
        children: void 0
      });
      manifest[id2] = pathOrLayoutRoute;
      if (route.children) {
        pathOrLayoutRoute.children = convertRoutesToDataRoutes(route.children, mapRouteProperties2, treePath, manifest);
      }
      return pathOrLayoutRoute;
    }
  });
}
function matchRoutes(routes, locationArg, basename) {
  if (basename === void 0) {
    basename = "/";
  }
  let location = typeof locationArg === "string" ? parsePath(locationArg) : locationArg;
  let pathname = stripBasename(location.pathname || "/", basename);
  if (pathname == null) {
    return null;
  }
  let branches = flattenRoutes(routes);
  rankRouteBranches(branches);
  let matches = null;
  for (let i = 0; matches == null && i < branches.length; ++i) {
    matches = matchRouteBranch(
      branches[i],
      // Incoming pathnames are generally encoded from either window.location
      // or from router.navigate, but we want to match against the unencoded
      // paths in the route definitions.  Memory router locations won't be
      // encoded here but there also shouldn't be anything to decode so this
      // should be a safe operation.  This avoids needing matchRoutes to be
      // history-aware.
      safelyDecodeURI(pathname)
    );
  }
  return matches;
}
function convertRouteMatchToUiMatch(match2, loaderData) {
  let {
    route,
    pathname,
    params
  } = match2;
  return {
    id: route.id,
    pathname,
    params,
    data: loaderData[route.id],
    handle: route.handle
  };
}
function flattenRoutes(routes, branches, parentsMeta, parentPath) {
  if (branches === void 0) {
    branches = [];
  }
  if (parentsMeta === void 0) {
    parentsMeta = [];
  }
  if (parentPath === void 0) {
    parentPath = "";
  }
  let flattenRoute = (route, index2, relativePath) => {
    let meta = {
      relativePath: relativePath === void 0 ? route.path || "" : relativePath,
      caseSensitive: route.caseSensitive === true,
      childrenIndex: index2,
      route
    };
    if (meta.relativePath.startsWith("/")) {
      invariant(meta.relativePath.startsWith(parentPath), 'Absolute route path "' + meta.relativePath + '" nested under path ' + ('"' + parentPath + '" is not valid. An absolute child route path ') + "must start with the combined path of all its parent routes.");
      meta.relativePath = meta.relativePath.slice(parentPath.length);
    }
    let path = joinPaths([parentPath, meta.relativePath]);
    let routesMeta = parentsMeta.concat(meta);
    if (route.children && route.children.length > 0) {
      invariant(
        // Our types know better, but runtime JS may not!
        // @ts-expect-error
        route.index !== true,
        "Index routes must not have child routes. Please remove " + ('all child routes from route path "' + path + '".')
      );
      flattenRoutes(route.children, branches, routesMeta, path);
    }
    if (route.path == null && !route.index) {
      return;
    }
    branches.push({
      path,
      score: computeScore(path, route.index),
      routesMeta
    });
  };
  routes.forEach((route, index2) => {
    var _route$path;
    if (route.path === "" || !((_route$path = route.path) != null && _route$path.includes("?"))) {
      flattenRoute(route, index2);
    } else {
      for (let exploded of explodeOptionalSegments(route.path)) {
        flattenRoute(route, index2, exploded);
      }
    }
  });
  return branches;
}
function explodeOptionalSegments(path) {
  let segments = path.split("/");
  if (segments.length === 0)
    return [];
  let [first, ...rest] = segments;
  let isOptional = first.endsWith("?");
  let required = first.replace(/\?$/, "");
  if (rest.length === 0) {
    return isOptional ? [required, ""] : [required];
  }
  let restExploded = explodeOptionalSegments(rest.join("/"));
  let result = [];
  result.push(...restExploded.map((subpath) => subpath === "" ? required : [required, subpath].join("/")));
  if (isOptional) {
    result.push(...restExploded);
  }
  return result.map((exploded) => path.startsWith("/") && exploded === "" ? "/" : exploded);
}
function rankRouteBranches(branches) {
  branches.sort((a, b) => a.score !== b.score ? b.score - a.score : compareIndexes(a.routesMeta.map((meta) => meta.childrenIndex), b.routesMeta.map((meta) => meta.childrenIndex)));
}
const paramRe = /^:\w+$/;
const dynamicSegmentValue = 3;
const indexRouteValue = 2;
const emptySegmentValue = 1;
const staticSegmentValue = 10;
const splatPenalty = -2;
const isSplat = (s2) => s2 === "*";
function computeScore(path, index2) {
  let segments = path.split("/");
  let initialScore = segments.length;
  if (segments.some(isSplat)) {
    initialScore += splatPenalty;
  }
  if (index2) {
    initialScore += indexRouteValue;
  }
  return segments.filter((s2) => !isSplat(s2)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === "" ? emptySegmentValue : staticSegmentValue), initialScore);
}
function compareIndexes(a, b) {
  let siblings = a.length === b.length && a.slice(0, -1).every((n2, i) => n2 === b[i]);
  return siblings ? (
    // If two routes are siblings, we should try to match the earlier sibling
    // first. This allows people to have fine-grained control over the matching
    // behavior by simply putting routes with identical paths in the order they
    // want them tried.
    a[a.length - 1] - b[b.length - 1]
  ) : (
    // Otherwise, it doesn't really make sense to rank non-siblings by index,
    // so they sort equally.
    0
  );
}
function matchRouteBranch(branch, pathname) {
  let {
    routesMeta
  } = branch;
  let matchedParams = {};
  let matchedPathname = "/";
  let matches = [];
  for (let i = 0; i < routesMeta.length; ++i) {
    let meta = routesMeta[i];
    let end = i === routesMeta.length - 1;
    let remainingPathname = matchedPathname === "/" ? pathname : pathname.slice(matchedPathname.length) || "/";
    let match2 = matchPath({
      path: meta.relativePath,
      caseSensitive: meta.caseSensitive,
      end
    }, remainingPathname);
    if (!match2)
      return null;
    Object.assign(matchedParams, match2.params);
    let route = meta.route;
    matches.push({
      // TODO: Can this as be avoided?
      params: matchedParams,
      pathname: joinPaths([matchedPathname, match2.pathname]),
      pathnameBase: normalizePathname(joinPaths([matchedPathname, match2.pathnameBase])),
      route
    });
    if (match2.pathnameBase !== "/") {
      matchedPathname = joinPaths([matchedPathname, match2.pathnameBase]);
    }
  }
  return matches;
}
function matchPath(pattern, pathname) {
  if (typeof pattern === "string") {
    pattern = {
      path: pattern,
      caseSensitive: false,
      end: true
    };
  }
  let [matcher, paramNames] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);
  let match2 = pathname.match(matcher);
  if (!match2)
    return null;
  let matchedPathname = match2[0];
  let pathnameBase = matchedPathname.replace(/(.)\/+$/, "$1");
  let captureGroups = match2.slice(1);
  let params = paramNames.reduce((memo, paramName, index2) => {
    if (paramName === "*") {
      let splatValue = captureGroups[index2] || "";
      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\/+$/, "$1");
    }
    memo[paramName] = safelyDecodeURIComponent(captureGroups[index2] || "", paramName);
    return memo;
  }, {});
  return {
    params,
    pathname: matchedPathname,
    pathnameBase,
    pattern
  };
}
function compilePath(path, caseSensitive, end) {
  if (caseSensitive === void 0) {
    caseSensitive = false;
  }
  if (end === void 0) {
    end = true;
  }
  warning(path === "*" || !path.endsWith("*") || path.endsWith("/*"), 'Route path "' + path + '" will be treated as if it were ' + ('"' + path.replace(/\*$/, "/*") + '" because the `*` character must ') + "always follow a `/` in the pattern. To get rid of this warning, " + ('please change the route path to "' + path.replace(/\*$/, "/*") + '".'));
  let paramNames = [];
  let regexpSource = "^" + path.replace(/\/*\*?$/, "").replace(/^\/*/, "/").replace(/[\\.*+^$?{}|()[\]]/g, "\\$&").replace(/\/:(\w+)/g, (_, paramName) => {
    paramNames.push(paramName);
    return "/([^\\/]+)";
  });
  if (path.endsWith("*")) {
    paramNames.push("*");
    regexpSource += path === "*" || path === "/*" ? "(.*)$" : "(?:\\/(.+)|\\/*)$";
  } else if (end) {
    regexpSource += "\\/*$";
  } else if (path !== "" && path !== "/") {
    regexpSource += "(?:(?=\\/|$))";
  } else
    ;
  let matcher = new RegExp(regexpSource, caseSensitive ? void 0 : "i");
  return [matcher, paramNames];
}
function safelyDecodeURI(value) {
  try {
    return decodeURI(value);
  } catch (error2) {
    warning(false, 'The URL path "' + value + '" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent ' + ("encoding (" + error2 + ")."));
    return value;
  }
}
function safelyDecodeURIComponent(value, paramName) {
  try {
    return decodeURIComponent(value);
  } catch (error2) {
    warning(false, 'The value for the URL param "' + paramName + '" will not be decoded because' + (' the string "' + value + '" is a malformed URL segment. This is probably') + (" due to a bad percent encoding (" + error2 + ")."));
    return value;
  }
}
function stripBasename(pathname, basename) {
  if (basename === "/")
    return pathname;
  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {
    return null;
  }
  let startIndex = basename.endsWith("/") ? basename.length - 1 : basename.length;
  let nextChar = pathname.charAt(startIndex);
  if (nextChar && nextChar !== "/") {
    return null;
  }
  return pathname.slice(startIndex) || "/";
}
function resolvePath(to, fromPathname) {
  if (fromPathname === void 0) {
    fromPathname = "/";
  }
  let {
    pathname: toPathname,
    search = "",
    hash: hash2 = ""
  } = typeof to === "string" ? parsePath(to) : to;
  let pathname = toPathname ? toPathname.startsWith("/") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;
  return {
    pathname,
    search: normalizeSearch(search),
    hash: normalizeHash(hash2)
  };
}
function resolvePathname(relativePath, fromPathname) {
  let segments = fromPathname.replace(/\/+$/, "").split("/");
  let relativeSegments = relativePath.split("/");
  relativeSegments.forEach((segment) => {
    if (segment === "..") {
      if (segments.length > 1)
        segments.pop();
    } else if (segment !== ".") {
      segments.push(segment);
    }
  });
  return segments.length > 1 ? segments.join("/") : "/";
}
function getInvalidPathError(char, field, dest, path) {
  return "Cannot include a '" + char + "' character in a manually specified " + ("`to." + field + "` field [" + JSON.stringify(path) + "].  Please separate it out to the ") + ("`to." + dest + "` field. Alternatively you may provide the full path as ") + 'a string in <Link to="..."> and the router will parse it for you.';
}
function getPathContributingMatches(matches) {
  return matches.filter((match2, index2) => index2 === 0 || match2.route.path && match2.route.path.length > 0);
}
function resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {
  if (isPathRelative === void 0) {
    isPathRelative = false;
  }
  let to;
  if (typeof toArg === "string") {
    to = parsePath(toArg);
  } else {
    to = _extends$2({}, toArg);
    invariant(!to.pathname || !to.pathname.includes("?"), getInvalidPathError("?", "pathname", "search", to));
    invariant(!to.pathname || !to.pathname.includes("#"), getInvalidPathError("#", "pathname", "hash", to));
    invariant(!to.search || !to.search.includes("#"), getInvalidPathError("#", "search", "hash", to));
  }
  let isEmptyPath = toArg === "" || to.pathname === "";
  let toPathname = isEmptyPath ? "/" : to.pathname;
  let from;
  if (isPathRelative || toPathname == null) {
    from = locationPathname;
  } else {
    let routePathnameIndex = routePathnames.length - 1;
    if (toPathname.startsWith("..")) {
      let toSegments = toPathname.split("/");
      while (toSegments[0] === "..") {
        toSegments.shift();
        routePathnameIndex -= 1;
      }
      to.pathname = toSegments.join("/");
    }
    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : "/";
  }
  let path = resolvePath(to, from);
  let hasExplicitTrailingSlash = toPathname && toPathname !== "/" && toPathname.endsWith("/");
  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === ".") && locationPathname.endsWith("/");
  if (!path.pathname.endsWith("/") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {
    path.pathname += "/";
  }
  return path;
}
const joinPaths = (paths) => paths.join("/").replace(/\/\/+/g, "/");
const normalizePathname = (pathname) => pathname.replace(/\/+$/, "").replace(/^\/*/, "/");
const normalizeSearch = (search) => !search || search === "?" ? "" : search.startsWith("?") ? search : "?" + search;
const normalizeHash = (hash2) => !hash2 || hash2 === "#" ? "" : hash2.startsWith("#") ? hash2 : "#" + hash2;
class ErrorResponseImpl {
  constructor(status, statusText, data, internal) {
    if (internal === void 0) {
      internal = false;
    }
    this.status = status;
    this.statusText = statusText || "";
    this.internal = internal;
    if (data instanceof Error) {
      this.data = data.toString();
      this.error = data;
    } else {
      this.data = data;
    }
  }
}
function isRouteErrorResponse(error2) {
  return error2 != null && typeof error2.status === "number" && typeof error2.statusText === "string" && typeof error2.internal === "boolean" && "data" in error2;
}
const validMutationMethodsArr = ["post", "put", "patch", "delete"];
const validMutationMethods = new Set(validMutationMethodsArr);
const validRequestMethodsArr = ["get", ...validMutationMethodsArr];
const validRequestMethods = new Set(validRequestMethodsArr);
const redirectStatusCodes = /* @__PURE__ */ new Set([301, 302, 303, 307, 308]);
const redirectPreserveMethodStatusCodes = /* @__PURE__ */ new Set([307, 308]);
const IDLE_NAVIGATION = {
  state: "idle",
  location: void 0,
  formMethod: void 0,
  formAction: void 0,
  formEncType: void 0,
  formData: void 0,
  json: void 0,
  text: void 0
};
const IDLE_FETCHER = {
  state: "idle",
  data: void 0,
  formMethod: void 0,
  formAction: void 0,
  formEncType: void 0,
  formData: void 0,
  json: void 0,
  text: void 0
};
const IDLE_BLOCKER = {
  state: "unblocked",
  proceed: void 0,
  reset: void 0,
  location: void 0
};
const ABSOLUTE_URL_REGEX$1 = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i;
const defaultMapRouteProperties = (route) => ({
  hasErrorBoundary: Boolean(route.hasErrorBoundary)
});
function createRouter(init2) {
  const routerWindow = init2.window ? init2.window : typeof window !== "undefined" ? window : void 0;
  const isBrowser2 = typeof routerWindow !== "undefined" && typeof routerWindow.document !== "undefined" && typeof routerWindow.document.createElement !== "undefined";
  const isServer = !isBrowser2;
  invariant(init2.routes.length > 0, "You must provide a non-empty routes array to createRouter");
  let mapRouteProperties2;
  if (init2.mapRouteProperties) {
    mapRouteProperties2 = init2.mapRouteProperties;
  } else if (init2.detectErrorBoundary) {
    let detectErrorBoundary = init2.detectErrorBoundary;
    mapRouteProperties2 = (route) => ({
      hasErrorBoundary: detectErrorBoundary(route)
    });
  } else {
    mapRouteProperties2 = defaultMapRouteProperties;
  }
  let manifest = {};
  let dataRoutes = convertRoutesToDataRoutes(init2.routes, mapRouteProperties2, void 0, manifest);
  let inFlightDataRoutes;
  let basename = init2.basename || "/";
  let future = _extends$2({
    v7_normalizeFormMethod: false,
    v7_prependBasename: false
  }, init2.future);
  let unlistenHistory = null;
  let subscribers = /* @__PURE__ */ new Set();
  let savedScrollPositions = null;
  let getScrollRestorationKey = null;
  let getScrollPosition = null;
  let initialScrollRestored = init2.hydrationData != null;
  let initialMatches = matchRoutes(dataRoutes, init2.history.location, basename);
  let initialErrors = null;
  if (initialMatches == null) {
    let error2 = getInternalRouterError(404, {
      pathname: init2.history.location.pathname
    });
    let {
      matches,
      route
    } = getShortCircuitMatches(dataRoutes);
    initialMatches = matches;
    initialErrors = {
      [route.id]: error2
    };
  }
  let initialized = (
    // All initialMatches need to be loaded before we're ready.  If we have lazy
    // functions around still then we'll need to run them in initialize()
    !initialMatches.some((m2) => m2.route.lazy) && // And we have to either have no loaders or have been provided hydrationData
    (!initialMatches.some((m2) => m2.route.loader) || init2.hydrationData != null)
  );
  let router2;
  let state = {
    historyAction: init2.history.action,
    location: init2.history.location,
    matches: initialMatches,
    initialized,
    navigation: IDLE_NAVIGATION,
    // Don't restore on initial updateState() if we were SSR'd
    restoreScrollPosition: init2.hydrationData != null ? false : null,
    preventScrollReset: false,
    revalidation: "idle",
    loaderData: init2.hydrationData && init2.hydrationData.loaderData || {},
    actionData: init2.hydrationData && init2.hydrationData.actionData || null,
    errors: init2.hydrationData && init2.hydrationData.errors || initialErrors,
    fetchers: /* @__PURE__ */ new Map(),
    blockers: /* @__PURE__ */ new Map()
  };
  let pendingAction = Action.Pop;
  let pendingPreventScrollReset = false;
  let pendingNavigationController;
  let isUninterruptedRevalidation = false;
  let isRevalidationRequired = false;
  let cancelledDeferredRoutes = [];
  let cancelledFetcherLoads = [];
  let fetchControllers = /* @__PURE__ */ new Map();
  let incrementingLoadId = 0;
  let pendingNavigationLoadId = -1;
  let fetchReloadIds = /* @__PURE__ */ new Map();
  let fetchRedirectIds = /* @__PURE__ */ new Set();
  let fetchLoadMatches = /* @__PURE__ */ new Map();
  let activeDeferreds = /* @__PURE__ */ new Map();
  let blockerFunctions = /* @__PURE__ */ new Map();
  let ignoreNextHistoryUpdate = false;
  function initialize() {
    unlistenHistory = init2.history.listen((_ref) => {
      let {
        action: historyAction,
        location,
        delta
      } = _ref;
      if (ignoreNextHistoryUpdate) {
        ignoreNextHistoryUpdate = false;
        return;
      }
      warning(blockerFunctions.size === 0 || delta != null, "You are trying to use a blocker on a POP navigation to a location that was not created by @remix-run/router. This will fail silently in production. This can happen if you are navigating outside the router via `window.history.pushState`/`window.location.hash` instead of using router navigation APIs.  This can also happen if you are using createHashRouter and the user manually changes the URL.");
      let blockerKey = shouldBlockNavigation({
        currentLocation: state.location,
        nextLocation: location,
        historyAction
      });
      if (blockerKey && delta != null) {
        ignoreNextHistoryUpdate = true;
        init2.history.go(delta * -1);
        updateBlocker(blockerKey, {
          state: "blocked",
          location,
          proceed() {
            updateBlocker(blockerKey, {
              state: "proceeding",
              proceed: void 0,
              reset: void 0,
              location
            });
            init2.history.go(delta);
          },
          reset() {
            let blockers = new Map(state.blockers);
            blockers.set(blockerKey, IDLE_BLOCKER);
            updateState({
              blockers
            });
          }
        });
        return;
      }
      return startNavigation(historyAction, location);
    });
    if (!state.initialized) {
      startNavigation(Action.Pop, state.location);
    }
    return router2;
  }
  function dispose() {
    if (unlistenHistory) {
      unlistenHistory();
    }
    subscribers.clear();
    pendingNavigationController && pendingNavigationController.abort();
    state.fetchers.forEach((_, key) => deleteFetcher(key));
    state.blockers.forEach((_, key) => deleteBlocker(key));
  }
  function subscribe2(fn) {
    subscribers.add(fn);
    return () => subscribers.delete(fn);
  }
  function updateState(newState) {
    state = _extends$2({}, state, newState);
    subscribers.forEach((subscriber) => subscriber(state));
  }
  function completeNavigation(location, newState) {
    var _location$state, _location$state2;
    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === "loading" && ((_location$state = location.state) == null ? void 0 : _location$state._isRedirect) !== true;
    let actionData;
    if (newState.actionData) {
      if (Object.keys(newState.actionData).length > 0) {
        actionData = newState.actionData;
      } else {
        actionData = null;
      }
    } else if (isActionReload) {
      actionData = state.actionData;
    } else {
      actionData = null;
    }
    let loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData;
    let blockers = state.blockers;
    if (blockers.size > 0) {
      blockers = new Map(blockers);
      blockers.forEach((_, k2) => blockers.set(k2, IDLE_BLOCKER));
    }
    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && ((_location$state2 = location.state) == null ? void 0 : _location$state2._isRedirect) !== true;
    if (inFlightDataRoutes) {
      dataRoutes = inFlightDataRoutes;
      inFlightDataRoutes = void 0;
    }
    if (isUninterruptedRevalidation)
      ;
    else if (pendingAction === Action.Pop)
      ;
    else if (pendingAction === Action.Push) {
      init2.history.push(location, location.state);
    } else if (pendingAction === Action.Replace) {
      init2.history.replace(location, location.state);
    }
    updateState(_extends$2({}, newState, {
      actionData,
      loaderData,
      historyAction: pendingAction,
      location,
      initialized: true,
      navigation: IDLE_NAVIGATION,
      revalidation: "idle",
      restoreScrollPosition: getSavedScrollPosition(location, newState.matches || state.matches),
      preventScrollReset,
      blockers
    }));
    pendingAction = Action.Pop;
    pendingPreventScrollReset = false;
    isUninterruptedRevalidation = false;
    isRevalidationRequired = false;
    cancelledDeferredRoutes = [];
    cancelledFetcherLoads = [];
  }
  async function navigate(to, opts) {
    if (typeof to === "number") {
      init2.history.go(to);
      return;
    }
    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, to, opts == null ? void 0 : opts.fromRouteId, opts == null ? void 0 : opts.relative);
    let {
      path,
      submission,
      error: error2
    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, false, normalizedPath, opts);
    let currentLocation = state.location;
    let nextLocation = createLocation(state.location, path, opts && opts.state);
    nextLocation = _extends$2({}, nextLocation, init2.history.encodeLocation(nextLocation));
    let userReplace = opts && opts.replace != null ? opts.replace : void 0;
    let historyAction = Action.Push;
    if (userReplace === true) {
      historyAction = Action.Replace;
    } else if (userReplace === false)
      ;
    else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {
      historyAction = Action.Replace;
    }
    let preventScrollReset = opts && "preventScrollReset" in opts ? opts.preventScrollReset === true : void 0;
    let blockerKey = shouldBlockNavigation({
      currentLocation,
      nextLocation,
      historyAction
    });
    if (blockerKey) {
      updateBlocker(blockerKey, {
        state: "blocked",
        location: nextLocation,
        proceed() {
          updateBlocker(blockerKey, {
            state: "proceeding",
            proceed: void 0,
            reset: void 0,
            location: nextLocation
          });
          navigate(to, opts);
        },
        reset() {
          let blockers = new Map(state.blockers);
          blockers.set(blockerKey, IDLE_BLOCKER);
          updateState({
            blockers
          });
        }
      });
      return;
    }
    return await startNavigation(historyAction, nextLocation, {
      submission,
      // Send through the formData serialization error if we have one so we can
      // render at the right error boundary after we match routes
      pendingError: error2,
      preventScrollReset,
      replace: opts && opts.replace
    });
  }
  function revalidate() {
    interruptActiveLoads();
    updateState({
      revalidation: "loading"
    });
    if (state.navigation.state === "submitting") {
      return;
    }
    if (state.navigation.state === "idle") {
      startNavigation(state.historyAction, state.location, {
        startUninterruptedRevalidation: true
      });
      return;
    }
    startNavigation(pendingAction || state.historyAction, state.navigation.location, {
      overrideNavigation: state.navigation
    });
  }
  async function startNavigation(historyAction, location, opts) {
    pendingNavigationController && pendingNavigationController.abort();
    pendingNavigationController = null;
    pendingAction = historyAction;
    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;
    saveScrollPosition(state.location, state.matches);
    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;
    let routesToUse = inFlightDataRoutes || dataRoutes;
    let loadingNavigation = opts && opts.overrideNavigation;
    let matches = matchRoutes(routesToUse, location, basename);
    if (!matches) {
      let error2 = getInternalRouterError(404, {
        pathname: location.pathname
      });
      let {
        matches: notFoundMatches,
        route
      } = getShortCircuitMatches(routesToUse);
      cancelActiveDeferreds();
      completeNavigation(location, {
        matches: notFoundMatches,
        loaderData: {},
        errors: {
          [route.id]: error2
        }
      });
      return;
    }
    if (state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {
      completeNavigation(location, {
        matches
      });
      return;
    }
    pendingNavigationController = new AbortController();
    let request = createClientSideRequest(init2.history, location, pendingNavigationController.signal, opts && opts.submission);
    let pendingActionData;
    let pendingError;
    if (opts && opts.pendingError) {
      pendingError = {
        [findNearestBoundary(matches).route.id]: opts.pendingError
      };
    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {
      let actionOutput = await handleAction(request, location, opts.submission, matches, {
        replace: opts.replace
      });
      if (actionOutput.shortCircuited) {
        return;
      }
      pendingActionData = actionOutput.pendingActionData;
      pendingError = actionOutput.pendingActionError;
      loadingNavigation = getLoadingNavigation(location, opts.submission);
      request = new Request(request.url, {
        signal: request.signal
      });
    }
    let {
      shortCircuited,
      loaderData,
      errors
    } = await handleLoaders(request, location, matches, loadingNavigation, opts && opts.submission, opts && opts.fetcherSubmission, opts && opts.replace, pendingActionData, pendingError);
    if (shortCircuited) {
      return;
    }
    pendingNavigationController = null;
    completeNavigation(location, _extends$2({
      matches
    }, pendingActionData ? {
      actionData: pendingActionData
    } : {}, {
      loaderData,
      errors
    }));
  }
  async function handleAction(request, location, submission, matches, opts) {
    if (opts === void 0) {
      opts = {};
    }
    interruptActiveLoads();
    let navigation = getSubmittingNavigation(location, submission);
    updateState({
      navigation
    });
    let result;
    let actionMatch = getTargetMatch(matches, location);
    if (!actionMatch.route.action && !actionMatch.route.lazy) {
      result = {
        type: ResultType.error,
        error: getInternalRouterError(405, {
          method: request.method,
          pathname: location.pathname,
          routeId: actionMatch.route.id
        })
      };
    } else {
      result = await callLoaderOrAction("action", request, actionMatch, matches, manifest, mapRouteProperties2, basename);
      if (request.signal.aborted) {
        return {
          shortCircuited: true
        };
      }
    }
    if (isRedirectResult(result)) {
      let replace;
      if (opts && opts.replace != null) {
        replace = opts.replace;
      } else {
        replace = result.location === state.location.pathname + state.location.search;
      }
      await startRedirectNavigation(state, result, {
        submission,
        replace
      });
      return {
        shortCircuited: true
      };
    }
    if (isErrorResult(result)) {
      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);
      if ((opts && opts.replace) !== true) {
        pendingAction = Action.Push;
      }
      return {
        // Send back an empty object we can use to clear out any prior actionData
        pendingActionData: {},
        pendingActionError: {
          [boundaryMatch.route.id]: result.error
        }
      };
    }
    if (isDeferredResult(result)) {
      throw getInternalRouterError(400, {
        type: "defer-action"
      });
    }
    return {
      pendingActionData: {
        [actionMatch.route.id]: result.data
      }
    };
  }
  async function handleLoaders(request, location, matches, overrideNavigation, submission, fetcherSubmission, replace, pendingActionData, pendingError) {
    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);
    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);
    let routesToUse = inFlightDataRoutes || dataRoutes;
    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init2.history, state, matches, activeSubmission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionData, pendingError);
    cancelActiveDeferreds((routeId) => !(matches && matches.some((m2) => m2.route.id === routeId)) || matchesToLoad && matchesToLoad.some((m2) => m2.route.id === routeId));
    pendingNavigationLoadId = ++incrementingLoadId;
    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {
      let updatedFetchers2 = markFetchRedirectsDone();
      completeNavigation(location, _extends$2({
        matches,
        loaderData: {},
        // Commit pending error if we're short circuiting
        errors: pendingError || null
      }, pendingActionData ? {
        actionData: pendingActionData
      } : {}, updatedFetchers2 ? {
        fetchers: new Map(state.fetchers)
      } : {}));
      return {
        shortCircuited: true
      };
    }
    if (!isUninterruptedRevalidation) {
      revalidatingFetchers.forEach((rf2) => {
        let fetcher = state.fetchers.get(rf2.key);
        let revalidatingFetcher = getLoadingFetcher(void 0, fetcher ? fetcher.data : void 0);
        state.fetchers.set(rf2.key, revalidatingFetcher);
      });
      let actionData = pendingActionData || state.actionData;
      updateState(_extends$2({
        navigation: loadingNavigation
      }, actionData ? Object.keys(actionData).length === 0 ? {
        actionData: null
      } : {
        actionData
      } : {}, revalidatingFetchers.length > 0 ? {
        fetchers: new Map(state.fetchers)
      } : {}));
    }
    revalidatingFetchers.forEach((rf2) => {
      if (fetchControllers.has(rf2.key)) {
        abortFetcher(rf2.key);
      }
      if (rf2.controller) {
        fetchControllers.set(rf2.key, rf2.controller);
      }
    });
    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((f2) => abortFetcher(f2.key));
    if (pendingNavigationController) {
      pendingNavigationController.signal.addEventListener("abort", abortPendingFetchRevalidations);
    }
    let {
      results,
      loaderResults,
      fetcherResults
    } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, request);
    if (request.signal.aborted) {
      return {
        shortCircuited: true
      };
    }
    if (pendingNavigationController) {
      pendingNavigationController.signal.removeEventListener("abort", abortPendingFetchRevalidations);
    }
    revalidatingFetchers.forEach((rf2) => fetchControllers.delete(rf2.key));
    let redirect = findRedirect(results);
    if (redirect) {
      if (redirect.idx >= matchesToLoad.length) {
        let fetcherKey = revalidatingFetchers[redirect.idx - matchesToLoad.length].key;
        fetchRedirectIds.add(fetcherKey);
      }
      await startRedirectNavigation(state, redirect.result, {
        replace
      });
      return {
        shortCircuited: true
      };
    }
    let {
      loaderData,
      errors
    } = processLoaderData(state, matches, matchesToLoad, loaderResults, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds);
    activeDeferreds.forEach((deferredData, routeId) => {
      deferredData.subscribe((aborted) => {
        if (aborted || deferredData.done) {
          activeDeferreds.delete(routeId);
        }
      });
    });
    let updatedFetchers = markFetchRedirectsDone();
    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);
    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;
    return _extends$2({
      loaderData,
      errors
    }, shouldUpdateFetchers ? {
      fetchers: new Map(state.fetchers)
    } : {});
  }
  function getFetcher(key) {
    return state.fetchers.get(key) || IDLE_FETCHER;
  }
  function fetch2(key, routeId, href, opts) {
    if (isServer) {
      throw new Error("router.fetch() was called during the server render, but it shouldn't be. You are likely calling a useFetcher() method in the body of your component. Try moving it to a useEffect or a callback.");
    }
    if (fetchControllers.has(key))
      abortFetcher(key);
    let routesToUse = inFlightDataRoutes || dataRoutes;
    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, href, routeId, opts == null ? void 0 : opts.relative);
    let matches = matchRoutes(routesToUse, normalizedPath, basename);
    if (!matches) {
      setFetcherError(key, routeId, getInternalRouterError(404, {
        pathname: normalizedPath
      }));
      return;
    }
    let {
      path,
      submission,
      error: error2
    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, true, normalizedPath, opts);
    if (error2) {
      setFetcherError(key, routeId, error2);
      return;
    }
    let match2 = getTargetMatch(matches, path);
    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;
    if (submission && isMutationMethod(submission.formMethod)) {
      handleFetcherAction(key, routeId, path, match2, matches, submission);
      return;
    }
    fetchLoadMatches.set(key, {
      routeId,
      path
    });
    handleFetcherLoader(key, routeId, path, match2, matches, submission);
  }
  async function handleFetcherAction(key, routeId, path, match2, requestMatches, submission) {
    interruptActiveLoads();
    fetchLoadMatches.delete(key);
    if (!match2.route.action && !match2.route.lazy) {
      let error2 = getInternalRouterError(405, {
        method: submission.formMethod,
        pathname: path,
        routeId
      });
      setFetcherError(key, routeId, error2);
      return;
    }
    let existingFetcher = state.fetchers.get(key);
    let fetcher = getSubmittingFetcher(submission, existingFetcher);
    state.fetchers.set(key, fetcher);
    updateState({
      fetchers: new Map(state.fetchers)
    });
    let abortController = new AbortController();
    let fetchRequest = createClientSideRequest(init2.history, path, abortController.signal, submission);
    fetchControllers.set(key, abortController);
    let originatingLoadId = incrementingLoadId;
    let actionResult = await callLoaderOrAction("action", fetchRequest, match2, requestMatches, manifest, mapRouteProperties2, basename);
    if (fetchRequest.signal.aborted) {
      if (fetchControllers.get(key) === abortController) {
        fetchControllers.delete(key);
      }
      return;
    }
    if (isRedirectResult(actionResult)) {
      fetchControllers.delete(key);
      if (pendingNavigationLoadId > originatingLoadId) {
        let doneFetcher = getDoneFetcher(void 0);
        state.fetchers.set(key, doneFetcher);
        updateState({
          fetchers: new Map(state.fetchers)
        });
        return;
      } else {
        fetchRedirectIds.add(key);
        let loadingFetcher = getLoadingFetcher(submission);
        state.fetchers.set(key, loadingFetcher);
        updateState({
          fetchers: new Map(state.fetchers)
        });
        return startRedirectNavigation(state, actionResult, {
          fetcherSubmission: submission
        });
      }
    }
    if (isErrorResult(actionResult)) {
      setFetcherError(key, routeId, actionResult.error);
      return;
    }
    if (isDeferredResult(actionResult)) {
      throw getInternalRouterError(400, {
        type: "defer-action"
      });
    }
    let nextLocation = state.navigation.location || state.location;
    let revalidationRequest = createClientSideRequest(init2.history, nextLocation, abortController.signal);
    let routesToUse = inFlightDataRoutes || dataRoutes;
    let matches = state.navigation.state !== "idle" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;
    invariant(matches, "Didn't find any matches after fetcher action");
    let loadId = ++incrementingLoadId;
    fetchReloadIds.set(key, loadId);
    let loadFetcher = getLoadingFetcher(submission, actionResult.data);
    state.fetchers.set(key, loadFetcher);
    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(
      init2.history,
      state,
      matches,
      submission,
      nextLocation,
      isRevalidationRequired,
      cancelledDeferredRoutes,
      cancelledFetcherLoads,
      fetchLoadMatches,
      fetchRedirectIds,
      routesToUse,
      basename,
      {
        [match2.route.id]: actionResult.data
      },
      void 0
      // No need to send through errors since we short circuit above
    );
    revalidatingFetchers.filter((rf2) => rf2.key !== key).forEach((rf2) => {
      let staleKey = rf2.key;
      let existingFetcher2 = state.fetchers.get(staleKey);
      let revalidatingFetcher = getLoadingFetcher(void 0, existingFetcher2 ? existingFetcher2.data : void 0);
      state.fetchers.set(staleKey, revalidatingFetcher);
      if (fetchControllers.has(staleKey)) {
        abortFetcher(staleKey);
      }
      if (rf2.controller) {
        fetchControllers.set(staleKey, rf2.controller);
      }
    });
    updateState({
      fetchers: new Map(state.fetchers)
    });
    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((rf2) => abortFetcher(rf2.key));
    abortController.signal.addEventListener("abort", abortPendingFetchRevalidations);
    let {
      results,
      loaderResults,
      fetcherResults
    } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, revalidationRequest);
    if (abortController.signal.aborted) {
      return;
    }
    abortController.signal.removeEventListener("abort", abortPendingFetchRevalidations);
    fetchReloadIds.delete(key);
    fetchControllers.delete(key);
    revalidatingFetchers.forEach((r2) => fetchControllers.delete(r2.key));
    let redirect = findRedirect(results);
    if (redirect) {
      if (redirect.idx >= matchesToLoad.length) {
        let fetcherKey = revalidatingFetchers[redirect.idx - matchesToLoad.length].key;
        fetchRedirectIds.add(fetcherKey);
      }
      return startRedirectNavigation(state, redirect.result);
    }
    let {
      loaderData,
      errors
    } = processLoaderData(state, state.matches, matchesToLoad, loaderResults, void 0, revalidatingFetchers, fetcherResults, activeDeferreds);
    if (state.fetchers.has(key)) {
      let doneFetcher = getDoneFetcher(actionResult.data);
      state.fetchers.set(key, doneFetcher);
    }
    let didAbortFetchLoads = abortStaleFetchLoads(loadId);
    if (state.navigation.state === "loading" && loadId > pendingNavigationLoadId) {
      invariant(pendingAction, "Expected pending action");
      pendingNavigationController && pendingNavigationController.abort();
      completeNavigation(state.navigation.location, {
        matches,
        loaderData,
        errors,
        fetchers: new Map(state.fetchers)
      });
    } else {
      updateState(_extends$2({
        errors,
        loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors)
      }, didAbortFetchLoads || revalidatingFetchers.length > 0 ? {
        fetchers: new Map(state.fetchers)
      } : {}));
      isRevalidationRequired = false;
    }
  }
  async function handleFetcherLoader(key, routeId, path, match2, matches, submission) {
    let existingFetcher = state.fetchers.get(key);
    let loadingFetcher = getLoadingFetcher(submission, existingFetcher ? existingFetcher.data : void 0);
    state.fetchers.set(key, loadingFetcher);
    updateState({
      fetchers: new Map(state.fetchers)
    });
    let abortController = new AbortController();
    let fetchRequest = createClientSideRequest(init2.history, path, abortController.signal);
    fetchControllers.set(key, abortController);
    let originatingLoadId = incrementingLoadId;
    let result = await callLoaderOrAction("loader", fetchRequest, match2, matches, manifest, mapRouteProperties2, basename);
    if (isDeferredResult(result)) {
      result = await resolveDeferredData(result, fetchRequest.signal, true) || result;
    }
    if (fetchControllers.get(key) === abortController) {
      fetchControllers.delete(key);
    }
    if (fetchRequest.signal.aborted) {
      return;
    }
    if (isRedirectResult(result)) {
      if (pendingNavigationLoadId > originatingLoadId) {
        let doneFetcher2 = getDoneFetcher(void 0);
        state.fetchers.set(key, doneFetcher2);
        updateState({
          fetchers: new Map(state.fetchers)
        });
        return;
      } else {
        fetchRedirectIds.add(key);
        await startRedirectNavigation(state, result);
        return;
      }
    }
    if (isErrorResult(result)) {
      let boundaryMatch = findNearestBoundary(state.matches, routeId);
      state.fetchers.delete(key);
      updateState({
        fetchers: new Map(state.fetchers),
        errors: {
          [boundaryMatch.route.id]: result.error
        }
      });
      return;
    }
    invariant(!isDeferredResult(result), "Unhandled fetcher deferred data");
    let doneFetcher = getDoneFetcher(result.data);
    state.fetchers.set(key, doneFetcher);
    updateState({
      fetchers: new Map(state.fetchers)
    });
  }
  async function startRedirectNavigation(state2, redirect, _temp) {
    let {
      submission,
      fetcherSubmission,
      replace
    } = _temp === void 0 ? {} : _temp;
    if (redirect.revalidate) {
      isRevalidationRequired = true;
    }
    let redirectLocation = createLocation(state2.location, redirect.location, {
      _isRedirect: true
    });
    invariant(redirectLocation, "Expected a location on the redirect navigation");
    if (isBrowser2) {
      let isDocumentReload = false;
      if (redirect.reloadDocument) {
        isDocumentReload = true;
      } else if (ABSOLUTE_URL_REGEX$1.test(redirect.location)) {
        const url = init2.history.createURL(redirect.location);
        isDocumentReload = // Hard reload if it's an absolute URL to a new origin
        url.origin !== routerWindow.location.origin || // Hard reload if it's an absolute URL that does not match our basename
        stripBasename(url.pathname, basename) == null;
      }
      if (isDocumentReload) {
        if (replace) {
          routerWindow.location.replace(redirect.location);
        } else {
          routerWindow.location.assign(redirect.location);
        }
        return;
      }
    }
    pendingNavigationController = null;
    let redirectHistoryAction = replace === true ? Action.Replace : Action.Push;
    let {
      formMethod,
      formAction,
      formEncType
    } = state2.navigation;
    if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) {
      submission = getSubmissionFromNavigation(state2.navigation);
    }
    let activeSubmission = submission || fetcherSubmission;
    if (redirectPreserveMethodStatusCodes.has(redirect.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {
      await startNavigation(redirectHistoryAction, redirectLocation, {
        submission: _extends$2({}, activeSubmission, {
          formAction: redirect.location
        }),
        // Preserve this flag across redirects
        preventScrollReset: pendingPreventScrollReset
      });
    } else {
      let overrideNavigation = getLoadingNavigation(redirectLocation, submission);
      await startNavigation(redirectHistoryAction, redirectLocation, {
        overrideNavigation,
        // Send fetcher submissions through for shouldRevalidate
        fetcherSubmission,
        // Preserve this flag across redirects
        preventScrollReset: pendingPreventScrollReset
      });
    }
  }
  async function callLoadersAndMaybeResolveData(currentMatches, matches, matchesToLoad, fetchersToLoad, request) {
    let results = await Promise.all([...matchesToLoad.map((match2) => callLoaderOrAction("loader", request, match2, matches, manifest, mapRouteProperties2, basename)), ...fetchersToLoad.map((f2) => {
      if (f2.matches && f2.match && f2.controller) {
        return callLoaderOrAction("loader", createClientSideRequest(init2.history, f2.path, f2.controller.signal), f2.match, f2.matches, manifest, mapRouteProperties2, basename);
      } else {
        let error2 = {
          type: ResultType.error,
          error: getInternalRouterError(404, {
            pathname: f2.path
          })
        };
        return error2;
      }
    })]);
    let loaderResults = results.slice(0, matchesToLoad.length);
    let fetcherResults = results.slice(matchesToLoad.length);
    await Promise.all([resolveDeferredResults(currentMatches, matchesToLoad, loaderResults, loaderResults.map(() => request.signal), false, state.loaderData), resolveDeferredResults(currentMatches, fetchersToLoad.map((f2) => f2.match), fetcherResults, fetchersToLoad.map((f2) => f2.controller ? f2.controller.signal : null), true)]);
    return {
      results,
      loaderResults,
      fetcherResults
    };
  }
  function interruptActiveLoads() {
    isRevalidationRequired = true;
    cancelledDeferredRoutes.push(...cancelActiveDeferreds());
    fetchLoadMatches.forEach((_, key) => {
      if (fetchControllers.has(key)) {
        cancelledFetcherLoads.push(key);
        abortFetcher(key);
      }
    });
  }
  function setFetcherError(key, routeId, error2) {
    let boundaryMatch = findNearestBoundary(state.matches, routeId);
    deleteFetcher(key);
    updateState({
      errors: {
        [boundaryMatch.route.id]: error2
      },
      fetchers: new Map(state.fetchers)
    });
  }
  function deleteFetcher(key) {
    let fetcher = state.fetchers.get(key);
    if (fetchControllers.has(key) && !(fetcher && fetcher.state === "loading" && fetchReloadIds.has(key))) {
      abortFetcher(key);
    }
    fetchLoadMatches.delete(key);
    fetchReloadIds.delete(key);
    fetchRedirectIds.delete(key);
    state.fetchers.delete(key);
  }
  function abortFetcher(key) {
    let controller = fetchControllers.get(key);
    invariant(controller, "Expected fetch controller: " + key);
    controller.abort();
    fetchControllers.delete(key);
  }
  function markFetchersDone(keys) {
    for (let key of keys) {
      let fetcher = getFetcher(key);
      let doneFetcher = getDoneFetcher(fetcher.data);
      state.fetchers.set(key, doneFetcher);
    }
  }
  function markFetchRedirectsDone() {
    let doneKeys = [];
    let updatedFetchers = false;
    for (let key of fetchRedirectIds) {
      let fetcher = state.fetchers.get(key);
      invariant(fetcher, "Expected fetcher: " + key);
      if (fetcher.state === "loading") {
        fetchRedirectIds.delete(key);
        doneKeys.push(key);
        updatedFetchers = true;
      }
    }
    markFetchersDone(doneKeys);
    return updatedFetchers;
  }
  function abortStaleFetchLoads(landedId) {
    let yeetedKeys = [];
    for (let [key, id2] of fetchReloadIds) {
      if (id2 < landedId) {
        let fetcher = state.fetchers.get(key);
        invariant(fetcher, "Expected fetcher: " + key);
        if (fetcher.state === "loading") {
          abortFetcher(key);
          fetchReloadIds.delete(key);
          yeetedKeys.push(key);
        }
      }
    }
    markFetchersDone(yeetedKeys);
    return yeetedKeys.length > 0;
  }
  function getBlocker(key, fn) {
    let blocker = state.blockers.get(key) || IDLE_BLOCKER;
    if (blockerFunctions.get(key) !== fn) {
      blockerFunctions.set(key, fn);
    }
    return blocker;
  }
  function deleteBlocker(key) {
    state.blockers.delete(key);
    blockerFunctions.delete(key);
  }
  function updateBlocker(key, newBlocker) {
    let blocker = state.blockers.get(key) || IDLE_BLOCKER;
    invariant(blocker.state === "unblocked" && newBlocker.state === "blocked" || blocker.state === "blocked" && newBlocker.state === "blocked" || blocker.state === "blocked" && newBlocker.state === "proceeding" || blocker.state === "blocked" && newBlocker.state === "unblocked" || blocker.state === "proceeding" && newBlocker.state === "unblocked", "Invalid blocker state transition: " + blocker.state + " -> " + newBlocker.state);
    let blockers = new Map(state.blockers);
    blockers.set(key, newBlocker);
    updateState({
      blockers
    });
  }
  function shouldBlockNavigation(_ref2) {
    let {
      currentLocation,
      nextLocation,
      historyAction
    } = _ref2;
    if (blockerFunctions.size === 0) {
      return;
    }
    if (blockerFunctions.size > 1) {
      warning(false, "A router only supports one blocker at a time");
    }
    let entries = Array.from(blockerFunctions.entries());
    let [blockerKey, blockerFunction] = entries[entries.length - 1];
    let blocker = state.blockers.get(blockerKey);
    if (blocker && blocker.state === "proceeding") {
      return;
    }
    if (blockerFunction({
      currentLocation,
      nextLocation,
      historyAction
    })) {
      return blockerKey;
    }
  }
  function cancelActiveDeferreds(predicate) {
    let cancelledRouteIds = [];
    activeDeferreds.forEach((dfd, routeId) => {
      if (!predicate || predicate(routeId)) {
        dfd.cancel();
        cancelledRouteIds.push(routeId);
        activeDeferreds.delete(routeId);
      }
    });
    return cancelledRouteIds;
  }
  function enableScrollRestoration(positions, getPosition, getKey) {
    savedScrollPositions = positions;
    getScrollPosition = getPosition;
    getScrollRestorationKey = getKey || null;
    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {
      initialScrollRestored = true;
      let y2 = getSavedScrollPosition(state.location, state.matches);
      if (y2 != null) {
        updateState({
          restoreScrollPosition: y2
        });
      }
    }
    return () => {
      savedScrollPositions = null;
      getScrollPosition = null;
      getScrollRestorationKey = null;
    };
  }
  function getScrollKey(location, matches) {
    if (getScrollRestorationKey) {
      let key = getScrollRestorationKey(location, matches.map((m2) => convertRouteMatchToUiMatch(m2, state.loaderData)));
      return key || location.key;
    }
    return location.key;
  }
  function saveScrollPosition(location, matches) {
    if (savedScrollPositions && getScrollPosition) {
      let key = getScrollKey(location, matches);
      savedScrollPositions[key] = getScrollPosition();
    }
  }
  function getSavedScrollPosition(location, matches) {
    if (savedScrollPositions) {
      let key = getScrollKey(location, matches);
      let y2 = savedScrollPositions[key];
      if (typeof y2 === "number") {
        return y2;
      }
    }
    return null;
  }
  function _internalSetRoutes(newRoutes) {
    manifest = {};
    inFlightDataRoutes = convertRoutesToDataRoutes(newRoutes, mapRouteProperties2, void 0, manifest);
  }
  router2 = {
    get basename() {
      return basename;
    },
    get state() {
      return state;
    },
    get routes() {
      return dataRoutes;
    },
    initialize,
    subscribe: subscribe2,
    enableScrollRestoration,
    navigate,
    fetch: fetch2,
    revalidate,
    // Passthrough to history-aware createHref used by useHref so we get proper
    // hash-aware URLs in DOM paths
    createHref: (to) => init2.history.createHref(to),
    encodeLocation: (to) => init2.history.encodeLocation(to),
    getFetcher,
    deleteFetcher,
    dispose,
    getBlocker,
    deleteBlocker,
    _internalFetchControllers: fetchControllers,
    _internalActiveDeferreds: activeDeferreds,
    // TODO: Remove setRoutes, it's temporary to avoid dealing with
    // updating the tree while validating the update algorithm.
    _internalSetRoutes
  };
  return router2;
}
function isSubmissionNavigation(opts) {
  return opts != null && ("formData" in opts && opts.formData != null || "body" in opts && opts.body !== void 0);
}
function normalizeTo(location, matches, basename, prependBasename, to, fromRouteId, relative) {
  let contextualMatches;
  let activeRouteMatch;
  if (fromRouteId != null && relative !== "path") {
    contextualMatches = [];
    for (let match2 of matches) {
      contextualMatches.push(match2);
      if (match2.route.id === fromRouteId) {
        activeRouteMatch = match2;
        break;
      }
    }
  } else {
    contextualMatches = matches;
    activeRouteMatch = matches[matches.length - 1];
  }
  let path = resolveTo(to ? to : ".", getPathContributingMatches(contextualMatches).map((m2) => m2.pathnameBase), stripBasename(location.pathname, basename) || location.pathname, relative === "path");
  if (to == null) {
    path.search = location.search;
    path.hash = location.hash;
  }
  if ((to == null || to === "" || to === ".") && activeRouteMatch && activeRouteMatch.route.index && !hasNakedIndexQuery(path.search)) {
    path.search = path.search ? path.search.replace(/^\?/, "?index&") : "?index";
  }
  if (prependBasename && basename !== "/") {
    path.pathname = path.pathname === "/" ? basename : joinPaths([basename, path.pathname]);
  }
  return createPath(path);
}
function normalizeNavigateOptions(normalizeFormMethod, isFetcher, path, opts) {
  if (!opts || !isSubmissionNavigation(opts)) {
    return {
      path
    };
  }
  if (opts.formMethod && !isValidMethod(opts.formMethod)) {
    return {
      path,
      error: getInternalRouterError(405, {
        method: opts.formMethod
      })
    };
  }
  let getInvalidBodyError = () => ({
    path,
    error: getInternalRouterError(400, {
      type: "invalid-body"
    })
  });
  let rawFormMethod = opts.formMethod || "get";
  let formMethod = normalizeFormMethod ? rawFormMethod.toUpperCase() : rawFormMethod.toLowerCase();
  let formAction = stripHashFromPath(path);
  if (opts.body !== void 0) {
    if (opts.formEncType === "text/plain") {
      if (!isMutationMethod(formMethod)) {
        return getInvalidBodyError();
      }
      let text2 = typeof opts.body === "string" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ? (
        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data
        Array.from(opts.body.entries()).reduce((acc, _ref3) => {
          let [name, value] = _ref3;
          return "" + acc + name + "=" + value + "\n";
        }, "")
      ) : String(opts.body);
      return {
        path,
        submission: {
          formMethod,
          formAction,
          formEncType: opts.formEncType,
          formData: void 0,
          json: void 0,
          text: text2
        }
      };
    } else if (opts.formEncType === "application/json") {
      if (!isMutationMethod(formMethod)) {
        return getInvalidBodyError();
      }
      try {
        let json = typeof opts.body === "string" ? JSON.parse(opts.body) : opts.body;
        return {
          path,
          submission: {
            formMethod,
            formAction,
            formEncType: opts.formEncType,
            formData: void 0,
            json,
            text: void 0
          }
        };
      } catch (e) {
        return getInvalidBodyError();
      }
    }
  }
  invariant(typeof FormData === "function", "FormData is not available in this environment");
  let searchParams;
  let formData;
  if (opts.formData) {
    searchParams = convertFormDataToSearchParams(opts.formData);
    formData = opts.formData;
  } else if (opts.body instanceof FormData) {
    searchParams = convertFormDataToSearchParams(opts.body);
    formData = opts.body;
  } else if (opts.body instanceof URLSearchParams) {
    searchParams = opts.body;
    formData = convertSearchParamsToFormData(searchParams);
  } else if (opts.body == null) {
    searchParams = new URLSearchParams();
    formData = new FormData();
  } else {
    try {
      searchParams = new URLSearchParams(opts.body);
      formData = convertSearchParamsToFormData(searchParams);
    } catch (e) {
      return getInvalidBodyError();
    }
  }
  let submission = {
    formMethod,
    formAction,
    formEncType: opts && opts.formEncType || "application/x-www-form-urlencoded",
    formData,
    json: void 0,
    text: void 0
  };
  if (isMutationMethod(submission.formMethod)) {
    return {
      path,
      submission
    };
  }
  let parsedPath = parsePath(path);
  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {
    searchParams.append("index", "");
  }
  parsedPath.search = "?" + searchParams;
  return {
    path: createPath(parsedPath),
    submission
  };
}
function getLoaderMatchesUntilBoundary(matches, boundaryId) {
  let boundaryMatches = matches;
  if (boundaryId) {
    let index2 = matches.findIndex((m2) => m2.route.id === boundaryId);
    if (index2 >= 0) {
      boundaryMatches = matches.slice(0, index2);
    }
  }
  return boundaryMatches;
}
function getMatchesToLoad(history, state, matches, submission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionData, pendingError) {
  let actionResult = pendingError ? Object.values(pendingError)[0] : pendingActionData ? Object.values(pendingActionData)[0] : void 0;
  let currentUrl = history.createURL(state.location);
  let nextUrl = history.createURL(location);
  let boundaryId = pendingError ? Object.keys(pendingError)[0] : void 0;
  let boundaryMatches = getLoaderMatchesUntilBoundary(matches, boundaryId);
  let navigationMatches = boundaryMatches.filter((match2, index2) => {
    if (match2.route.lazy) {
      return true;
    }
    if (match2.route.loader == null) {
      return false;
    }
    if (isNewLoader(state.loaderData, state.matches[index2], match2) || cancelledDeferredRoutes.some((id2) => id2 === match2.route.id)) {
      return true;
    }
    let currentRouteMatch = state.matches[index2];
    let nextRouteMatch = match2;
    return shouldRevalidateLoader(match2, _extends$2({
      currentUrl,
      currentParams: currentRouteMatch.params,
      nextUrl,
      nextParams: nextRouteMatch.params
    }, submission, {
      actionResult,
      defaultShouldRevalidate: (
        // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate
        isRevalidationRequired || // Clicked the same link, resubmitted a GET form
        currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search || // Search params affect all loaders
        currentUrl.search !== nextUrl.search || isNewRouteInstance(currentRouteMatch, nextRouteMatch)
      )
    }));
  });
  let revalidatingFetchers = [];
  fetchLoadMatches.forEach((f2, key) => {
    if (!matches.some((m2) => m2.route.id === f2.routeId)) {
      return;
    }
    let fetcherMatches = matchRoutes(routesToUse, f2.path, basename);
    if (!fetcherMatches) {
      revalidatingFetchers.push({
        key,
        routeId: f2.routeId,
        path: f2.path,
        matches: null,
        match: null,
        controller: null
      });
      return;
    }
    let fetcher = state.fetchers.get(key);
    let fetcherMatch = getTargetMatch(fetcherMatches, f2.path);
    let shouldRevalidate = false;
    if (fetchRedirectIds.has(key)) {
      shouldRevalidate = false;
    } else if (cancelledFetcherLoads.includes(key)) {
      shouldRevalidate = true;
    } else if (fetcher && fetcher.state !== "idle" && fetcher.data === void 0) {
      shouldRevalidate = isRevalidationRequired;
    } else {
      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, _extends$2({
        currentUrl,
        currentParams: state.matches[state.matches.length - 1].params,
        nextUrl,
        nextParams: matches[matches.length - 1].params
      }, submission, {
        actionResult,
        defaultShouldRevalidate: isRevalidationRequired
      }));
    }
    if (shouldRevalidate) {
      revalidatingFetchers.push({
        key,
        routeId: f2.routeId,
        path: f2.path,
        matches: fetcherMatches,
        match: fetcherMatch,
        controller: new AbortController()
      });
    }
  });
  return [navigationMatches, revalidatingFetchers];
}
function isNewLoader(currentLoaderData, currentMatch, match2) {
  let isNew = (
    // [a] -> [a, b]
    !currentMatch || // [a, b] -> [a, c]
    match2.route.id !== currentMatch.route.id
  );
  let isMissingData = currentLoaderData[match2.route.id] === void 0;
  return isNew || isMissingData;
}
function isNewRouteInstance(currentMatch, match2) {
  let currentPath = currentMatch.route.path;
  return (
    // param change for this match, /users/123 -> /users/456
    currentMatch.pathname !== match2.pathname || // splat param changed, which is not present in match.path
    // e.g. /files/images/avatar.jpg -> files/finances.xls
    currentPath != null && currentPath.endsWith("*") && currentMatch.params["*"] !== match2.params["*"]
  );
}
function shouldRevalidateLoader(loaderMatch, arg) {
  if (loaderMatch.route.shouldRevalidate) {
    let routeChoice = loaderMatch.route.shouldRevalidate(arg);
    if (typeof routeChoice === "boolean") {
      return routeChoice;
    }
  }
  return arg.defaultShouldRevalidate;
}
async function loadLazyRouteModule(route, mapRouteProperties2, manifest) {
  if (!route.lazy) {
    return;
  }
  let lazyRoute = await route.lazy();
  if (!route.lazy) {
    return;
  }
  let routeToUpdate = manifest[route.id];
  invariant(routeToUpdate, "No route found in manifest");
  let routeUpdates = {};
  for (let lazyRouteProperty in lazyRoute) {
    let staticRouteValue = routeToUpdate[lazyRouteProperty];
    let isPropertyStaticallyDefined = staticRouteValue !== void 0 && // This property isn't static since it should always be updated based
    // on the route updates
    lazyRouteProperty !== "hasErrorBoundary";
    warning(!isPropertyStaticallyDefined, 'Route "' + routeToUpdate.id + '" has a static property "' + lazyRouteProperty + '" defined but its lazy function is also returning a value for this property. ' + ('The lazy route property "' + lazyRouteProperty + '" will be ignored.'));
    if (!isPropertyStaticallyDefined && !immutableRouteKeys.has(lazyRouteProperty)) {
      routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty];
    }
  }
  Object.assign(routeToUpdate, routeUpdates);
  Object.assign(routeToUpdate, _extends$2({}, mapRouteProperties2(routeToUpdate), {
    lazy: void 0
  }));
}
async function callLoaderOrAction(type, request, match2, matches, manifest, mapRouteProperties2, basename, opts) {
  if (opts === void 0) {
    opts = {};
  }
  let resultType;
  let result;
  let onReject;
  let runHandler = (handler) => {
    let reject;
    let abortPromise = new Promise((_, r2) => reject = r2);
    onReject = () => reject();
    request.signal.addEventListener("abort", onReject);
    return Promise.race([handler({
      request,
      params: match2.params,
      context: opts.requestContext
    }), abortPromise]);
  };
  try {
    let handler = match2.route[type];
    if (match2.route.lazy) {
      if (handler) {
        let handlerError;
        let values = await Promise.all([
          // If the handler throws, don't let it immediately bubble out,
          // since we need to let the lazy() execution finish so we know if this
          // route has a boundary that can handle the error
          runHandler(handler).catch((e) => {
            handlerError = e;
          }),
          loadLazyRouteModule(match2.route, mapRouteProperties2, manifest)
        ]);
        if (handlerError) {
          throw handlerError;
        }
        result = values[0];
      } else {
        await loadLazyRouteModule(match2.route, mapRouteProperties2, manifest);
        handler = match2.route[type];
        if (handler) {
          result = await runHandler(handler);
        } else if (type === "action") {
          let url = new URL(request.url);
          let pathname = url.pathname + url.search;
          throw getInternalRouterError(405, {
            method: request.method,
            pathname,
            routeId: match2.route.id
          });
        } else {
          return {
            type: ResultType.data,
            data: void 0
          };
        }
      }
    } else if (!handler) {
      let url = new URL(request.url);
      let pathname = url.pathname + url.search;
      throw getInternalRouterError(404, {
        pathname
      });
    } else {
      result = await runHandler(handler);
    }
    invariant(result !== void 0, "You defined " + (type === "action" ? "an action" : "a loader") + " for route " + ('"' + match2.route.id + "\" but didn't return anything from your `" + type + "` ") + "function. Please return a value or `null`.");
  } catch (e) {
    resultType = ResultType.error;
    result = e;
  } finally {
    if (onReject) {
      request.signal.removeEventListener("abort", onReject);
    }
  }
  if (isResponse(result)) {
    let status = result.status;
    if (redirectStatusCodes.has(status)) {
      let location = result.headers.get("Location");
      invariant(location, "Redirects returned/thrown from loaders/actions must have a Location header");
      if (!ABSOLUTE_URL_REGEX$1.test(location)) {
        location = normalizeTo(new URL(request.url), matches.slice(0, matches.indexOf(match2) + 1), basename, true, location);
      } else if (!opts.isStaticRequest) {
        let currentUrl = new URL(request.url);
        let url = location.startsWith("//") ? new URL(currentUrl.protocol + location) : new URL(location);
        let isSameBasename = stripBasename(url.pathname, basename) != null;
        if (url.origin === currentUrl.origin && isSameBasename) {
          location = url.pathname + url.search + url.hash;
        }
      }
      if (opts.isStaticRequest) {
        result.headers.set("Location", location);
        throw result;
      }
      return {
        type: ResultType.redirect,
        status,
        location,
        revalidate: result.headers.get("X-Remix-Revalidate") !== null,
        reloadDocument: result.headers.get("X-Remix-Reload-Document") !== null
      };
    }
    if (opts.isRouteRequest) {
      let queryRouteResponse = {
        type: resultType === ResultType.error ? ResultType.error : ResultType.data,
        response: result
      };
      throw queryRouteResponse;
    }
    let data;
    let contentType = result.headers.get("Content-Type");
    if (contentType && /\bapplication\/json\b/.test(contentType)) {
      data = await result.json();
    } else {
      data = await result.text();
    }
    if (resultType === ResultType.error) {
      return {
        type: resultType,
        error: new ErrorResponseImpl(status, result.statusText, data),
        headers: result.headers
      };
    }
    return {
      type: ResultType.data,
      data,
      statusCode: result.status,
      headers: result.headers
    };
  }
  if (resultType === ResultType.error) {
    return {
      type: resultType,
      error: result
    };
  }
  if (isDeferredData(result)) {
    var _result$init, _result$init2;
    return {
      type: ResultType.deferred,
      deferredData: result,
      statusCode: (_result$init = result.init) == null ? void 0 : _result$init.status,
      headers: ((_result$init2 = result.init) == null ? void 0 : _result$init2.headers) && new Headers(result.init.headers)
    };
  }
  return {
    type: ResultType.data,
    data: result
  };
}
function createClientSideRequest(history, location, signal, submission) {
  let url = history.createURL(stripHashFromPath(location)).toString();
  let init2 = {
    signal
  };
  if (submission && isMutationMethod(submission.formMethod)) {
    let {
      formMethod,
      formEncType
    } = submission;
    init2.method = formMethod.toUpperCase();
    if (formEncType === "application/json") {
      init2.headers = new Headers({
        "Content-Type": formEncType
      });
      init2.body = JSON.stringify(submission.json);
    } else if (formEncType === "text/plain") {
      init2.body = submission.text;
    } else if (formEncType === "application/x-www-form-urlencoded" && submission.formData) {
      init2.body = convertFormDataToSearchParams(submission.formData);
    } else {
      init2.body = submission.formData;
    }
  }
  return new Request(url, init2);
}
function convertFormDataToSearchParams(formData) {
  let searchParams = new URLSearchParams();
  for (let [key, value] of formData.entries()) {
    searchParams.append(key, typeof value === "string" ? value : value.name);
  }
  return searchParams;
}
function convertSearchParamsToFormData(searchParams) {
  let formData = new FormData();
  for (let [key, value] of searchParams.entries()) {
    formData.append(key, value);
  }
  return formData;
}
function processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds) {
  let loaderData = {};
  let errors = null;
  let statusCode;
  let foundError = false;
  let loaderHeaders = {};
  results.forEach((result, index2) => {
    let id2 = matchesToLoad[index2].route.id;
    invariant(!isRedirectResult(result), "Cannot handle redirect results in processLoaderData");
    if (isErrorResult(result)) {
      let boundaryMatch = findNearestBoundary(matches, id2);
      let error2 = result.error;
      if (pendingError) {
        error2 = Object.values(pendingError)[0];
        pendingError = void 0;
      }
      errors = errors || {};
      if (errors[boundaryMatch.route.id] == null) {
        errors[boundaryMatch.route.id] = error2;
      }
      loaderData[id2] = void 0;
      if (!foundError) {
        foundError = true;
        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;
      }
      if (result.headers) {
        loaderHeaders[id2] = result.headers;
      }
    } else {
      if (isDeferredResult(result)) {
        activeDeferreds.set(id2, result.deferredData);
        loaderData[id2] = result.deferredData.data;
      } else {
        loaderData[id2] = result.data;
      }
      if (result.statusCode != null && result.statusCode !== 200 && !foundError) {
        statusCode = result.statusCode;
      }
      if (result.headers) {
        loaderHeaders[id2] = result.headers;
      }
    }
  });
  if (pendingError) {
    errors = pendingError;
    loaderData[Object.keys(pendingError)[0]] = void 0;
  }
  return {
    loaderData,
    errors,
    statusCode: statusCode || 200,
    loaderHeaders
  };
}
function processLoaderData(state, matches, matchesToLoad, results, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds) {
  let {
    loaderData,
    errors
  } = processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds);
  for (let index2 = 0; index2 < revalidatingFetchers.length; index2++) {
    let {
      key,
      match: match2,
      controller
    } = revalidatingFetchers[index2];
    invariant(fetcherResults !== void 0 && fetcherResults[index2] !== void 0, "Did not find corresponding fetcher result");
    let result = fetcherResults[index2];
    if (controller && controller.signal.aborted) {
      continue;
    } else if (isErrorResult(result)) {
      let boundaryMatch = findNearestBoundary(state.matches, match2 == null ? void 0 : match2.route.id);
      if (!(errors && errors[boundaryMatch.route.id])) {
        errors = _extends$2({}, errors, {
          [boundaryMatch.route.id]: result.error
        });
      }
      state.fetchers.delete(key);
    } else if (isRedirectResult(result)) {
      invariant(false, "Unhandled fetcher revalidation redirect");
    } else if (isDeferredResult(result)) {
      invariant(false, "Unhandled fetcher deferred data");
    } else {
      let doneFetcher = getDoneFetcher(result.data);
      state.fetchers.set(key, doneFetcher);
    }
  }
  return {
    loaderData,
    errors
  };
}
function mergeLoaderData(loaderData, newLoaderData, matches, errors) {
  let mergedLoaderData = _extends$2({}, newLoaderData);
  for (let match2 of matches) {
    let id2 = match2.route.id;
    if (newLoaderData.hasOwnProperty(id2)) {
      if (newLoaderData[id2] !== void 0) {
        mergedLoaderData[id2] = newLoaderData[id2];
      }
    } else if (loaderData[id2] !== void 0 && match2.route.loader) {
      mergedLoaderData[id2] = loaderData[id2];
    }
    if (errors && errors.hasOwnProperty(id2)) {
      break;
    }
  }
  return mergedLoaderData;
}
function findNearestBoundary(matches, routeId) {
  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex((m2) => m2.route.id === routeId) + 1) : [...matches];
  return eligibleMatches.reverse().find((m2) => m2.route.hasErrorBoundary === true) || matches[0];
}
function getShortCircuitMatches(routes) {
  let route = routes.find((r2) => r2.index || !r2.path || r2.path === "/") || {
    id: "__shim-error-route__"
  };
  return {
    matches: [{
      params: {},
      pathname: "",
      pathnameBase: "",
      route
    }],
    route
  };
}
function getInternalRouterError(status, _temp4) {
  let {
    pathname,
    routeId,
    method,
    type
  } = _temp4 === void 0 ? {} : _temp4;
  let statusText = "Unknown Server Error";
  let errorMessage = "Unknown @remix-run/router error";
  if (status === 400) {
    statusText = "Bad Request";
    if (method && pathname && routeId) {
      errorMessage = "You made a " + method + ' request to "' + pathname + '" but ' + ('did not provide a `loader` for route "' + routeId + '", ') + "so there is no way to handle the request.";
    } else if (type === "defer-action") {
      errorMessage = "defer() is not supported in actions";
    } else if (type === "invalid-body") {
      errorMessage = "Unable to encode submission body";
    }
  } else if (status === 403) {
    statusText = "Forbidden";
    errorMessage = 'Route "' + routeId + '" does not match URL "' + pathname + '"';
  } else if (status === 404) {
    statusText = "Not Found";
    errorMessage = 'No route matches URL "' + pathname + '"';
  } else if (status === 405) {
    statusText = "Method Not Allowed";
    if (method && pathname && routeId) {
      errorMessage = "You made a " + method.toUpperCase() + ' request to "' + pathname + '" but ' + ('did not provide an `action` for route "' + routeId + '", ') + "so there is no way to handle the request.";
    } else if (method) {
      errorMessage = 'Invalid request method "' + method.toUpperCase() + '"';
    }
  }
  return new ErrorResponseImpl(status || 500, statusText, new Error(errorMessage), true);
}
function findRedirect(results) {
  for (let i = results.length - 1; i >= 0; i--) {
    let result = results[i];
    if (isRedirectResult(result)) {
      return {
        result,
        idx: i
      };
    }
  }
}
function stripHashFromPath(path) {
  let parsedPath = typeof path === "string" ? parsePath(path) : path;
  return createPath(_extends$2({}, parsedPath, {
    hash: ""
  }));
}
function isHashChangeOnly(a, b) {
  if (a.pathname !== b.pathname || a.search !== b.search) {
    return false;
  }
  if (a.hash === "") {
    return b.hash !== "";
  } else if (a.hash === b.hash) {
    return true;
  } else if (b.hash !== "") {
    return true;
  }
  return false;
}
function isDeferredResult(result) {
  return result.type === ResultType.deferred;
}
function isErrorResult(result) {
  return result.type === ResultType.error;
}
function isRedirectResult(result) {
  return (result && result.type) === ResultType.redirect;
}
function isDeferredData(value) {
  let deferred = value;
  return deferred && typeof deferred === "object" && typeof deferred.data === "object" && typeof deferred.subscribe === "function" && typeof deferred.cancel === "function" && typeof deferred.resolveData === "function";
}
function isResponse(value) {
  return value != null && typeof value.status === "number" && typeof value.statusText === "string" && typeof value.headers === "object" && typeof value.body !== "undefined";
}
function isValidMethod(method) {
  return validRequestMethods.has(method.toLowerCase());
}
function isMutationMethod(method) {
  return validMutationMethods.has(method.toLowerCase());
}
async function resolveDeferredResults(currentMatches, matchesToLoad, results, signals, isFetcher, currentLoaderData) {
  for (let index2 = 0; index2 < results.length; index2++) {
    let result = results[index2];
    let match2 = matchesToLoad[index2];
    if (!match2) {
      continue;
    }
    let currentMatch = currentMatches.find((m2) => m2.route.id === match2.route.id);
    let isRevalidatingLoader = currentMatch != null && !isNewRouteInstance(currentMatch, match2) && (currentLoaderData && currentLoaderData[match2.route.id]) !== void 0;
    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {
      let signal = signals[index2];
      invariant(signal, "Expected an AbortSignal for revalidating fetcher deferred result");
      await resolveDeferredData(result, signal, isFetcher).then((result2) => {
        if (result2) {
          results[index2] = result2 || results[index2];
        }
      });
    }
  }
}
async function resolveDeferredData(result, signal, unwrap) {
  if (unwrap === void 0) {
    unwrap = false;
  }
  let aborted = await result.deferredData.resolveData(signal);
  if (aborted) {
    return;
  }
  if (unwrap) {
    try {
      return {
        type: ResultType.data,
        data: result.deferredData.unwrappedData
      };
    } catch (e) {
      return {
        type: ResultType.error,
        error: e
      };
    }
  }
  return {
    type: ResultType.data,
    data: result.deferredData.data
  };
}
function hasNakedIndexQuery(search) {
  return new URLSearchParams(search).getAll("index").some((v2) => v2 === "");
}
function getTargetMatch(matches, location) {
  let search = typeof location === "string" ? parsePath(location).search : location.search;
  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || "")) {
    return matches[matches.length - 1];
  }
  let pathMatches = getPathContributingMatches(matches);
  return pathMatches[pathMatches.length - 1];
}
function getSubmissionFromNavigation(navigation) {
  let {
    formMethod,
    formAction,
    formEncType,
    text: text2,
    formData,
    json
  } = navigation;
  if (!formMethod || !formAction || !formEncType) {
    return;
  }
  if (text2 != null) {
    return {
      formMethod,
      formAction,
      formEncType,
      formData: void 0,
      json: void 0,
      text: text2
    };
  } else if (formData != null) {
    return {
      formMethod,
      formAction,
      formEncType,
      formData,
      json: void 0,
      text: void 0
    };
  } else if (json !== void 0) {
    return {
      formMethod,
      formAction,
      formEncType,
      formData: void 0,
      json,
      text: void 0
    };
  }
}
function getLoadingNavigation(location, submission) {
  if (submission) {
    let navigation = {
      state: "loading",
      location,
      formMethod: submission.formMethod,
      formAction: submission.formAction,
      formEncType: submission.formEncType,
      formData: submission.formData,
      json: submission.json,
      text: submission.text
    };
    return navigation;
  } else {
    let navigation = {
      state: "loading",
      location,
      formMethod: void 0,
      formAction: void 0,
      formEncType: void 0,
      formData: void 0,
      json: void 0,
      text: void 0
    };
    return navigation;
  }
}
function getSubmittingNavigation(location, submission) {
  let navigation = {
    state: "submitting",
    location,
    formMethod: submission.formMethod,
    formAction: submission.formAction,
    formEncType: submission.formEncType,
    formData: submission.formData,
    json: submission.json,
    text: submission.text
  };
  return navigation;
}
function getLoadingFetcher(submission, data) {
  if (submission) {
    let fetcher = {
      state: "loading",
      formMethod: submission.formMethod,
      formAction: submission.formAction,
      formEncType: submission.formEncType,
      formData: submission.formData,
      json: submission.json,
      text: submission.text,
      data
    };
    return fetcher;
  } else {
    let fetcher = {
      state: "loading",
      formMethod: void 0,
      formAction: void 0,
      formEncType: void 0,
      formData: void 0,
      json: void 0,
      text: void 0,
      data
    };
    return fetcher;
  }
}
function getSubmittingFetcher(submission, existingFetcher) {
  let fetcher = {
    state: "submitting",
    formMethod: submission.formMethod,
    formAction: submission.formAction,
    formEncType: submission.formEncType,
    formData: submission.formData,
    json: submission.json,
    text: submission.text,
    data: existingFetcher ? existingFetcher.data : void 0
  };
  return fetcher;
}
function getDoneFetcher(data) {
  let fetcher = {
    state: "idle",
    formMethod: void 0,
    formAction: void 0,
    formEncType: void 0,
    formData: void 0,
    json: void 0,
    text: void 0,
    data
  };
  return fetcher;
}
/**
 * React Router v6.16.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
function _extends$1() {
  _extends$1 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source2 = arguments[i];
      for (var key in source2) {
        if (Object.prototype.hasOwnProperty.call(source2, key)) {
          target[key] = source2[key];
        }
      }
    }
    return target;
  };
  return _extends$1.apply(this, arguments);
}
const DataRouterContext = /* @__PURE__ */ reactExports$1.createContext(null);
const DataRouterStateContext = /* @__PURE__ */ reactExports$1.createContext(null);
const NavigationContext = /* @__PURE__ */ reactExports$1.createContext(null);
const LocationContext = /* @__PURE__ */ reactExports$1.createContext(null);
const RouteContext = /* @__PURE__ */ reactExports$1.createContext({
  outlet: null,
  matches: [],
  isDataRoute: false
});
const RouteErrorContext = /* @__PURE__ */ reactExports$1.createContext(null);
function useHref(to, _temp) {
  let {
    relative
  } = _temp === void 0 ? {} : _temp;
  !useInRouterContext() ? invariant(false) : void 0;
  let {
    basename,
    navigator: navigator2
  } = reactExports$1.useContext(NavigationContext);
  let {
    hash: hash2,
    pathname,
    search
  } = useResolvedPath(to, {
    relative
  });
  let joinedPathname = pathname;
  if (basename !== "/") {
    joinedPathname = pathname === "/" ? basename : joinPaths([basename, pathname]);
  }
  return navigator2.createHref({
    pathname: joinedPathname,
    search,
    hash: hash2
  });
}
function useInRouterContext() {
  return reactExports$1.useContext(LocationContext) != null;
}
function useLocation() {
  !useInRouterContext() ? invariant(false) : void 0;
  return reactExports$1.useContext(LocationContext).location;
}
function useIsomorphicLayoutEffect(cb2) {
  let isStatic = reactExports$1.useContext(NavigationContext).static;
  if (!isStatic) {
    reactExports$1.useLayoutEffect(cb2);
  }
}
function useNavigate() {
  let {
    isDataRoute
  } = reactExports$1.useContext(RouteContext);
  return isDataRoute ? useNavigateStable() : useNavigateUnstable();
}
function useNavigateUnstable() {
  !useInRouterContext() ? invariant(false) : void 0;
  let dataRouterContext = reactExports$1.useContext(DataRouterContext);
  let {
    basename,
    navigator: navigator2
  } = reactExports$1.useContext(NavigationContext);
  let {
    matches
  } = reactExports$1.useContext(RouteContext);
  let {
    pathname: locationPathname
  } = useLocation();
  let routePathnamesJson = JSON.stringify(getPathContributingMatches(matches).map((match2) => match2.pathnameBase));
  let activeRef = reactExports$1.useRef(false);
  useIsomorphicLayoutEffect(() => {
    activeRef.current = true;
  });
  let navigate = reactExports$1.useCallback(function(to, options) {
    if (options === void 0) {
      options = {};
    }
    if (!activeRef.current)
      return;
    if (typeof to === "number") {
      navigator2.go(to);
      return;
    }
    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === "path");
    if (dataRouterContext == null && basename !== "/") {
      path.pathname = path.pathname === "/" ? basename : joinPaths([basename, path.pathname]);
    }
    (!!options.replace ? navigator2.replace : navigator2.push)(path, options.state, options);
  }, [basename, navigator2, routePathnamesJson, locationPathname, dataRouterContext]);
  return navigate;
}
const OutletContext = /* @__PURE__ */ reactExports$1.createContext(null);
function useOutlet(context) {
  let outlet = reactExports$1.useContext(RouteContext).outlet;
  if (outlet) {
    return /* @__PURE__ */ reactExports$1.createElement(OutletContext.Provider, {
      value: context
    }, outlet);
  }
  return outlet;
}
function useResolvedPath(to, _temp2) {
  let {
    relative
  } = _temp2 === void 0 ? {} : _temp2;
  let {
    matches
  } = reactExports$1.useContext(RouteContext);
  let {
    pathname: locationPathname
  } = useLocation();
  let routePathnamesJson = JSON.stringify(getPathContributingMatches(matches).map((match2) => match2.pathnameBase));
  return reactExports$1.useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === "path"), [to, routePathnamesJson, locationPathname, relative]);
}
function useRoutesImpl(routes, locationArg, dataRouterState) {
  !useInRouterContext() ? invariant(false) : void 0;
  let {
    navigator: navigator2
  } = reactExports$1.useContext(NavigationContext);
  let {
    matches: parentMatches
  } = reactExports$1.useContext(RouteContext);
  let routeMatch = parentMatches[parentMatches.length - 1];
  let parentParams = routeMatch ? routeMatch.params : {};
  routeMatch ? routeMatch.pathname : "/";
  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : "/";
  routeMatch && routeMatch.route;
  let locationFromContext = useLocation();
  let location;
  if (locationArg) {
    var _parsedLocationArg$pa;
    let parsedLocationArg = typeof locationArg === "string" ? parsePath(locationArg) : locationArg;
    !(parentPathnameBase === "/" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? invariant(false) : void 0;
    location = parsedLocationArg;
  } else {
    location = locationFromContext;
  }
  let pathname = location.pathname || "/";
  let remainingPathname = parentPathnameBase === "/" ? pathname : pathname.slice(parentPathnameBase.length) || "/";
  let matches = matchRoutes(routes, {
    pathname: remainingPathname
  });
  let renderedMatches = _renderMatches(matches && matches.map((match2) => Object.assign({}, match2, {
    params: Object.assign({}, parentParams, match2.params),
    pathname: joinPaths([
      parentPathnameBase,
      // Re-encode pathnames that were decoded inside matchRoutes
      navigator2.encodeLocation ? navigator2.encodeLocation(match2.pathname).pathname : match2.pathname
    ]),
    pathnameBase: match2.pathnameBase === "/" ? parentPathnameBase : joinPaths([
      parentPathnameBase,
      // Re-encode pathnames that were decoded inside matchRoutes
      navigator2.encodeLocation ? navigator2.encodeLocation(match2.pathnameBase).pathname : match2.pathnameBase
    ])
  })), parentMatches, dataRouterState);
  if (locationArg && renderedMatches) {
    return /* @__PURE__ */ reactExports$1.createElement(LocationContext.Provider, {
      value: {
        location: _extends$1({
          pathname: "/",
          search: "",
          hash: "",
          state: null,
          key: "default"
        }, location),
        navigationType: Action.Pop
      }
    }, renderedMatches);
  }
  return renderedMatches;
}
function DefaultErrorComponent() {
  let error2 = useRouteError();
  let message = isRouteErrorResponse(error2) ? error2.status + " " + error2.statusText : error2 instanceof Error ? error2.message : JSON.stringify(error2);
  let stack = error2 instanceof Error ? error2.stack : null;
  let lightgrey = "rgba(200,200,200, 0.5)";
  let preStyles = {
    padding: "0.5rem",
    backgroundColor: lightgrey
  };
  let devInfo = null;
  return /* @__PURE__ */ reactExports$1.createElement(reactExports$1.Fragment, null, /* @__PURE__ */ reactExports$1.createElement("h2", null, "Unexpected Application Error!"), /* @__PURE__ */ reactExports$1.createElement("h3", {
    style: {
      fontStyle: "italic"
    }
  }, message), stack ? /* @__PURE__ */ reactExports$1.createElement("pre", {
    style: preStyles
  }, stack) : null, devInfo);
}
const defaultErrorElement = /* @__PURE__ */ reactExports$1.createElement(DefaultErrorComponent, null);
class RenderErrorBoundary extends reactExports$1.Component {
  constructor(props) {
    super(props);
    this.state = {
      location: props.location,
      revalidation: props.revalidation,
      error: props.error
    };
  }
  static getDerivedStateFromError(error2) {
    return {
      error: error2
    };
  }
  static getDerivedStateFromProps(props, state) {
    if (state.location !== props.location || state.revalidation !== "idle" && props.revalidation === "idle") {
      return {
        error: props.error,
        location: props.location,
        revalidation: props.revalidation
      };
    }
    return {
      error: props.error || state.error,
      location: state.location,
      revalidation: props.revalidation || state.revalidation
    };
  }
  componentDidCatch(error2, errorInfo) {
    console.error("React Router caught the following error during render", error2, errorInfo);
  }
  render() {
    return this.state.error ? /* @__PURE__ */ reactExports$1.createElement(RouteContext.Provider, {
      value: this.props.routeContext
    }, /* @__PURE__ */ reactExports$1.createElement(RouteErrorContext.Provider, {
      value: this.state.error,
      children: this.props.component
    })) : this.props.children;
  }
}
function RenderedRoute(_ref) {
  let {
    routeContext,
    match: match2,
    children: children2
  } = _ref;
  let dataRouterContext = reactExports$1.useContext(DataRouterContext);
  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match2.route.errorElement || match2.route.ErrorBoundary)) {
    dataRouterContext.staticContext._deepestRenderedBoundaryId = match2.route.id;
  }
  return /* @__PURE__ */ reactExports$1.createElement(RouteContext.Provider, {
    value: routeContext
  }, children2);
}
function _renderMatches(matches, parentMatches, dataRouterState) {
  var _dataRouterState2;
  if (parentMatches === void 0) {
    parentMatches = [];
  }
  if (dataRouterState === void 0) {
    dataRouterState = null;
  }
  if (matches == null) {
    var _dataRouterState;
    if ((_dataRouterState = dataRouterState) != null && _dataRouterState.errors) {
      matches = dataRouterState.matches;
    } else {
      return null;
    }
  }
  let renderedMatches = matches;
  let errors = (_dataRouterState2 = dataRouterState) == null ? void 0 : _dataRouterState2.errors;
  if (errors != null) {
    let errorIndex = renderedMatches.findIndex((m2) => m2.route.id && (errors == null ? void 0 : errors[m2.route.id]));
    !(errorIndex >= 0) ? invariant(false) : void 0;
    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));
  }
  return renderedMatches.reduceRight((outlet, match2, index2) => {
    let error2 = match2.route.id ? errors == null ? void 0 : errors[match2.route.id] : null;
    let errorElement = null;
    if (dataRouterState) {
      errorElement = match2.route.errorElement || defaultErrorElement;
    }
    let matches2 = parentMatches.concat(renderedMatches.slice(0, index2 + 1));
    let getChildren = () => {
      let children2;
      if (error2) {
        children2 = errorElement;
      } else if (match2.route.Component) {
        children2 = /* @__PURE__ */ reactExports$1.createElement(match2.route.Component, null);
      } else if (match2.route.element) {
        children2 = match2.route.element;
      } else {
        children2 = outlet;
      }
      return /* @__PURE__ */ reactExports$1.createElement(RenderedRoute, {
        match: match2,
        routeContext: {
          outlet,
          matches: matches2,
          isDataRoute: dataRouterState != null
        },
        children: children2
      });
    };
    return dataRouterState && (match2.route.ErrorBoundary || match2.route.errorElement || index2 === 0) ? /* @__PURE__ */ reactExports$1.createElement(RenderErrorBoundary, {
      location: dataRouterState.location,
      revalidation: dataRouterState.revalidation,
      component: errorElement,
      error: error2,
      children: getChildren(),
      routeContext: {
        outlet: null,
        matches: matches2,
        isDataRoute: true
      }
    }) : getChildren();
  }, null);
}
var DataRouterHook$1 = /* @__PURE__ */ function(DataRouterHook2) {
  DataRouterHook2["UseBlocker"] = "useBlocker";
  DataRouterHook2["UseRevalidator"] = "useRevalidator";
  DataRouterHook2["UseNavigateStable"] = "useNavigate";
  return DataRouterHook2;
}(DataRouterHook$1 || {});
var DataRouterStateHook$1 = /* @__PURE__ */ function(DataRouterStateHook2) {
  DataRouterStateHook2["UseBlocker"] = "useBlocker";
  DataRouterStateHook2["UseLoaderData"] = "useLoaderData";
  DataRouterStateHook2["UseActionData"] = "useActionData";
  DataRouterStateHook2["UseRouteError"] = "useRouteError";
  DataRouterStateHook2["UseNavigation"] = "useNavigation";
  DataRouterStateHook2["UseRouteLoaderData"] = "useRouteLoaderData";
  DataRouterStateHook2["UseMatches"] = "useMatches";
  DataRouterStateHook2["UseRevalidator"] = "useRevalidator";
  DataRouterStateHook2["UseNavigateStable"] = "useNavigate";
  DataRouterStateHook2["UseRouteId"] = "useRouteId";
  return DataRouterStateHook2;
}(DataRouterStateHook$1 || {});
function useDataRouterContext(hookName) {
  let ctx = reactExports$1.useContext(DataRouterContext);
  !ctx ? invariant(false) : void 0;
  return ctx;
}
function useDataRouterState(hookName) {
  let state = reactExports$1.useContext(DataRouterStateContext);
  !state ? invariant(false) : void 0;
  return state;
}
function useRouteContext(hookName) {
  let route = reactExports$1.useContext(RouteContext);
  !route ? invariant(false) : void 0;
  return route;
}
function useCurrentRouteId(hookName) {
  let route = useRouteContext();
  let thisRoute = route.matches[route.matches.length - 1];
  !thisRoute.route.id ? invariant(false) : void 0;
  return thisRoute.route.id;
}
function useRouteError() {
  var _state$errors;
  let error2 = reactExports$1.useContext(RouteErrorContext);
  let state = useDataRouterState(DataRouterStateHook$1.UseRouteError);
  let routeId = useCurrentRouteId(DataRouterStateHook$1.UseRouteError);
  if (error2) {
    return error2;
  }
  return (_state$errors = state.errors) == null ? void 0 : _state$errors[routeId];
}
function useNavigateStable() {
  let {
    router: router2
  } = useDataRouterContext(DataRouterHook$1.UseNavigateStable);
  let id2 = useCurrentRouteId(DataRouterStateHook$1.UseNavigateStable);
  let activeRef = reactExports$1.useRef(false);
  useIsomorphicLayoutEffect(() => {
    activeRef.current = true;
  });
  let navigate = reactExports$1.useCallback(function(to, options) {
    if (options === void 0) {
      options = {};
    }
    if (!activeRef.current)
      return;
    if (typeof to === "number") {
      router2.navigate(to);
    } else {
      router2.navigate(to, _extends$1({
        fromRouteId: id2
      }, options));
    }
  }, [router2, id2]);
  return navigate;
}
const START_TRANSITION = "startTransition";
const startTransitionImpl = React$1[START_TRANSITION];
function RouterProvider(_ref) {
  let {
    fallbackElement,
    router: router2,
    future
  } = _ref;
  let [state, setStateImpl] = reactExports$1.useState(router2.state);
  let {
    v7_startTransition
  } = future || {};
  let setState = reactExports$1.useCallback((newState) => {
    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);
  }, [setStateImpl, v7_startTransition]);
  reactExports$1.useLayoutEffect(() => router2.subscribe(setState), [router2, setState]);
  let navigator2 = reactExports$1.useMemo(() => {
    return {
      createHref: router2.createHref,
      encodeLocation: router2.encodeLocation,
      go: (n2) => router2.navigate(n2),
      push: (to, state2, opts) => router2.navigate(to, {
        state: state2,
        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset
      }),
      replace: (to, state2, opts) => router2.navigate(to, {
        replace: true,
        state: state2,
        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset
      })
    };
  }, [router2]);
  let basename = router2.basename || "/";
  let dataRouterContext = reactExports$1.useMemo(() => ({
    router: router2,
    navigator: navigator2,
    static: false,
    basename
  }), [router2, navigator2, basename]);
  return /* @__PURE__ */ reactExports$1.createElement(reactExports$1.Fragment, null, /* @__PURE__ */ reactExports$1.createElement(DataRouterContext.Provider, {
    value: dataRouterContext
  }, /* @__PURE__ */ reactExports$1.createElement(DataRouterStateContext.Provider, {
    value: state
  }, /* @__PURE__ */ reactExports$1.createElement(Router, {
    basename,
    location: state.location,
    navigationType: state.historyAction,
    navigator: navigator2
  }, state.initialized ? /* @__PURE__ */ reactExports$1.createElement(DataRoutes, {
    routes: router2.routes,
    state
  }) : fallbackElement))), null);
}
function DataRoutes(_ref2) {
  let {
    routes,
    state
  } = _ref2;
  return useRoutesImpl(routes, void 0, state);
}
function Outlet(props) {
  return useOutlet(props.context);
}
function Route(_props) {
  invariant(false);
}
function Router(_ref5) {
  let {
    basename: basenameProp = "/",
    children: children2 = null,
    location: locationProp,
    navigationType = Action.Pop,
    navigator: navigator2,
    static: staticProp = false
  } = _ref5;
  !!useInRouterContext() ? invariant(false) : void 0;
  let basename = basenameProp.replace(/^\/*/, "/");
  let navigationContext = reactExports$1.useMemo(() => ({
    basename,
    navigator: navigator2,
    static: staticProp
  }), [basename, navigator2, staticProp]);
  if (typeof locationProp === "string") {
    locationProp = parsePath(locationProp);
  }
  let {
    pathname = "/",
    search = "",
    hash: hash2 = "",
    state = null,
    key = "default"
  } = locationProp;
  let locationContext = reactExports$1.useMemo(() => {
    let trailingPathname = stripBasename(pathname, basename);
    if (trailingPathname == null) {
      return null;
    }
    return {
      location: {
        pathname: trailingPathname,
        search,
        hash: hash2,
        state,
        key
      },
      navigationType
    };
  }, [basename, pathname, search, hash2, state, key, navigationType]);
  if (locationContext == null) {
    return null;
  }
  return /* @__PURE__ */ reactExports$1.createElement(NavigationContext.Provider, {
    value: navigationContext
  }, /* @__PURE__ */ reactExports$1.createElement(LocationContext.Provider, {
    children: children2,
    value: locationContext
  }));
}
new Promise(() => {
});
function createRoutesFromChildren(children2, parentPath) {
  if (parentPath === void 0) {
    parentPath = [];
  }
  let routes = [];
  reactExports$1.Children.forEach(children2, (element2, index2) => {
    if (!/* @__PURE__ */ reactExports$1.isValidElement(element2)) {
      return;
    }
    let treePath = [...parentPath, index2];
    if (element2.type === reactExports$1.Fragment) {
      routes.push.apply(routes, createRoutesFromChildren(element2.props.children, treePath));
      return;
    }
    !(element2.type === Route) ? invariant(false) : void 0;
    !(!element2.props.index || !element2.props.children) ? invariant(false) : void 0;
    let route = {
      id: element2.props.id || treePath.join("-"),
      caseSensitive: element2.props.caseSensitive,
      element: element2.props.element,
      Component: element2.props.Component,
      index: element2.props.index,
      path: element2.props.path,
      loader: element2.props.loader,
      action: element2.props.action,
      errorElement: element2.props.errorElement,
      ErrorBoundary: element2.props.ErrorBoundary,
      hasErrorBoundary: element2.props.ErrorBoundary != null || element2.props.errorElement != null,
      shouldRevalidate: element2.props.shouldRevalidate,
      handle: element2.props.handle,
      lazy: element2.props.lazy
    };
    if (element2.props.children) {
      route.children = createRoutesFromChildren(element2.props.children, treePath);
    }
    routes.push(route);
  });
  return routes;
}
function mapRouteProperties(route) {
  let updates = {
    // Note: this check also occurs in createRoutesFromChildren so update
    // there if you change this -- please and thank you!
    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null
  };
  if (route.Component) {
    Object.assign(updates, {
      element: /* @__PURE__ */ reactExports$1.createElement(route.Component),
      Component: void 0
    });
  }
  if (route.ErrorBoundary) {
    Object.assign(updates, {
      errorElement: /* @__PURE__ */ reactExports$1.createElement(route.ErrorBoundary),
      ErrorBoundary: void 0
    });
  }
  return updates;
}
/**
 * React Router DOM v6.16.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source2 = arguments[i];
      for (var key in source2) {
        if (Object.prototype.hasOwnProperty.call(source2, key)) {
          target[key] = source2[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
function _objectWithoutPropertiesLoose(source2, excluded) {
  if (source2 == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source2);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source2[key];
  }
  return target;
}
function isModifiedEvent(event) {
  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
}
function shouldProcessLinkClick(event, target) {
  return event.button === 0 && // Ignore everything but left clicks
  (!target || target === "_self") && // Let browser handle "target=_blank" etc.
  !isModifiedEvent(event);
}
const _excluded = ["onClick", "relative", "reloadDocument", "replace", "state", "target", "to", "preventScrollReset"];
function createBrowserRouter(routes, opts) {
  return createRouter({
    basename: opts == null ? void 0 : opts.basename,
    future: _extends({}, opts == null ? void 0 : opts.future, {
      v7_prependBasename: true
    }),
    history: createBrowserHistory({
      window: opts == null ? void 0 : opts.window
    }),
    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),
    routes,
    mapRouteProperties
  }).initialize();
}
function parseHydrationData() {
  var _window;
  let state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;
  if (state && state.errors) {
    state = _extends({}, state, {
      errors: deserializeErrors(state.errors)
    });
  }
  return state;
}
function deserializeErrors(errors) {
  if (!errors)
    return null;
  let entries = Object.entries(errors);
  let serialized = {};
  for (let [key, val] of entries) {
    if (val && val.__type === "RouteErrorResponse") {
      serialized[key] = new ErrorResponseImpl(val.status, val.statusText, val.data, val.internal === true);
    } else if (val && val.__type === "Error") {
      if (val.__subType) {
        let ErrorConstructor = window[val.__subType];
        if (typeof ErrorConstructor === "function") {
          try {
            let error2 = new ErrorConstructor(val.message);
            error2.stack = "";
            serialized[key] = error2;
          } catch (e) {
          }
        }
      }
      if (serialized[key] == null) {
        let error2 = new Error(val.message);
        error2.stack = "";
        serialized[key] = error2;
      }
    } else {
      serialized[key] = val;
    }
  }
  return serialized;
}
const isBrowser = typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined";
const ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i;
const Link = /* @__PURE__ */ reactExports$1.forwardRef(function LinkWithRef(_ref4, ref) {
  let {
    onClick,
    relative,
    reloadDocument,
    replace,
    state,
    target,
    to,
    preventScrollReset
  } = _ref4, rest = _objectWithoutPropertiesLoose(_ref4, _excluded);
  let {
    basename
  } = reactExports$1.useContext(NavigationContext);
  let absoluteHref;
  let isExternal = false;
  if (typeof to === "string" && ABSOLUTE_URL_REGEX.test(to)) {
    absoluteHref = to;
    if (isBrowser) {
      try {
        let currentUrl = new URL(window.location.href);
        let targetUrl = to.startsWith("//") ? new URL(currentUrl.protocol + to) : new URL(to);
        let path = stripBasename(targetUrl.pathname, basename);
        if (targetUrl.origin === currentUrl.origin && path != null) {
          to = path + targetUrl.search + targetUrl.hash;
        } else {
          isExternal = true;
        }
      } catch (e) {
      }
    }
  }
  let href = useHref(to, {
    relative
  });
  let internalOnClick = useLinkClickHandler(to, {
    replace,
    state,
    target,
    preventScrollReset,
    relative
  });
  function handleClick2(event) {
    if (onClick)
      onClick(event);
    if (!event.defaultPrevented) {
      internalOnClick(event);
    }
  }
  return (
    // eslint-disable-next-line jsx-a11y/anchor-has-content
    /* @__PURE__ */ reactExports$1.createElement("a", _extends({}, rest, {
      href: absoluteHref || href,
      onClick: isExternal || reloadDocument ? onClick : handleClick2,
      ref,
      target
    }))
  );
});
var DataRouterHook;
(function(DataRouterHook2) {
  DataRouterHook2["UseScrollRestoration"] = "useScrollRestoration";
  DataRouterHook2["UseSubmit"] = "useSubmit";
  DataRouterHook2["UseSubmitFetcher"] = "useSubmitFetcher";
  DataRouterHook2["UseFetcher"] = "useFetcher";
})(DataRouterHook || (DataRouterHook = {}));
var DataRouterStateHook;
(function(DataRouterStateHook2) {
  DataRouterStateHook2["UseFetchers"] = "useFetchers";
  DataRouterStateHook2["UseScrollRestoration"] = "useScrollRestoration";
})(DataRouterStateHook || (DataRouterStateHook = {}));
function useLinkClickHandler(to, _temp) {
  let {
    target,
    replace: replaceProp,
    state,
    preventScrollReset,
    relative
  } = _temp === void 0 ? {} : _temp;
  let navigate = useNavigate();
  let location = useLocation();
  let path = useResolvedPath(to, {
    relative
  });
  return reactExports$1.useCallback((event) => {
    if (shouldProcessLinkClick(event, target)) {
      event.preventDefault();
      let replace = replaceProp !== void 0 ? replaceProp : createPath(location) === createPath(path);
      navigate(to, {
        replace,
        state,
        preventScrollReset,
        relative
      });
    }
  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative]);
}
var jsxRuntime = { exports: {} };
var reactJsxRuntime_production_min = {};
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;
function toObject(val) {
  if (val === null || val === void 0) {
    throw new TypeError("Object.assign cannot be called with null or undefined");
  }
  return Object(val);
}
function shouldUseNative() {
  try {
    if (!Object.assign) {
      return false;
    }
    var test1 = new String("abc");
    test1[5] = "de";
    if (Object.getOwnPropertyNames(test1)[0] === "5") {
      return false;
    }
    var test2 = {};
    for (var i = 0; i < 10; i++) {
      test2["_" + String.fromCharCode(i)] = i;
    }
    var order2 = Object.getOwnPropertyNames(test2).map(function(n2) {
      return test2[n2];
    });
    if (order2.join("") !== "0123456789") {
      return false;
    }
    var test3 = {};
    "abcdefghijklmnopqrst".split("").forEach(function(letter) {
      test3[letter] = letter;
    });
    if (Object.keys(Object.assign({}, test3)).join("") !== "abcdefghijklmnopqrst") {
      return false;
    }
    return true;
  } catch (err) {
    return false;
  }
}
var objectAssign = shouldUseNative() ? Object.assign : function(target, source2) {
  var from;
  var to = toObject(target);
  var symbols;
  for (var s2 = 1; s2 < arguments.length; s2++) {
    from = Object(arguments[s2]);
    for (var key in from) {
      if (hasOwnProperty.call(from, key)) {
        to[key] = from[key];
      }
    }
    if (getOwnPropertySymbols) {
      symbols = getOwnPropertySymbols(from);
      for (var i = 0; i < symbols.length; i++) {
        if (propIsEnumerable.call(from, symbols[i])) {
          to[symbols[i]] = from[symbols[i]];
        }
      }
    }
  }
  return to;
};
var react = { exports: {} };
var react_production_min = {};
/** @license React v17.0.2
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var l$3 = objectAssign, n$2 = 60103, p$3 = 60106;
react_production_min.Fragment = 60107;
react_production_min.StrictMode = 60108;
react_production_min.Profiler = 60114;
var q$1 = 60109, r$1 = 60110, t$2 = 60112;
react_production_min.Suspense = 60113;
var u$2 = 60115, v$1 = 60116;
if ("function" === typeof Symbol && Symbol.for) {
  var w$2 = Symbol.for;
  n$2 = w$2("react.element");
  p$3 = w$2("react.portal");
  react_production_min.Fragment = w$2("react.fragment");
  react_production_min.StrictMode = w$2("react.strict_mode");
  react_production_min.Profiler = w$2("react.profiler");
  q$1 = w$2("react.provider");
  r$1 = w$2("react.context");
  t$2 = w$2("react.forward_ref");
  react_production_min.Suspense = w$2("react.suspense");
  u$2 = w$2("react.memo");
  v$1 = w$2("react.lazy");
}
var x$2 = "function" === typeof Symbol && Symbol.iterator;
function y$2(a) {
  if (null === a || "object" !== typeof a)
    return null;
  a = x$2 && a[x$2] || a["@@iterator"];
  return "function" === typeof a ? a : null;
}
function z$1(a) {
  for (var b = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, c = 1; c < arguments.length; c++)
    b += "&args[]=" + encodeURIComponent(arguments[c]);
  return "Minified React error #" + a + "; visit " + b + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
}
var A$1 = { isMounted: function() {
  return false;
}, enqueueForceUpdate: function() {
}, enqueueReplaceState: function() {
}, enqueueSetState: function() {
} }, B$2 = {};
function C$1(a, b, c) {
  this.props = a;
  this.context = b;
  this.refs = B$2;
  this.updater = c || A$1;
}
C$1.prototype.isReactComponent = {};
C$1.prototype.setState = function(a, b) {
  if ("object" !== typeof a && "function" !== typeof a && null != a)
    throw Error(z$1(85));
  this.updater.enqueueSetState(this, a, b, "setState");
};
C$1.prototype.forceUpdate = function(a) {
  this.updater.enqueueForceUpdate(this, a, "forceUpdate");
};
function D$1() {
}
D$1.prototype = C$1.prototype;
function E$2(a, b, c) {
  this.props = a;
  this.context = b;
  this.refs = B$2;
  this.updater = c || A$1;
}
var F$1 = E$2.prototype = new D$1();
F$1.constructor = E$2;
l$3(F$1, C$1.prototype);
F$1.isPureReactComponent = true;
var G$1 = { current: null }, H$2 = Object.prototype.hasOwnProperty, I$2 = { key: true, ref: true, __self: true, __source: true };
function J$2(a, b, c) {
  var e, d = {}, k2 = null, h = null;
  if (null != b)
    for (e in void 0 !== b.ref && (h = b.ref), void 0 !== b.key && (k2 = "" + b.key), b)
      H$2.call(b, e) && !I$2.hasOwnProperty(e) && (d[e] = b[e]);
  var g2 = arguments.length - 2;
  if (1 === g2)
    d.children = c;
  else if (1 < g2) {
    for (var f2 = Array(g2), m2 = 0; m2 < g2; m2++)
      f2[m2] = arguments[m2 + 2];
    d.children = f2;
  }
  if (a && a.defaultProps)
    for (e in g2 = a.defaultProps, g2)
      void 0 === d[e] && (d[e] = g2[e]);
  return { $$typeof: n$2, type: a, key: k2, ref: h, props: d, _owner: G$1.current };
}
function K$2(a, b) {
  return { $$typeof: n$2, type: a.type, key: b, ref: a.ref, props: a.props, _owner: a._owner };
}
function L$2(a) {
  return "object" === typeof a && null !== a && a.$$typeof === n$2;
}
function escape$1(a) {
  var b = { "=": "=0", ":": "=2" };
  return "$" + a.replace(/[=:]/g, function(a2) {
    return b[a2];
  });
}
var M$2 = /\/+/g;
function N$2(a, b) {
  return "object" === typeof a && null !== a && null != a.key ? escape$1("" + a.key) : b.toString(36);
}
function O$2(a, b, c, e, d) {
  var k2 = typeof a;
  if ("undefined" === k2 || "boolean" === k2)
    a = null;
  var h = false;
  if (null === a)
    h = true;
  else
    switch (k2) {
      case "string":
      case "number":
        h = true;
        break;
      case "object":
        switch (a.$$typeof) {
          case n$2:
          case p$3:
            h = true;
        }
    }
  if (h)
    return h = a, d = d(h), a = "" === e ? "." + N$2(h, 0) : e, Array.isArray(d) ? (c = "", null != a && (c = a.replace(M$2, "$&/") + "/"), O$2(d, b, c, "", function(a2) {
      return a2;
    })) : null != d && (L$2(d) && (d = K$2(d, c + (!d.key || h && h.key === d.key ? "" : ("" + d.key).replace(M$2, "$&/") + "/") + a)), b.push(d)), 1;
  h = 0;
  e = "" === e ? "." : e + ":";
  if (Array.isArray(a))
    for (var g2 = 0; g2 < a.length; g2++) {
      k2 = a[g2];
      var f2 = e + N$2(k2, g2);
      h += O$2(k2, b, c, f2, d);
    }
  else if (f2 = y$2(a), "function" === typeof f2)
    for (a = f2.call(a), g2 = 0; !(k2 = a.next()).done; )
      k2 = k2.value, f2 = e + N$2(k2, g2++), h += O$2(k2, b, c, f2, d);
  else if ("object" === k2)
    throw b = "" + a, Error(z$1(31, "[object Object]" === b ? "object with keys {" + Object.keys(a).join(", ") + "}" : b));
  return h;
}
function P$2(a, b, c) {
  if (null == a)
    return a;
  var e = [], d = 0;
  O$2(a, e, "", "", function(a2) {
    return b.call(c, a2, d++);
  });
  return e;
}
function Q$2(a) {
  if (-1 === a._status) {
    var b = a._result;
    b = b();
    a._status = 0;
    a._result = b;
    b.then(function(b2) {
      0 === a._status && (b2 = b2.default, a._status = 1, a._result = b2);
    }, function(b2) {
      0 === a._status && (a._status = 2, a._result = b2);
    });
  }
  if (1 === a._status)
    return a._result;
  throw a._result;
}
var R$2 = { current: null };
function S$2() {
  var a = R$2.current;
  if (null === a)
    throw Error(z$1(321));
  return a;
}
var T$2 = { ReactCurrentDispatcher: R$2, ReactCurrentBatchConfig: { transition: 0 }, ReactCurrentOwner: G$1, IsSomeRendererActing: { current: false }, assign: l$3 };
react_production_min.Children = { map: P$2, forEach: function(a, b, c) {
  P$2(a, function() {
    b.apply(this, arguments);
  }, c);
}, count: function(a) {
  var b = 0;
  P$2(a, function() {
    b++;
  });
  return b;
}, toArray: function(a) {
  return P$2(a, function(a2) {
    return a2;
  }) || [];
}, only: function(a) {
  if (!L$2(a))
    throw Error(z$1(143));
  return a;
} };
react_production_min.Component = C$1;
react_production_min.PureComponent = E$2;
react_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = T$2;
react_production_min.cloneElement = function(a, b, c) {
  if (null === a || void 0 === a)
    throw Error(z$1(267, a));
  var e = l$3({}, a.props), d = a.key, k2 = a.ref, h = a._owner;
  if (null != b) {
    void 0 !== b.ref && (k2 = b.ref, h = G$1.current);
    void 0 !== b.key && (d = "" + b.key);
    if (a.type && a.type.defaultProps)
      var g2 = a.type.defaultProps;
    for (f2 in b)
      H$2.call(b, f2) && !I$2.hasOwnProperty(f2) && (e[f2] = void 0 === b[f2] && void 0 !== g2 ? g2[f2] : b[f2]);
  }
  var f2 = arguments.length - 2;
  if (1 === f2)
    e.children = c;
  else if (1 < f2) {
    g2 = Array(f2);
    for (var m2 = 0; m2 < f2; m2++)
      g2[m2] = arguments[m2 + 2];
    e.children = g2;
  }
  return {
    $$typeof: n$2,
    type: a.type,
    key: d,
    ref: k2,
    props: e,
    _owner: h
  };
};
react_production_min.createContext = function(a, b) {
  void 0 === b && (b = null);
  a = { $$typeof: r$1, _calculateChangedBits: b, _currentValue: a, _currentValue2: a, _threadCount: 0, Provider: null, Consumer: null };
  a.Provider = { $$typeof: q$1, _context: a };
  return a.Consumer = a;
};
react_production_min.createElement = J$2;
react_production_min.createFactory = function(a) {
  var b = J$2.bind(null, a);
  b.type = a;
  return b;
};
react_production_min.createRef = function() {
  return { current: null };
};
react_production_min.forwardRef = function(a) {
  return { $$typeof: t$2, render: a };
};
react_production_min.isValidElement = L$2;
react_production_min.lazy = function(a) {
  return { $$typeof: v$1, _payload: { _status: -1, _result: a }, _init: Q$2 };
};
react_production_min.memo = function(a, b) {
  return { $$typeof: u$2, type: a, compare: void 0 === b ? null : b };
};
react_production_min.useCallback = function(a, b) {
  return S$2().useCallback(a, b);
};
react_production_min.useContext = function(a, b) {
  return S$2().useContext(a, b);
};
react_production_min.useDebugValue = function() {
};
react_production_min.useEffect = function(a, b) {
  return S$2().useEffect(a, b);
};
react_production_min.useImperativeHandle = function(a, b, c) {
  return S$2().useImperativeHandle(a, b, c);
};
react_production_min.useLayoutEffect = function(a, b) {
  return S$2().useLayoutEffect(a, b);
};
react_production_min.useMemo = function(a, b) {
  return S$2().useMemo(a, b);
};
react_production_min.useReducer = function(a, b, c) {
  return S$2().useReducer(a, b, c);
};
react_production_min.useRef = function(a) {
  return S$2().useRef(a);
};
react_production_min.useState = function(a) {
  return S$2().useState(a);
};
react_production_min.version = "17.0.2";
{
  react.exports = react_production_min;
}
var reactExports = react.exports;
/** @license React v17.0.2
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var f = reactExports, g = 60103;
reactJsxRuntime_production_min.Fragment = 60107;
if ("function" === typeof Symbol && Symbol.for) {
  var h = Symbol.for;
  g = h("react.element");
  reactJsxRuntime_production_min.Fragment = h("react.fragment");
}
var m = f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, n$1 = Object.prototype.hasOwnProperty, p$2 = { key: true, ref: true, __self: true, __source: true };
function q(c, a, k2) {
  var b, d = {}, e = null, l2 = null;
  void 0 !== k2 && (e = "" + k2);
  void 0 !== a.key && (e = "" + a.key);
  void 0 !== a.ref && (l2 = a.ref);
  for (b in a)
    n$1.call(a, b) && !p$2.hasOwnProperty(b) && (d[b] = a[b]);
  if (c && c.defaultProps)
    for (b in a = c.defaultProps, a)
      void 0 === d[b] && (d[b] = a[b]);
  return { $$typeof: g, type: c, key: e, ref: l2, props: d, _owner: m.current };
}
reactJsxRuntime_production_min.jsx = q;
reactJsxRuntime_production_min.jsxs = q;
{
  jsxRuntime.exports = reactJsxRuntime_production_min;
}
var jsxRuntimeExports = jsxRuntime.exports;
function noop() {
}
const identity = (x2) => x2;
function assign(tar, src) {
  for (const k2 in src)
    tar[k2] = src[k2];
  return tar;
}
function run(fn) {
  return fn();
}
function blank_object() {
  return /* @__PURE__ */ Object.create(null);
}
function run_all(fns) {
  fns.forEach(run);
}
function is_function(thing) {
  return typeof thing === "function";
}
function safe_not_equal(a, b) {
  return a != a ? b == b : a !== b || a && typeof a === "object" || typeof a === "function";
}
let src_url_equal_anchor;
function src_url_equal(element_src, url) {
  if (!src_url_equal_anchor) {
    src_url_equal_anchor = document.createElement("a");
  }
  src_url_equal_anchor.href = url;
  return element_src === src_url_equal_anchor.href;
}
function is_empty(obj) {
  return Object.keys(obj).length === 0;
}
function subscribe(store, ...callbacks) {
  if (store == null) {
    return noop;
  }
  const unsub = store.subscribe(...callbacks);
  return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;
}
function component_subscribe(component, store, callback) {
  component.$$.on_destroy.push(subscribe(store, callback));
}
function action_destroyer(action_result) {
  return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;
}
function split_css_unit(value) {
  const split = typeof value === "string" && value.match(/^\s*(-?[\d.]+)([^\s]*)\s*$/);
  return split ? [parseFloat(split[1]), split[2] || "px"] : [value, "px"];
}
const is_client = typeof window !== "undefined";
let now = is_client ? () => window.performance.now() : () => Date.now();
let raf = is_client ? (cb2) => requestAnimationFrame(cb2) : noop;
const tasks = /* @__PURE__ */ new Set();
function run_tasks(now2) {
  tasks.forEach((task) => {
    if (!task.c(now2)) {
      tasks.delete(task);
      task.f();
    }
  });
  if (tasks.size !== 0)
    raf(run_tasks);
}
function loop(callback) {
  let task;
  if (tasks.size === 0)
    raf(run_tasks);
  return { promise: new Promise((fulfill) => {
    tasks.add(task = { c: callback, f: fulfill });
  }), abort() {
    tasks.delete(task);
  } };
}
const globals = typeof window !== "undefined" ? window : typeof globalThis !== "undefined" ? globalThis : global;
function append(target, node) {
  target.appendChild(node);
}
function get_root_for_style(node) {
  if (!node)
    return document;
  const root2 = node.getRootNode ? node.getRootNode() : node.ownerDocument;
  if (root2 && root2.host) {
    return root2;
  }
  return node.ownerDocument;
}
function append_empty_stylesheet(node) {
  const style_element = element("style");
  append_stylesheet(get_root_for_style(node), style_element);
  return style_element.sheet;
}
function append_stylesheet(node, style) {
  append(node.head || node, style);
  return style.sheet;
}
function insert(target, node, anchor) {
  target.insertBefore(node, anchor || null);
}
function detach(node) {
  if (node.parentNode) {
    node.parentNode.removeChild(node);
  }
}
function destroy_each(iterations, detaching) {
  for (let i = 0; i < iterations.length; i += 1) {
    if (iterations[i])
      iterations[i].d(detaching);
  }
}
function element(name) {
  return document.createElement(name);
}
function svg_element(name) {
  return document.createElementNS("http://www.w3.org/2000/svg", name);
}
function text(data) {
  return document.createTextNode(data);
}
function space() {
  return text(" ");
}
function empty() {
  return text("");
}
function listen(node, event, handler, options) {
  node.addEventListener(event, handler, options);
  return () => node.removeEventListener(event, handler, options);
}
function stop_propagation(fn) {
  return function(event) {
    event.stopPropagation();
    return fn.call(this, event);
  };
}
function attr(node, attribute, value) {
  if (value == null)
    node.removeAttribute(attribute);
  else if (node.getAttribute(attribute) !== value)
    node.setAttribute(attribute, value);
}
function set_custom_element_data(node, prop, value) {
  if (prop in node) {
    node[prop] = typeof node[prop] === "boolean" && value === "" ? true : value;
  } else {
    attr(node, prop, value);
  }
}
function children(element2) {
  return Array.from(element2.childNodes);
}
function set_data(text2, data) {
  data = "" + data;
  if (text2.data === data)
    return;
  text2.data = data;
}
function set_input_value(input, value) {
  input.value = value == null ? "" : value;
}
function set_style(node, key, value, important) {
  if (value == null) {
    node.style.removeProperty(key);
  } else {
    node.style.setProperty(key, value, important ? "important" : "");
  }
}
let crossorigin;
function is_crossorigin() {
  if (crossorigin === void 0) {
    crossorigin = false;
    try {
      if (typeof window !== "undefined" && window.parent) {
        void window.parent.document;
      }
    } catch (error2) {
      crossorigin = true;
    }
  }
  return crossorigin;
}
function add_iframe_resize_listener(node, fn) {
  const computed_style = getComputedStyle(node);
  if (computed_style.position === "static") {
    node.style.position = "relative";
  }
  const iframe = element("iframe");
  iframe.setAttribute("style", "display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;");
  iframe.setAttribute("aria-hidden", "true");
  iframe.tabIndex = -1;
  const crossorigin2 = is_crossorigin();
  let unsubscribe;
  if (crossorigin2) {
    iframe.src = "data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}<\/script>";
    unsubscribe = listen(window, "message", (event) => {
      if (event.source === iframe.contentWindow)
        fn();
    });
  } else {
    iframe.src = "about:blank";
    iframe.onload = () => {
      unsubscribe = listen(iframe.contentWindow, "resize", fn);
      fn();
    };
  }
  append(node, iframe);
  return () => {
    if (crossorigin2) {
      unsubscribe();
    } else if (unsubscribe && iframe.contentWindow) {
      unsubscribe();
    }
    detach(iframe);
  };
}
function toggle_class(element2, name, toggle) {
  element2.classList[toggle ? "add" : "remove"](name);
}
function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {
  const e = document.createEvent("CustomEvent");
  e.initCustomEvent(type, bubbles, cancelable, detail);
  return e;
}
function attribute_to_object(attributes) {
  const result = {};
  for (const attribute of attributes) {
    result[attribute.name] = attribute.value;
  }
  return result;
}
const managed_styles = /* @__PURE__ */ new Map();
let active = 0;
function hash(str) {
  let hash2 = 5381;
  let i = str.length;
  while (i--)
    hash2 = (hash2 << 5) - hash2 ^ str.charCodeAt(i);
  return hash2 >>> 0;
}
function create_style_information(doc, node) {
  const info = { stylesheet: append_empty_stylesheet(node), rules: {} };
  managed_styles.set(doc, info);
  return info;
}
function create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {
  const step = 16.666 / duration;
  let keyframes = "{\n";
  for (let p2 = 0; p2 <= 1; p2 += step) {
    const t2 = a + (b - a) * ease(p2);
    keyframes += p2 * 100 + `%{${fn(t2, 1 - t2)}}
`;
  }
  const rule = keyframes + `100% {${fn(b, 1 - b)}}
}`;
  const name = `__svelte_${hash(rule)}_${uid}`;
  const doc = get_root_for_style(node);
  const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);
  if (!rules[name]) {
    rules[name] = true;
    stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);
  }
  const animation = node.style.animation || "";
  node.style.animation = `${animation ? `${animation}, ` : ""}${name} ${duration}ms linear ${delay}ms 1 both`;
  active += 1;
  return name;
}
function delete_rule(node, name) {
  const previous = (node.style.animation || "").split(", ");
  const next = previous.filter(
    name ? (anim) => anim.indexOf(name) < 0 : (anim) => anim.indexOf("__svelte") === -1
    // remove all Svelte animations
  );
  const deleted = previous.length - next.length;
  if (deleted) {
    node.style.animation = next.join(", ");
    active -= deleted;
    if (!active)
      clear_rules();
  }
}
function clear_rules() {
  raf(() => {
    if (active)
      return;
    managed_styles.forEach((info) => {
      const { ownerNode } = info.stylesheet;
      if (ownerNode)
        detach(ownerNode);
    });
    managed_styles.clear();
  });
}
let current_component;
function set_current_component(component) {
  current_component = component;
}
function get_current_component() {
  if (!current_component)
    throw new Error("Function called outside component initialization");
  return current_component;
}
function onMount(fn) {
  get_current_component().$$.on_mount.push(fn);
}
function onDestroy(fn) {
  get_current_component().$$.on_destroy.push(fn);
}
const dirty_components = [];
const binding_callbacks = [];
let render_callbacks = [];
const flush_callbacks = [];
const resolved_promise = /* @__PURE__ */ Promise.resolve();
let update_scheduled = false;
function schedule_update() {
  if (!update_scheduled) {
    update_scheduled = true;
    resolved_promise.then(flush);
  }
}
function tick() {
  schedule_update();
  return resolved_promise;
}
function add_render_callback(fn) {
  render_callbacks.push(fn);
}
const seen_callbacks = /* @__PURE__ */ new Set();
let flushidx = 0;
function flush() {
  if (flushidx !== 0) {
    return;
  }
  const saved_component = current_component;
  do {
    try {
      while (flushidx < dirty_components.length) {
        const component = dirty_components[flushidx];
        flushidx++;
        set_current_component(component);
        update(component.$$);
      }
    } catch (e) {
      dirty_components.length = 0;
      flushidx = 0;
      throw e;
    }
    set_current_component(null);
    dirty_components.length = 0;
    flushidx = 0;
    while (binding_callbacks.length)
      binding_callbacks.pop()();
    for (let i = 0; i < render_callbacks.length; i += 1) {
      const callback = render_callbacks[i];
      if (!seen_callbacks.has(callback)) {
        seen_callbacks.add(callback);
        callback();
      }
    }
    render_callbacks.length = 0;
  } while (dirty_components.length);
  while (flush_callbacks.length) {
    flush_callbacks.pop()();
  }
  update_scheduled = false;
  seen_callbacks.clear();
  set_current_component(saved_component);
}
function update($$) {
  if ($$.fragment !== null) {
    $$.update();
    run_all($$.before_update);
    const dirty = $$.dirty;
    $$.dirty = [-1];
    $$.fragment && $$.fragment.p($$.ctx, dirty);
    $$.after_update.forEach(add_render_callback);
  }
}
function flush_render_callbacks(fns) {
  const filtered = [];
  const targets = [];
  render_callbacks.forEach((c) => fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c));
  targets.forEach((c) => c());
  render_callbacks = filtered;
}
let promise;
function wait() {
  if (!promise) {
    promise = Promise.resolve();
    promise.then(() => {
      promise = null;
    });
  }
  return promise;
}
function dispatch$1(node, direction, kind) {
  node.dispatchEvent(custom_event(`${direction ? "intro" : "outro"}${kind}`));
}
const outroing = /* @__PURE__ */ new Set();
let outros;
function group_outros() {
  outros = {
    r: 0,
    c: [],
    p: outros
    // parent group
  };
}
function check_outros() {
  if (!outros.r) {
    run_all(outros.c);
  }
  outros = outros.p;
}
function transition_in(block, local) {
  if (block && block.i) {
    outroing.delete(block);
    block.i(local);
  }
}
function transition_out(block, local, detach2, callback) {
  if (block && block.o) {
    if (outroing.has(block))
      return;
    outroing.add(block);
    outros.c.push(() => {
      outroing.delete(block);
      if (callback) {
        if (detach2)
          block.d(1);
        callback();
      }
    });
    block.o(local);
  } else if (callback) {
    callback();
  }
}
const null_transition = { duration: 0 };
function create_in_transition(node, fn, params) {
  const options = { direction: "in" };
  let config = fn(node, params, options);
  let running = false;
  let animation_name;
  let task;
  let uid = 0;
  function cleanup() {
    if (animation_name)
      delete_rule(node, animation_name);
  }
  function go() {
    const { delay = 0, duration = 300, easing = identity, tick: tick2 = noop, css } = config || null_transition;
    if (css)
      animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);
    tick2(0, 1);
    const start_time = now() + delay;
    const end_time = start_time + duration;
    if (task)
      task.abort();
    running = true;
    add_render_callback(() => dispatch$1(node, true, "start"));
    task = loop((now2) => {
      if (running) {
        if (now2 >= end_time) {
          tick2(1, 0);
          dispatch$1(node, true, "end");
          cleanup();
          return running = false;
        }
        if (now2 >= start_time) {
          const t2 = easing((now2 - start_time) / duration);
          tick2(t2, 1 - t2);
        }
      }
      return running;
    });
  }
  let started = false;
  return { start() {
    if (started)
      return;
    started = true;
    delete_rule(node);
    if (is_function(config)) {
      config = config(options);
      wait().then(go);
    } else {
      go();
    }
  }, invalidate() {
    started = false;
  }, end() {
    if (running) {
      cleanup();
      running = false;
    }
  } };
}
function create_out_transition(node, fn, params) {
  const options = { direction: "out" };
  let config = fn(node, params, options);
  let running = true;
  let animation_name;
  const group = outros;
  group.r += 1;
  function go() {
    const { delay = 0, duration = 300, easing = identity, tick: tick2 = noop, css } = config || null_transition;
    if (css)
      animation_name = create_rule(node, 1, 0, duration, delay, easing, css);
    const start_time = now() + delay;
    const end_time = start_time + duration;
    add_render_callback(() => dispatch$1(node, false, "start"));
    loop((now2) => {
      if (running) {
        if (now2 >= end_time) {
          tick2(0, 1);
          dispatch$1(node, false, "end");
          if (!--group.r) {
            run_all(group.c);
          }
          return false;
        }
        if (now2 >= start_time) {
          const t2 = easing((now2 - start_time) / duration);
          tick2(1 - t2, t2);
        }
      }
      return running;
    });
  }
  if (is_function(config)) {
    wait().then(() => {
      config = config(options);
      go();
    });
  } else {
    go();
  }
  return { end(reset) {
    if (reset && config.tick) {
      config.tick(1, 0);
    }
    if (running) {
      if (animation_name)
        delete_rule(node, animation_name);
      running = false;
    }
  } };
}
function create_bidirectional_transition(node, fn, params, intro) {
  const options = { direction: "both" };
  let config = fn(node, params, options);
  let t2 = intro ? 0 : 1;
  let running_program = null;
  let pending_program = null;
  let animation_name = null;
  function clear_animation() {
    if (animation_name)
      delete_rule(node, animation_name);
  }
  function init2(program, duration) {
    const d = program.b - t2;
    duration *= Math.abs(d);
    return { a: t2, b: program.b, d, duration, start: program.start, end: program.start + duration, group: program.group };
  }
  function go(b) {
    const { delay = 0, duration = 300, easing = identity, tick: tick2 = noop, css } = config || null_transition;
    const program = { start: now() + delay, b };
    if (!b) {
      program.group = outros;
      outros.r += 1;
    }
    if (running_program || pending_program) {
      pending_program = program;
    } else {
      if (css) {
        clear_animation();
        animation_name = create_rule(node, t2, b, duration, delay, easing, css);
      }
      if (b)
        tick2(0, 1);
      running_program = init2(program, duration);
      add_render_callback(() => dispatch$1(node, b, "start"));
      loop((now2) => {
        if (pending_program && now2 > pending_program.start) {
          running_program = init2(pending_program, duration);
          pending_program = null;
          dispatch$1(node, running_program.b, "start");
          if (css) {
            clear_animation();
            animation_name = create_rule(node, t2, running_program.b, running_program.duration, 0, easing, config.css);
          }
        }
        if (running_program) {
          if (now2 >= running_program.end) {
            tick2(t2 = running_program.b, 1 - t2);
            dispatch$1(node, running_program.b, "end");
            if (!pending_program) {
              if (running_program.b) {
                clear_animation();
              } else {
                if (!--running_program.group.r)
                  run_all(running_program.group.c);
              }
            }
            running_program = null;
          } else if (now2 >= running_program.start) {
            const p2 = now2 - running_program.start;
            t2 = running_program.a + running_program.d * easing(p2 / running_program.duration);
            tick2(t2, 1 - t2);
          }
        }
        return !!(running_program || pending_program);
      });
    }
  }
  return { run(b) {
    if (is_function(config)) {
      wait().then(() => {
        config = config(options);
        go(b);
      });
    } else {
      go(b);
    }
  }, end() {
    clear_animation();
    running_program = pending_program = null;
  } };
}
function destroy_block(block, lookup) {
  block.d(1);
  lookup.delete(block.key);
}
function outro_and_destroy_block(block, lookup) {
  transition_out(block, 1, 1, () => {
    lookup.delete(block.key);
  });
}
function update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block2, next, get_context) {
  let o = old_blocks.length;
  let n2 = list.length;
  let i = o;
  const old_indexes = {};
  while (i--)
    old_indexes[old_blocks[i].key] = i;
  const new_blocks = [];
  const new_lookup = /* @__PURE__ */ new Map();
  const deltas = /* @__PURE__ */ new Map();
  const updates = [];
  i = n2;
  while (i--) {
    const child_ctx = get_context(ctx, list, i);
    const key = get_key(child_ctx);
    let block = lookup.get(key);
    if (!block) {
      block = create_each_block2(key, child_ctx);
      block.c();
    } else if (dynamic) {
      updates.push(() => block.p(child_ctx, dirty));
    }
    new_lookup.set(key, new_blocks[i] = block);
    if (key in old_indexes)
      deltas.set(key, Math.abs(i - old_indexes[key]));
  }
  const will_move = /* @__PURE__ */ new Set();
  const did_move = /* @__PURE__ */ new Set();
  function insert2(block) {
    transition_in(block, 1);
    block.m(node, next);
    lookup.set(block.key, block);
    next = block.first;
    n2--;
  }
  while (o && n2) {
    const new_block = new_blocks[n2 - 1];
    const old_block = old_blocks[o - 1];
    const new_key = new_block.key;
    const old_key = old_block.key;
    if (new_block === old_block) {
      next = new_block.first;
      o--;
      n2--;
    } else if (!new_lookup.has(old_key)) {
      destroy(old_block, lookup);
      o--;
    } else if (!lookup.has(new_key) || will_move.has(new_key)) {
      insert2(new_block);
    } else if (did_move.has(old_key)) {
      o--;
    } else if (deltas.get(new_key) > deltas.get(old_key)) {
      did_move.add(new_key);
      insert2(new_block);
    } else {
      will_move.add(old_key);
      o--;
    }
  }
  while (o--) {
    const old_block = old_blocks[o];
    if (!new_lookup.has(old_block.key))
      destroy(old_block, lookup);
  }
  while (n2)
    insert2(new_blocks[n2 - 1]);
  run_all(updates);
  return new_blocks;
}
function create_component(block) {
  block && block.c();
}
function mount_component(component, target, anchor, customElement) {
  const { fragment, after_update } = component.$$;
  fragment && fragment.m(target, anchor);
  if (!customElement) {
    add_render_callback(() => {
      const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);
      if (component.$$.on_destroy) {
        component.$$.on_destroy.push(...new_on_destroy);
      } else {
        run_all(new_on_destroy);
      }
      component.$$.on_mount = [];
    });
  }
  after_update.forEach(add_render_callback);
}
function destroy_component(component, detaching) {
  const $$ = component.$$;
  if ($$.fragment !== null) {
    flush_render_callbacks($$.after_update);
    run_all($$.on_destroy);
    $$.fragment && $$.fragment.d(detaching);
    $$.on_destroy = $$.fragment = null;
    $$.ctx = [];
  }
}
function make_dirty(component, i) {
  if (component.$$.dirty[0] === -1) {
    dirty_components.push(component);
    schedule_update();
    component.$$.dirty.fill(0);
  }
  component.$$.dirty[i / 31 | 0] |= 1 << i % 31;
}
function init(component, options, instance2, create_fragment2, not_equal, props, append_styles, dirty = [-1]) {
  const parent_component = current_component;
  set_current_component(component);
  const $$ = component.$$ = {
    fragment: null,
    ctx: [],
    // state
    props,
    update: noop,
    not_equal,
    bound: blank_object(),
    // lifecycle
    on_mount: [],
    on_destroy: [],
    on_disconnect: [],
    before_update: [],
    after_update: [],
    context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),
    // everything else
    callbacks: blank_object(),
    dirty,
    skip_bound: false,
    root: options.target || parent_component.$$.root
  };
  append_styles && append_styles($$.root);
  let ready = false;
  $$.ctx = instance2 ? instance2(component, options.props || {}, (i, ret, ...rest) => {
    const value = rest.length ? rest[0] : ret;
    if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {
      if (!$$.skip_bound && $$.bound[i])
        $$.bound[i](value);
      if (ready)
        make_dirty(component, i);
    }
    return ret;
  }) : [];
  $$.update();
  ready = true;
  run_all($$.before_update);
  $$.fragment = create_fragment2 ? create_fragment2($$.ctx) : false;
  if (options.target) {
    if (options.hydrate) {
      const nodes = children(options.target);
      $$.fragment && $$.fragment.l(nodes);
      nodes.forEach(detach);
    } else {
      $$.fragment && $$.fragment.c();
    }
    if (options.intro)
      transition_in(component.$$.fragment);
    mount_component(component, options.target, options.anchor, options.customElement);
    flush();
  }
  set_current_component(parent_component);
}
let SvelteElement;
if (typeof HTMLElement === "function") {
  SvelteElement = class extends HTMLElement {
    constructor() {
      super();
      this.attachShadow({ mode: "open" });
    }
    connectedCallback() {
      const { on_mount } = this.$$;
      this.$$.on_disconnect = on_mount.map(run).filter(is_function);
      for (const key in this.$$.slotted) {
        this.appendChild(this.$$.slotted[key]);
      }
    }
    attributeChangedCallback(attr2, _oldValue, newValue) {
      this[attr2] = newValue;
    }
    disconnectedCallback() {
      run_all(this.$$.on_disconnect);
    }
    $destroy() {
      destroy_component(this, 1);
      this.$destroy = noop;
    }
    $on(type, callback) {
      if (!is_function(callback)) {
        return noop;
      }
      const callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);
      callbacks.push(callback);
      return () => {
        const index2 = callbacks.indexOf(callback);
        if (index2 !== -1)
          callbacks.splice(index2, 1);
      };
    }
    $set($$props) {
      if (this.$$set && !is_empty($$props)) {
        this.$$.skip_bound = true;
        this.$$set($$props);
        this.$$.skip_bound = false;
      }
    }
  };
}
const conversions = { "0": "none", "1": "3xs", "2": "2xs", "3": "xs", "4": "s", "5": "m", "6": "l", "7": "xl", "8": "2xl", "9": "3xl", "10": "4xl" };
function convertSpacing(size) {
  if (!Number.isInteger(+size)) {
    return size;
  }
  return conversions[size] || "";
}
function calculateMargin(mt, mr, mb2, ml2) {
  mt = convertSpacing(mt);
  mb2 = convertSpacing(mb2);
  ml2 = convertSpacing(ml2);
  mr = convertSpacing(mr);
  return [mt && `margin-top:var(--goa-space-${mt});`, mr && `margin-right:var(--goa-space-${mr});`, mb2 && `margin-bottom:var(--goa-space-${mb2});`, ml2 && `margin-left:var(--goa-space-${ml2});`].join(" ");
}
function injectCss(el2, rootSelector, css, media) {
  if (!el2)
    return;
  const style = document.createElement("style");
  const _css = Object.entries(css).map((entry) => `${entry[0]}: ${entry[1]};`).join(" ");
  if (media) {
    style.innerHTML = `@media (${media}) { ${rootSelector} {${_css}} }`;
  } else {
    style.innerHTML = `${rootSelector} {${_css}}`;
  }
  el2.appendChild(style);
}
function toBoolean(value) {
  if (value === "false") {
    return false;
  }
  if (value === "") {
    return true;
  }
  return !!value;
}
function fromBoolean(value) {
  return value ? "true" : "false";
}
function validateRequired(componentName, props) {
  Object.entries(props).forEach((prop) => {
    if (!prop[1]) {
      console.warn(`${componentName}: ${prop[0]} is required`);
    }
  });
}
function typeValidator(message, values, required = false) {
  const validator = (value) => {
    if (!required && !value) {
      return;
    }
    if (!values.includes(value)) {
      console.error(`[${value}] is an invalid ${message.toLowerCase()}`);
    }
  };
  return [values, validator];
}
function getTimestamp(val) {
  const months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
  const now2 = val || /* @__PURE__ */ new Date();
  const hour24 = now2.getHours();
  const min0 = now2.getMinutes();
  const date = now2.getDate();
  const month = months[now2.getMonth()];
  const year = now2.getFullYear();
  const hour = hour24 === 0 && 12 || hour24 > 12 && hour24 - 12 || hour24;
  const meridium = hour24 === 0 && "AM" || hour24 >= 12 && "PM" || "AM";
  const min = min0 < 10 && `0${min0}` || min0;
  const ordinal = date % 10 === 1 && date !== 11 && "st" || date % 10 === 2 && date !== 12 && "nd" || date % 10 === 3 && date !== 13 && "rd" || "th";
  return `${month} ${date}${ordinal} ${year}, ${hour}:${min} ${meridium}`;
}
function cssVar(name, value) {
  return value ? `${name}: ${value};` : "";
}
function create_fragment$$(ctx) {
  let div3;
  let details;
  let summary;
  let goa_icon;
  let goa_icon_fillcolor_value;
  let t0;
  let div1;
  let span0;
  let t1;
  let span0_class_value;
  let span0_data_testid_value;
  let t2;
  let span1;
  let t3;
  let t4;
  let div0;
  let summary_class_value;
  let t5;
  let div2;
  let div3_style_value;
  let mounted;
  let dispose;
  return { c() {
    div3 = element("div");
    details = element("details");
    summary = element("summary");
    goa_icon = element("goa-icon");
    t0 = space();
    div1 = element("div");
    span0 = element("span");
    t1 = text(
      /*heading*/
      ctx[0]
    );
    t2 = space();
    span1 = element("span");
    t3 = text(
      /*secondarytext*/
      ctx[1]
    );
    t4 = space();
    div0 = element("div");
    div0.innerHTML = `<slot name="headingcontent"></slot>`;
    t5 = space();
    div2 = element("div");
    div2.innerHTML = `<slot></slot>`;
    this.c = noop;
    set_custom_element_data(goa_icon, "type", "chevron-forward");
    set_custom_element_data(goa_icon, "fillcolor", goa_icon_fillcolor_value = /*_hovering*/
    ctx[8] ? "var(--goa-color-interactive-hover)" : "var(--goa-color-interactive-default)");
    attr(span0, "class", span0_class_value = "heading heading-" + /*headingsize*/
    ctx[2]);
    attr(span0, "data-testid", span0_data_testid_value = `${/*testid*/
    ctx[3]}-heading`);
    attr(span1, "class", "secondary-text");
    attr(div0, "class", "heading-content");
    toggle_class(
      div0,
      "heading-content-top",
      /*_headingContentSlotChildren*/
      ctx[10].length
    );
    attr(div1, "class", "title");
    attr(summary, "class", summary_class_value = `container-${/*headingsize*/
    ctx[2]}`);
    attr(div2, "class", "content");
    details.open = /*isOpen*/
    ctx[11];
    attr(div3, "style", div3_style_value = calculateMargin(
      /*mt*/
      ctx[4],
      /*mr*/
      ctx[5],
      /*mb*/
      ctx[6],
      /*ml*/
      ctx[7]
    ));
    attr(div3, "class", `
    goa-accordion
  `);
    attr(
      div3,
      "data-testid",
      /*testid*/
      ctx[3]
    );
  }, m(target, anchor) {
    insert(target, div3, anchor);
    append(div3, details);
    append(details, summary);
    append(summary, goa_icon);
    append(summary, t0);
    append(summary, div1);
    append(div1, span0);
    append(span0, t1);
    append(div1, t2);
    append(div1, span1);
    append(span1, t3);
    append(div1, t4);
    append(div1, div0);
    ctx[13](div1);
    append(details, t5);
    append(details, div2);
    if (!mounted) {
      dispose = [listen(
        summary,
        "mouseover",
        /*mouseover_handler*/
        ctx[14]
      ), listen(
        summary,
        "mouseout",
        /*mouseout_handler*/
        ctx[15]
      ), listen(
        summary,
        "focus",
        /*focus_handler*/
        ctx[16]
      ), listen(
        summary,
        "blur",
        /*blur_handler*/
        ctx[17]
      )];
      mounted = true;
    }
  }, p(ctx2, [dirty]) {
    if (dirty & /*_hovering*/
    256 && goa_icon_fillcolor_value !== (goa_icon_fillcolor_value = /*_hovering*/
    ctx2[8] ? "var(--goa-color-interactive-hover)" : "var(--goa-color-interactive-default)")) {
      set_custom_element_data(goa_icon, "fillcolor", goa_icon_fillcolor_value);
    }
    if (dirty & /*heading*/
    1)
      set_data(
        t1,
        /*heading*/
        ctx2[0]
      );
    if (dirty & /*headingsize*/
    4 && span0_class_value !== (span0_class_value = "heading heading-" + /*headingsize*/
    ctx2[2])) {
      attr(span0, "class", span0_class_value);
    }
    if (dirty & /*testid*/
    8 && span0_data_testid_value !== (span0_data_testid_value = `${/*testid*/
    ctx2[3]}-heading`)) {
      attr(span0, "data-testid", span0_data_testid_value);
    }
    if (dirty & /*secondarytext*/
    2)
      set_data(
        t3,
        /*secondarytext*/
        ctx2[1]
      );
    if (dirty & /*_headingContentSlotChildren*/
    1024) {
      toggle_class(
        div0,
        "heading-content-top",
        /*_headingContentSlotChildren*/
        ctx2[10].length
      );
    }
    if (dirty & /*headingsize*/
    4 && summary_class_value !== (summary_class_value = `container-${/*headingsize*/
    ctx2[2]}`)) {
      attr(summary, "class", summary_class_value);
    }
    if (dirty & /*isOpen*/
    2048) {
      details.open = /*isOpen*/
      ctx2[11];
    }
    if (dirty & /*mt, mr, mb, ml*/
    240 && div3_style_value !== (div3_style_value = calculateMargin(
      /*mt*/
      ctx2[4],
      /*mr*/
      ctx2[5],
      /*mb*/
      ctx2[6],
      /*ml*/
      ctx2[7]
    ))) {
      attr(div3, "style", div3_style_value);
    }
    if (dirty & /*testid*/
    8) {
      attr(
        div3,
        "data-testid",
        /*testid*/
        ctx2[3]
      );
    }
  }, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(div3);
    ctx[13](null);
    mounted = false;
    run_all(dispose);
  } };
}
function instance$V($$self, $$props, $$invalidate) {
  let isOpen;
  const [HeadingSizes, validateHeadingSize] = typeValidator("Accordion heading size", ["small", "medium"]);
  let { open = "false" } = $$props;
  let { heading = "" } = $$props;
  let { secondarytext = "" } = $$props;
  let { headingsize = "small" } = $$props;
  let { testid = "" } = $$props;
  let { mt = null } = $$props;
  let { mr = null } = $$props;
  let { mb: mb2 = "xs" } = $$props;
  let { ml: ml2 = null } = $$props;
  let _hovering = false;
  let _titleEl = null;
  let _headingContentSlotChildren = [];
  onMount(() => {
    validateRequired("GoAAccordion", { heading });
    validateHeadingSize(headingsize);
    $$invalidate(10, _headingContentSlotChildren = getChildren());
  });
  function getChildren() {
    if (_titleEl) {
      const slot = _titleEl.querySelector("slot");
      if (slot) {
        return [...slot.assignedElements()];
      } else {
        return [..._titleEl.children];
      }
    }
    return [];
  }
  function div1_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      _titleEl = $$value;
      $$invalidate(9, _titleEl);
    });
  }
  const mouseover_handler = () => $$invalidate(8, _hovering = true);
  const mouseout_handler = () => $$invalidate(8, _hovering = false);
  const focus_handler = () => $$invalidate(8, _hovering = false);
  const blur_handler = () => $$invalidate(8, _hovering = false);
  $$self.$$set = ($$props2) => {
    if ("open" in $$props2)
      $$invalidate(12, open = $$props2.open);
    if ("heading" in $$props2)
      $$invalidate(0, heading = $$props2.heading);
    if ("secondarytext" in $$props2)
      $$invalidate(1, secondarytext = $$props2.secondarytext);
    if ("headingsize" in $$props2)
      $$invalidate(2, headingsize = $$props2.headingsize);
    if ("testid" in $$props2)
      $$invalidate(3, testid = $$props2.testid);
    if ("mt" in $$props2)
      $$invalidate(4, mt = $$props2.mt);
    if ("mr" in $$props2)
      $$invalidate(5, mr = $$props2.mr);
    if ("mb" in $$props2)
      $$invalidate(6, mb2 = $$props2.mb);
    if ("ml" in $$props2)
      $$invalidate(7, ml2 = $$props2.ml);
  };
  $$self.$$.update = () => {
    if ($$self.$$.dirty & /*open*/
    4096) {
      $$invalidate(11, isOpen = toBoolean(open));
    }
  };
  return [heading, secondarytext, headingsize, testid, mt, mr, mb2, ml2, _hovering, _titleEl, _headingContentSlotChildren, isOpen, open, div1_binding, mouseover_handler, mouseout_handler, focus_handler, blur_handler];
}
class Accordion extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `:host{box-sizing:border-box;font-family:var(--goa-font-family-sans);font-size:var(--goa-font-size-4)}.goa-accordion,.goa-accordion *{box-sizing:border-box}summary{min-height:3.5rem;border-width:var(--goa-border-width-s);border-style:solid;border-radius:var(--goa-border-radius-m);background-color:var(--goa-color-greyscale-100);border-color:var(--goa-color-greyscale-200);color:var(--goa-color-text-default);;;padding:0.875rem 1rem 0 0;cursor:pointer;list-style:none;display:flex;align-items:flex-start;position:relative}summary.container-medium{min-height:4rem}summary::marker,summary::-webkit-details-marker{display:none}summary .title{display:flex;align-items:center;flex:1}.title span{padding-bottom:var(--goa-space-3xs, 0)}summary .heading{font:var(--goa-typography-heading-s);padding-right:1rem}summary .secondary-text{font:var(--goa-typography-body-s);line-height:1.5rem;padding-right:1rem}summary .heading-content{flex:1
  }.content{border-bottom:var(--goa-border-width-s) solid var(--goa-color-greyscale-200);border-left:var(--goa-border-width-s) solid var(--goa-color-greyscale-200);border-right:var(--goa-border-width-s) solid var(--goa-color-greyscale-200);border-bottom-left-radius:var(--goa-border-radius-m);border-bottom-right-radius:var(--goa-border-radius-m);padding:1.5rem;padding-left:3.5rem;padding-right:2rem}.content ::slotted(p:last-child){margin-bottom:0 !important}summary goa-icon{padding:0.125rem 1rem}summary.container-medium goa-icon{padding:0.375rem 1rem}details[open] goa-icon{transform:rotate(90deg)}details[open] summary{border-bottom-left-radius:var(--goa-border-radius-none);border-bottom-right-radius:var(--goa-border-radius-none)}summary:hover{background-color:var(--goa-color-greyscale-200)}summary:focus,summary:active{background-color:var(--goa-color-greyscale-100);outline:none}summary:active::before,summary:focus::before{content:"";position:absolute;top:-1px;right:-1px;bottom:-1px;left:-1px;border:var(--goa-border-width-l) solid var(--goa-color-interactive-focus);border-radius:4px}summary .heading.heading-medium{line-height:2rem;font:var(--goa-typography-heading-m)}@media screen and (max-width: 623px){summary{align-items:flex-start}summary .title{flex-direction:column;align-items:flex-start;padding-bottom:0.875rem}summary .title span{padding-bottom:0}summary .heading-content.heading-content-top{margin-top:var(--goa-space-xs)}}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$V, create_fragment$$, safe_not_equal, { open: 12, heading: 0, secondarytext: 1, headingsize: 2, testid: 3, mt: 4, mr: 5, mb: 6, ml: 7 }, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["open", "heading", "secondarytext", "headingsize", "testid", "mt", "mr", "mb", "ml"];
  }
  get open() {
    return this.$$.ctx[12];
  }
  set open(open) {
    this.$$set({ open });
    flush();
  }
  get heading() {
    return this.$$.ctx[0];
  }
  set heading(heading) {
    this.$$set({ heading });
    flush();
  }
  get secondarytext() {
    return this.$$.ctx[1];
  }
  set secondarytext(secondarytext) {
    this.$$set({ secondarytext });
    flush();
  }
  get headingsize() {
    return this.$$.ctx[2];
  }
  set headingsize(headingsize) {
    this.$$set({ headingsize });
    flush();
  }
  get testid() {
    return this.$$.ctx[3];
  }
  set testid(testid) {
    this.$$set({ testid });
    flush();
  }
  get mt() {
    return this.$$.ctx[4];
  }
  set mt(mt) {
    this.$$set({ mt });
    flush();
  }
  get mr() {
    return this.$$.ctx[5];
  }
  set mr(mr) {
    this.$$set({ mr });
    flush();
  }
  get mb() {
    return this.$$.ctx[6];
  }
  set mb(mb2) {
    this.$$set({ mb: mb2 });
    flush();
  }
  get ml() {
    return this.$$.ctx[7];
  }
  set ml(ml2) {
    this.$$set({ ml: ml2 });
    flush();
  }
}
customElements.define("goa-accordion", Accordion);
const MOBILE_BP = 624;
const TABLET_BP = 1024;
const { window: window_1$2 } = globals;
function create_else_block$d(ctx) {
  let div;
  let img0;
  let img0_src_value;
  let t0;
  let img1;
  let img1_src_value;
  let t1;
  let if_block = (
    /*heading*/
    ctx[0] && create_if_block_7$1(ctx)
  );
  return { c() {
    div = element("div");
    img0 = element("img");
    t0 = space();
    img1 = element("img");
    t1 = space();
    if (if_block)
      if_block.c();
    attr(img0, "alt", "GoA Logo");
    attr(img0, "class", "image-mobile");
    if (!src_url_equal(img0.src, img0_src_value = _mobileLogo))
      attr(img0, "src", img0_src_value);
    attr(img1, "alt", "GoA Logo");
    attr(img1, "class", "image-desktop");
    if (!src_url_equal(img1.src, img1_src_value = _desktopLogo))
      attr(img1, "src", img1_src_value);
    attr(div, "class", "header-logo-title-area");
  }, m(target, anchor) {
    insert(target, div, anchor);
    append(div, img0);
    append(div, t0);
    append(div, img1);
    append(div, t1);
    if (if_block)
      if_block.m(div, null);
  }, p(ctx2, dirty) {
    if (
      /*heading*/
      ctx2[0]
    ) {
      if (if_block) {
        if_block.p(ctx2, dirty);
      } else {
        if_block = create_if_block_7$1(ctx2);
        if_block.c();
        if_block.m(div, null);
      }
    } else if (if_block) {
      if_block.d(1);
      if_block = null;
    }
  }, d(detaching) {
    if (detaching)
      detach(div);
    if (if_block)
      if_block.d();
  } };
}
function create_if_block_5$1(ctx) {
  let a;
  let img0;
  let img0_src_value;
  let t0;
  let img1;
  let img1_src_value;
  let t1;
  let if_block = (
    /*heading*/
    ctx[0] && create_if_block_6$1(ctx)
  );
  return { c() {
    a = element("a");
    img0 = element("img");
    t0 = space();
    img1 = element("img");
    t1 = space();
    if (if_block)
      if_block.c();
    attr(img0, "alt", "GoA Logo");
    attr(img0, "class", "image-mobile");
    if (!src_url_equal(img0.src, img0_src_value = _mobileLogo))
      attr(img0, "src", img0_src_value);
    attr(img1, "alt", "GoA Logo");
    attr(img1, "class", "image-desktop");
    if (!src_url_equal(img1.src, img1_src_value = _desktopLogo))
      attr(img1, "src", img1_src_value);
    attr(
      a,
      "href",
      /*url*/
      ctx[1]
    );
    attr(a, "class", "header-logo-title-area");
    attr(a, "data-testid", "url");
  }, m(target, anchor) {
    insert(target, a, anchor);
    append(a, img0);
    append(a, t0);
    append(a, img1);
    append(a, t1);
    if (if_block)
      if_block.m(a, null);
  }, p(ctx2, dirty) {
    if (
      /*heading*/
      ctx2[0]
    ) {
      if (if_block) {
        if_block.p(ctx2, dirty);
      } else {
        if_block = create_if_block_6$1(ctx2);
        if_block.c();
        if_block.m(a, null);
      }
    } else if (if_block) {
      if_block.d(1);
      if_block = null;
    }
    if (dirty & /*url*/
    2) {
      attr(
        a,
        "href",
        /*url*/
        ctx2[1]
      );
    }
  }, d(detaching) {
    if (detaching)
      detach(a);
    if (if_block)
      if_block.d();
  } };
}
function create_if_block_7$1(ctx) {
  let span;
  let t2;
  return { c() {
    span = element("span");
    t2 = text(
      /*heading*/
      ctx[0]
    );
    attr(span, "data-testid", "title");
    attr(span, "class", "title");
  }, m(target, anchor) {
    insert(target, span, anchor);
    append(span, t2);
  }, p(ctx2, dirty) {
    if (dirty & /*heading*/
    1)
      set_data(
        t2,
        /*heading*/
        ctx2[0]
      );
  }, d(detaching) {
    if (detaching)
      detach(span);
  } };
}
function create_if_block_6$1(ctx) {
  let span;
  let t2;
  return { c() {
    span = element("span");
    t2 = text(
      /*heading*/
      ctx[0]
    );
    attr(span, "data-testid", "title");
    attr(span, "class", "title");
  }, m(target, anchor) {
    insert(target, span, anchor);
    append(span, t2);
  }, p(ctx2, dirty) {
    if (dirty & /*heading*/
    1)
      set_data(
        t2,
        /*heading*/
        ctx2[0]
      );
  }, d(detaching) {
    if (detaching)
      detach(span);
  } };
}
function create_if_block_4$4(ctx) {
  let button;
  let t2;
  let goa_icon;
  let goa_icon_type_value;
  let mounted;
  let dispose;
  return { c() {
    button = element("button");
    t2 = text("Menu ");
    goa_icon = element("goa-icon");
    set_custom_element_data(goa_icon, "type", goa_icon_type_value = /*_showMenu*/
    ctx[8] ? "chevron-up" : "chevron-down");
    set_custom_element_data(goa_icon, "mt", "1");
    attr(button, "class", "menu-toggle-area");
    attr(button, "data-testid", "menu-toggle");
  }, m(target, anchor) {
    insert(target, button, anchor);
    append(button, t2);
    append(button, goa_icon);
    if (!mounted) {
      dispose = listen(
        button,
        "click",
        /*toggleMenu*/
        ctx[11]
      );
      mounted = true;
    }
  }, p(ctx2, dirty) {
    if (dirty & /*_showMenu*/
    256 && goa_icon_type_value !== (goa_icon_type_value = /*_showMenu*/
    ctx2[8] ? "chevron-up" : "chevron-down")) {
      set_custom_element_data(goa_icon, "type", goa_icon_type_value);
    }
  }, d(detaching) {
    if (detaching)
      detach(button);
    mounted = false;
    dispose();
  } };
}
function create_if_block_2$e(ctx) {
  let goa_popover;
  let div;
  let button;
  let t0;
  let goa_icon;
  let goa_icon_type_value;
  let t1;
  let mounted;
  let dispose;
  let if_block = (
    /*_showMenu*/
    ctx[8] && create_if_block_3$b(ctx)
  );
  return { c() {
    goa_popover = element("goa-popover");
    div = element("div");
    button = element("button");
    t0 = text("Menu ");
    goa_icon = element("goa-icon");
    t1 = space();
    if (if_block)
      if_block.c();
    set_custom_element_data(goa_icon, "type", goa_icon_type_value = /*_showMenu*/
    ctx[8] ? "chevron-up" : "chevron-down");
    set_custom_element_data(goa_icon, "mt", "1");
    attr(button, "class", "menu-toggle-area");
    attr(button, "data-testid", "menu-toggle");
    attr(div, "slot", "target");
    set_custom_element_data(goa_popover, "class", "menu");
    set_custom_element_data(
      goa_popover,
      "open",
      /*_showMenu*/
      ctx[8]
    );
    set_custom_element_data(goa_popover, "context", "app-header-menu");
    set_custom_element_data(goa_popover, "focusborderwidth", "0");
    set_custom_element_data(goa_popover, "borderradius", "0");
    set_custom_element_data(goa_popover, "padded", "false");
    set_custom_element_data(goa_popover, "width", "16rem");
    set_custom_element_data(goa_popover, "tabindex", "-1");
    set_custom_element_data(goa_popover, "position", "below");
  }, m(target, anchor) {
    insert(target, goa_popover, anchor);
    append(goa_popover, div);
    append(div, button);
    append(button, t0);
    append(button, goa_icon);
    append(goa_popover, t1);
    if (if_block)
      if_block.m(goa_popover, null);
    if (!mounted) {
      dispose = [listen(
        button,
        "click",
        /*toggleMenu*/
        ctx[11]
      ), listen(
        goa_popover,
        "_close",
        /*hideMenu*/
        ctx[12]
      )];
      mounted = true;
    }
  }, p(ctx2, dirty) {
    if (dirty & /*_showMenu*/
    256 && goa_icon_type_value !== (goa_icon_type_value = /*_showMenu*/
    ctx2[8] ? "chevron-up" : "chevron-down")) {
      set_custom_element_data(goa_icon, "type", goa_icon_type_value);
    }
    if (
      /*_showMenu*/
      ctx2[8]
    ) {
      if (if_block) {
        if_block.p(ctx2, dirty);
      } else {
        if_block = create_if_block_3$b(ctx2);
        if_block.c();
        if_block.m(goa_popover, null);
      }
    } else if (if_block) {
      if_block.d(1);
      if_block = null;
    }
    if (dirty & /*_showMenu*/
    256) {
      set_custom_element_data(
        goa_popover,
        "open",
        /*_showMenu*/
        ctx2[8]
      );
    }
  }, d(detaching) {
    if (detaching)
      detach(goa_popover);
    if (if_block)
      if_block.d();
    mounted = false;
    run_all(dispose);
  } };
}
function create_if_block_3$b(ctx) {
  let div;
  return { c() {
    div = element("div");
    div.innerHTML = `<slot></slot>`;
    attr(div, "data-testid", "slot");
  }, m(target, anchor) {
    insert(target, div, anchor);
    ctx[14](div);
  }, p: noop, d(detaching) {
    if (detaching)
      detach(div);
    ctx[14](null);
  } };
}
function create_if_block_1$i(ctx) {
  let div;
  return { c() {
    div = element("div");
    div.innerHTML = `<slot></slot>`;
    set_style(div, "display", "none");
  }, m(target, anchor) {
    insert(target, div, anchor);
    ctx[15](div);
  }, p: noop, d(detaching) {
    if (detaching)
      detach(div);
    ctx[15](null);
  } };
}
function create_if_block$v(ctx) {
  let div;
  return { c() {
    div = element("div");
    div.innerHTML = `<slot></slot>`;
    attr(div, "data-testid", "slot");
    attr(div, "class", "content-area");
  }, m(target, anchor) {
    insert(target, div, anchor);
    ctx[16](div);
  }, p: noop, d(detaching) {
    if (detaching)
      detach(div);
    ctx[16](null);
  } };
}
function create_fragment$_(ctx) {
  let div1;
  let div0;
  let t0;
  let t1;
  let t2;
  let t3;
  let div1_style_value;
  let mounted;
  let dispose;
  add_render_callback(
    /*onwindowresize*/
    ctx[13]
  );
  function select_block_type(ctx2, dirty) {
    if (
      /*url*/
      ctx2[1]
    )
      return create_if_block_5$1;
    return create_else_block$d;
  }
  let current_block_type = select_block_type(ctx);
  let if_block0 = current_block_type(ctx);
  let if_block1 = (
    /*_showToggleMenu*/
    ctx[7] && /*_mobile*/
    ctx[10] && create_if_block_4$4(ctx)
  );
  let if_block2 = (
    /*_showToggleMenu*/
    ctx[7] && /*_tablet*/
    ctx[9] && create_if_block_2$e(ctx)
  );
  let if_block3 = !/*_showMenu*/
  ctx[8] && /*_mobile*/
  (ctx[10] || /*_tablet*/
  ctx[9]) && create_if_block_1$i(ctx);
  let if_block4 = (
    /*_showMenu*/
    (ctx[8] && /*_mobile*/
    ctx[10] || /*_desktop*/
    ctx[5]) && create_if_block$v(ctx)
  );
  return { c() {
    div1 = element("div");
    div0 = element("div");
    if_block0.c();
    t0 = space();
    if (if_block1)
      if_block1.c();
    t1 = space();
    if (if_block2)
      if_block2.c();
    t2 = space();
    if (if_block3)
      if_block3.c();
    t3 = space();
    if (if_block4)
      if_block4.c();
    this.c = noop;
    attr(div0, "class", "layout");
    attr(div1, "class", "container");
    attr(
      div1,
      "data-testid",
      /*testid*/
      ctx[2]
    );
    attr(div1, "style", div1_style_value = `--max-content-width: ${/*maxcontentwidth*/
    ctx[3] || "100%"}`);
    toggle_class(
      div1,
      "show-menu",
      /*_showMenu*/
      ctx[8]
    );
  }, m(target, anchor) {
    insert(target, div1, anchor);
    append(div1, div0);
    if_block0.m(div0, null);
    append(div0, t0);
    if (if_block1)
      if_block1.m(div0, null);
    append(div0, t1);
    if (if_block2)
      if_block2.m(div0, null);
    append(div0, t2);
    if (if_block3)
      if_block3.m(div0, null);
    append(div0, t3);
    if (if_block4)
      if_block4.m(div0, null);
    if (!mounted) {
      dispose = listen(
        window_1$2,
        "resize",
        /*onwindowresize*/
        ctx[13]
      );
      mounted = true;
    }
  }, p(ctx2, [dirty]) {
    if (current_block_type === (current_block_type = select_block_type(ctx2)) && if_block0) {
      if_block0.p(ctx2, dirty);
    } else {
      if_block0.d(1);
      if_block0 = current_block_type(ctx2);
      if (if_block0) {
        if_block0.c();
        if_block0.m(div0, t0);
      }
    }
    if (
      /*_showToggleMenu*/
      ctx2[7] && /*_mobile*/
      ctx2[10]
    ) {
      if (if_block1) {
        if_block1.p(ctx2, dirty);
      } else {
        if_block1 = create_if_block_4$4(ctx2);
        if_block1.c();
        if_block1.m(div0, t1);
      }
    } else if (if_block1) {
      if_block1.d(1);
      if_block1 = null;
    }
    if (
      /*_showToggleMenu*/
      ctx2[7] && /*_tablet*/
      ctx2[9]
    ) {
      if (if_block2) {
        if_block2.p(ctx2, dirty);
      } else {
        if_block2 = create_if_block_2$e(ctx2);
        if_block2.c();
        if_block2.m(div0, t2);
      }
    } else if (if_block2) {
      if_block2.d(1);
      if_block2 = null;
    }
    if (!/*_showMenu*/
    ctx2[8] && /*_mobile*/
    (ctx2[10] || /*_tablet*/
    ctx2[9])) {
      if (if_block3) {
        if_block3.p(ctx2, dirty);
      } else {
        if_block3 = create_if_block_1$i(ctx2);
        if_block3.c();
        if_block3.m(div0, t3);
      }
    } else if (if_block3) {
      if_block3.d(1);
      if_block3 = null;
    }
    if (
      /*_showMenu*/
      ctx2[8] && /*_mobile*/
      ctx2[10] || /*_desktop*/
      ctx2[5]
    ) {
      if (if_block4) {
        if_block4.p(ctx2, dirty);
      } else {
        if_block4 = create_if_block$v(ctx2);
        if_block4.c();
        if_block4.m(div0, null);
      }
    } else if (if_block4) {
      if_block4.d(1);
      if_block4 = null;
    }
    if (dirty & /*testid*/
    4) {
      attr(
        div1,
        "data-testid",
        /*testid*/
        ctx2[2]
      );
    }
    if (dirty & /*maxcontentwidth*/
    8 && div1_style_value !== (div1_style_value = `--max-content-width: ${/*maxcontentwidth*/
    ctx2[3] || "100%"}`)) {
      attr(div1, "style", div1_style_value);
    }
    if (dirty & /*_showMenu*/
    256) {
      toggle_class(
        div1,
        "show-menu",
        /*_showMenu*/
        ctx2[8]
      );
    }
  }, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(div1);
    if_block0.d();
    if (if_block1)
      if_block1.d();
    if (if_block2)
      if_block2.d();
    if (if_block3)
      if_block3.d();
    if (if_block4)
      if_block4.d();
    mounted = false;
    dispose();
  } };
}
const _mobileLogo = "data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='32' height='32' viewBox='0 0 16 16'%3E%3Cdefs%3E%3Cstyle%3E.a%7Bfill:none;%7D.b%7Bfill:%2300aad2;%7D.c%7Bclip-path:url(%23a);%7D.d%7Bfill:%23fff;%7D%3C/style%3E%3CclipPath id='a'%3E%3Crect class='a' width='14' height='14' transform='translate(-0.345 -0.21)'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg transform='translate(0 -0.135)'%3E%3Ccircle class='b' cx='8' cy='8' r='8' transform='translate(0 0.135)'/%3E%3Cg transform='translate(1.345 1.344)'%3E%3Cg class='c' transform='translate(0 0)'%3E%3Cpath class='d' d='M12.612,13.636a16.24,16.24,0,0,1-1.86-.822,13.436,13.436,0,0,0,1.6-.708,11.312,11.312,0,0,0,.264,1.53M16.032,7.3c-.266-.034-.128.091-.2.442a5.465,5.465,0,0,1-2.8,3.338,16.141,16.141,0,0,1,.249-4.84c.275-1,.6-.813.2-1.022-.427-.22-.887.071-1.258.813A27.247,27.247,0,0,1,7.4,13.522a2.141,2.141,0,0,1-2.918.461c-.206-.174-.282.095-.026.37a2.412,2.412,0,0,0,3.387-.082A32.715,32.715,0,0,0,12.219,7.51a23.541,23.541,0,0,0,.063,3.971,11.464,11.464,0,0,1-1.964.749c-.388.1-.628.26-.635.439-.007.2.253.363.63.541.67.318,2.633,1.246,3.117,1.527.414.24.616.053.739-.207.16-.338-.279-.533-.7-.661a13.175,13.175,0,0,1-.382-2.179,7.143,7.143,0,0,0,2.547-2.454,4.7,4.7,0,0,0,.4-1.133,2.125,2.125,0,0,0,.048-.742s-.007-.054-.048-.059' transform='translate(-3.51 -3.943)'/%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/svg%3E";
const _desktopLogo = "data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='149.351' height='42' viewBox='0 0 149.351 42'%3E%3Cdefs%3E%3Cstyle%3E.a%7Bfill:none;%7D.b%7Bclip-path:url(%23a);%7D.c%7Bfill:%2300aad2;%7D.d%7Bfill:%235f6a72;%7D%3C/style%3E%3CclipPath id='a'%3E%3Crect class='a' width='149.351' height='42'/%3E%3C/clipPath%3E%3C/defs%3E%3Cg class='b'%3E%3Crect class='c' width='13.555' height='13.555' transform='translate(135.796 21.524)'/%3E%3Cpath class='d' d='M63.082,33.088c-1.383.138-2.835.277-4.357.346.553-4.357,2.835-10.373,5.671-9.405,1.66.553.761,5.671-1.314,9.059m-3.527,2.974a3.761,3.761,0,0,1-1.245,0,.851.851,0,0,0,.346-.692v-.553c.761,0,1.936-.138,3.389-.277a4.327,4.327,0,0,1-2.49,1.521M76.844,25.688c1.8-1.66,2.7-1.521,2.9-1.106.484.968-1.591,4.357-5.671,6.224a10.328,10.328,0,0,1,2.766-5.118m66.736,1.66c-.207-3.389-3.181-3.942-3.6-2.974-.138.346,1.106.207,1.106,2.628,0,3.942-4.011,9.129-9.129,9.129-5.532,0-6.985-4.357-7.261-6.432-.207-1.452.138-3.458-2.351-3.181-1.729.207-3.25,3.527-5.463,6.362-1.867,2.42-2.7,2.213-2.282.138.553-2.628,2.7-8.714,5.187-9.129,1.176-.207,1.591,1.8,2.075.553s.069-4.011-2.559-4.011c-1.8,0-3.942,1.936-5.74,4.08-1.521,1.936-9.336,13.416-12.656,10.927-1.521-1.176-1.383-5.878-.415-11.411,3.873-1.521,7.123-1.037,8.921-.138.9.415,1.037.346.622-.622-.553-1.452-3.665-3.734-8.575-2.7-.138,0-.207.069-.346.069.415-1.8.83-3.665,1.383-5.463.484-1.66,1.8-4.5-1.729-4.979-1.106-.207-.622.346-1.037,1.867-.692,2.766-1.521,6.362-2.144,10.028a19.745,19.745,0,0,0-7.538,8.091,38.59,38.59,0,0,0,.9-4.772,1.589,1.589,0,0,0-1.245-1.729c-.761-.207-1.729.138-2.628,1.452-2.144,3.043-4.841,7.815-8.99,9.82-2.974,1.452-4.288,0-4.357-2.282a9.869,9.869,0,0,0,1.521-.553c5.394-2.351,7.192-5.947,5.878-8.16-1.314-2.075-4.979-1.452-7.953,1.66a11.175,11.175,0,0,0-2.7,6.5c-1.245.277-2.628.484-4.219.692,2.49-4.08,2.282-9.613-1.383-10.581-4.288-1.106-6.432,3.043-7.331,6.5.346-3.873.9-7.745,1.591-11.549.346-1.66,1.452-4.5-2.075-4.979-1.106-.207-.968.346-.9,1.867.138,2.075-2.144,14.454-.968,19.848-1.521.484-2.144,1.66-.207,2.835,1.383.83,4.357,1.106,7.331-.346a9.3,9.3,0,0,0,2.766-2.144c1.8-.207,3.665-.553,5.394-.83.277,2.42,1.867,4.219,5.463,3.873,5.118-.484,9.682-6.777,11.411-9.82-.346,3.25-2.42,10.373,1.176,10.028,1.383-.138.83-.346.9-1.591.346-4.288,3.873-7.953,7.4-10.166-.622,5.256-.415,9.958,2.006,11.411,4.426,2.766,10.581-4.5,14.039-8.921-1.729,3.942-2.7,8.921-.138,9.682,3.043.9,5.463-4.219,8.3-8.091.346,2.766,2.213,7.607,9.682,7.607,8.022-.069,13.071-4.91,12.863-10.1m-108.3,8.645A66.439,66.439,0,0,1,27.4,32.534a59.168,59.168,0,0,0,6.777-2.974,54.453,54.453,0,0,0,1.106,6.432m20.4,3.873c-.069-.207-.622.069-1.106,0-1.452-.207-3.389-2.213-3.942-5.463-1.037-5.878-.415-11.687,1.314-20.332.346-1.66,1.452-4.5-2.075-5.048-1.106-.138-.553.415-.83,1.867C47.66,17.32,42.4,21.954,37.149,25.066,36.6,17.735,36.8,9.505,38.186,4.526c1.176-4.219,2.559-3.458.83-4.357s-3.734.277-5.325,3.458S24.839,23.89,13.221,35.439C7.273,41.317,1.879,38.274.842,37.375c-.9-.761-1.176.415-.138,1.591,4.772,5.256,11.826,2.282,14.384-.277,7.054-7.054,15.283-22.268,18.6-28.7a98.251,98.251,0,0,0,.277,16.874,50.129,50.129,0,0,1-8.3,3.181c-1.66.415-2.7,1.106-2.7,1.867s1.106,1.521,2.7,2.282c2.835,1.383,11.2,5.256,13.209,6.5,1.729,1.037,2.628.207,3.112-.9.692-1.452-1.176-2.282-2.974-2.766a60.545,60.545,0,0,1-1.66-9.267c4.219-2.628,8.437-6.086,10.788-10.443C47.522,20.916,46,33.3,49.873,38.482a5.451,5.451,0,0,0,4.564,2.213c.968-.069,1.383-.692,1.245-.83' transform='translate(-0.038 0.124)'/%3E%3C/g%3E%3C/svg%3E";
function instance$U($$self, $$props, $$invalidate) {
  let _mobile;
  let _tablet;
  let _desktop;
  let { heading = "" } = $$props;
  let { url = "" } = $$props;
  let { testid = "" } = $$props;
  let { maxcontentwidth = "" } = $$props;
  let _slotParentEl;
  let _windowWidth = window.innerWidth;
  let _showToggleMenu = false;
  let _showMenu = false;
  const toggleMenu = () => $$invalidate(8, _showMenu = !_showMenu);
  const hideMenu = () => $$invalidate(8, _showMenu = false);
  onMount(() => {
    window.addEventListener("popstate", () => {
      setCurrentLink();
      if (!_desktop) {
        hideMenu();
      }
    }, true);
    setCurrentLink();
  });
  function setCurrentLink() {
    if (!_slotParentEl)
      return;
    const slot = _slotParentEl.querySelector("slot");
    if (!slot)
      return;
    const link = slot.assignedElements().filter((el2) => el2.tagName === "A").map((el2) => {
      el2.classList.remove("current");
      return el2;
    }).find((el2) => {
      const href = el2.href;
      const url2 = `${window.location.pathname}${window.location.search}${window.location.hash}`;
      return href.endsWith(url2);
    });
    if (link) {
      link.classList.add("current");
    }
  }
  async function hasChildren() {
    var _a;
    await tick();
    if (!_slotParentEl)
      return;
    const slot = _slotParentEl === null || _slotParentEl === void 0 ? void 0 : _slotParentEl.childNodes[0];
    const children2 = (_a = slot.assignedElements) === null || _a === void 0 ? void 0 : _a.call(slot);
    if (children2) {
      return children2.length > 0;
    } else {
      return [..._slotParentEl.querySelectorAll("a")].length > 0;
    }
  }
  function onwindowresize() {
    $$invalidate(4, _windowWidth = window_1$2.innerWidth);
  }
  function div_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      _slotParentEl = $$value;
      $$invalidate(6, _slotParentEl);
    });
  }
  function div_binding_1($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      _slotParentEl = $$value;
      $$invalidate(6, _slotParentEl);
    });
  }
  function div_binding_2($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      _slotParentEl = $$value;
      $$invalidate(6, _slotParentEl);
    });
  }
  $$self.$$set = ($$props2) => {
    if ("heading" in $$props2)
      $$invalidate(0, heading = $$props2.heading);
    if ("url" in $$props2)
      $$invalidate(1, url = $$props2.url);
    if ("testid" in $$props2)
      $$invalidate(2, testid = $$props2.testid);
    if ("maxcontentwidth" in $$props2)
      $$invalidate(3, maxcontentwidth = $$props2.maxcontentwidth);
  };
  $$self.$$.update = () => {
    if ($$self.$$.dirty & /*_windowWidth*/
    16) {
      $$invalidate(10, _mobile = _windowWidth < MOBILE_BP);
    }
    if ($$self.$$.dirty & /*_windowWidth*/
    16) {
      $$invalidate(9, _tablet = _windowWidth >= MOBILE_BP && _windowWidth < TABLET_BP);
    }
    if ($$self.$$.dirty & /*_windowWidth*/
    16) {
      $$invalidate(5, _desktop = _windowWidth >= TABLET_BP);
    }
    if ($$self.$$.dirty & /*_desktop*/
    32) {
      (async () => $$invalidate(7, _showToggleMenu = !_desktop && await hasChildren()))();
    }
  };
  return [heading, url, testid, maxcontentwidth, _windowWidth, _desktop, _slotParentEl, _showToggleMenu, _showMenu, _tablet, _mobile, toggleMenu, hideMenu, onwindowresize, div_binding, div_binding_1, div_binding_2];
}
class AppHeader extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `*,::slotted(*){font:var(--goa-typography-body-s)}.container{border-bottom:var(--goa-border-width-s) solid var(--goa-color-greyscale-200);background-color:var(--goa-color-greyscale-white)}.title{margin-left:var(--goa-space-s);overflow:hidden;white-space:nowrap;text-overflow:ellipsis;color:var(--goa-color-text-default)}.layout{width:100%;display:grid;grid-template-columns:1fr auto;grid-template-rows:3.375rem auto;grid-template-areas:"header menu"
      "links links"}.header-logo-title-area{grid-area:header;display:flex;align-items:center;padding:0 1rem;text-decoration:none}.header-logo-title-area:focus{outline:var(--goa-border-width-l) solid var(--goa-color-interactive-focus);outline-offset:calc(-1 * var(--goa-border-width-l))}.menu-toggle-area{grid-area:menu;color:var(--goa-color-text-default);align-items:center;background:transparent;border:none;cursor:pointer;display:flex;gap:0.25rem;justify-content:right;padding:1rem;text-decoration:underline}.menu-toggle-area goa-icon{scale:0.8}.menu-toggle-area:focus{outline:var(--goa-border-width-l) solid var(--goa-color-interactive-focus);outline-offset:calc(-1 * var(--goa-border-width-l))}goa-popover .menu-toggle-area:focus{outline-offset:0}.image-desktop{height:2rem}.content-area{grid-area:links}::slotted(a){display:block;margin:0;font:var(--goa-typography-body-m);text-decoration:none;color:var(--goa-color-text-default);display:block;padding:calc((3rem - var(--goa-line-height-3)) / 2) 1rem;text-decoration:none;cursor:pointer;white-space:nowrap;box-shadow:inset 0 var(--goa-border-width-s) 0 0 var(--goa-color-greyscale-200)}::slotted(a:hover){background-color:var(--goa-color-greyscale-100);color:var(--goa-color-interactive-hover)}::slotted(a:focus){outline:var(--goa-border-width-l) solid var(--goa-color-interactive-focus);outline-offset:calc(-1 * var(--goa-border-width-l))}::slotted(a.interactive){text-decoration:underline;color:var(--goa-color-interactive-default)}@media screen and (max-width: 623px){.image-desktop{display:none}.image-mobile{display:block}.show-menu{border-bottom:var(--goa-border-width-m) solid var(--goa-color-greyscale-200)}}@media screen and (max-width: 623px){@media not (max-color:2147477350){*,::slotted(*){font:var(--goa-typography-body-m)}.layout{grid-template-rows:4rem auto}.header-logo-title-area{padding:0 1.5rem}.title{margin-left:var(--goa-space-m)}.header-logo-title-area{min-height:4rem}}}@media not  screen and (max-width: 623px){@media not (color:2147477350){*,::slotted(*){font:var(--goa-typography-body-m)}.layout{grid-template-rows:4rem auto}.header-logo-title-area{padding:0 1.5rem}.title{margin-left:var(--goa-space-m)}.header-logo-title-area{min-height:4rem}}}@media screen and (min-width: 624px) and (max-width: 1023px){.image-desktop{display:block}.image-mobile{display:none}}@media screen and (min-width: 1024px){.image-desktop{display:block}.image-mobile{display:none}.layout{display:grid;grid-template-columns:auto 1fr auto;grid-template-rows:auto;grid-template-areas:"header . menu";margin:0 auto;width:min(var(--max-content-width), 100%)}.header-logo-title-area{grid-area:header;display:flex;align-items:center;grid-template-rows:3.375rem auto;color:inherit;flex:1 1 auto}.content-area{grid-area:menu;display:flex;align-items:stretch}::slotted(goa-app-header-menu),::slotted(a),::slotted(a:visited){color:var(--goa-color-text-default);font-weight:var(--goa-font-weight-bold);grid-template-rows:3.375rem auto;display:inline-flex;align-items:center;padding:0 0.75rem}::slotted(goa-app-header-menu){padding:0}::slotted(a:focus-within),::slotted(goa-app-header-menu:focus-within),::slotted(a:hover),::slotted(goa-app-header-menu:hover){background:var(--goa-color-greyscale-100);cursor:pointer;color:var(--goa-color-interactive-hover)}::slotted(a:focus),::slotted(goa-app-header-menu:focus){outline:var(--goa-border-width-l) solid var(--goa-color-interactive-focus);outline-offset:calc(-1 * var(--goa-border-width-l))}::slotted(a.current){border-top:4px solid var(--goa-color-interactive-default);border-bottom:4px solid transparent}::slotted(a.current:hover){border-top:4px solid var(--goa-color-interactive-hover)}::slotted(a.interactive){font-weight:var(--goa-font-weight-medium);text-decoration:underline;color:var(--goa-color-interactive-default);padding:0 var(--goa-space-m)}::slotted(a.interactive:hover){color:var(--goa-color-interactive-hover)}::slotted(a.interactive.current){border-color:transparent;margin-left:var(--goa-space-m)}}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$U, create_fragment$_, safe_not_equal, { heading: 0, url: 1, testid: 2, maxcontentwidth: 3 }, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["heading", "url", "testid", "maxcontentwidth"];
  }
  get heading() {
    return this.$$.ctx[0];
  }
  set heading(heading) {
    this.$$set({ heading });
    flush();
  }
  get url() {
    return this.$$.ctx[1];
  }
  set url(url) {
    this.$$set({ url });
    flush();
  }
  get testid() {
    return this.$$.ctx[2];
  }
  set testid(testid) {
    this.$$set({ testid });
    flush();
  }
  get maxcontentwidth() {
    return this.$$.ctx[3];
  }
  set maxcontentwidth(maxcontentwidth) {
    this.$$set({ maxcontentwidth });
    flush();
  }
}
customElements.define("goa-app-header", AppHeader);
function create_else_block$c(ctx) {
  let div;
  return { c() {
    div = element("div");
    set_style(div, "height", "1.2rem");
    set_style(div, "margin-left", "-0.25rem");
  }, m(target, anchor) {
    insert(target, div, anchor);
  }, p: noop, d(detaching) {
    if (detaching)
      detach(div);
  } };
}
function create_if_block_1$h(ctx) {
  let goa_icon;
  let goa_icon_arialabel_value;
  let goa_icon_role_value;
  return { c() {
    goa_icon = element("goa-icon");
    set_custom_element_data(goa_icon, "arialabel", goa_icon_arialabel_value = /*showIconOnly*/
    ctx[9] && /*arialabel*/
    ctx[3] ? (
      /*arialabel*/
      ctx[3]
    ) : null);
    set_custom_element_data(goa_icon, "role", goa_icon_role_value = /*showIconOnly*/
    ctx[9] && /*arialabel*/
    ctx[3] ? "presentation" : null);
    set_custom_element_data(
      goa_icon,
      "type",
      /*iconType*/
      ctx[10]
    );
    set_custom_element_data(goa_icon, "size", "small");
  }, m(target, anchor) {
    insert(target, goa_icon, anchor);
  }, p(ctx2, dirty) {
    if (dirty & /*showIconOnly, arialabel*/
    520 && goa_icon_arialabel_value !== (goa_icon_arialabel_value = /*showIconOnly*/
    ctx2[9] && /*arialabel*/
    ctx2[3] ? (
      /*arialabel*/
      ctx2[3]
    ) : null)) {
      set_custom_element_data(goa_icon, "arialabel", goa_icon_arialabel_value);
    }
    if (dirty & /*showIconOnly, arialabel*/
    520 && goa_icon_role_value !== (goa_icon_role_value = /*showIconOnly*/
    ctx2[9] && /*arialabel*/
    ctx2[3] ? "presentation" : null)) {
      set_custom_element_data(goa_icon, "role", goa_icon_role_value);
    }
    if (dirty & /*iconType*/
    1024) {
      set_custom_element_data(
        goa_icon,
        "type",
        /*iconType*/
        ctx2[10]
      );
    }
  }, d(detaching) {
    if (detaching)
      detach(goa_icon);
  } };
}
function create_if_block$u(ctx) {
  let div;
  let t2;
  return { c() {
    div = element("div");
    t2 = text(
      /*content*/
      ctx[2]
    );
    attr(div, "class", "goa-badge-content");
  }, m(target, anchor) {
    insert(target, div, anchor);
    append(div, t2);
  }, p(ctx2, dirty) {
    if (dirty & /*content*/
    4)
      set_data(
        t2,
        /*content*/
        ctx2[2]
      );
  }, d(detaching) {
    if (detaching)
      detach(div);
  } };
}
function create_fragment$Z(ctx) {
  let div;
  let t2;
  let div_style_value;
  let div_class_value;
  function select_block_type(ctx2, dirty) {
    if (
      /*showIcon*/
      ctx2[8]
    )
      return create_if_block_1$h;
    return create_else_block$c;
  }
  let current_block_type = select_block_type(ctx);
  let if_block0 = current_block_type(ctx);
  let if_block1 = (
    /*content*/
    ctx[2] && create_if_block$u(ctx)
  );
  return { c() {
    div = element("div");
    if_block0.c();
    t2 = space();
    if (if_block1)
      if_block1.c();
    this.c = noop;
    attr(div, "style", div_style_value = calculateMargin(
      /*mt*/
      ctx[4],
      /*mr*/
      ctx[5],
      /*mb*/
      ctx[6],
      /*ml*/
      ctx[7]
    ));
    attr(
      div,
      "data-testid",
      /*testid*/
      ctx[1]
    );
    attr(div, "data-type", "goa-badge");
    attr(div, "class", div_class_value = "goa-badge badge-" + /*type*/
    ctx[0]);
    toggle_class(
      div,
      "icon-only",
      /*showIconOnly*/
      ctx[9]
    );
  }, m(target, anchor) {
    insert(target, div, anchor);
    if_block0.m(div, null);
    append(div, t2);
    if (if_block1)
      if_block1.m(div, null);
  }, p(ctx2, [dirty]) {
    if (current_block_type === (current_block_type = select_block_type(ctx2)) && if_block0) {
      if_block0.p(ctx2, dirty);
    } else {
      if_block0.d(1);
      if_block0 = current_block_type(ctx2);
      if (if_block0) {
        if_block0.c();
        if_block0.m(div, t2);
      }
    }
    if (
      /*content*/
      ctx2[2]
    ) {
      if (if_block1) {
        if_block1.p(ctx2, dirty);
      } else {
        if_block1 = create_if_block$u(ctx2);
        if_block1.c();
        if_block1.m(div, null);
      }
    } else if (if_block1) {
      if_block1.d(1);
      if_block1 = null;
    }
    if (dirty & /*mt, mr, mb, ml*/
    240 && div_style_value !== (div_style_value = calculateMargin(
      /*mt*/
      ctx2[4],
      /*mr*/
      ctx2[5],
      /*mb*/
      ctx2[6],
      /*ml*/
      ctx2[7]
    ))) {
      attr(div, "style", div_style_value);
    }
    if (dirty & /*testid*/
    2) {
      attr(
        div,
        "data-testid",
        /*testid*/
        ctx2[1]
      );
    }
    if (dirty & /*type*/
    1 && div_class_value !== (div_class_value = "goa-badge badge-" + /*type*/
    ctx2[0])) {
      attr(div, "class", div_class_value);
    }
    if (dirty & /*type, showIconOnly*/
    513) {
      toggle_class(
        div,
        "icon-only",
        /*showIconOnly*/
        ctx2[9]
      );
    }
  }, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(div);
    if_block0.d();
    if (if_block1)
      if_block1.d();
  } };
}
function instance$T($$self, $$props, $$invalidate) {
  let showIcon;
  let showIconOnly;
  let iconType;
  const [Types, validateType] = typeValidator("Badge type", ["success", "important", "information", "emergency", "dark", "midtone", "light"], true);
  let { type } = $$props;
  let { testid = "" } = $$props;
  let { content = "" } = $$props;
  let { icon = "false" } = $$props;
  let { arialabel = "" } = $$props;
  let { mt = null } = $$props;
  let { mr = null } = $$props;
  let { mb: mb2 = null } = $$props;
  let { ml: ml2 = null } = $$props;
  onMount(() => {
    setTimeout(() => validateType(type), 1);
    if (!showIcon && !content) {
      console.warn("GoABadge must have either then content or icon property set");
    }
    if (showIconOnly && !arialabel) {
      console.warn("GoABadge with icon only requires an arialabel");
    }
  });
  $$self.$$set = ($$props2) => {
    if ("type" in $$props2)
      $$invalidate(0, type = $$props2.type);
    if ("testid" in $$props2)
      $$invalidate(1, testid = $$props2.testid);
    if ("content" in $$props2)
      $$invalidate(2, content = $$props2.content);
    if ("icon" in $$props2)
      $$invalidate(11, icon = $$props2.icon);
    if ("arialabel" in $$props2)
      $$invalidate(3, arialabel = $$props2.arialabel);
    if ("mt" in $$props2)
      $$invalidate(4, mt = $$props2.mt);
    if ("mr" in $$props2)
      $$invalidate(5, mr = $$props2.mr);
    if ("mb" in $$props2)
      $$invalidate(6, mb2 = $$props2.mb);
    if ("ml" in $$props2)
      $$invalidate(7, ml2 = $$props2.ml);
  };
  $$self.$$.update = () => {
    if ($$self.$$.dirty & /*icon*/
    2048) {
      $$invalidate(8, showIcon = toBoolean(icon));
    }
    if ($$self.$$.dirty & /*showIcon, content*/
    260) {
      $$invalidate(9, showIconOnly = showIcon && !content);
    }
    if ($$self.$$.dirty & /*type*/
    1) {
      $$invalidate(10, iconType = { success: "checkmark-circle", important: "alert-circle", information: "information-circle", emergency: "warning", dark: "information-circle", midtone: "information-circle", light: "information-circle" }[type]);
    }
  };
  return [type, testid, content, arialabel, mt, mr, mb2, ml2, showIcon, showIconOnly, iconType, icon];
}
class Badge extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `:host{box-sizing:border-box;font-family:var(--goa-font-family-sans)}.goa-badge{display:inline-flex;align-items:center;border-radius:0.25rem;padding:3px 0.5rem;gap:0.25rem;font-weight:var(--goa-font-weight-regular)}.icon-only{padding:0.25rem}.goa-badge-content{font-size:var(--goa-font-size-2);line-height:var(--goa-line-height-1);padding-bottom:var(--font-valign-fix, 0)}.goa-badge.badge-information{background-color:var(--goa-color-greyscale-100);color:var(--goa-color-info-default)}.goa-badge.badge-success{background-color:var(--goa-color-success-default);color:var(--goa-color-text-light)}.goa-badge.badge-important{background-color:var(--goa-color-warning-default);color:var(--goa-color-text-default)}.goa-badge.badge-emergency{background-color:var(--goa-color-emergency-default);color:var(--goa-color-text-light)}.goa-badge.badge-dark{background-color:var(--goa-color-greyscale-black);color:var(--goa-color-text-light)}.goa-badge.badge-midtone{background-color:var(--goa-color-greyscale-700);color:var(--goa-color-text-light)}.goa-badge.badge-light{background-color:var(--goa-color-greyscale-white);color:var(--goa-color-text-default)}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$T, create_fragment$Z, safe_not_equal, { type: 0, testid: 1, content: 2, icon: 11, arialabel: 3, mt: 4, mr: 5, mb: 6, ml: 7 }, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["type", "testid", "content", "icon", "arialabel", "mt", "mr", "mb", "ml"];
  }
  get type() {
    return this.$$.ctx[0];
  }
  set type(type) {
    this.$$set({ type });
    flush();
  }
  get testid() {
    return this.$$.ctx[1];
  }
  set testid(testid) {
    this.$$set({ testid });
    flush();
  }
  get content() {
    return this.$$.ctx[2];
  }
  set content(content) {
    this.$$set({ content });
    flush();
  }
  get icon() {
    return this.$$.ctx[11];
  }
  set icon(icon) {
    this.$$set({ icon });
    flush();
  }
  get arialabel() {
    return this.$$.ctx[3];
  }
  set arialabel(arialabel) {
    this.$$set({ arialabel });
    flush();
  }
  get mt() {
    return this.$$.ctx[4];
  }
  set mt(mt) {
    this.$$set({ mt });
    flush();
  }
  get mr() {
    return this.$$.ctx[5];
  }
  set mr(mr) {
    this.$$set({ mr });
    flush();
  }
  get mb() {
    return this.$$.ctx[6];
  }
  set mb(mb2) {
    this.$$set({ mb: mb2 });
    flush();
  }
  get ml() {
    return this.$$.ctx[7];
  }
  set ml(ml2) {
    this.$$set({ ml: ml2 });
    flush();
  }
}
customElements.define("goa-badge", Badge);
function create_fragment$Y(ctx) {
  let div;
  let slot;
  let div_style_value;
  return { c() {
    div = element("div");
    slot = element("slot");
    this.c = noop;
    attr(div, "class", "block");
    attr(div, "style", div_style_value = `
    ${calculateMargin(
      /*mt*/
      ctx[3],
      /*mr*/
      ctx[4],
      /*mb*/
      ctx[5],
      /*ml*/
      ctx[6]
    )};
    --gap: var(--goa-space-${/*gap*/
    ctx[0]});
    --alignment: ${/*alignment*/
    ctx[2]};
    --direction: ${/*direction*/
    ctx[1]};
  `);
  }, m(target, anchor) {
    insert(target, div, anchor);
    append(div, slot);
  }, p(ctx2, [dirty]) {
    if (dirty & /*mt, mr, mb, ml, gap, alignment, direction*/
    127 && div_style_value !== (div_style_value = `
    ${calculateMargin(
      /*mt*/
      ctx2[3],
      /*mr*/
      ctx2[4],
      /*mb*/
      ctx2[5],
      /*ml*/
      ctx2[6]
    )};
    --gap: var(--goa-space-${/*gap*/
    ctx2[0]});
    --alignment: ${/*alignment*/
    ctx2[2]};
    --direction: ${/*direction*/
    ctx2[1]};
  `)) {
      attr(div, "style", div_style_value);
    }
  }, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(div);
  } };
}
function instance$S($$self, $$props, $$invalidate) {
  let { gap = "m" } = $$props;
  let { direction = "row" } = $$props;
  let { alignment = "start" } = $$props;
  let { mt = null } = $$props;
  let { mr = null } = $$props;
  let { mb: mb2 = null } = $$props;
  let { ml: ml2 = null } = $$props;
  $$self.$$set = ($$props2) => {
    if ("gap" in $$props2)
      $$invalidate(0, gap = $$props2.gap);
    if ("direction" in $$props2)
      $$invalidate(1, direction = $$props2.direction);
    if ("alignment" in $$props2)
      $$invalidate(2, alignment = $$props2.alignment);
    if ("mt" in $$props2)
      $$invalidate(3, mt = $$props2.mt);
    if ("mr" in $$props2)
      $$invalidate(4, mr = $$props2.mr);
    if ("mb" in $$props2)
      $$invalidate(5, mb2 = $$props2.mb);
    if ("ml" in $$props2)
      $$invalidate(6, ml2 = $$props2.ml);
  };
  return [gap, direction, alignment, mt, mr, mb2, ml2];
}
class Block extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `.block{display:flex;flex-direction:var(--direction);align-items:var(--alignment);gap:var(--gap)}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$S, create_fragment$Y, safe_not_equal, { gap: 0, direction: 1, alignment: 2, mt: 3, mr: 4, mb: 5, ml: 6 }, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["gap", "direction", "alignment", "mt", "mr", "mb", "ml"];
  }
  get gap() {
    return this.$$.ctx[0];
  }
  set gap(gap) {
    this.$$set({ gap });
    flush();
  }
  get direction() {
    return this.$$.ctx[1];
  }
  set direction(direction) {
    this.$$set({ direction });
    flush();
  }
  get alignment() {
    return this.$$.ctx[2];
  }
  set alignment(alignment) {
    this.$$set({ alignment });
    flush();
  }
  get mt() {
    return this.$$.ctx[3];
  }
  set mt(mt) {
    this.$$set({ mt });
    flush();
  }
  get mr() {
    return this.$$.ctx[4];
  }
  set mr(mr) {
    this.$$set({ mr });
    flush();
  }
  get mb() {
    return this.$$.ctx[5];
  }
  set mb(mb2) {
    this.$$set({ mb: mb2 });
    flush();
  }
  get ml() {
    return this.$$.ctx[6];
  }
  set ml(ml2) {
    this.$$set({ ml: ml2 });
    flush();
  }
}
customElements.define("goa-block", Block);
function create_else_block$b(ctx) {
  let t0;
  let span;
  let t1;
  let if_block1_anchor;
  let if_block0 = (
    /*leadingicon*/
    ctx[3] && create_if_block_2$d(ctx)
  );
  let if_block1 = (
    /*trailingicon*/
    ctx[4] && create_if_block_1$g(ctx)
  );
  return { c() {
    if (if_block0)
      if_block0.c();
    t0 = space();
    span = element("span");
    span.innerHTML = `<slot></slot>`;
    t1 = space();
    if (if_block1)
      if_block1.c();
    if_block1_anchor = empty();
    attr(span, "class", "text");
  }, m(target, anchor) {
    if (if_block0)
      if_block0.m(target, anchor);
    insert(target, t0, anchor);
    insert(target, span, anchor);
    insert(target, t1, anchor);
    if (if_block1)
      if_block1.m(target, anchor);
    insert(target, if_block1_anchor, anchor);
  }, p(ctx2, dirty) {
    if (
      /*leadingicon*/
      ctx2[3]
    ) {
      if (if_block0) {
        if_block0.p(ctx2, dirty);
      } else {
        if_block0 = create_if_block_2$d(ctx2);
        if_block0.c();
        if_block0.m(t0.parentNode, t0);
      }
    } else if (if_block0) {
      if_block0.d(1);
      if_block0 = null;
    }
    if (
      /*trailingicon*/
      ctx2[4]
    ) {
      if (if_block1) {
        if_block1.p(ctx2, dirty);
      } else {
        if_block1 = create_if_block_1$g(ctx2);
        if_block1.c();
        if_block1.m(if_block1_anchor.parentNode, if_block1_anchor);
      }
    } else if (if_block1) {
      if_block1.d(1);
      if_block1 = null;
    }
  }, d(detaching) {
    if (if_block0)
      if_block0.d(detaching);
    if (detaching)
      detach(t0);
    if (detaching)
      detach(span);
    if (detaching)
      detach(t1);
    if (if_block1)
      if_block1.d(detaching);
    if (detaching)
      detach(if_block1_anchor);
  } };
}
function create_if_block$t(ctx) {
  let span;
  let t2;
  let goa_icon;
  return { c() {
    span = element("span");
    span.innerHTML = `<slot></slot>`;
    t2 = space();
    goa_icon = element("goa-icon");
    attr(span, "class", "text");
    set_custom_element_data(goa_icon, "id", "trailing-icon");
    set_custom_element_data(goa_icon, "type", "arrow-forward");
    set_custom_element_data(goa_icon, "inverted", "true");
  }, m(target, anchor) {
    insert(target, span, anchor);
    insert(target, t2, anchor);
    insert(target, goa_icon, anchor);
  }, p: noop, d(detaching) {
    if (detaching)
      detach(span);
    if (detaching)
      detach(t2);
    if (detaching)
      detach(goa_icon);
  } };
}
function create_if_block_2$d(ctx) {
  let goa_icon;
  return { c() {
    goa_icon = element("goa-icon");
    set_custom_element_data(goa_icon, "id", "leading-icon");
    set_custom_element_data(
      goa_icon,
      "type",
      /*leadingicon*/
      ctx[3]
    );
    set_custom_element_data(
      goa_icon,
      "inverted",
      /*isButtonDark*/
      ctx[11]
    );
  }, m(target, anchor) {
    insert(target, goa_icon, anchor);
  }, p(ctx2, dirty) {
    if (dirty & /*leadingicon*/
    8) {
      set_custom_element_data(
        goa_icon,
        "type",
        /*leadingicon*/
        ctx2[3]
      );
    }
    if (dirty & /*isButtonDark*/
    2048) {
      set_custom_element_data(
        goa_icon,
        "inverted",
        /*isButtonDark*/
        ctx2[11]
      );
    }
  }, d(detaching) {
    if (detaching)
      detach(goa_icon);
  } };
}
function create_if_block_1$g(ctx) {
  let goa_icon;
  return { c() {
    goa_icon = element("goa-icon");
    set_custom_element_data(goa_icon, "id", "trailing-icon");
    set_custom_element_data(
      goa_icon,
      "type",
      /*trailingicon*/
      ctx[4]
    );
    set_custom_element_data(
      goa_icon,
      "inverted",
      /*isButtonDark*/
      ctx[11]
    );
  }, m(target, anchor) {
    insert(target, goa_icon, anchor);
  }, p(ctx2, dirty) {
    if (dirty & /*trailingicon*/
    16) {
      set_custom_element_data(
        goa_icon,
        "type",
        /*trailingicon*/
        ctx2[4]
      );
    }
    if (dirty & /*isButtonDark*/
    2048) {
      set_custom_element_data(
        goa_icon,
        "inverted",
        /*isButtonDark*/
        ctx2[11]
      );
    }
  }, d(detaching) {
    if (detaching)
      detach(goa_icon);
  } };
}
function create_fragment$X(ctx) {
  let button;
  let button_class_value;
  let button_style_value;
  let button_type_value;
  let mounted;
  let dispose;
  function select_block_type(ctx2, dirty) {
    if (
      /*type*/
      ctx2[0] === "start"
    )
      return create_if_block$t;
    return create_else_block$b;
  }
  let current_block_type = select_block_type(ctx);
  let if_block = current_block_type(ctx);
  return { c() {
    button = element("button");
    if_block.c();
    this.c = noop;
    attr(button, "class", button_class_value = /*type*/
    ctx[0] + " " + /*size*/
    ctx[1] + " " + /*variant*/
    ctx[2]);
    attr(button, "style", button_style_value = calculateMargin(
      /*mt*/
      ctx[6],
      /*mr*/
      ctx[7],
      /*mb*/
      ctx[8],
      /*ml*/
      ctx[9]
    ));
    button.disabled = /*isDisabled*/
    ctx[10];
    attr(
      button,
      "data-testid",
      /*testid*/
      ctx[5]
    );
    attr(button, "type", button_type_value = /*type*/
    ctx[0] == "submit" ? (
      /*type*/
      ctx[0]
    ) : "button");
    toggle_class(
      button,
      "leading",
      /*leadingicon*/
      ctx[3]
    );
    toggle_class(
      button,
      "trailing",
      /*trailingicon*/
      ctx[4] || /*type*/
      ctx[0] === "start"
    );
  }, m(target, anchor) {
    insert(target, button, anchor);
    if_block.m(button, null);
    if (!mounted) {
      dispose = [listen(
        button,
        "click",
        /*clickHandler*/
        ctx[12]
      ), listen(
        button,
        "click",
        /*clickHandler*/
        ctx[12]
      )];
      mounted = true;
    }
  }, p(ctx2, [dirty]) {
    if (current_block_type === (current_block_type = select_block_type(ctx2)) && if_block) {
      if_block.p(ctx2, dirty);
    } else {
      if_block.d(1);
      if_block = current_block_type(ctx2);
      if (if_block) {
        if_block.c();
        if_block.m(button, null);
      }
    }
    if (dirty & /*type, size, variant*/
    7 && button_class_value !== (button_class_value = /*type*/
    ctx2[0] + " " + /*size*/
    ctx2[1] + " " + /*variant*/
    ctx2[2])) {
      attr(button, "class", button_class_value);
    }
    if (dirty & /*mt, mr, mb, ml*/
    960 && button_style_value !== (button_style_value = calculateMargin(
      /*mt*/
      ctx2[6],
      /*mr*/
      ctx2[7],
      /*mb*/
      ctx2[8],
      /*ml*/
      ctx2[9]
    ))) {
      attr(button, "style", button_style_value);
    }
    if (dirty & /*isDisabled*/
    1024) {
      button.disabled = /*isDisabled*/
      ctx2[10];
    }
    if (dirty & /*testid*/
    32) {
      attr(
        button,
        "data-testid",
        /*testid*/
        ctx2[5]
      );
    }
    if (dirty & /*type*/
    1 && button_type_value !== (button_type_value = /*type*/
    ctx2[0] == "submit" ? (
      /*type*/
      ctx2[0]
    ) : "button")) {
      attr(button, "type", button_type_value);
    }
    if (dirty & /*type, size, variant, leadingicon*/
    15) {
      toggle_class(
        button,
        "leading",
        /*leadingicon*/
        ctx2[3]
      );
    }
    if (dirty & /*type, size, variant, trailingicon, type*/
    23) {
      toggle_class(
        button,
        "trailing",
        /*trailingicon*/
        ctx2[4] || /*type*/
        ctx2[0] === "start"
      );
    }
  }, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(button);
    if_block.d();
    mounted = false;
    run_all(dispose);
  } };
}
function instance$R($$self, $$props, $$invalidate) {
  let isDisabled;
  let isButtonDark;
  const [Types, validateType] = typeValidator("Button type", ["primary", "submit", "secondary", "tertiary", "start"], true);
  const [Sizes, validateSize] = typeValidator("Button size", ["normal", "compact"], true);
  const [Variants, validateVariant] = typeValidator("Button variant", ["normal", "destructive"], true);
  let { type = "primary" } = $$props;
  let { size = "normal" } = $$props;
  let { variant = "normal" } = $$props;
  let { disabled = "false" } = $$props;
  let { leadingicon = null } = $$props;
  let { trailingicon = null } = $$props;
  let { testid = "" } = $$props;
  let { mt = null } = $$props;
  let { mr = null } = $$props;
  let { mb: mb2 = null } = $$props;
  let { ml: ml2 = null } = $$props;
  function clickHandler(e) {
    if (!isDisabled) {
      this.dispatchEvent(new CustomEvent("_click", { composed: true, bubbles: true }));
    }
  }
  onMount(() => {
    validateType(type);
    validateSize(size);
    validateVariant(variant);
  });
  $$self.$$set = ($$props2) => {
    if ("type" in $$props2)
      $$invalidate(0, type = $$props2.type);
    if ("size" in $$props2)
      $$invalidate(1, size = $$props2.size);
    if ("variant" in $$props2)
      $$invalidate(2, variant = $$props2.variant);
    if ("disabled" in $$props2)
      $$invalidate(13, disabled = $$props2.disabled);
    if ("leadingicon" in $$props2)
      $$invalidate(3, leadingicon = $$props2.leadingicon);
    if ("trailingicon" in $$props2)
      $$invalidate(4, trailingicon = $$props2.trailingicon);
    if ("testid" in $$props2)
      $$invalidate(5, testid = $$props2.testid);
    if ("mt" in $$props2)
      $$invalidate(6, mt = $$props2.mt);
    if ("mr" in $$props2)
      $$invalidate(7, mr = $$props2.mr);
    if ("mb" in $$props2)
      $$invalidate(8, mb2 = $$props2.mb);
    if ("ml" in $$props2)
      $$invalidate(9, ml2 = $$props2.ml);
  };
  $$self.$$.update = () => {
    if ($$self.$$.dirty & /*disabled*/
    8192) {
      $$invalidate(10, isDisabled = toBoolean(disabled));
    }
    if ($$self.$$.dirty & /*type*/
    1) {
      $$invalidate(11, isButtonDark = type === "primary" || type === "start");
    }
  };
  return [type, size, variant, leadingicon, trailingicon, testid, mt, mr, mb2, ml2, isDisabled, isButtonDark, clickHandler, disabled];
}
class Button extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `:host{--button-height:2.625rem;--button-height-compact:2rem;--button-height-tall:3.25rem;box-sizing:border-box;font-family:var(--goa-font-family-sans)}@media screen and (max-width: 623px){:host{width:100%}button{width:100%}}button{display:inline-flex;box-sizing:border-box;border-radius:0.25rem;border:2px solid var(--goa-color-interactive-default);box-sizing:border-box;cursor:pointer;font-family:var(--goa-font-family-sans);font-size:var(--goa-font-size-5);font-weight:400;height:var(--button-height);letter-spacing:var(--goa-letter-spacing-button);line-height:100%;padding:0 0.75rem;white-space:nowrap;gap:0.5rem;align-items:center;justify-content:center;transition:transform 0.1s ease-in-out, background-color 0.2s ease-in-out,
      border-color 0.2s ease-in-out}.text{padding-bottom:var(--font-valign-fix, 0)}button:disabled{pointer-events:none;opacity:0.5}button.compact{height:var(--button-height-compact);font-size:var(--goa-font-size-4);padding-left:var(--goa-space-xs);padding-right:var(--goa-space-xs)}button.start{height:var(--button-height-tall);font-weight:var(--goa-font-weight-bold)}button.start,button.submit,button.primary{border:2px solid var(--goa-color-interactive-default);background-color:var(--goa-color-interactive-default);color:var(--goa-color-text-light)}button.start:hover,button.submit:hover,button.primary:hover{border-color:var(--goa-color-interactive-hover);background-color:var(--goa-color-interactive-hover)}button.start:focus,button.start:active,button.submit:focus,button.submit:active,button.primary:focus,button.primary:active{box-shadow:0 0 0 3px var(--goa-color-interactive-focus);border-color:var(--goa-color-interactive-hover);background-color:var(--goa-color-interactive-hover);outline:none}button.secondary{border:2px solid var(--goa-color-interactive-default);background-color:var(--goa-color-greyscale-white);color:var(--goa-color-interactive-default)}button.secondary:hover{border-color:var(--goa-color-interactive-hover);color:var(--goa-color-interactive-hover);background-color:var(--goa-color-greyscale-100)}button.secondary:focus,button.secondary:active{border-color:var(--goa-color-interactive-hover);box-shadow:0 0 0 3px var(--goa-color-interactive-focus);background-color:var(--goa-color-greyscale-100);outline:none}button.tertiary{border:1px solid transparent;background-color:transparent;color:var(--goa-color-interactive-default);text-decoration:underline}button.tertiary:hover{border-color:var(--goa-color-greyscale-100);color:var(--goa-color-interactive-hover);background-color:var(--goa-color-greyscale-100)}button.tertiary:focus,button.tertiary:active{border-color:var(--goa-color-greyscale-100);background-color:var(--goa-color-greyscale-100);color:var(--goa-color-interactive-hover);box-shadow:0 0 0 3px var(--goa-color-interactive-focus);outline:none}.submit.destructive,.primary.destructive{color:var(--goa-color-greyscale-white);background-color:var(--goa-color-emergency-default);border-color:var(--goa-color-emergency-default)}.submit.destructive:hover,.primary.destructive:hover{background-color:var(--goa-color-emergency-dark);border-color:var(--goa-color-emergency-dark)}.submit.destructive:focus,.primary.destructive:focus,.primary.destructive:active{background-color:var(--goa-color-emergency-dark);border-color:var(--goa-color-emergency-dark)}.secondary.destructive{color:var(--goa-color-emergency-default);border-color:var(--goa-color-emergency-default);background-color:var(--goa-color-greyscale-white)}.secondary.destructive:hover{border-color:var(--goa-color-emergency-dark);color:var(--goa-color-emergency-dark);background-color:var(--goa-color-greyscale-white)}.secondary.destructive:focus,.secondary.destructive:active{color:var(--goa-color-emergency-dark);border-color:var(--goa-color-emergency-dark);background-color:var(--goa-color-greyscale-white)}.tertiary.destructive{color:var(--goa-color-emergency-default);border-color:transparent}.tertiary.destructive:hover{color:var(--goa-color-emergency-dark)}.tertiary.destructive:focus,.tertiary.destructive:active{color:var(--goa-color-emergency-dark)}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$R, create_fragment$X, safe_not_equal, { type: 0, size: 1, variant: 2, disabled: 13, leadingicon: 3, trailingicon: 4, testid: 5, mt: 6, mr: 7, mb: 8, ml: 9 }, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["type", "size", "variant", "disabled", "leadingicon", "trailingicon", "testid", "mt", "mr", "mb", "ml"];
  }
  get type() {
    return this.$$.ctx[0];
  }
  set type(type) {
    this.$$set({ type });
    flush();
  }
  get size() {
    return this.$$.ctx[1];
  }
  set size(size) {
    this.$$set({ size });
    flush();
  }
  get variant() {
    return this.$$.ctx[2];
  }
  set variant(variant) {
    this.$$set({ variant });
    flush();
  }
  get disabled() {
    return this.$$.ctx[13];
  }
  set disabled(disabled) {
    this.$$set({ disabled });
    flush();
  }
  get leadingicon() {
    return this.$$.ctx[3];
  }
  set leadingicon(leadingicon) {
    this.$$set({ leadingicon });
    flush();
  }
  get trailingicon() {
    return this.$$.ctx[4];
  }
  set trailingicon(trailingicon) {
    this.$$set({ trailingicon });
    flush();
  }
  get testid() {
    return this.$$.ctx[5];
  }
  set testid(testid) {
    this.$$set({ testid });
    flush();
  }
  get mt() {
    return this.$$.ctx[6];
  }
  set mt(mt) {
    this.$$set({ mt });
    flush();
  }
  get mr() {
    return this.$$.ctx[7];
  }
  set mr(mr) {
    this.$$set({ mr });
    flush();
  }
  get mb() {
    return this.$$.ctx[8];
  }
  set mb(mb2) {
    this.$$set({ mb: mb2 });
    flush();
  }
  get ml() {
    return this.$$.ctx[9];
  }
  set ml(ml2) {
    this.$$set({ ml: ml2 });
    flush();
  }
}
customElements.define("goa-button", Button);
function create_fragment$W(ctx) {
  let div;
  let slot;
  let div_style_value;
  return { c() {
    div = element("div");
    slot = element("slot");
    this.c = noop;
    attr(
      div,
      "data-testid",
      /*testid*/
      ctx[1]
    );
    attr(div, "style", div_style_value = calculateMargin(
      /*mt*/
      ctx[2],
      /*mr*/
      ctx[3],
      /*mb*/
      ctx[4],
      /*ml*/
      ctx[5]
    ) + "; --alignment: " + /*_alignment*/
    ctx[6] + "; --gap-size: " + /*gap*/
    (ctx[0] === "relaxed" ? "1rem" : "0.75rem"));
  }, m(target, anchor) {
    insert(target, div, anchor);
    append(div, slot);
  }, p(ctx2, [dirty]) {
    if (dirty & /*testid*/
    2) {
      attr(
        div,
        "data-testid",
        /*testid*/
        ctx2[1]
      );
    }
    if (dirty & /*mt, mr, mb, ml, _alignment, gap*/
    125 && div_style_value !== (div_style_value = calculateMargin(
      /*mt*/
      ctx2[2],
      /*mr*/
      ctx2[3],
      /*mb*/
      ctx2[4],
      /*ml*/
      ctx2[5]
    ) + "; --alignment: " + /*_alignment*/
    ctx2[6] + "; --gap-size: " + /*gap*/
    (ctx2[0] === "relaxed" ? "1rem" : "0.75rem"))) {
      attr(div, "style", div_style_value);
    }
  }, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(div);
  } };
}
function instance$Q($$self, $$props, $$invalidate) {
  let _alignment;
  let { alignment = "start" } = $$props;
  let { gap = "relaxed" } = $$props;
  let { testid = "" } = $$props;
  let { mt = null } = $$props;
  let { mr = null } = $$props;
  let { mb: mb2 = null } = $$props;
  let { ml: ml2 = null } = $$props;
  const [BUTTON_ALIGNMENTS, validateAlignment] = typeValidator("alignment", ["start", "end", "center"]);
  const [GAPS, validateGap] = typeValidator("gap", ["relaxed", "compact"]);
  onMount(() => {
    validateAlignment(alignment);
    validateGap(gap);
  });
  $$self.$$set = ($$props2) => {
    if ("alignment" in $$props2)
      $$invalidate(7, alignment = $$props2.alignment);
    if ("gap" in $$props2)
      $$invalidate(0, gap = $$props2.gap);
    if ("testid" in $$props2)
      $$invalidate(1, testid = $$props2.testid);
    if ("mt" in $$props2)
      $$invalidate(2, mt = $$props2.mt);
    if ("mr" in $$props2)
      $$invalidate(3, mr = $$props2.mr);
    if ("mb" in $$props2)
      $$invalidate(4, mb2 = $$props2.mb);
    if ("ml" in $$props2)
      $$invalidate(5, ml2 = $$props2.ml);
  };
  $$self.$$.update = () => {
    if ($$self.$$.dirty & /*alignment*/
    128) {
      $$invalidate(6, _alignment = { start: "flex-start", end: "flex-end", center: "center" }[alignment]);
    }
  };
  return [gap, testid, mt, mr, mb2, ml2, _alignment, alignment];
}
class ButtonGroup extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `:host{box-sizing:border-box;font-family:var(--goa-font-family-sans)}div{display:flex;flex-direction:row;justify-content:var(--alignment);align-items:center;flex-wrap:wrap;gap:var(--gap-size);padding:3px 0}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$Q, create_fragment$W, safe_not_equal, { alignment: 7, gap: 0, testid: 1, mt: 2, mr: 3, mb: 4, ml: 5 }, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["alignment", "gap", "testid", "mt", "mr", "mb", "ml"];
  }
  get alignment() {
    return this.$$.ctx[7];
  }
  set alignment(alignment) {
    this.$$set({ alignment });
    flush();
  }
  get gap() {
    return this.$$.ctx[0];
  }
  set gap(gap) {
    this.$$set({ gap });
    flush();
  }
  get testid() {
    return this.$$.ctx[1];
  }
  set testid(testid) {
    this.$$set({ testid });
    flush();
  }
  get mt() {
    return this.$$.ctx[2];
  }
  set mt(mt) {
    this.$$set({ mt });
    flush();
  }
  get mr() {
    return this.$$.ctx[3];
  }
  set mr(mr) {
    this.$$set({ mr });
    flush();
  }
  get mb() {
    return this.$$.ctx[4];
  }
  set mb(mb2) {
    this.$$set({ mb: mb2 });
    flush();
  }
  get ml() {
    return this.$$.ctx[5];
  }
  set ml(ml2) {
    this.$$set({ ml: ml2 });
    flush();
  }
}
customElements.define("goa-button-group", ButtonGroup);
function create_if_block$s(ctx) {
  let h3;
  let t2;
  return { c() {
    h3 = element("h3");
    t2 = text(
      /*heading*/
      ctx[5]
    );
    toggle_class(
      h3,
      "medium",
      /*isMediumCallout*/
      ctx[9]
    );
  }, m(target, anchor) {
    insert(target, h3, anchor);
    append(h3, t2);
  }, p(ctx2, dirty) {
    if (dirty & /*heading*/
    32)
      set_data(
        t2,
        /*heading*/
        ctx2[5]
      );
    if (dirty & /*isMediumCallout*/
    512) {
      toggle_class(
        h3,
        "medium",
        /*isMediumCallout*/
        ctx2[9]
      );
    }
  }, d(detaching) {
    if (detaching)
      detach(h3);
  } };
}
function create_fragment$V(ctx) {
  let div;
  let span0;
  let goa_icon;
  let goa_icon_inverted_value;
  let span0_class_value;
  let t0;
  let span1;
  let t1;
  let slot;
  let div_style_value;
  let mounted;
  let dispose;
  add_render_callback(
    /*onwindowresize*/
    ctx[12]
  );
  let if_block = (
    /*heading*/
    ctx[5] && create_if_block$s(ctx)
  );
  return { c() {
    div = element("div");
    span0 = element("span");
    goa_icon = element("goa-icon");
    t0 = space();
    span1 = element("span");
    if (if_block)
      if_block.c();
    t1 = space();
    slot = element("slot");
    this.c = noop;
    set_custom_element_data(
      goa_icon,
      "type",
      /*iconType*/
      ctx[10]
    );
    set_custom_element_data(
      goa_icon,
      "size",
      /*iconSize*/
      ctx[8]
    );
    set_custom_element_data(goa_icon, "inverted", goa_icon_inverted_value = /*type*/
    ctx[4] === "important" ? "false" : "true");
    attr(span0, "class", span0_class_value = "icon " + /*type*/
    ctx[4]);
    attr(span1, "class", "content");
    attr(div, "style", div_style_value = calculateMargin(
      /*mt*/
      ctx[0],
      /*mr*/
      ctx[1],
      /*mb*/
      ctx[2],
      /*ml*/
      ctx[3]
    ));
    attr(div, "class", "notification");
    attr(
      div,
      "data-testid",
      /*testid*/
      ctx[6]
    );
    toggle_class(
      div,
      "medium",
      /*isMediumCallout*/
      ctx[9]
    );
  }, m(target, anchor) {
    insert(target, div, anchor);
    append(div, span0);
    append(span0, goa_icon);
    append(div, t0);
    append(div, span1);
    if (if_block)
      if_block.m(span1, null);
    append(span1, t1);
    append(span1, slot);
    if (!mounted) {
      dispose = listen(
        window,
        "resize",
        /*onwindowresize*/
        ctx[12]
      );
      mounted = true;
    }
  }, p(ctx2, [dirty]) {
    if (dirty & /*iconType*/
    1024) {
      set_custom_element_data(
        goa_icon,
        "type",
        /*iconType*/
        ctx2[10]
      );
    }
    if (dirty & /*iconSize*/
    256) {
      set_custom_element_data(
        goa_icon,
        "size",
        /*iconSize*/
        ctx2[8]
      );
    }
    if (dirty & /*type*/
    16 && goa_icon_inverted_value !== (goa_icon_inverted_value = /*type*/
    ctx2[4] === "important" ? "false" : "true")) {
      set_custom_element_data(goa_icon, "inverted", goa_icon_inverted_value);
    }
    if (dirty & /*type*/
    16 && span0_class_value !== (span0_class_value = "icon " + /*type*/
    ctx2[4])) {
      attr(span0, "class", span0_class_value);
    }
    if (
      /*heading*/
      ctx2[5]
    ) {
      if (if_block) {
        if_block.p(ctx2, dirty);
      } else {
        if_block = create_if_block$s(ctx2);
        if_block.c();
        if_block.m(span1, t1);
      }
    } else if (if_block) {
      if_block.d(1);
      if_block = null;
    }
    if (dirty & /*mt, mr, mb, ml*/
    15 && div_style_value !== (div_style_value = calculateMargin(
      /*mt*/
      ctx2[0],
      /*mr*/
      ctx2[1],
      /*mb*/
      ctx2[2],
      /*ml*/
      ctx2[3]
    ))) {
      attr(div, "style", div_style_value);
    }
    if (dirty & /*testid*/
    64) {
      attr(
        div,
        "data-testid",
        /*testid*/
        ctx2[6]
      );
    }
    if (dirty & /*isMediumCallout*/
    512) {
      toggle_class(
        div,
        "medium",
        /*isMediumCallout*/
        ctx2[9]
      );
    }
  }, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(div);
    if (if_block)
      if_block.d();
    mounted = false;
    dispose();
  } };
}
function instance$P($$self, $$props, $$invalidate) {
  let isMediumCallout;
  let iconType;
  const [Types, validateType] = typeValidator("Callout type", ["emergency", "important", "information", "event", "success"], true);
  const [CalloutSizes, validateCalloutSize] = typeValidator("Callout size", ["medium", "large"]);
  let { mt = null } = $$props;
  let { mr = null } = $$props;
  let { mb: mb2 = "l" } = $$props;
  let { ml: ml2 = null } = $$props;
  let { size = "large" } = $$props;
  let { type } = $$props;
  let { heading = "" } = $$props;
  let { testid = "" } = $$props;
  let screenSize = 0;
  let iconSize = "medium";
  onMount(() => {
    validateCalloutSize(size);
    setTimeout(() => {
      validateType(type);
      $$invalidate(8, iconSize = isMediumCallout ? "small" : "medium");
    });
  });
  function onwindowresize() {
    $$invalidate(7, screenSize = window.innerWidth);
  }
  $$self.$$set = ($$props2) => {
    if ("mt" in $$props2)
      $$invalidate(0, mt = $$props2.mt);
    if ("mr" in $$props2)
      $$invalidate(1, mr = $$props2.mr);
    if ("mb" in $$props2)
      $$invalidate(2, mb2 = $$props2.mb);
    if ("ml" in $$props2)
      $$invalidate(3, ml2 = $$props2.ml);
    if ("size" in $$props2)
      $$invalidate(11, size = $$props2.size);
    if ("type" in $$props2)
      $$invalidate(4, type = $$props2.type);
    if ("heading" in $$props2)
      $$invalidate(5, heading = $$props2.heading);
    if ("testid" in $$props2)
      $$invalidate(6, testid = $$props2.testid);
  };
  $$self.$$.update = () => {
    if ($$self.$$.dirty & /*screenSize, size*/
    2176) {
      $$invalidate(9, isMediumCallout = screenSize < MOBILE_BP || size === "medium");
    }
    if ($$self.$$.dirty & /*type*/
    16) {
      $$invalidate(10, iconType = type === "emergency" ? "warning" : type === "important" ? "alert-circle" : type === "information" ? "information-circle" : type === "success" ? "checkmark-circle" : type === "event" ? "calendar" : "");
    }
  };
  return [mt, mr, mb2, ml2, type, heading, testid, screenSize, iconSize, isMediumCallout, iconType, size, onwindowresize];
}
class Callout extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `:host{box-sizing:border-box;font-family:var(--goa-font-family-sans)}.notification{display:flex;align-items:stretch;overflow:hidden;font:var(--goa-typography-body-m)}h3{font-size:var(--goa-font-size-7);line-height:var(--goa-line-height-2);font-weight:var(--goa-font-weight-regular);margin-top:var(--goa-space-none);margin-bottom:var(--goa-space-m)}.emergency{background-color:var(--goa-color-emergency-default)}.important{background-color:var(--goa-color-warning-default)}.information{background-color:var(--goa-color-info-default)}.event{background-color:var(--goa-color-info-default)}.success{background-color:var(--goa-color-success-default)}.icon{text-align:center;padding-top:var(--goa-space-l);padding-left:var(--goa-space-s);padding-right:var(--goa-space-s)}.content{flex:1 1 auto;background-color:var(--goa-color-greyscale-100);padding:var(--goa-space-l)}.notification.medium{font:var(--goa-typography-body-s)}h3.medium{font:var(--goa-typography-heading-xs);margin-bottom:var(--goa-space-2xs)}.notification.medium .content{padding:var(--goa-space-s);margin-top:calc(-1 * var(--goa-space-3xs))}.notification.medium .icon{padding-top:var(--goa-space-s);padding-left:var(--goa-space-2xs);padding-right:var(--goa-space-2xs)}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$P, create_fragment$V, safe_not_equal, { mt: 0, mr: 1, mb: 2, ml: 3, size: 11, type: 4, heading: 5, testid: 6 }, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["mt", "mr", "mb", "ml", "size", "type", "heading", "testid"];
  }
  get mt() {
    return this.$$.ctx[0];
  }
  set mt(mt) {
    this.$$set({ mt });
    flush();
  }
  get mr() {
    return this.$$.ctx[1];
  }
  set mr(mr) {
    this.$$set({ mr });
    flush();
  }
  get mb() {
    return this.$$.ctx[2];
  }
  set mb(mb2) {
    this.$$set({ mb: mb2 });
    flush();
  }
  get ml() {
    return this.$$.ctx[3];
  }
  set ml(ml2) {
    this.$$set({ ml: ml2 });
    flush();
  }
  get size() {
    return this.$$.ctx[11];
  }
  set size(size) {
    this.$$set({ size });
    flush();
  }
  get type() {
    return this.$$.ctx[4];
  }
  set type(type) {
    this.$$set({ type });
    flush();
  }
  get heading() {
    return this.$$.ctx[5];
  }
  set heading(heading) {
    this.$$set({ heading });
    flush();
  }
  get testid() {
    return this.$$.ctx[6];
  }
  set testid(testid) {
    this.$$set({ testid });
    flush();
  }
}
customElements.define("goa-callout", Callout);
function create_fragment$U(ctx) {
  let goa_card_content;
  return { c() {
    goa_card_content = element("goa-card-content");
    goa_card_content.innerHTML = `<goa-button-group alignment="end"><slot></slot></goa-button-group>`;
    this.c = noop;
  }, m(target, anchor) {
    insert(target, goa_card_content, anchor);
  }, p: noop, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(goa_card_content);
  } };
}
class CardActions extends SvelteElement {
  constructor(options) {
    super();
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, null, create_fragment$U, safe_not_equal, {}, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
    }
  }
}
customElements.define("goa-card-actions", CardActions);
function create_fragment$T(ctx) {
  let div;
  let slot;
  let div_style_value;
  return { c() {
    div = element("div");
    slot = element("slot");
    this.c = noop;
    attr(
      div,
      "data-testid",
      /*testid*/
      ctx[7]
    );
    attr(div, "class", "card");
    attr(div, "style", div_style_value = "--width: " + /*width*/
    ctx[1] + "; --height: " + /*height*/
    (ctx[2] === "auto" ? "auto" : "100%") + "; " + calculateMargin(
      /*mt*/
      ctx[3],
      /*mr*/
      ctx[4],
      /*mb*/
      ctx[5],
      /*ml*/
      ctx[6]
    ) + " " + /*elevation*/
    (ctx[0] === 0 ? `border: 1px solid var(--goa-color-greyscale-200);` : `box-shadow: var(--shadow-${/*elevation*/
    ctx[0]});`));
  }, m(target, anchor) {
    insert(target, div, anchor);
    append(div, slot);
  }, p(ctx2, [dirty]) {
    if (dirty & /*testid*/
    128) {
      attr(
        div,
        "data-testid",
        /*testid*/
        ctx2[7]
      );
    }
    if (dirty & /*width, height, mt, mr, mb, ml, elevation*/
    127 && div_style_value !== (div_style_value = "--width: " + /*width*/
    ctx2[1] + "; --height: " + /*height*/
    (ctx2[2] === "auto" ? "auto" : "100%") + "; " + calculateMargin(
      /*mt*/
      ctx2[3],
      /*mr*/
      ctx2[4],
      /*mb*/
      ctx2[5],
      /*ml*/
      ctx2[6]
    ) + " " + /*elevation*/
    (ctx2[0] === 0 ? `border: 1px solid var(--goa-color-greyscale-200);` : `box-shadow: var(--shadow-${/*elevation*/
    ctx2[0]});`))) {
      attr(div, "style", div_style_value);
    }
  }, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(div);
  } };
}
function instance$O($$self, $$props, $$invalidate) {
  let { elevation = 0 } = $$props;
  let { width = "100%" } = $$props;
  let { height = "auto" } = $$props;
  let { mt = null } = $$props;
  let { mr = null } = $$props;
  let { mb: mb2 = null } = $$props;
  let { ml: ml2 = null } = $$props;
  let { testid = "" } = $$props;
  $$self.$$set = ($$props2) => {
    if ("elevation" in $$props2)
      $$invalidate(0, elevation = $$props2.elevation);
    if ("width" in $$props2)
      $$invalidate(1, width = $$props2.width);
    if ("height" in $$props2)
      $$invalidate(2, height = $$props2.height);
    if ("mt" in $$props2)
      $$invalidate(3, mt = $$props2.mt);
    if ("mr" in $$props2)
      $$invalidate(4, mr = $$props2.mr);
    if ("mb" in $$props2)
      $$invalidate(5, mb2 = $$props2.mb);
    if ("ml" in $$props2)
      $$invalidate(6, ml2 = $$props2.ml);
    if ("testid" in $$props2)
      $$invalidate(7, testid = $$props2.testid);
  };
  return [elevation, width, height, mt, mr, mb2, ml2, testid];
}
class Card extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `:host{box-sizing:border-box;font-family:var(--goa-font-family-sans)}.card{background-color:var(--goa-color-greyscale-white);border-radius:4px;overflow:hidden;height:var(--height)}@media screen and (max-width: 623px){@media not (max-color:2147477350){.card{margin:0 auto}}}@media not  screen and (max-width: 623px){@media not (color:2147477350){.card{margin:0 auto}}}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$O, create_fragment$T, safe_not_equal, { elevation: 0, width: 1, height: 2, mt: 3, mr: 4, mb: 5, ml: 6, testid: 7 }, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["elevation", "width", "height", "mt", "mr", "mb", "ml", "testid"];
  }
  get elevation() {
    return this.$$.ctx[0];
  }
  set elevation(elevation) {
    this.$$set({ elevation });
    flush();
  }
  get width() {
    return this.$$.ctx[1];
  }
  set width(width) {
    this.$$set({ width });
    flush();
  }
  get height() {
    return this.$$.ctx[2];
  }
  set height(height) {
    this.$$set({ height });
    flush();
  }
  get mt() {
    return this.$$.ctx[3];
  }
  set mt(mt) {
    this.$$set({ mt });
    flush();
  }
  get mr() {
    return this.$$.ctx[4];
  }
  set mr(mr) {
    this.$$set({ mr });
    flush();
  }
  get mb() {
    return this.$$.ctx[5];
  }
  set mb(mb2) {
    this.$$set({ mb: mb2 });
    flush();
  }
  get ml() {
    return this.$$.ctx[6];
  }
  set ml(ml2) {
    this.$$set({ ml: ml2 });
    flush();
  }
  get testid() {
    return this.$$.ctx[7];
  }
  set testid(testid) {
    this.$$set({ testid });
    flush();
  }
}
customElements.define("goa-card", Card);
function create_fragment$S(ctx) {
  let div;
  return { c() {
    div = element("div");
    div.innerHTML = `<slot></slot>`;
    this.c = noop;
    attr(div, "class", "card-content");
  }, m(target, anchor) {
    insert(target, div, anchor);
  }, p: noop, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(div);
  } };
}
class CardContent extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `:host{box-sizing:border-box;font-family:var(--goa-font-family-sans)}.card-content{padding:1rem}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, null, create_fragment$S, safe_not_equal, {}, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
    }
  }
}
customElements.define("goa-card-content", CardContent);
function create_fragment$R(ctx) {
  let div;
  return { c() {
    div = element("div");
    div.innerHTML = `<slot></slot>`;
    this.c = noop;
    attr(div, "class", "card-group");
  }, m(target, anchor) {
    insert(target, div, anchor);
  }, p: noop, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(div);
  } };
}
class CardGroup extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `:host{box-sizing:border-box;font-family:var(--goa-font-family-sans)}.card-group{display:flex;flex-wrap:wrap;justify-content:space-around;gap:1rem;width:100%}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, null, create_fragment$R, safe_not_equal, {}, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
    }
  }
}
customElements.define("goa-card-group", CardGroup);
function create_fragment$Q(ctx) {
  let div;
  return { c() {
    div = element("div");
    this.c = noop;
    set_style(div, "background-image", "url(" + /*src*/
    ctx[0] + ")");
    set_style(
      div,
      "height",
      /*height*/
      ctx[1]
    );
    set_style(div, "background-size", "cover");
    set_style(div, "background-position", "center");
  }, m(target, anchor) {
    insert(target, div, anchor);
  }, p(ctx2, [dirty]) {
    if (dirty & /*src*/
    1) {
      set_style(div, "background-image", "url(" + /*src*/
      ctx2[0] + ")");
    }
    if (dirty & /*height*/
    2) {
      set_style(
        div,
        "height",
        /*height*/
        ctx2[1]
      );
    }
  }, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(div);
  } };
}
function instance$N($$self, $$props, $$invalidate) {
  let { src } = $$props;
  let { height = "100%" } = $$props;
  $$self.$$set = ($$props2) => {
    if ("src" in $$props2)
      $$invalidate(0, src = $$props2.src);
    if ("height" in $$props2)
      $$invalidate(1, height = $$props2.height);
  };
  return [src, height];
}
class CardImage extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `:host{box-sizing:border-box;font-family:var(--goa-font-family-sans)}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$N, create_fragment$Q, safe_not_equal, { src: 0, height: 1 }, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["src", "height"];
  }
  get src() {
    return this.$$.ctx[0];
  }
  set src(src) {
    this.$$set({ src });
    flush();
  }
  get height() {
    return this.$$.ctx[1];
  }
  set height(height) {
    this.$$set({ height });
    flush();
  }
}
customElements.define("goa-card-image", CardImage);
function create_if_block_2$c(ctx) {
  let svg;
  let path;
  return { c() {
    svg = svg_element("svg");
    path = svg_element("path");
    attr(path, "d", "M5.09,9.64,1.27,5.82,0,7.09l5.09,5.09L16,1.27,14.73,0Z");
    attr(svg, "id", "checkmark");
    attr(svg, "data-testid", "checkmark");
    attr(svg, "xmlns", "http://www.w3.org/2000/svg");
    attr(svg, "viewBox", "0 0 16 12.18");
  }, m(target, anchor) {
    insert(target, svg, anchor);
    append(svg, path);
  }, d(detaching) {
    if (detaching)
      detach(svg);
  } };
}
function create_if_block_1$f(ctx) {
  let svg;
  let rect;
  return { c() {
    svg = svg_element("svg");
    rect = svg_element("rect");
    attr(rect, "width", "15");
    attr(rect, "height", "2");
    attr(svg, "id", "dashmark");
    attr(svg, "data-testid", "dashmark");
    attr(svg, "xmlns", "http://www.w3.org/2000/svg");
    attr(svg, "viewBox", "0 0 15 2");
  }, m(target, anchor) {
    insert(target, svg, anchor);
    append(svg, rect);
  }, d(detaching) {
    if (detaching)
      detach(svg);
  } };
}
function create_if_block$r(ctx) {
  let div;
  let t2;
  return { c() {
    div = element("div");
    t2 = text(
      /*description*/
      ctx[5]
    );
    attr(div, "class", "description-text");
    attr(
      div,
      "id",
      /*_descriptionId*/
      ctx[11]
    );
    attr(div, "data-testid", "description");
  }, m(target, anchor) {
    insert(target, div, anchor);
    append(div, t2);
  }, p(ctx2, dirty) {
    if (dirty & /*description*/
    32)
      set_data(
        t2,
        /*description*/
        ctx2[5]
      );
    if (dirty & /*_descriptionId*/
    2048) {
      attr(
        div,
        "id",
        /*_descriptionId*/
        ctx2[11]
      );
    }
  }, d(detaching) {
    if (detaching)
      detach(div);
  } };
}
function create_fragment$P(ctx) {
  let div3;
  let label;
  let div0;
  let input;
  let input_value_value;
  let input_aria_label_value;
  let input_aria_describedby_value;
  let t0;
  let t1;
  let div2;
  let div1;
  let slot;
  let t2;
  let t3;
  let div3_style_value;
  let mounted;
  let dispose;
  function select_block_type(ctx2, dirty) {
    if (
      /*isIndeterminate*/
      ctx2[13]
    )
      return create_if_block_1$f;
    if (
      /*isChecked*/
      ctx2[12]
    )
      return create_if_block_2$c;
  }
  let current_block_type = select_block_type(ctx);
  let if_block0 = current_block_type && current_block_type(ctx);
  let if_block1 = (
    /*description*/
    ctx[5] && create_if_block$r(ctx)
  );
  return { c() {
    div3 = element("div");
    label = element("label");
    div0 = element("div");
    input = element("input");
    t0 = space();
    if (if_block0)
      if_block0.c();
    t1 = space();
    div2 = element("div");
    div1 = element("div");
    slot = element("slot");
    t2 = text(
      /*text*/
      ctx[1]
    );
    t3 = space();
    if (if_block1)
      if_block1.c();
    this.c = noop;
    attr(
      input,
      "id",
      /*name*/
      ctx[0]
    );
    attr(
      input,
      "name",
      /*name*/
      ctx[0]
    );
    input.checked = /*isChecked*/
    ctx[12];
    input.disabled = /*isDisabled*/
    ctx[15];
    attr(input, "type", "checkbox");
    input.value = input_value_value = `${/*value*/
    ctx[2]}`;
    attr(input, "aria-label", input_aria_label_value = /*arialabel*/
    ctx[4] || /*name*/
    ctx[0]);
    attr(input, "aria-describedby", input_aria_describedby_value = /*description*/
    ctx[5] ? (
      /*_descriptionId*/
      ctx[11]
    ) : null);
    attr(div0, "class", "goa-checkbox-container");
    toggle_class(
      div0,
      "goa-checkbox--selected",
      /*isChecked*/
      ctx[12]
    );
    attr(div1, "class", "label-text");
    attr(div1, "data-testid", "text");
    attr(div2, "class", "goa-checkbox-text");
    attr(label, "class", "goa-checkbox-label");
    attr(
      label,
      "data-testid",
      /*testid*/
      ctx[3]
    );
    attr(
      label,
      "for",
      /*name*/
      ctx[0]
    );
    toggle_class(
      label,
      "goa-checkbox--disabled",
      /*isDisabled*/
      ctx[15]
    );
    toggle_class(
      label,
      "goa-checkbox--error",
      /*isError*/
      ctx[14]
    );
    attr(div3, "style", div3_style_value = calculateMargin(
      /*mt*/
      ctx[6],
      /*mr*/
      ctx[7],
      /*mb*/
      ctx[8],
      /*ml*/
      ctx[9]
    ));
    attr(div3, "class", "goa-checkbox");
  }, m(target, anchor) {
    insert(target, div3, anchor);
    append(div3, label);
    append(label, div0);
    append(div0, input);
    ctx[20](input);
    append(div0, t0);
    if (if_block0)
      if_block0.m(div0, null);
    append(label, t1);
    append(label, div2);
    append(div2, div1);
    append(div1, slot);
    append(slot, t2);
    append(div3, t3);
    if (if_block1)
      if_block1.m(div3, null);
    if (!mounted) {
      dispose = listen(
        input,
        "change",
        /*onChange*/
        ctx[16]
      );
      mounted = true;
    }
  }, p(ctx2, [dirty]) {
    if (dirty & /*name*/
    1) {
      attr(
        input,
        "id",
        /*name*/
        ctx2[0]
      );
    }
    if (dirty & /*name*/
    1) {
      attr(
        input,
        "name",
        /*name*/
        ctx2[0]
      );
    }
    if (dirty & /*isChecked*/
    4096) {
      input.checked = /*isChecked*/
      ctx2[12];
    }
    if (dirty & /*isDisabled*/
    32768) {
      input.disabled = /*isDisabled*/
      ctx2[15];
    }
    if (dirty & /*value*/
    4 && input_value_value !== (input_value_value = `${/*value*/
    ctx2[2]}`)) {
      input.value = input_value_value;
    }
    if (dirty & /*arialabel, name*/
    17 && input_aria_label_value !== (input_aria_label_value = /*arialabel*/
    ctx2[4] || /*name*/
    ctx2[0])) {
      attr(input, "aria-label", input_aria_label_value);
    }
    if (dirty & /*description, _descriptionId*/
    2080 && input_aria_describedby_value !== (input_aria_describedby_value = /*description*/
    ctx2[5] ? (
      /*_descriptionId*/
      ctx2[11]
    ) : null)) {
      attr(input, "aria-describedby", input_aria_describedby_value);
    }
    if (current_block_type !== (current_block_type = select_block_type(ctx2))) {
      if (if_block0)
        if_block0.d(1);
      if_block0 = current_block_type && current_block_type(ctx2);
      if (if_block0) {
        if_block0.c();
        if_block0.m(div0, null);
      }
    }
    if (dirty & /*isChecked*/
    4096) {
      toggle_class(
        div0,
        "goa-checkbox--selected",
        /*isChecked*/
        ctx2[12]
      );
    }
    if (dirty & /*text*/
    2)
      set_data(
        t2,
        /*text*/
        ctx2[1]
      );
    if (dirty & /*testid*/
    8) {
      attr(
        label,
        "data-testid",
        /*testid*/
        ctx2[3]
      );
    }
    if (dirty & /*name*/
    1) {
      attr(
        label,
        "for",
        /*name*/
        ctx2[0]
      );
    }
    if (dirty & /*isDisabled*/
    32768) {
      toggle_class(
        label,
        "goa-checkbox--disabled",
        /*isDisabled*/
        ctx2[15]
      );
    }
    if (dirty & /*isError*/
    16384) {
      toggle_class(
        label,
        "goa-checkbox--error",
        /*isError*/
        ctx2[14]
      );
    }
    if (
      /*description*/
      ctx2[5]
    ) {
      if (if_block1) {
        if_block1.p(ctx2, dirty);
      } else {
        if_block1 = create_if_block$r(ctx2);
        if_block1.c();
        if_block1.m(div3, null);
      }
    } else if (if_block1) {
      if_block1.d(1);
      if_block1 = null;
    }
    if (dirty & /*mt, mr, mb, ml*/
    960 && div3_style_value !== (div3_style_value = calculateMargin(
      /*mt*/
      ctx2[6],
      /*mr*/
      ctx2[7],
      /*mb*/
      ctx2[8],
      /*ml*/
      ctx2[9]
    ))) {
      attr(div3, "style", div3_style_value);
    }
  }, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(div3);
    ctx[20](null);
    if (if_block0) {
      if_block0.d();
    }
    if (if_block1)
      if_block1.d();
    mounted = false;
    dispose();
  } };
}
function instance$M($$self, $$props, $$invalidate) {
  let isDisabled;
  let isError;
  let isChecked;
  let isIndeterminate;
  let { name } = $$props;
  let { checked = "false" } = $$props;
  let { text: text2 = "" } = $$props;
  let { value = "" } = $$props;
  let { disabled = "false" } = $$props;
  let { error: error2 = "false" } = $$props;
  let { testid = "" } = $$props;
  let { arialabel = "" } = $$props;
  let { description = "" } = $$props;
  let { mt = null } = $$props;
  let { mr = null } = $$props;
  let { mb: mb2 = null } = $$props;
  let { ml: ml2 = null } = $$props;
  let _value;
  let _checkboxRef;
  let _descriptionId;
  onMount(() => {
    _value = value;
    $$invalidate(11, _descriptionId = `description_${name}`);
  });
  function onChange(e) {
    _checkboxRef.focus();
    const newCheckStatus = !isChecked;
    const newValue = newCheckStatus ? `${_value || "checked"}` : "";
    $$invalidate(17, checked = fromBoolean(newCheckStatus));
    e.target.dispatchEvent(new CustomEvent("_change", { composed: true, detail: { name, checked: newCheckStatus, value: newValue } }));
  }
  function input_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      _checkboxRef = $$value;
      $$invalidate(10, _checkboxRef);
    });
  }
  $$self.$$set = ($$props2) => {
    if ("name" in $$props2)
      $$invalidate(0, name = $$props2.name);
    if ("checked" in $$props2)
      $$invalidate(17, checked = $$props2.checked);
    if ("text" in $$props2)
      $$invalidate(1, text2 = $$props2.text);
    if ("value" in $$props2)
      $$invalidate(2, value = $$props2.value);
    if ("disabled" in $$props2)
      $$invalidate(18, disabled = $$props2.disabled);
    if ("error" in $$props2)
      $$invalidate(19, error2 = $$props2.error);
    if ("testid" in $$props2)
      $$invalidate(3, testid = $$props2.testid);
    if ("arialabel" in $$props2)
      $$invalidate(4, arialabel = $$props2.arialabel);
    if ("description" in $$props2)
      $$invalidate(5, description = $$props2.description);
    if ("mt" in $$props2)
      $$invalidate(6, mt = $$props2.mt);
    if ("mr" in $$props2)
      $$invalidate(7, mr = $$props2.mr);
    if ("mb" in $$props2)
      $$invalidate(8, mb2 = $$props2.mb);
    if ("ml" in $$props2)
      $$invalidate(9, ml2 = $$props2.ml);
  };
  $$self.$$.update = () => {
    if ($$self.$$.dirty & /*disabled*/
    262144) {
      $$invalidate(15, isDisabled = toBoolean(disabled));
    }
    if ($$self.$$.dirty & /*error*/
    524288) {
      $$invalidate(14, isError = toBoolean(error2));
    }
    if ($$self.$$.dirty & /*checked*/
    131072) {
      $$invalidate(12, isChecked = toBoolean(checked));
    }
  };
  $$invalidate(13, isIndeterminate = false);
  return [name, text2, value, testid, arialabel, description, mt, mr, mb2, ml2, _checkboxRef, _descriptionId, isChecked, isIndeterminate, isError, isDisabled, onChange, checked, disabled, error2, input_binding];
}
class Checkbox extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `:host{box-sizing:border-box;font-family:var(--goa-font-family-sans);display:block}.goa-checkbox-label{display:flex;cursor:pointer}.goa-checkbox{min-height:calc(3rem - 0.25rem)}.goa-checkbox input[type="checkbox"]{opacity:0;position:absolute;cursor:pointer}.goa-checkbox-container{box-sizing:border-box;border:var(--goa-border-width-s) solid var(--goa-color-greyscale-700);border-radius:2px;background-color:var(--goa-color-greyscale-white);height:1.5rem;width:1.5rem;display:flex;justify-content:center;padding:3px;flex:0 0 auto}.goa-checkbox-container svg{fill:var(--goa-color-greyscale-white)}.goa-checkbox-container.goa-checkbox--selected{background-color:var(--goa-color-interactive-default);border:none}.goa-checkbox-container.goa-checkbox--selected:hover{background-color:var(--goa-color-interactive-hover)}.goa-checkbox-container:hover{box-shadow:0 0 0 var(--goa-border-width-m) var(--goa-color-interactive-hover);border:none}.goa-checkbox-container:focus-within,.goa-checkbox-container:focus,.goa-checkbox-container:active{box-shadow:0 0 0 3px var(--goa-color-interactive-focus);border:var(--goa-border-width-s) solid var(--goa-color-greyscale-700);outline:none}.goa-checkbox-container.goa-checkbox--selected:focus-within{background-color:var(--goa-color-interactive-default);border:none}.goa-checkbox-text{padding-left:0.5rem;-webkit-user-select:none;-moz-user-select:none;user-select:none;font-weight:var(--goa-font-weight-regular)}.goa-checkbox--error .goa-checkbox-container,.goa-checkbox--error .goa-checkbox-container:hover{border:var(--goa-border-width-s) solid var(--goa-color-emergency-default);box-shadow:inset 0 0 0 1px var(--goa-color-emergency-default);background-color:var(--goa-color-greyscale-white)}.goa-checkbox--error .goa-checkbox-container:focus-within{box-shadow:0 0 0 3px var(--goa-color-interactive-focus);background-color:var(--goa-color-greyscale-white);border:var(--goa-border-width-s) solid var(--goa-color-emergency-default)}.goa-checkbox--error .goa-checkbox-container svg{fill:var(--goa-color-emergency-default)}.goa-checkbox--disabled .goa-checkbox-text{opacity:40%}.goa-checkbox--disabled .goa-checkbox-container,.goa-checkbox--disabled .goa-checkbox-container:hover{border:var(--goa-border-width-s) solid var(--goa-color-greyscale-400);box-shadow:none;opacity:40%}.goa-checkbox--disabled .goa-checkbox-container.goa-checkbox--selected,.goa-checkbox--disabled .goa-checkbox-container.goa-checkbox--selected:hover{border:none;background-color:var(--goa-color-interactive-default)}.goa-checkbox--disabled.goa-checkbox--error .goa-checkbox-container.goa-checkbox--selected{border:var(--goa-border-width-s) solid var(--goa-color-emergency-default);box-shadow:inset 0 0 0 1px var(--goa-color-emergency-default)}.goa-checkbox--disabled,input[type=checkbox][disabled]:hover{cursor:default}.description-text{font:var(--goa-typography-body-xs);margin-left:var(--goa-space-xl);margin-top:var(--goa-space-2xs)}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$M, create_fragment$P, safe_not_equal, { name: 0, checked: 17, text: 1, value: 2, disabled: 18, error: 19, testid: 3, arialabel: 4, description: 5, mt: 6, mr: 7, mb: 8, ml: 9 }, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["name", "checked", "text", "value", "disabled", "error", "testid", "arialabel", "description", "mt", "mr", "mb", "ml"];
  }
  get name() {
    return this.$$.ctx[0];
  }
  set name(name) {
    this.$$set({ name });
    flush();
  }
  get checked() {
    return this.$$.ctx[17];
  }
  set checked(checked) {
    this.$$set({ checked });
    flush();
  }
  get text() {
    return this.$$.ctx[1];
  }
  set text(text2) {
    this.$$set({ text: text2 });
    flush();
  }
  get value() {
    return this.$$.ctx[2];
  }
  set value(value) {
    this.$$set({ value });
    flush();
  }
  get disabled() {
    return this.$$.ctx[18];
  }
  set disabled(disabled) {
    this.$$set({ disabled });
    flush();
  }
  get error() {
    return this.$$.ctx[19];
  }
  set error(error2) {
    this.$$set({ error: error2 });
    flush();
  }
  get testid() {
    return this.$$.ctx[3];
  }
  set testid(testid) {
    this.$$set({ testid });
    flush();
  }
  get arialabel() {
    return this.$$.ctx[4];
  }
  set arialabel(arialabel) {
    this.$$set({ arialabel });
    flush();
  }
  get description() {
    return this.$$.ctx[5];
  }
  set description(description) {
    this.$$set({ description });
    flush();
  }
  get mt() {
    return this.$$.ctx[6];
  }
  set mt(mt) {
    this.$$set({ mt });
    flush();
  }
  get mr() {
    return this.$$.ctx[7];
  }
  set mr(mr) {
    this.$$set({ mr });
    flush();
  }
  get mb() {
    return this.$$.ctx[8];
  }
  set mb(mb2) {
    this.$$set({ mb: mb2 });
    flush();
  }
  get ml() {
    return this.$$.ctx[9];
  }
  set ml(ml2) {
    this.$$set({ ml: ml2 });
    flush();
  }
}
customElements.define("goa-checkbox", Checkbox);
function create_if_block_1$e(ctx) {
  let goa_icon;
  return { c() {
    goa_icon = element("goa-icon");
    set_custom_element_data(goa_icon, "class", "leading-icon");
    set_custom_element_data(goa_icon, "size", "medium");
    set_custom_element_data(
      goa_icon,
      "type",
      /*leadingicon*/
      ctx[4]
    );
  }, m(target, anchor) {
    insert(target, goa_icon, anchor);
  }, p(ctx2, dirty) {
    if (dirty & /*leadingicon*/
    16) {
      set_custom_element_data(
        goa_icon,
        "type",
        /*leadingicon*/
        ctx2[4]
      );
    }
  }, d(detaching) {
    if (detaching)
      detach(goa_icon);
  } };
}
function create_if_block$q(ctx) {
  let goa_icon;
  let goa_icon_fillcolor_value;
  let goa_icon_opacity_value;
  return { c() {
    goa_icon = element("goa-icon");
    set_custom_element_data(goa_icon, "class", "delete-icon");
    set_custom_element_data(goa_icon, "size", "medium");
    set_custom_element_data(goa_icon, "theme", "filled");
    set_custom_element_data(goa_icon, "type", "close-circle");
    set_custom_element_data(goa_icon, "fillcolor", goa_icon_fillcolor_value = /*_error*/
    ctx[10] ? "var(--goa-color-emergency-default)" : (
      /*_hovering*/
      ctx[9] ? "var(--goa-color-interactive-hover)" : "var(--goa-color-greyscale-700)"
    ));
    set_custom_element_data(goa_icon, "opacity", goa_icon_opacity_value = /*_error*/
    ctx[10] ? (
      /*_hovering*/
      ctx[9] ? 1 : 0.5
    ) : 1);
  }, m(target, anchor) {
    insert(target, goa_icon, anchor);
  }, p(ctx2, dirty) {
    if (dirty & /*_error, _hovering*/
    1536 && goa_icon_fillcolor_value !== (goa_icon_fillcolor_value = /*_error*/
    ctx2[10] ? "var(--goa-color-emergency-default)" : (
      /*_hovering*/
      ctx2[9] ? "var(--goa-color-interactive-hover)" : "var(--goa-color-greyscale-700)"
    ))) {
      set_custom_element_data(goa_icon, "fillcolor", goa_icon_fillcolor_value);
    }
    if (dirty & /*_error, _hovering*/
    1536 && goa_icon_opacity_value !== (goa_icon_opacity_value = /*_error*/
    ctx2[10] ? (
      /*_hovering*/
      ctx2[9] ? 1 : 0.5
    ) : 1)) {
      set_custom_element_data(goa_icon, "opacity", goa_icon_opacity_value);
    }
  }, d(detaching) {
    if (detaching)
      detach(goa_icon);
  } };
}
function create_fragment$O(ctx) {
  let div1;
  let t0;
  let div0;
  let t1;
  let t2;
  let div1_style_value;
  let mounted;
  let dispose;
  let if_block0 = (
    /*leadingicon*/
    ctx[4] && create_if_block_1$e(ctx)
  );
  let if_block1 = (
    /*_deletable*/
    ctx[11] && create_if_block$q(ctx)
  );
  return { c() {
    div1 = element("div");
    if (if_block0)
      if_block0.c();
    t0 = space();
    div0 = element("div");
    t1 = text(
      /*content*/
      ctx[5]
    );
    t2 = space();
    if (if_block1)
      if_block1.c();
    this.c = noop;
    attr(div0, "class", "text");
    attr(
      div1,
      "data-testid",
      /*testid*/
      ctx[7]
    );
    attr(div1, "class", "chip");
    attr(div1, "style", div1_style_value = calculateMargin(
      /*mt*/
      ctx[0],
      /*mr*/
      ctx[1],
      /*mb*/
      ctx[2],
      /*ml*/
      ctx[3]
    ));
    attr(div1, "tabindex", "0");
    toggle_class(
      div1,
      "deletable",
      /*_deletable*/
      ctx[11]
    );
    toggle_class(
      div1,
      "error",
      /*_error*/
      ctx[10]
    );
    toggle_class(
      div1,
      "variant",
      /*variant*/
      ctx[6]
    );
  }, m(target, anchor) {
    insert(target, div1, anchor);
    if (if_block0)
      if_block0.m(div1, null);
    append(div1, t0);
    append(div1, div0);
    append(div0, t1);
    append(div1, t2);
    if (if_block1)
      if_block1.m(div1, null);
    ctx[15](div1);
    if (!mounted) {
      dispose = [listen(
        div1,
        "click",
        /*click_handler*/
        ctx[16]
      ), listen(
        div1,
        "mouseover",
        /*mouseover_handler*/
        ctx[17]
      ), listen(
        div1,
        "mouseout",
        /*mouseout_handler*/
        ctx[18]
      ), listen(
        div1,
        "focus",
        /*focus_handler*/
        ctx[19]
      ), listen(
        div1,
        "blur",
        /*blur_handler*/
        ctx[20]
      )];
      mounted = true;
    }
  }, p(ctx2, [dirty]) {
    if (
      /*leadingicon*/
      ctx2[4]
    ) {
      if (if_block0) {
        if_block0.p(ctx2, dirty);
      } else {
        if_block0 = create_if_block_1$e(ctx2);
        if_block0.c();
        if_block0.m(div1, t0);
      }
    } else if (if_block0) {
      if_block0.d(1);
      if_block0 = null;
    }
    if (dirty & /*content*/
    32)
      set_data(
        t1,
        /*content*/
        ctx2[5]
      );
    if (
      /*_deletable*/
      ctx2[11]
    ) {
      if (if_block1) {
        if_block1.p(ctx2, dirty);
      } else {
        if_block1 = create_if_block$q(ctx2);
        if_block1.c();
        if_block1.m(div1, null);
      }
    } else if (if_block1) {
      if_block1.d(1);
      if_block1 = null;
    }
    if (dirty & /*testid*/
    128) {
      attr(
        div1,
        "data-testid",
        /*testid*/
        ctx2[7]
      );
    }
    if (dirty & /*mt, mr, mb, ml*/
    15 && div1_style_value !== (div1_style_value = calculateMargin(
      /*mt*/
      ctx2[0],
      /*mr*/
      ctx2[1],
      /*mb*/
      ctx2[2],
      /*ml*/
      ctx2[3]
    ))) {
      attr(div1, "style", div1_style_value);
    }
    if (dirty & /*_deletable*/
    2048) {
      toggle_class(
        div1,
        "deletable",
        /*_deletable*/
        ctx2[11]
      );
    }
    if (dirty & /*_error*/
    1024) {
      toggle_class(
        div1,
        "error",
        /*_error*/
        ctx2[10]
      );
    }
    if (dirty & /*variant*/
    64) {
      toggle_class(
        div1,
        "variant",
        /*variant*/
        ctx2[6]
      );
    }
  }, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(div1);
    if (if_block0)
      if_block0.d();
    if (if_block1)
      if_block1.d();
    ctx[15](null);
    mounted = false;
    run_all(dispose);
  } };
}
function instance$L($$self, $$props, $$invalidate) {
  let { mt = null } = $$props;
  let { mr = null } = $$props;
  let { mb: mb2 = null } = $$props;
  let { ml: ml2 = null } = $$props;
  let { leadingicon = null } = $$props;
  let { error: error2 = "false" } = $$props;
  let { deletable = "false" } = $$props;
  let { content } = $$props;
  let { variant } = $$props;
  let { testid = "" } = $$props;
  let el2;
  let _hovering = false;
  let _error;
  let _deletable;
  function onDelete(e) {
    el2.dispatchEvent(new CustomEvent("_click", { composed: true, bubbles: true }));
    e.stopPropagation();
  }
  function div1_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      el2 = $$value;
      $$invalidate(8, el2);
    });
  }
  const click_handler = (e) => _deletable && onDelete(e);
  const mouseover_handler = () => $$invalidate(9, _hovering = true);
  const mouseout_handler = () => $$invalidate(9, _hovering = false);
  const focus_handler = () => $$invalidate(9, _hovering = false);
  const blur_handler = () => $$invalidate(9, _hovering = false);
  $$self.$$set = ($$props2) => {
    if ("mt" in $$props2)
      $$invalidate(0, mt = $$props2.mt);
    if ("mr" in $$props2)
      $$invalidate(1, mr = $$props2.mr);
    if ("mb" in $$props2)
      $$invalidate(2, mb2 = $$props2.mb);
    if ("ml" in $$props2)
      $$invalidate(3, ml2 = $$props2.ml);
    if ("leadingicon" in $$props2)
      $$invalidate(4, leadingicon = $$props2.leadingicon);
    if ("error" in $$props2)
      $$invalidate(13, error2 = $$props2.error);
    if ("deletable" in $$props2)
      $$invalidate(14, deletable = $$props2.deletable);
    if ("content" in $$props2)
      $$invalidate(5, content = $$props2.content);
    if ("variant" in $$props2)
      $$invalidate(6, variant = $$props2.variant);
    if ("testid" in $$props2)
      $$invalidate(7, testid = $$props2.testid);
  };
  $$self.$$.update = () => {
    if ($$self.$$.dirty & /*error*/
    8192) {
      $$invalidate(10, _error = toBoolean(error2));
    }
    if ($$self.$$.dirty & /*deletable*/
    16384) {
      $$invalidate(11, _deletable = toBoolean(deletable));
    }
  };
  return [mt, mr, mb2, ml2, leadingicon, content, variant, testid, el2, _hovering, _error, _deletable, onDelete, error2, deletable, div1_binding, click_handler, mouseover_handler, mouseout_handler, focus_handler, blur_handler];
}
class Chip extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `.leading-icon{margin-left:-0.25rem}.chip{vertical-align:middle;align-items:center;background-color:var(--goa-color-greyscale-white);border-radius:99px;border:1px solid #949494;box-sizing:border-box;color:var(--goa-color-text-default);display:inline-flex;flex-direction:row;font-size:var(--goa-font-size-3);font-weight:var(--goa-font-weight-regular);gap:0.25rem;height:2rem;justify-content:center;padding:0 0.75rem;cursor:default}.text{padding-bottom:var(--font-valign-fix, 0)}.chip:focus{outline:2px solid var(--goa-color-interactive-focus);background-color:var(--goa-color-greyscale-white)}.chip:hover{background-color:var(--goa-color-greyscale-200)}.deletable{cursor:pointer}.delete-icon{margin-right:-0.25rem}.error,.error:hover{background-color:var(--goa-color-emergency-light)}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$L, create_fragment$O, safe_not_equal, { mt: 0, mr: 1, mb: 2, ml: 3, leadingicon: 4, error: 13, deletable: 14, content: 5, variant: 6, testid: 7 }, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["mt", "mr", "mb", "ml", "leadingicon", "error", "deletable", "content", "variant", "testid"];
  }
  get mt() {
    return this.$$.ctx[0];
  }
  set mt(mt) {
    this.$$set({ mt });
    flush();
  }
  get mr() {
    return this.$$.ctx[1];
  }
  set mr(mr) {
    this.$$set({ mr });
    flush();
  }
  get mb() {
    return this.$$.ctx[2];
  }
  set mb(mb2) {
    this.$$set({ mb: mb2 });
    flush();
  }
  get ml() {
    return this.$$.ctx[3];
  }
  set ml(ml2) {
    this.$$set({ ml: ml2 });
    flush();
  }
  get leadingicon() {
    return this.$$.ctx[4];
  }
  set leadingicon(leadingicon) {
    this.$$set({ leadingicon });
    flush();
  }
  get error() {
    return this.$$.ctx[13];
  }
  set error(error2) {
    this.$$set({ error: error2 });
    flush();
  }
  get deletable() {
    return this.$$.ctx[14];
  }
  set deletable(deletable) {
    this.$$set({ deletable });
    flush();
  }
  get content() {
    return this.$$.ctx[5];
  }
  set content(content) {
    this.$$set({ content });
    flush();
  }
  get variant() {
    return this.$$.ctx[6];
  }
  set variant(variant) {
    this.$$set({ variant });
    flush();
  }
  get testid() {
    return this.$$.ctx[7];
  }
  set testid(testid) {
    this.$$set({ testid });
    flush();
  }
}
customElements.define("goa-chip", Chip);
function cubicOut(t2) {
  const f2 = t2 - 1;
  return f2 * f2 * f2 + 1;
}
function quartOut(t2) {
  return Math.pow(t2 - 1, 3) * (1 - t2) + 1;
}
function fade(node, { delay = 0, duration = 400, easing = identity } = {}) {
  const o = +getComputedStyle(node).opacity;
  return { delay, duration, easing, css: (t2) => `opacity: ${t2 * o}` };
}
function fly(node, { delay = 0, duration = 400, easing = cubicOut, x: x2 = 0, y: y2 = 0, opacity = 0 } = {}) {
  const style = getComputedStyle(node);
  const target_opacity = +style.opacity;
  const transform = style.transform === "none" ? "" : style.transform;
  const od2 = target_opacity * (1 - opacity);
  const [xValue, xUnit] = split_css_unit(x2);
  const [yValue, yUnit] = split_css_unit(y2);
  return { delay, duration, easing, css: (t2, u2) => `
			transform: ${transform} translate(${(1 - t2) * xValue}${xUnit}, ${(1 - t2) * yValue}${yUnit});
			opacity: ${target_opacity - od2 * u2}` };
}
function noscroll(_node, opts) {
  let toggledScrolling = false;
  function hideScrollbars() {
    if (!isScrollable()) {
      return;
    }
    const scrollbarWidth = calculateScrollbarWidth();
    toggledScrolling = true;
    document.body.style.overflow = "hidden";
    document.body.style.paddingRight = scrollbarWidth + "px";
  }
  function isScrollable() {
    return document.body.style.overflow !== "hidden";
  }
  function resetScrollbars() {
    if (!toggledScrolling) {
      return;
    }
    toggledScrolling = false;
    setTimeout(() => {
      document.body.style.overflow = "";
      document.body.style.paddingRight = "0";
    }, 200);
  }
  function calculateScrollbarWidth() {
    if (document.body.clientHeight <= document.documentElement.clientHeight) {
      return 0;
    }
    const outer = document.createElement("div");
    outer.style.visibility = "hidden";
    outer.style.overflow = "scroll";
    document.body.appendChild(outer);
    const inner = document.createElement("div");
    outer.appendChild(inner);
    const scrollbarWidth = outer.offsetWidth - inner.offsetWidth;
    outer.parentNode.removeChild(outer);
    return scrollbarWidth;
  }
  if (opts.enable) {
    hideScrollbars();
  }
  return { update() {
    if (!opts.enable) {
      resetScrollbars();
    }
  }, destroy() {
    resetScrollbars();
  } };
}
function create_if_block$p(ctx) {
  let current_block_type_index;
  let if_block;
  let if_block_anchor;
  let current;
  const if_block_creators = [create_if_block_1$d, create_if_block_3$a];
  const if_blocks = [];
  function select_block_type(ctx2, dirty) {
    if (
      /*fullscreen*/
      ctx2[3]
    )
      return 0;
    if (
      /*inline*/
      ctx2[4]
    )
      return 1;
    return -1;
  }
  if (~(current_block_type_index = select_block_type(ctx))) {
    if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
  }
  return { c() {
    if (if_block)
      if_block.c();
    if_block_anchor = empty();
  }, m(target, anchor) {
    if (~current_block_type_index) {
      if_blocks[current_block_type_index].m(target, anchor);
    }
    insert(target, if_block_anchor, anchor);
    current = true;
  }, p(ctx2, dirty) {
    let previous_block_index = current_block_type_index;
    current_block_type_index = select_block_type(ctx2);
    if (current_block_type_index === previous_block_index) {
      if (~current_block_type_index) {
        if_blocks[current_block_type_index].p(ctx2, dirty);
      }
    } else {
      if (if_block) {
        group_outros();
        transition_out(if_blocks[previous_block_index], 1, 1, () => {
          if_blocks[previous_block_index] = null;
        });
        check_outros();
      }
      if (~current_block_type_index) {
        if_block = if_blocks[current_block_type_index];
        if (!if_block) {
          if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx2);
          if_block.c();
        } else {
          if_block.p(ctx2, dirty);
        }
        transition_in(if_block, 1);
        if_block.m(if_block_anchor.parentNode, if_block_anchor);
      } else {
        if_block = null;
      }
    }
  }, i(local) {
    if (current)
      return;
    transition_in(if_block);
    current = true;
  }, o(local) {
    transition_out(if_block);
    current = false;
  }, d(detaching) {
    if (~current_block_type_index) {
      if_blocks[current_block_type_index].d(detaching);
    }
    if (detaching)
      detach(if_block_anchor);
  } };
}
function create_if_block_3$a(ctx) {
  let div;
  let goa_spinner;
  let t2;
  let div_class_value;
  let if_block = (
    /*message*/
    ctx[0] && create_if_block_4$3(ctx)
  );
  return { c() {
    div = element("div");
    goa_spinner = element("goa-spinner");
    t2 = space();
    if (if_block)
      if_block.c();
    set_custom_element_data(
      goa_spinner,
      "size",
      /*spinnerSize*/
      ctx[2]
    );
    set_custom_element_data(
      goa_spinner,
      "progress",
      /*progress*/
      ctx[1]
    );
    attr(div, "class", div_class_value = "spinner-" + /*spinnerSize*/
    ctx[2]);
    toggle_class(
      div,
      "inline",
      /*inline*/
      ctx[4]
    );
  }, m(target, anchor) {
    insert(target, div, anchor);
    append(div, goa_spinner);
    append(div, t2);
    if (if_block)
      if_block.m(div, null);
  }, p(ctx2, dirty) {
    if (dirty & /*spinnerSize*/
    4) {
      set_custom_element_data(
        goa_spinner,
        "size",
        /*spinnerSize*/
        ctx2[2]
      );
    }
    if (dirty & /*progress*/
    2) {
      set_custom_element_data(
        goa_spinner,
        "progress",
        /*progress*/
        ctx2[1]
      );
    }
    if (
      /*message*/
      ctx2[0]
    ) {
      if (if_block) {
        if_block.p(ctx2, dirty);
      } else {
        if_block = create_if_block_4$3(ctx2);
        if_block.c();
        if_block.m(div, null);
      }
    } else if (if_block) {
      if_block.d(1);
      if_block = null;
    }
    if (dirty & /*spinnerSize*/
    4 && div_class_value !== (div_class_value = "spinner-" + /*spinnerSize*/
    ctx2[2])) {
      attr(div, "class", div_class_value);
    }
    if (dirty & /*spinnerSize, inline*/
    20) {
      toggle_class(
        div,
        "inline",
        /*inline*/
        ctx2[4]
      );
    }
  }, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(div);
    if (if_block)
      if_block.d();
  } };
}
function create_if_block_1$d(ctx) {
  let div;
  let goa_spinner;
  let t2;
  let div_transition;
  let current;
  let mounted;
  let dispose;
  let if_block = (
    /*message*/
    ctx[0] && create_if_block_2$b(ctx)
  );
  return { c() {
    div = element("div");
    goa_spinner = element("goa-spinner");
    t2 = space();
    if (if_block)
      if_block.c();
    set_custom_element_data(
      goa_spinner,
      "size",
      /*spinnerSize*/
      ctx[2]
    );
    set_custom_element_data(
      goa_spinner,
      "progress",
      /*progress*/
      ctx[1]
    );
    toggle_class(
      div,
      "fullscreen",
      /*fullscreen*/
      ctx[3]
    );
  }, m(target, anchor) {
    insert(target, div, anchor);
    append(div, goa_spinner);
    append(div, t2);
    if (if_block)
      if_block.m(div, null);
    current = true;
    if (!mounted) {
      dispose = action_destroyer(noscroll.call(null, div, { enable: true }));
      mounted = true;
    }
  }, p(ctx2, dirty) {
    if (!current || dirty & /*spinnerSize*/
    4) {
      set_custom_element_data(
        goa_spinner,
        "size",
        /*spinnerSize*/
        ctx2[2]
      );
    }
    if (!current || dirty & /*progress*/
    2) {
      set_custom_element_data(
        goa_spinner,
        "progress",
        /*progress*/
        ctx2[1]
      );
    }
    if (
      /*message*/
      ctx2[0]
    ) {
      if (if_block) {
        if_block.p(ctx2, dirty);
      } else {
        if_block = create_if_block_2$b(ctx2);
        if_block.c();
        if_block.m(div, null);
      }
    } else if (if_block) {
      if_block.d(1);
      if_block = null;
    }
    if (!current || dirty & /*fullscreen*/
    8) {
      toggle_class(
        div,
        "fullscreen",
        /*fullscreen*/
        ctx2[3]
      );
    }
  }, i(local) {
    if (current)
      return;
    add_render_callback(() => {
      if (!current)
        return;
      if (!div_transition)
        div_transition = create_bidirectional_transition(div, fade, { duration: 300 }, true);
      div_transition.run(1);
    });
    current = true;
  }, o(local) {
    if (!div_transition)
      div_transition = create_bidirectional_transition(div, fade, { duration: 300 }, false);
    div_transition.run(0);
    current = false;
  }, d(detaching) {
    if (detaching)
      detach(div);
    if (if_block)
      if_block.d();
    if (detaching && div_transition)
      div_transition.end();
    mounted = false;
    dispose();
  } };
}
function create_if_block_4$3(ctx) {
  let div;
  let t2;
  return { c() {
    div = element("div");
    t2 = text(
      /*message*/
      ctx[0]
    );
    attr(div, "class", "message");
  }, m(target, anchor) {
    insert(target, div, anchor);
    append(div, t2);
  }, p(ctx2, dirty) {
    if (dirty & /*message*/
    1)
      set_data(
        t2,
        /*message*/
        ctx2[0]
      );
  }, d(detaching) {
    if (detaching)
      detach(div);
  } };
}
function create_if_block_2$b(ctx) {
  let div;
  let t2;
  return { c() {
    div = element("div");
    t2 = text(
      /*message*/
      ctx[0]
    );
    attr(div, "class", "message");
  }, m(target, anchor) {
    insert(target, div, anchor);
    append(div, t2);
  }, p(ctx2, dirty) {
    if (dirty & /*message*/
    1)
      set_data(
        t2,
        /*message*/
        ctx2[0]
      );
  }, d(detaching) {
    if (detaching)
      detach(div);
  } };
}
function create_fragment$N(ctx) {
  let if_block_anchor;
  let current;
  let if_block = (
    /*isVisible*/
    ctx[5] && create_if_block$p(ctx)
  );
  return { c() {
    if (if_block)
      if_block.c();
    if_block_anchor = empty();
    this.c = noop;
  }, m(target, anchor) {
    if (if_block)
      if_block.m(target, anchor);
    insert(target, if_block_anchor, anchor);
    current = true;
  }, p(ctx2, [dirty]) {
    if (
      /*isVisible*/
      ctx2[5]
    ) {
      if (if_block) {
        if_block.p(ctx2, dirty);
        if (dirty & /*isVisible*/
        32) {
          transition_in(if_block, 1);
        }
      } else {
        if_block = create_if_block$p(ctx2);
        if_block.c();
        transition_in(if_block, 1);
        if_block.m(if_block_anchor.parentNode, if_block_anchor);
      }
    } else if (if_block) {
      group_outros();
      transition_out(if_block, 1, 1, () => {
        if_block = null;
      });
      check_outros();
    }
  }, i(local) {
    if (current)
      return;
    transition_in(if_block);
    current = true;
  }, o(local) {
    transition_out(if_block);
    current = false;
  }, d(detaching) {
    if (if_block)
      if_block.d(detaching);
    if (detaching)
      detach(if_block_anchor);
  } };
}
function instance$K($$self, $$props, $$invalidate) {
  let isVisible;
  const [Variants, validateVariant] = typeValidator("Circular progress variant", ["fullscreen", "inline"]);
  const [Sizes, validateSize] = typeValidator("Button size", ["small", "large"]);
  let { variant = "inline" } = $$props;
  let { size = "large" } = $$props;
  let { message = "" } = $$props;
  let { progress = -1 } = $$props;
  let { visible = "false" } = $$props;
  let spinnerSize;
  let fullscreen;
  let inline;
  onMount(async () => {
    validateVariant(variant);
    validateSize(size);
    $$invalidate(2, spinnerSize = size === "small" ? "large" : "xlarge");
    $$invalidate(3, fullscreen = variant === "fullscreen");
    $$invalidate(4, inline = variant === "inline");
  });
  $$self.$$set = ($$props2) => {
    if ("variant" in $$props2)
      $$invalidate(6, variant = $$props2.variant);
    if ("size" in $$props2)
      $$invalidate(7, size = $$props2.size);
    if ("message" in $$props2)
      $$invalidate(0, message = $$props2.message);
    if ("progress" in $$props2)
      $$invalidate(1, progress = $$props2.progress);
    if ("visible" in $$props2)
      $$invalidate(8, visible = $$props2.visible);
  };
  $$self.$$.update = () => {
    if ($$self.$$.dirty & /*visible*/
    256) {
      $$invalidate(5, isVisible = toBoolean(visible));
    }
  };
  return [message, progress, spinnerSize, fullscreen, inline, isVisible, variant, size, visible];
}
class CircularProgress extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `:host{box-sizing:border-box;font-family:var(--goa-font-family-sans)}.fullscreen{position:fixed;inset:0;z-index:9999;display:flex;align-items:center;justify-content:center;flex-direction:column;background-color:rgba(255, 255, 255, 0.9)}.inline{margin:3.5rem;display:inline-flex;flex-direction:column;align-items:center;justify-content:center}.spinner-large .message{margin-top:1.5rem;font-size:1.2rem}.spinner-xlarge .message{margin-top:2rem;font-size:1.5rem}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$K, create_fragment$N, safe_not_equal, { variant: 6, size: 7, message: 0, progress: 1, visible: 8 }, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["variant", "size", "message", "progress", "visible"];
  }
  get variant() {
    return this.$$.ctx[6];
  }
  set variant(variant) {
    this.$$set({ variant });
    flush();
  }
  get size() {
    return this.$$.ctx[7];
  }
  set size(size) {
    this.$$set({ size });
    flush();
  }
  get message() {
    return this.$$.ctx[0];
  }
  set message(message) {
    this.$$set({ message });
    flush();
  }
  get progress() {
    return this.$$.ctx[1];
  }
  set progress(progress) {
    this.$$set({ progress });
    flush();
  }
  get visible() {
    return this.$$.ctx[8];
  }
  set visible(visible) {
    this.$$set({ visible });
    flush();
  }
}
customElements.define("goa-circular-progress", CircularProgress);
function create_fragment$M(ctx) {
  let div3;
  let header;
  let div0;
  let t0;
  let div1;
  let header_class_value;
  let t1;
  let div2;
  let div3_style_value;
  let div3_class_value;
  return { c() {
    div3 = element("div");
    header = element("header");
    div0 = element("div");
    div0.innerHTML = `<slot name="title"></slot>`;
    t0 = space();
    div1 = element("div");
    div1.innerHTML = `<slot name="actions"></slot>`;
    t1 = space();
    div2 = element("div");
    div2.innerHTML = `<slot></slot>`;
    this.c = noop;
    attr(div0, "class", "title");
    attr(div1, "class", "actions");
    attr(header, "class", header_class_value = "heading--" + /*accent*/
    ctx[1]);
    attr(div2, "class", "content");
    attr(
      div3,
      "data-testid",
      /*testid*/
      ctx[3]
    );
    attr(div3, "style", div3_style_value = calculateMargin(
      /*mt*/
      ctx[4],
      /*mr*/
      ctx[5],
      /*mb*/
      ctx[6],
      /*ml*/
      ctx[7]
    ));
    attr(div3, "class", div3_class_value = `
    goa-container
    goa-container--${/*type*/
    ctx[0]}
    padding--${/*padding*/
    ctx[2]}
    accent--${/*accent*/
    ctx[1]}
  `);
  }, m(target, anchor) {
    insert(target, div3, anchor);
    append(div3, header);
    append(header, div0);
    append(header, t0);
    append(header, div1);
    append(div3, t1);
    append(div3, div2);
  }, p(ctx2, [dirty]) {
    if (dirty & /*accent*/
    2 && header_class_value !== (header_class_value = "heading--" + /*accent*/
    ctx2[1])) {
      attr(header, "class", header_class_value);
    }
    if (dirty & /*testid*/
    8) {
      attr(
        div3,
        "data-testid",
        /*testid*/
        ctx2[3]
      );
    }
    if (dirty & /*mt, mr, mb, ml*/
    240 && div3_style_value !== (div3_style_value = calculateMargin(
      /*mt*/
      ctx2[4],
      /*mr*/
      ctx2[5],
      /*mb*/
      ctx2[6],
      /*ml*/
      ctx2[7]
    ))) {
      attr(div3, "style", div3_style_value);
    }
    if (dirty & /*type, padding, accent*/
    7 && div3_class_value !== (div3_class_value = `
    goa-container
    goa-container--${/*type*/
    ctx2[0]}
    padding--${/*padding*/
    ctx2[2]}
    accent--${/*accent*/
    ctx2[1]}
  `)) {
      attr(div3, "class", div3_class_value);
    }
  }, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(div3);
  } };
}
function instance$J($$self, $$props, $$invalidate) {
  const [Types, validateType] = typeValidator("Container type", ["interactive", "info", "error", "success", "important", "non-interactive"]);
  const [Accents, validateAccent] = typeValidator("Container accent", ["thick", "thin", "filled"]);
  const [Paddings, validatePadding] = typeValidator("Container padding", ["relaxed", "compact"]);
  let { type = "interactive" } = $$props;
  let { accent = "filled" } = $$props;
  let { padding = "relaxed" } = $$props;
  let { testid = "" } = $$props;
  let { mt = null } = $$props;
  let { mr = null } = $$props;
  let { mb: mb2 = "m" } = $$props;
  let { ml: ml2 = null } = $$props;
  onMount(() => {
    validateType(type);
    validateAccent(accent);
    validatePadding(padding);
  });
  $$self.$$set = ($$props2) => {
    if ("type" in $$props2)
      $$invalidate(0, type = $$props2.type);
    if ("accent" in $$props2)
      $$invalidate(1, accent = $$props2.accent);
    if ("padding" in $$props2)
      $$invalidate(2, padding = $$props2.padding);
    if ("testid" in $$props2)
      $$invalidate(3, testid = $$props2.testid);
    if ("mt" in $$props2)
      $$invalidate(4, mt = $$props2.mt);
    if ("mr" in $$props2)
      $$invalidate(5, mr = $$props2.mr);
    if ("mb" in $$props2)
      $$invalidate(6, mb2 = $$props2.mb);
    if ("ml" in $$props2)
      $$invalidate(7, ml2 = $$props2.ml);
  };
  return [type, accent, padding, testid, mt, mr, mb2, ml2];
}
class Container extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `:host{box-sizing:border-box;font-family:var(--goa-font-family-sans);font-size:var(--goa-font-size-4);display:flex;flex:1 1 auto}.goa-container{box-sizing:border-box;display:flex;flex:1 1 auto;flex-direction:column}.goa-container *{box-sizing:border-box}header{display:flex;align-items:center;justify-content:space-between;font-weight:700;font-size:var(--goa-font-size-4);border-width:1px;border-style:solid;border-top-left-radius:var(--goa-border-radius-m);border-top-right-radius:var(--goa-border-radius-m)}.content{border-bottom:1px solid var(--goa-color-greyscale-200);border-left:1px solid var(--goa-color-greyscale-200);border-right:1px solid var(--goa-color-greyscale-200);border-bottom-left-radius:var(--goa-border-radius-m);border-bottom-right-radius:var(--goa-border-radius-m);display:flex;flex:1 1 auto;flex-direction:column}.content ::slotted(p:last-child){margin-bottom:0 !important}.goa-container--non-interactive.accent--filled .content{border-color:var(--goa-color-greyscale-200);background-color:var(--goa-color-greyscale-100)}.goa-container--important.accent--filled .content{border-color:var(--goa-color-warning-default);background-color:var(--goa-color-warning-background)}.goa-container--error.accent--filled .content{border-color:var(--goa-color-emergency-default);background-color:var(--goa-color-emergency-background)}.goa-container--success.accent--filled .content{border-color:var(--goa-color-success-default);background-color:var(--goa-color-success-background)}.goa-container--info.accent--filled .content{border-color:var(--goa-color-info-default);background-color:var(--goa-color-info-background)}.title,.actions{padding:0.5rem 0}.padding--relaxed header{padding:0 1.5rem}.padding--relaxed .content{padding:1.5rem}.padding--compact header,.padding--compact .content{padding:0 1rem}.padding--compact header{padding:0 1rem}.padding--compact .content{padding:1rem}@media screen and (max-width: 623px){.padding--relaxed header{padding:0 1rem}.padding--relaxed .content{padding:1rem}}.goa-container--non-interactive header{background-color:var(--goa-color-greyscale-100);border-color:var(--goa-color-greyscale-200);color:var(--goa-color-greyscale-black)}.goa-container--interactive header{background-color:var(--goa-color-brand-default);border-color:var(--goa-color-brand-default);color:var(--goa-color-greyscale-white)}.goa-container--info header{background-color:var(--goa-color-info-default);border-color:var(--goa-color-info-default);color:var(--goa-color-greyscale-white)}.goa-container--error header{background-color:var(--goa-color-emergency-default);border-color:var(--goa-color-emergency-default);color:var(--goa-color-greyscale-white)}.goa-container--success header{background-color:var(--goa-color-success-default);border-color:var(--goa-color-success-default);color:var(--goa-color-greyscale-white)}.goa-container--important header{background-color:var(--goa-color-warning-default);border-color:var(--goa-color-warning-default);color:var(--goa-color-greyscale-white)}.heading--thick{padding:0.5rem 1.5rem;max-height:3rem;min-height:1rem}.heading--thick .title{line-height:2rem}.heading--thin{height:0.5rem}.heading--filled{display:none}.heading--filled~.content{border-top:1px solid var(--goa-color-greyscale-200);border-top-left-radius:var(--goa-border-radius-m);border-top-right-radius:var(--goa-border-radius-m)}.heading--thin .title,.heading--thin .actions{display:none}.actions{display:flex;align-items:center}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$J, create_fragment$M, safe_not_equal, { type: 0, accent: 1, padding: 2, testid: 3, mt: 4, mr: 5, mb: 6, ml: 7 }, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["type", "accent", "padding", "testid", "mt", "mr", "mb", "ml"];
  }
  get type() {
    return this.$$.ctx[0];
  }
  set type(type) {
    this.$$set({ type });
    flush();
  }
  get accent() {
    return this.$$.ctx[1];
  }
  set accent(accent) {
    this.$$set({ accent });
    flush();
  }
  get padding() {
    return this.$$.ctx[2];
  }
  set padding(padding) {
    this.$$set({ padding });
    flush();
  }
  get testid() {
    return this.$$.ctx[3];
  }
  set testid(testid) {
    this.$$set({ testid });
    flush();
  }
  get mt() {
    return this.$$.ctx[4];
  }
  set mt(mt) {
    this.$$set({ mt });
    flush();
  }
  get mr() {
    return this.$$.ctx[5];
  }
  set mr(mr) {
    this.$$set({ mr });
    flush();
  }
  get mb() {
    return this.$$.ctx[6];
  }
  set mb(mb2) {
    this.$$set({ mb: mb2 });
    flush();
  }
  get ml() {
    return this.$$.ctx[7];
  }
  set ml(ml2) {
    this.$$set({ ml: ml2 });
    flush();
  }
}
customElements.define("goa-container", Container);
function create_fragment$L(ctx) {
  let details;
  let summary;
  let goa_icon;
  let goa_icon_fillcolor_value;
  let t0;
  let span;
  let t1;
  let t2;
  let div;
  let details_style_value;
  let mounted;
  let dispose;
  return { c() {
    details = element("details");
    summary = element("summary");
    goa_icon = element("goa-icon");
    t0 = space();
    span = element("span");
    t1 = text(
      /*heading*/
      ctx[1]
    );
    t2 = space();
    div = element("div");
    div.innerHTML = `<slot></slot>`;
    this.c = noop;
    set_custom_element_data(goa_icon, "mt", "1");
    set_custom_element_data(goa_icon, "mr", "2");
    set_custom_element_data(goa_icon, "type", "chevron-forward");
    set_custom_element_data(goa_icon, "fillcolor", goa_icon_fillcolor_value = /*_isMouseOver*/
    ctx[6] ? "var(--goa-color-interactive-hover)" : "var(--goa-color-interactive-default)");
    attr(div, "class", "content");
    details.open = /*_isOpen*/
    ctx[9];
    attr(details, "style", details_style_value = calculateMargin(
      /*mt*/
      ctx[2],
      /*mr*/
      ctx[3],
      /*mb*/
      ctx[4],
      /*ml*/
      ctx[5]
    ));
  }, m(target, anchor) {
    insert(target, details, anchor);
    append(details, summary);
    append(summary, goa_icon);
    append(summary, t0);
    append(summary, span);
    append(span, t1);
    ctx[10](summary);
    append(details, t2);
    append(details, div);
    ctx[11](details);
    if (!mounted) {
      dispose = listen(
        details,
        "toggle",
        /*toggle_handler*/
        ctx[12]
      );
      mounted = true;
    }
  }, p(ctx2, [dirty]) {
    if (dirty & /*_isMouseOver*/
    64 && goa_icon_fillcolor_value !== (goa_icon_fillcolor_value = /*_isMouseOver*/
    ctx2[6] ? "var(--goa-color-interactive-hover)" : "var(--goa-color-interactive-default)")) {
      set_custom_element_data(goa_icon, "fillcolor", goa_icon_fillcolor_value);
    }
    if (dirty & /*heading*/
    2)
      set_data(
        t1,
        /*heading*/
        ctx2[1]
      );
    if (dirty & /*_isOpen*/
    512) {
      details.open = /*_isOpen*/
      ctx2[9];
    }
    if (dirty & /*mt, mr, mb, ml*/
    60 && details_style_value !== (details_style_value = calculateMargin(
      /*mt*/
      ctx2[2],
      /*mr*/
      ctx2[3],
      /*mb*/
      ctx2[4],
      /*ml*/
      ctx2[5]
    ))) {
      attr(details, "style", details_style_value);
    }
  }, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(details);
    ctx[10](null);
    ctx[11](null);
    mounted = false;
    dispose();
  } };
}
function instance$I($$self, $$props, $$invalidate) {
  let _isOpen;
  let { heading } = $$props;
  let { mt = null } = $$props;
  let { mr = null } = $$props;
  let { mb: mb2 = null } = $$props;
  let { ml: ml2 = null } = $$props;
  let { open = "false" } = $$props;
  let _isMouseOver = false;
  let _summaryEl;
  let _detailsEl;
  onMount(() => {
    validateRequired("Details", { heading });
    _summaryEl.addEventListener("mouseover", () => {
      $$invalidate(6, _isMouseOver = true);
    });
    _summaryEl.addEventListener("mouseout", () => {
      $$invalidate(6, _isMouseOver = false);
    });
  });
  function summary_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      _summaryEl = $$value;
      $$invalidate(7, _summaryEl);
    });
  }
  function details_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      _detailsEl = $$value;
      $$invalidate(8, _detailsEl);
    });
  }
  const toggle_handler = ({ target }) => $$invalidate(0, open = `${target.open}`);
  $$self.$$set = ($$props2) => {
    if ("heading" in $$props2)
      $$invalidate(1, heading = $$props2.heading);
    if ("mt" in $$props2)
      $$invalidate(2, mt = $$props2.mt);
    if ("mr" in $$props2)
      $$invalidate(3, mr = $$props2.mr);
    if ("mb" in $$props2)
      $$invalidate(4, mb2 = $$props2.mb);
    if ("ml" in $$props2)
      $$invalidate(5, ml2 = $$props2.ml);
    if ("open" in $$props2)
      $$invalidate(0, open = $$props2.open);
  };
  $$self.$$.update = () => {
    if ($$self.$$.dirty & /*open*/
    1) {
      $$invalidate(9, _isOpen = toBoolean(open));
    }
  };
  return [open, heading, mt, mr, mb2, ml2, _isMouseOver, _summaryEl, _detailsEl, _isOpen, summary_binding, details_binding, toggle_handler];
}
class Details extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `:host{font-family:var(--goa-font-family-sans)}details{max-width:75ch;position:relative}details ::slotted(*){font:var(--goa-typography-body-m)}summary{padding:0.5rem;margin-bottom:0.5rem;cursor:pointer;list-style:none;display:flex;align-items:flex-start}goa-icon{position:absolute}details[open] goa-icon{transform:translateX(-1px) rotate(90deg);top:0.75rem}details summary::-webkit-details-marker{display:none}summary{border-radius:var(--goa-border-radius-m)}summary:focus,summary:active{outline:3px solid var(--goa-color-interactive-focus);border-radius:var(--goa-border-radius-m);color:var(--goa-color-interactive-hover);background-color:var(--goa-color-greyscale-100)}summary:hover{background-color:var(--goa-color-greyscale-100)}summary span{margin-left:2rem;text-decoration:underline;color:var(--goa-color-interactive-default);padding-bottom:var(--font-valign-fix);line-height:var(--goa-line-height-3)}summary:hover span{color:var(--goa-color-interactive-hover)}.content{border-left:4px solid var(--goa-color-greyscale-200);padding:1rem;margin-left:1.1rem;margin-bottom:var(--goa-space-s)}.content ::slotted(p:last-child){margin-bottom:0 !important}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$I, create_fragment$L, safe_not_equal, { heading: 1, mt: 2, mr: 3, mb: 4, ml: 5, open: 0 }, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["heading", "mt", "mr", "mb", "ml", "open"];
  }
  get heading() {
    return this.$$.ctx[1];
  }
  set heading(heading) {
    this.$$set({ heading });
    flush();
  }
  get mt() {
    return this.$$.ctx[2];
  }
  set mt(mt) {
    this.$$set({ mt });
    flush();
  }
  get mr() {
    return this.$$.ctx[3];
  }
  set mr(mr) {
    this.$$set({ mr });
    flush();
  }
  get mb() {
    return this.$$.ctx[4];
  }
  set mb(mb2) {
    this.$$set({ mb: mb2 });
    flush();
  }
  get ml() {
    return this.$$.ctx[5];
  }
  set ml(ml2) {
    this.$$set({ ml: ml2 });
    flush();
  }
  get open() {
    return this.$$.ctx[0];
  }
  set open(open) {
    this.$$set({ open });
    flush();
  }
}
customElements.define("goa-details", Details);
function create_fragment$K(ctx) {
  let hr;
  let hr_style_value;
  return { c() {
    hr = element("hr");
    this.c = noop;
    attr(
      hr,
      "data-testid",
      /*testid*/
      ctx[0]
    );
    attr(hr, "style", hr_style_value = calculateMargin(
      /*mt*/
      ctx[1],
      /*mr*/
      ctx[2],
      /*mb*/
      ctx[3],
      /*ml*/
      ctx[4]
    ));
  }, m(target, anchor) {
    insert(target, hr, anchor);
  }, p(ctx2, [dirty]) {
    if (dirty & /*testid*/
    1) {
      attr(
        hr,
        "data-testid",
        /*testid*/
        ctx2[0]
      );
    }
    if (dirty & /*mt, mr, mb, ml*/
    30 && hr_style_value !== (hr_style_value = calculateMargin(
      /*mt*/
      ctx2[1],
      /*mr*/
      ctx2[2],
      /*mb*/
      ctx2[3],
      /*ml*/
      ctx2[4]
    ))) {
      attr(hr, "style", hr_style_value);
    }
  }, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(hr);
  } };
}
function instance$H($$self, $$props, $$invalidate) {
  let { testid = "" } = $$props;
  let { mt = null } = $$props;
  let { mr = null } = $$props;
  let { mb: mb2 = null } = $$props;
  let { ml: ml2 = null } = $$props;
  $$self.$$set = ($$props2) => {
    if ("testid" in $$props2)
      $$invalidate(0, testid = $$props2.testid);
    if ("mt" in $$props2)
      $$invalidate(1, mt = $$props2.mt);
    if ("mr" in $$props2)
      $$invalidate(2, mr = $$props2.mr);
    if ("mb" in $$props2)
      $$invalidate(3, mb2 = $$props2.mb);
    if ("ml" in $$props2)
      $$invalidate(4, ml2 = $$props2.ml);
  };
  return [testid, mt, mr, mb2, ml2];
}
class Divider extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `hr{padding:0;margin:0;height:1px;background-color:var(--goa-color-greyscale-200);border:none}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$H, create_fragment$K, safe_not_equal, { testid: 0, mt: 1, mr: 2, mb: 3, ml: 4 }, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["testid", "mt", "mr", "mb", "ml"];
  }
  get testid() {
    return this.$$.ctx[0];
  }
  set testid(testid) {
    this.$$set({ testid });
    flush();
  }
  get mt() {
    return this.$$.ctx[1];
  }
  set mt(mt) {
    this.$$set({ mt });
    flush();
  }
  get mr() {
    return this.$$.ctx[2];
  }
  set mr(mr) {
    this.$$set({ mr });
    flush();
  }
  get mb() {
    return this.$$.ctx[3];
  }
  set mb(mb2) {
    this.$$set({ mb: mb2 });
    flush();
  }
  get ml() {
    return this.$$.ctx[4];
  }
  set ml(ml2) {
    this.$$set({ ml: ml2 });
    flush();
  }
}
customElements.define("goa-divider", Divider);
function get_each_context_1$1(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[61] = list[i];
  child_ctx[65] = i;
  return child_ctx;
}
function get_each_context$8(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[61] = list[i];
  return child_ctx;
}
function create_else_block$a(ctx) {
  let slot;
  let t0;
  let goa_popover;
  let div;
  let t1;
  let input;
  let input_style_value;
  let input_aria_controls_value;
  let input_aria_label_value;
  let input_aria_owns_value;
  let input_readonly_value;
  let t2;
  let div_style_value;
  let t3;
  let ul2;
  let each_blocks = [];
  let each_1_lookup = /* @__PURE__ */ new Map();
  let ul_id_value;
  let ul_aria_label_value;
  let ul_style_value;
  let mounted;
  let dispose;
  let if_block0 = (
    /*leadingicon*/
    ctx[4] && create_if_block_2$a(ctx)
  );
  function select_block_type_1(ctx2, dirty) {
    var _ctx$;
    if (
      /*_inputEl*/
      (_ctx$ = ctx2[23]) !== null && _ctx$ !== void 0 && _ctx$.value && /*_filterable*/
      ctx2[24]
    )
      return create_if_block_1$c;
    return create_else_block_2;
  }
  let current_block_type = select_block_type_1(ctx);
  let if_block1 = current_block_type(ctx);
  let each_value_1 = (
    /*_filteredOptions*/
    ctx[15]
  );
  const get_key = (ctx2) => (
    /*index*/
    ctx2[65]
  );
  for (let i = 0; i < each_value_1.length; i += 1) {
    let child_ctx = get_each_context_1$1(ctx, each_value_1, i);
    let key = get_key(child_ctx);
    each_1_lookup.set(key, each_blocks[i] = create_each_block_1$1(key, child_ctx));
  }
  let each_1_else = null;
  if (!each_value_1.length) {
    each_1_else = create_else_block_1();
  }
  return { c() {
    slot = element("slot");
    t0 = space();
    goa_popover = element("goa-popover");
    div = element("div");
    if (if_block0)
      if_block0.c();
    t1 = space();
    input = element("input");
    t2 = space();
    if_block1.c();
    t3 = space();
    ul2 = element("ul");
    for (let i = 0; i < each_blocks.length; i += 1) {
      each_blocks[i].c();
    }
    if (each_1_else) {
      each_1_else.c();
    }
    attr(input, "style", input_style_value = `
            cursor: ${!/*_disabled*/
    ctx[26] ? (
      /*_filterable*/
      ctx[24] ? "auto" : "pointer"
    ) : "default"};
          `);
    attr(input, "data-testid", "input");
    attr(input, "type", "text");
    attr(input, "role", "combobox");
    attr(input, "autocomplete", "off");
    attr(input, "aria-autocomplete", "list");
    attr(input, "aria-controls", input_aria_controls_value = `menu-${/*name*/
    ctx[0]}`);
    attr(
      input,
      "aria-expanded",
      /*_isMenuVisible*/
      ctx[18]
    );
    attr(input, "aria-label", input_aria_label_value = /*arialabel*/
    ctx[1] || /*name*/
    ctx[0]);
    attr(
      input,
      "aria-labelledby",
      /*arialabelledby*/
      ctx[2]
    );
    attr(
      input,
      "id",
      /*name*/
      ctx[0]
    );
    attr(
      input,
      "aria-activedescendant",
      /*_activeDescendantId*/
      ctx[25]
    );
    attr(
      input,
      "aria-disabled",
      /*_disabled*/
      ctx[26]
    );
    attr(input, "aria-owns", input_aria_owns_value = /*_isMenuVisible*/
    ctx[18] ? `menu-${/*name*/
    ctx[0]}` : void 0);
    attr(input, "aria-haspopup", "listbox");
    input.disabled = /*_disabled*/
    ctx[26];
    input.readOnly = input_readonly_value = !/*_filterable*/
    ctx[24];
    attr(
      input,
      "placeholder",
      /*placeholder*/
      ctx[6]
    );
    attr(
      input,
      "name",
      /*name*/
      ctx[0]
    );
    attr(div, "slot", "target");
    attr(div, "style", div_style_value = cssVar(
      "width",
      /*width*/
      ctx[7]
    ));
    attr(div, "class", "dropdown-input-group");
    toggle_class(
      div,
      "dropdown-input-group--disabled",
      /*_disabled*/
      ctx[26]
    );
    toggle_class(
      div,
      "error",
      /*_error*/
      ctx[27]
    );
    attr(ul2, "id", ul_id_value = `menu-${/*name*/
    ctx[0]}`);
    attr(ul2, "role", "listbox");
    attr(ul2, "tabindex", "-1");
    attr(ul2, "data-testid", "dropdown-menu");
    attr(ul2, "aria-label", ul_aria_label_value = /*arialabel*/
    ctx[1] || /*name*/
    ctx[0]);
    attr(
      ul2,
      "aria-labelledby",
      /*arialabelledby*/
      ctx[2]
    );
    attr(ul2, "style", ul_style_value = `
          width: ${/*_width*/
    ctx[19]};
          outline: none;
          overflow-y: auto;
          max-height: ${/*maxheight*/
    ctx[5]};
        `);
    set_custom_element_data(
      goa_popover,
      "disabled",
      /*disabled*/
      ctx[8]
    );
    set_custom_element_data(
      goa_popover,
      "relative",
      /*relative*/
      ctx[9]
    );
    set_custom_element_data(goa_popover, "data-testid", "option-list");
    set_custom_element_data(goa_popover, "maxwidth", "1000px");
    set_custom_element_data(
      goa_popover,
      "open",
      /*_isMenuVisible*/
      ctx[18]
    );
    set_custom_element_data(goa_popover, "padded", "false");
    set_custom_element_data(goa_popover, "tabindex", "-1");
    set_custom_element_data(
      goa_popover,
      "width",
      /*_width*/
      ctx[19]
    );
  }, m(target, anchor) {
    insert(target, slot, anchor);
    insert(target, t0, anchor);
    insert(target, goa_popover, anchor);
    append(goa_popover, div);
    if (if_block0)
      if_block0.m(div, null);
    append(div, t1);
    append(div, input);
    ctx[42](input);
    append(div, t2);
    if_block1.m(div, null);
    append(goa_popover, t3);
    append(goa_popover, ul2);
    for (let i = 0; i < each_blocks.length; i += 1) {
      if (each_blocks[i]) {
        each_blocks[i].m(ul2, null);
      }
    }
    if (each_1_else) {
      each_1_else.m(ul2, null);
    }
    ctx[44](ul2);
    if (!mounted) {
      dispose = [listen(
        input,
        "keydown",
        /*onInputKeyDown*/
        ctx[32]
      ), listen(
        input,
        "keyup",
        /*onInputKeyUp*/
        ctx[31]
      ), listen(
        goa_popover,
        "_open",
        /*showMenu*/
        ctx[28]
      ), listen(
        goa_popover,
        "_close",
        /*hideMenu*/
        ctx[29]
      )];
      mounted = true;
    }
  }, p(ctx2, dirty) {
    if (
      /*leadingicon*/
      ctx2[4]
    ) {
      if (if_block0) {
        if_block0.p(ctx2, dirty);
      } else {
        if_block0 = create_if_block_2$a(ctx2);
        if_block0.c();
        if_block0.m(div, t1);
      }
    } else if (if_block0) {
      if_block0.d(1);
      if_block0 = null;
    }
    if (dirty[0] & /*_disabled, _filterable*/
    83886080 && input_style_value !== (input_style_value = `
            cursor: ${!/*_disabled*/
    ctx2[26] ? (
      /*_filterable*/
      ctx2[24] ? "auto" : "pointer"
    ) : "default"};
          `)) {
      attr(input, "style", input_style_value);
    }
    if (dirty[0] & /*name*/
    1 && input_aria_controls_value !== (input_aria_controls_value = `menu-${/*name*/
    ctx2[0]}`)) {
      attr(input, "aria-controls", input_aria_controls_value);
    }
    if (dirty[0] & /*_isMenuVisible*/
    262144) {
      attr(
        input,
        "aria-expanded",
        /*_isMenuVisible*/
        ctx2[18]
      );
    }
    if (dirty[0] & /*arialabel, name*/
    3 && input_aria_label_value !== (input_aria_label_value = /*arialabel*/
    ctx2[1] || /*name*/
    ctx2[0])) {
      attr(input, "aria-label", input_aria_label_value);
    }
    if (dirty[0] & /*arialabelledby*/
    4) {
      attr(
        input,
        "aria-labelledby",
        /*arialabelledby*/
        ctx2[2]
      );
    }
    if (dirty[0] & /*name*/
    1) {
      attr(
        input,
        "id",
        /*name*/
        ctx2[0]
      );
    }
    if (dirty[0] & /*_activeDescendantId*/
    33554432) {
      attr(
        input,
        "aria-activedescendant",
        /*_activeDescendantId*/
        ctx2[25]
      );
    }
    if (dirty[0] & /*_disabled*/
    67108864) {
      attr(
        input,
        "aria-disabled",
        /*_disabled*/
        ctx2[26]
      );
    }
    if (dirty[0] & /*_isMenuVisible, name*/
    262145 && input_aria_owns_value !== (input_aria_owns_value = /*_isMenuVisible*/
    ctx2[18] ? `menu-${/*name*/
    ctx2[0]}` : void 0)) {
      attr(input, "aria-owns", input_aria_owns_value);
    }
    if (dirty[0] & /*_disabled*/
    67108864) {
      input.disabled = /*_disabled*/
      ctx2[26];
    }
    if (dirty[0] & /*_filterable*/
    16777216 && input_readonly_value !== (input_readonly_value = !/*_filterable*/
    ctx2[24])) {
      input.readOnly = input_readonly_value;
    }
    if (dirty[0] & /*placeholder*/
    64) {
      attr(
        input,
        "placeholder",
        /*placeholder*/
        ctx2[6]
      );
    }
    if (dirty[0] & /*name*/
    1) {
      attr(
        input,
        "name",
        /*name*/
        ctx2[0]
      );
    }
    if (current_block_type === (current_block_type = select_block_type_1(ctx2)) && if_block1) {
      if_block1.p(ctx2, dirty);
    } else {
      if_block1.d(1);
      if_block1 = current_block_type(ctx2);
      if (if_block1) {
        if_block1.c();
        if_block1.m(div, null);
      }
    }
    if (dirty[0] & /*width*/
    128 && div_style_value !== (div_style_value = cssVar(
      "width",
      /*width*/
      ctx2[7]
    ))) {
      attr(div, "style", div_style_value);
    }
    if (dirty[0] & /*_disabled*/
    67108864) {
      toggle_class(
        div,
        "dropdown-input-group--disabled",
        /*_disabled*/
        ctx2[26]
      );
    }
    if (dirty[0] & /*_error*/
    134217728) {
      toggle_class(
        div,
        "error",
        /*_error*/
        ctx2[27]
      );
    }
    if (dirty[0] & /*_filteredOptions, _inputEl, _highlightedIndex, onSelect*/
    1082179584) {
      each_value_1 = /*_filteredOptions*/
      ctx2[15];
      each_blocks = update_keyed_each(each_blocks, dirty, get_key, 1, ctx2, each_value_1, each_1_lookup, ul2, destroy_block, create_each_block_1$1, null, get_each_context_1$1);
      if (!each_value_1.length && each_1_else) {
        each_1_else.p(ctx2, dirty);
      } else if (!each_value_1.length) {
        each_1_else = create_else_block_1();
        each_1_else.c();
        each_1_else.m(ul2, null);
      } else if (each_1_else) {
        each_1_else.d(1);
        each_1_else = null;
      }
    }
    if (dirty[0] & /*name*/
    1 && ul_id_value !== (ul_id_value = `menu-${/*name*/
    ctx2[0]}`)) {
      attr(ul2, "id", ul_id_value);
    }
    if (dirty[0] & /*arialabel, name*/
    3 && ul_aria_label_value !== (ul_aria_label_value = /*arialabel*/
    ctx2[1] || /*name*/
    ctx2[0])) {
      attr(ul2, "aria-label", ul_aria_label_value);
    }
    if (dirty[0] & /*arialabelledby*/
    4) {
      attr(
        ul2,
        "aria-labelledby",
        /*arialabelledby*/
        ctx2[2]
      );
    }
    if (dirty[0] & /*_width, maxheight*/
    524320 && ul_style_value !== (ul_style_value = `
          width: ${/*_width*/
    ctx2[19]};
          outline: none;
          overflow-y: auto;
          max-height: ${/*maxheight*/
    ctx2[5]};
        `)) {
      attr(ul2, "style", ul_style_value);
    }
    if (dirty[0] & /*disabled*/
    256) {
      set_custom_element_data(
        goa_popover,
        "disabled",
        /*disabled*/
        ctx2[8]
      );
    }
    if (dirty[0] & /*relative*/
    512) {
      set_custom_element_data(
        goa_popover,
        "relative",
        /*relative*/
        ctx2[9]
      );
    }
    if (dirty[0] & /*_isMenuVisible*/
    262144) {
      set_custom_element_data(
        goa_popover,
        "open",
        /*_isMenuVisible*/
        ctx2[18]
      );
    }
    if (dirty[0] & /*_width*/
    524288) {
      set_custom_element_data(
        goa_popover,
        "width",
        /*_width*/
        ctx2[19]
      );
    }
  }, d(detaching) {
    if (detaching)
      detach(slot);
    if (detaching)
      detach(t0);
    if (detaching)
      detach(goa_popover);
    if (if_block0)
      if_block0.d();
    ctx[42](null);
    if_block1.d();
    for (let i = 0; i < each_blocks.length; i += 1) {
      each_blocks[i].d();
    }
    if (each_1_else)
      each_1_else.d();
    ctx[44](null);
    mounted = false;
    run_all(dispose);
  } };
}
function create_if_block$o(ctx) {
  let select;
  let slot;
  let select_aria_label_value;
  let mounted;
  let dispose;
  let each_value = (
    /*_options*/
    ctx[17]
  );
  let each_blocks = [];
  for (let i = 0; i < each_value.length; i += 1) {
    each_blocks[i] = create_each_block$8(get_each_context$8(ctx, each_value, i));
  }
  return { c() {
    select = element("select");
    slot = element("slot");
    for (let i = 0; i < each_blocks.length; i += 1) {
      each_blocks[i].c();
    }
    attr(
      select,
      "name",
      /*name*/
      ctx[0]
    );
    attr(select, "aria-label", select_aria_label_value = /*arialabel*/
    ctx[1] || /*name*/
    ctx[0]);
    attr(
      select,
      "aria-labelledby",
      /*arialabelledby*/
      ctx[2]
    );
    select.disabled = /*_disabled*/
    ctx[26];
    attr(
      select,
      "id",
      /*name*/
      ctx[0]
    );
    toggle_class(
      select,
      "error",
      /*_error*/
      ctx[27]
    );
  }, m(target, anchor) {
    insert(target, select, anchor);
    append(select, slot);
    for (let i = 0; i < each_blocks.length; i += 1) {
      if (each_blocks[i]) {
        each_blocks[i].m(select, null);
      }
    }
    ctx[41](select);
    if (!mounted) {
      dispose = listen(
        select,
        "change",
        /*onNativeSelect*/
        ctx[35]
      );
      mounted = true;
    }
  }, p(ctx2, dirty) {
    if (dirty[0] & /*value, _options*/
    131080) {
      each_value = /*_options*/
      ctx2[17];
      let i;
      for (i = 0; i < each_value.length; i += 1) {
        const child_ctx = get_each_context$8(ctx2, each_value, i);
        if (each_blocks[i]) {
          each_blocks[i].p(child_ctx, dirty);
        } else {
          each_blocks[i] = create_each_block$8(child_ctx);
          each_blocks[i].c();
          each_blocks[i].m(select, null);
        }
      }
      for (; i < each_blocks.length; i += 1) {
        each_blocks[i].d(1);
      }
      each_blocks.length = each_value.length;
    }
    if (dirty[0] & /*name*/
    1) {
      attr(
        select,
        "name",
        /*name*/
        ctx2[0]
      );
    }
    if (dirty[0] & /*arialabel, name*/
    3 && select_aria_label_value !== (select_aria_label_value = /*arialabel*/
    ctx2[1] || /*name*/
    ctx2[0])) {
      attr(select, "aria-label", select_aria_label_value);
    }
    if (dirty[0] & /*arialabelledby*/
    4) {
      attr(
        select,
        "aria-labelledby",
        /*arialabelledby*/
        ctx2[2]
      );
    }
    if (dirty[0] & /*_disabled*/
    67108864) {
      select.disabled = /*_disabled*/
      ctx2[26];
    }
    if (dirty[0] & /*name*/
    1) {
      attr(
        select,
        "id",
        /*name*/
        ctx2[0]
      );
    }
    if (dirty[0] & /*_error*/
    134217728) {
      toggle_class(
        select,
        "error",
        /*_error*/
        ctx2[27]
      );
    }
  }, d(detaching) {
    if (detaching)
      detach(select);
    destroy_each(each_blocks, detaching);
    ctx[41](null);
    mounted = false;
    dispose();
  } };
}
function create_if_block_2$a(ctx) {
  let goa_icon;
  return { c() {
    goa_icon = element("goa-icon");
    set_custom_element_data(goa_icon, "class", "dropdown-input--leading-icon");
    set_custom_element_data(goa_icon, "data-testid", "leading-icon");
    set_custom_element_data(
      goa_icon,
      "type",
      /*leadingicon*/
      ctx[4]
    );
  }, m(target, anchor) {
    insert(target, goa_icon, anchor);
  }, p(ctx2, dirty) {
    if (dirty[0] & /*leadingicon*/
    16) {
      set_custom_element_data(
        goa_icon,
        "type",
        /*leadingicon*/
        ctx2[4]
      );
    }
  }, d(detaching) {
    if (detaching)
      detach(goa_icon);
  } };
}
function create_else_block_2(ctx) {
  let goa_icon;
  let goa_icon_arialabel_value;
  let goa_icon_ariacontrols_value;
  let goa_icon_ariaexpanded_value;
  let goa_icon_type_value;
  let mounted;
  let dispose;
  return { c() {
    goa_icon = element("goa-icon");
    set_custom_element_data(goa_icon, "role", "button");
    set_custom_element_data(goa_icon, "tabindex", "-1");
    set_custom_element_data(
      goa_icon,
      "id",
      /*name*/
      ctx[0]
    );
    set_custom_element_data(goa_icon, "arialabel", goa_icon_arialabel_value = /*arialabel*/
    ctx[1] || /*name*/
    ctx[0]);
    set_custom_element_data(goa_icon, "ariacontrols", goa_icon_ariacontrols_value = `menu-${/*name*/
    ctx[0]}`);
    set_custom_element_data(goa_icon, "ariaexpanded", goa_icon_ariaexpanded_value = fromBoolean(
      /*_isMenuVisible*/
      ctx[18]
    ));
    set_custom_element_data(goa_icon, "class", "dropdown-icon--arrow");
    set_custom_element_data(goa_icon, "size", "medium");
    set_custom_element_data(goa_icon, "type", goa_icon_type_value = /*_isMenuVisible*/
    ctx[18] ? "chevron-up" : "chevron-down");
  }, m(target, anchor) {
    insert(target, goa_icon, anchor);
    if (!mounted) {
      dispose = listen(
        goa_icon,
        "click",
        /*onChevronClick*/
        ctx[36]
      );
      mounted = true;
    }
  }, p(ctx2, dirty) {
    if (dirty[0] & /*name*/
    1) {
      set_custom_element_data(
        goa_icon,
        "id",
        /*name*/
        ctx2[0]
      );
    }
    if (dirty[0] & /*arialabel, name*/
    3 && goa_icon_arialabel_value !== (goa_icon_arialabel_value = /*arialabel*/
    ctx2[1] || /*name*/
    ctx2[0])) {
      set_custom_element_data(goa_icon, "arialabel", goa_icon_arialabel_value);
    }
    if (dirty[0] & /*name*/
    1 && goa_icon_ariacontrols_value !== (goa_icon_ariacontrols_value = `menu-${/*name*/
    ctx2[0]}`)) {
      set_custom_element_data(goa_icon, "ariacontrols", goa_icon_ariacontrols_value);
    }
    if (dirty[0] & /*_isMenuVisible*/
    262144 && goa_icon_ariaexpanded_value !== (goa_icon_ariaexpanded_value = fromBoolean(
      /*_isMenuVisible*/
      ctx2[18]
    ))) {
      set_custom_element_data(goa_icon, "ariaexpanded", goa_icon_ariaexpanded_value);
    }
    if (dirty[0] & /*_isMenuVisible*/
    262144 && goa_icon_type_value !== (goa_icon_type_value = /*_isMenuVisible*/
    ctx2[18] ? "chevron-up" : "chevron-down")) {
      set_custom_element_data(goa_icon, "type", goa_icon_type_value);
    }
  }, d(detaching) {
    if (detaching)
      detach(goa_icon);
    mounted = false;
    dispose();
  } };
}
function create_if_block_1$c(ctx) {
  let goa_icon;
  let goa_icon_tabindex_value;
  let goa_icon_arialabel_value;
  let goa_icon_ariacontrols_value;
  let goa_icon_ariaexpanded_value;
  let mounted;
  let dispose;
  return { c() {
    goa_icon = element("goa-icon");
    set_custom_element_data(
      goa_icon,
      "id",
      /*name*/
      ctx[0]
    );
    set_custom_element_data(goa_icon, "tabindex", goa_icon_tabindex_value = /*_disabled*/
    ctx[26] ? -1 : 0);
    set_custom_element_data(goa_icon, "role", "button");
    set_custom_element_data(goa_icon, "arialabel", goa_icon_arialabel_value = `clear ${/*arialabel*/
    ctx[1] || /*name*/
    ctx[0]}`);
    set_custom_element_data(goa_icon, "ariacontrols", goa_icon_ariacontrols_value = `menu-${/*name*/
    ctx[0]}`);
    set_custom_element_data(goa_icon, "ariaexpanded", goa_icon_ariaexpanded_value = fromBoolean(
      /*_isMenuVisible*/
      ctx[18]
    ));
    set_custom_element_data(goa_icon, "class", "dropdown-icon--clear");
    set_custom_element_data(goa_icon, "size", "medium");
    set_custom_element_data(goa_icon, "type", "close");
    toggle_class(
      goa_icon,
      "disabled",
      /*_disabled*/
      ctx[26]
    );
  }, m(target, anchor) {
    insert(target, goa_icon, anchor);
    if (!mounted) {
      dispose = [listen(goa_icon, "click", stop_propagation(
        /*onClearIconClick*/
        ctx[34]
      )), listen(
        goa_icon,
        "keydown",
        /*onClearIconKeyDown*/
        ctx[33]
      )];
      mounted = true;
    }
  }, p(ctx2, dirty) {
    if (dirty[0] & /*name*/
    1) {
      set_custom_element_data(
        goa_icon,
        "id",
        /*name*/
        ctx2[0]
      );
    }
    if (dirty[0] & /*_disabled*/
    67108864 && goa_icon_tabindex_value !== (goa_icon_tabindex_value = /*_disabled*/
    ctx2[26] ? -1 : 0)) {
      set_custom_element_data(goa_icon, "tabindex", goa_icon_tabindex_value);
    }
    if (dirty[0] & /*arialabel, name*/
    3 && goa_icon_arialabel_value !== (goa_icon_arialabel_value = `clear ${/*arialabel*/
    ctx2[1] || /*name*/
    ctx2[0]}`)) {
      set_custom_element_data(goa_icon, "arialabel", goa_icon_arialabel_value);
    }
    if (dirty[0] & /*name*/
    1 && goa_icon_ariacontrols_value !== (goa_icon_ariacontrols_value = `menu-${/*name*/
    ctx2[0]}`)) {
      set_custom_element_data(goa_icon, "ariacontrols", goa_icon_ariacontrols_value);
    }
    if (dirty[0] & /*_isMenuVisible*/
    262144 && goa_icon_ariaexpanded_value !== (goa_icon_ariaexpanded_value = fromBoolean(
      /*_isMenuVisible*/
      ctx2[18]
    ))) {
      set_custom_element_data(goa_icon, "ariaexpanded", goa_icon_ariaexpanded_value);
    }
    if (dirty[0] & /*_disabled*/
    67108864) {
      toggle_class(
        goa_icon,
        "disabled",
        /*_disabled*/
        ctx2[26]
      );
    }
  }, d(detaching) {
    if (detaching)
      detach(goa_icon);
    mounted = false;
    run_all(dispose);
  } };
}
function create_else_block_1(ctx) {
  let li2;
  return { c() {
    li2 = element("li");
    li2.textContent = "No matches found\n          ";
    attr(li2, "class", "dropdown-item");
    attr(li2, "data-testid", "dropdown-item-not-found");
  }, m(target, anchor) {
    insert(target, li2, anchor);
  }, p: noop, d(detaching) {
    if (detaching)
      detach(li2);
  } };
}
function create_each_block_1$1(key_1, ctx) {
  let li2;
  let t0_value = (
    /*option*/
    (ctx[61].label || /*option*/
    ctx[61].value) + ""
  );
  let t0;
  let t1;
  let li_id_value;
  let li_aria_selected_value;
  let li_data_index_value;
  let li_data_testid_value;
  let li_data_value_value;
  let mounted;
  let dispose;
  function click_handler() {
    return (
      /*click_handler*/
      ctx[43](
        /*option*/
        ctx[61]
      )
    );
  }
  return { key: key_1, first: null, c() {
    li2 = element("li");
    t0 = text(t0_value);
    t1 = space();
    attr(li2, "id", li_id_value = /*option*/
    ctx[61].value);
    attr(li2, "aria-selected", li_aria_selected_value = /*_inputEl*/
    ctx[23].value === /*option*/
    (ctx[61].label || /*option*/
    ctx[61].value));
    attr(li2, "class", "dropdown-item");
    attr(li2, "data-index", li_data_index_value = /*index*/
    ctx[65]);
    attr(li2, "data-testid", li_data_testid_value = `dropdown-item-${/*option*/
    ctx[61].value}`);
    attr(li2, "data-value", li_data_value_value = /*option*/
    ctx[61].value);
    attr(li2, "role", "option");
    set_style(li2, "display", "block");
    toggle_class(
      li2,
      "dropdown-item--highlighted",
      /*index*/
      ctx[65] === /*_highlightedIndex*/
      ctx[14]
    );
    toggle_class(
      li2,
      "selected",
      /*_inputEl*/
      ctx[23].value === /*option*/
      (ctx[61].label || /*option*/
      ctx[61].value)
    );
    this.first = li2;
  }, m(target, anchor) {
    insert(target, li2, anchor);
    append(li2, t0);
    append(li2, t1);
    if (!mounted) {
      dispose = listen(li2, "click", click_handler);
      mounted = true;
    }
  }, p(new_ctx, dirty) {
    ctx = new_ctx;
    if (dirty[0] & /*_filteredOptions*/
    32768 && t0_value !== (t0_value = /*option*/
    (ctx[61].label || /*option*/
    ctx[61].value) + ""))
      set_data(t0, t0_value);
    if (dirty[0] & /*_filteredOptions*/
    32768 && li_id_value !== (li_id_value = /*option*/
    ctx[61].value)) {
      attr(li2, "id", li_id_value);
    }
    if (dirty[0] & /*_inputEl, _filteredOptions*/
    8421376 && li_aria_selected_value !== (li_aria_selected_value = /*_inputEl*/
    ctx[23].value === /*option*/
    (ctx[61].label || /*option*/
    ctx[61].value))) {
      attr(li2, "aria-selected", li_aria_selected_value);
    }
    if (dirty[0] & /*_filteredOptions*/
    32768 && li_data_index_value !== (li_data_index_value = /*index*/
    ctx[65])) {
      attr(li2, "data-index", li_data_index_value);
    }
    if (dirty[0] & /*_filteredOptions*/
    32768 && li_data_testid_value !== (li_data_testid_value = `dropdown-item-${/*option*/
    ctx[61].value}`)) {
      attr(li2, "data-testid", li_data_testid_value);
    }
    if (dirty[0] & /*_filteredOptions*/
    32768 && li_data_value_value !== (li_data_value_value = /*option*/
    ctx[61].value)) {
      attr(li2, "data-value", li_data_value_value);
    }
    if (dirty[0] & /*_filteredOptions, _highlightedIndex*/
    49152) {
      toggle_class(
        li2,
        "dropdown-item--highlighted",
        /*index*/
        ctx[65] === /*_highlightedIndex*/
        ctx[14]
      );
    }
    if (dirty[0] & /*_inputEl, _filteredOptions*/
    8421376) {
      toggle_class(
        li2,
        "selected",
        /*_inputEl*/
        ctx[23].value === /*option*/
        (ctx[61].label || /*option*/
        ctx[61].value)
      );
    }
  }, d(detaching) {
    if (detaching)
      detach(li2);
    mounted = false;
    dispose();
  } };
}
function create_each_block$8(ctx) {
  let option;
  let t0_value = (
    /*option*/
    ctx[61].label + ""
  );
  let t0;
  let t1;
  let option_selected_value;
  let option_value_value;
  return { c() {
    option = element("option");
    t0 = text(t0_value);
    t1 = space();
    option.selected = option_selected_value = /*value*/
    ctx[3] === /*option*/
    ctx[61].value;
    option.__value = option_value_value = /*option*/
    ctx[61].value;
    option.value = option.__value;
  }, m(target, anchor) {
    insert(target, option, anchor);
    append(option, t0);
    append(option, t1);
  }, p(ctx2, dirty) {
    if (dirty[0] & /*_options*/
    131072 && t0_value !== (t0_value = /*option*/
    ctx2[61].label + ""))
      set_data(t0, t0_value);
    if (dirty[0] & /*value, _options*/
    131080 && option_selected_value !== (option_selected_value = /*value*/
    ctx2[3] === /*option*/
    ctx2[61].value)) {
      option.selected = option_selected_value;
    }
    if (dirty[0] & /*_options*/
    131072 && option_value_value !== (option_value_value = /*option*/
    ctx2[61].value)) {
      option.__value = option_value_value;
      option.value = option.__value;
    }
  }, d(detaching) {
    if (detaching)
      detach(option);
  } };
}
function create_fragment$J(ctx) {
  let div;
  let div_data_testid_value;
  let div_style_value;
  function select_block_type(ctx2, dirty) {
    if (
      /*_native*/
      ctx2[16]
    )
      return create_if_block$o;
    return create_else_block$a;
  }
  let current_block_type = select_block_type(ctx);
  let if_block = current_block_type(ctx);
  return { c() {
    div = element("div");
    if_block.c();
    this.c = noop;
    attr(div, "data-testid", div_data_testid_value = `${/*name*/
    ctx[0]}-dropdown`);
    attr(div, "class", "dropdown");
    attr(div, "style", div_style_value = `
    --width: ${/*_width*/
    ctx[19]};
    ${calculateMargin(
      /*mt*/
      ctx[10],
      /*mr*/
      ctx[11],
      /*mb*/
      ctx[12],
      /*ml*/
      ctx[13]
    )}
  `);
    toggle_class(
      div,
      "dropdown-native",
      /*_native*/
      ctx[16]
    );
  }, m(target, anchor) {
    insert(target, div, anchor);
    if_block.m(div, null);
    ctx[45](div);
  }, p(ctx2, dirty) {
    if (current_block_type === (current_block_type = select_block_type(ctx2)) && if_block) {
      if_block.p(ctx2, dirty);
    } else {
      if_block.d(1);
      if_block = current_block_type(ctx2);
      if (if_block) {
        if_block.c();
        if_block.m(div, null);
      }
    }
    if (dirty[0] & /*name*/
    1 && div_data_testid_value !== (div_data_testid_value = `${/*name*/
    ctx2[0]}-dropdown`)) {
      attr(div, "data-testid", div_data_testid_value);
    }
    if (dirty[0] & /*_width, mt, mr, mb, ml*/
    539648 && div_style_value !== (div_style_value = `
    --width: ${/*_width*/
    ctx2[19]};
    ${calculateMargin(
      /*mt*/
      ctx2[10],
      /*mr*/
      ctx2[11],
      /*mb*/
      ctx2[12],
      /*ml*/
      ctx2[13]
    )}
  `)) {
      attr(div, "style", div_style_value);
    }
    if (dirty[0] & /*_native*/
    65536) {
      toggle_class(
        div,
        "dropdown-native",
        /*_native*/
        ctx2[16]
      );
    }
  }, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(div);
    if_block.d();
    ctx[45](null);
  } };
}
function parseValues(selectedValue) {
  let rawValue;
  try {
    rawValue = JSON.parse(selectedValue || `[""]`);
  } catch (e) {
    rawValue = [selectedValue];
  }
  const rawValues = typeof rawValue === "object" ? rawValue : [rawValue];
  return rawValues.map((val) => `${val}`);
}
function isFilterMatch(option, filter) {
  if (filter.length === 0)
    return true;
  let value = option.filter || option.label || option.value;
  value = value.toLowerCase();
  filter = filter.toLowerCase();
  return value.startsWith(filter) || value.includes(" " + filter);
}
function instance$G($$self, $$props, $$invalidate) {
  let _disabled;
  let _error;
  let _multiselect;
  let _native;
  let _filterable;
  let _activeDescendantId;
  let { name } = $$props;
  let { arialabel = "" } = $$props;
  let { arialabelledby = "" } = $$props;
  let { value = "" } = $$props;
  let { filterable = "false" } = $$props;
  let { leadingicon = null } = $$props;
  let { maxheight = "276px" } = $$props;
  let { placeholder = "" } = $$props;
  let { width = "" } = $$props;
  let { disabled = "false" } = $$props;
  let { error: error2 = "false" } = $$props;
  let { multiselect = "false" } = $$props;
  let { native = "false" } = $$props;
  let { relative = "false" } = $$props;
  let { mt = null } = $$props;
  let { mr = null } = $$props;
  let { mb: mb2 = null } = $$props;
  let { ml: ml2 = null } = $$props;
  let _options = [];
  let _isMenuVisible = false;
  let _highlightedIndex = -1;
  let _width;
  let _rootEl;
  let _menuEl;
  let _selectEl;
  let _inputEl;
  let _eventHandler;
  let _isDirty = false;
  let _filteredOptions = [];
  let _values = [];
  onMount(async () => {
    var _a, _b;
    _eventHandler = _filterable ? new ComboboxKeyUpHandler(_inputEl) : new DropdownKeyUpHandler(_inputEl);
    $$invalidate(17, _options = getOptions());
    if (!_native) {
      $$invalidate(23, _inputEl.value = (_b = (_a = _options.find((o) => o.value === value)) === null || _a === void 0 ? void 0 : _a.label) !== null && _b !== void 0 ? _b : "", _inputEl);
      $$invalidate(19, _width = width || calculateWidth(_options));
    }
    syncFilteredOptions();
    const slot = _rootEl.querySelector("slot");
    slot === null || slot === void 0 ? void 0 : slot.addEventListener("slotchange", (_) => {
      var _a2, _b2;
      $$invalidate(17, _options = getOptions());
      syncFilteredOptions();
      $$invalidate(19, _width = width || calculateWidth(_options));
      if (!_native) {
        $$invalidate(23, _inputEl.value = (_b2 = (_a2 = _options.find((o) => o.value === value)) === null || _a2 === void 0 ? void 0 : _a2.label) !== null && _b2 !== void 0 ? _b2 : "", _inputEl);
      }
    });
  });
  function setDisplayedValue() {
    var _a, _b;
    if (_inputEl) {
      const option = _options.find((o) => o.value == _values[0]);
      $$invalidate(23, _inputEl.value = (_b = (_a = option === null || option === void 0 ? void 0 : option.label) !== null && _a !== void 0 ? _a : option === null || option === void 0 ? void 0 : option.value) !== null && _b !== void 0 ? _b : "", _inputEl);
    }
  }
  function getChildren() {
    const slot = _rootEl.querySelector("slot");
    if (slot) {
      return slot.assignedElements();
    }
    const el2 = _native ? _selectEl : _rootEl;
    return [...el2.children];
  }
  function getOptions() {
    return getChildren().filter((child) => child.tagName === "GOA-DROPDOWN-ITEM").map((el2) => {
      const option = el2;
      const value2 = el2.getAttribute("value") || option.value || "";
      const label = el2.getAttribute("label") || option.label || el2.innerHTML || value2;
      const filter = el2.getAttribute("filter") || label || value2 || "";
      return { value: value2, label, filter };
    });
  }
  function calculateWidth(options) {
    const optionsWidth = options.map((option) => {
      const label = `${option.label}` || `${option.value}` || "";
      return label.length;
    }).sort((a, b) => a > b ? 1 : -1).pop();
    let maxWidth = Math.max(optionsWidth, placeholder.length) + 8;
    if (leadingicon) {
      maxWidth += 2;
    }
    return `${maxWidth}ch`;
  }
  function changeHighlightedOption(offset) {
    let index2 = _highlightedIndex + offset;
    let items = !(_filteredOptions === null || _filteredOptions === void 0 ? void 0 : _filteredOptions.length) ? _options : _filteredOptions;
    if (items.length === 0)
      return;
    if (index2 < 0) {
      index2 = _filterable ? items.length - 1 : 0;
    } else if (index2 >= items.length) {
      index2 = _filterable ? 0 : items.length - 1;
    }
    $$invalidate(14, _highlightedIndex = index2);
    scrollToOption(index2);
  }
  function scrollToOption(index2) {
    const liNode = _menuEl.querySelector(`li[data-index="${index2}"]`);
    if (!liNode)
      return;
    const liOptionRect = liNode.getBoundingClientRect();
    const ulRect = _menuEl.getBoundingClientRect();
    const isInView = liOptionRect.top >= 0 && liOptionRect.left >= 0 && liOptionRect.bottom <= ulRect.height && liOptionRect.right <= ulRect.width;
    if (isInView)
      return;
    liNode.scrollIntoView({ behavior: "smooth", block: "nearest" });
  }
  function syncFilteredOptions() {
    $$invalidate(15, _filteredOptions = _filterable ? _options.filter((option) => isFilterMatch(option, _inputEl.value)) : _options);
  }
  function showMenu() {
    if (_disabled) {
      return;
    }
    setTimeout(() => {
      syncFilteredOptions();
      $$invalidate(18, _isMenuVisible = true);
      _inputEl.focus();
    }, 0);
  }
  function hideMenu() {
    $$invalidate(18, _isMenuVisible = false);
  }
  function dispatchValue(value2) {
    const detail = _multiselect ? { name, values: [value2, ..._values] } : { name, value: value2 };
    setTimeout(() => {
      _rootEl.dispatchEvent(new CustomEvent("_change", { composed: true, detail }));
      _isDirty = false;
    }, 1);
  }
  function onSelect(option) {
    if (_disabled)
      return;
    if (!_native) {
      _isDirty = true;
      hideMenu();
      $$invalidate(23, _inputEl.value = option.label, _inputEl);
    }
    dispatchValue(option.value);
  }
  function onInputKeyUp(e) {
    if (_disabled)
      return;
    _eventHandler.handleKeyUp(e);
  }
  function onInputKeyDown(e) {
    if (_disabled)
      return;
    _eventHandler.handleKeyDown(e);
  }
  function onClearIconKeyDown(e) {
    if (e.key === "Enter" || e.key === " ") {
      e.stopPropagation();
      reset();
      showMenu();
    }
  }
  function onClearIconClick(e) {
    reset();
    showMenu();
    e.stopPropagation();
  }
  function onNativeSelect(e) {
    const target = e.currentTarget;
    const option = _options[target.selectedIndex];
    onSelect(option);
  }
  function reset() {
    if (_disabled)
      return;
    $$invalidate(25, _activeDescendantId = void 0);
    $$invalidate(14, _highlightedIndex = -1);
    $$invalidate(23, _inputEl.value = "", _inputEl);
    _isDirty = false;
    syncFilteredOptions();
    dispatchValue("");
  }
  function onChevronClick(e) {
    showMenu();
    e.stopPropagation();
  }
  class ComboboxKeyUpHandler {
    constructor(input) {
      this.input = input;
      input.addEventListener("blur", async function(e) {
        if (!_isDirty)
          return;
        if (!_filterable)
          return;
        const input2 = e.target;
        const selectedOption = _filteredOptions.find((o) => o.label === input2.value);
        if (!selectedOption) {
          dispatchValue("");
          input2.value = "";
        }
      });
    }
    onEscape(e) {
      reset();
      _inputEl.focus();
      e.preventDefault();
      e.stopPropagation();
    }
    onEnter(e) {
      const option = _filteredOptions[_highlightedIndex];
      if (option) {
        onSelect(option);
      }
      if (_inputEl.value) {
        hideMenu();
      } else {
        showMenu();
      }
      e.stopPropagation();
    }
    onArrow(e, direction) {
      if (!_isMenuVisible)
        showMenu();
      changeHighlightedOption(direction === "up" ? -1 : 1);
      e.stopPropagation();
    }
    onTab(_) {
      const matchedOption = _filteredOptions.find((option) => option.label.toLowerCase() === this.input.value.toLowerCase());
      if (matchedOption) {
        onSelect(matchedOption);
      }
      hideMenu();
    }
    onKeyUp(_) {
      showMenu();
      _isDirty = true;
    }
    handleKeyUp(e) {
      switch (e.key) {
        case "Enter":
          this.onEnter(e);
          break;
        case "ArrowUp":
          this.onArrow(e, "up");
          break;
        case "ArrowDown":
          this.onArrow(e, "down");
          break;
        case "Home":
          this.input.setSelectionRange(0, 0);
          break;
        case "End":
          this.input.setSelectionRange(this.input.value.length, this.input.value.length);
          break;
        default:
          this.onKeyUp(e);
          break;
      }
    }
    handleKeyDown(e) {
      switch (e.key) {
        case "Escape":
          this.onEscape(e);
          break;
        case "Tab":
          this.onTab(e);
          break;
      }
    }
  }
  class DropdownKeyUpHandler {
    constructor(_input) {
    }
    onEnter(e) {
      if (_isMenuVisible) {
        const option = _filteredOptions[_highlightedIndex];
        if (option) {
          onSelect(option);
        }
        hideMenu();
      } else {
        showMenu();
      }
      e.preventDefault();
      e.stopPropagation();
    }
    onArrow(e, direction) {
      if (!_isMenuVisible)
        showMenu();
      changeHighlightedOption(direction === "up" ? -1 : 1);
      e.preventDefault();
      e.stopPropagation();
    }
    handleKeyDown(e) {
      switch (e.key) {
        case " ":
        case "Enter":
          this.onEnter(e);
          break;
        case "ArrowUp":
          this.onArrow(e, "up");
          break;
        case "ArrowDown":
          this.onArrow(e, "down");
          break;
        case "Tab":
          hideMenu();
          break;
      }
      return false;
    }
    handleKeyUp(e) {
      switch (e.key) {
        case "ArrowUp":
        case "ArrowDown":
        case " ":
        case "Enter":
          e.preventDefault();
          e.stopPropagation();
      }
    }
  }
  function select_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      _selectEl = $$value;
      $$invalidate(22, _selectEl);
      $$invalidate(17, _options);
    });
  }
  function input_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      _inputEl = $$value;
      $$invalidate(23, _inputEl);
    });
  }
  const click_handler = (option) => onSelect(option);
  function ul_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      _menuEl = $$value;
      $$invalidate(21, _menuEl);
    });
  }
  function div_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      _rootEl = $$value;
      $$invalidate(20, _rootEl);
    });
  }
  $$self.$$set = ($$props2) => {
    if ("name" in $$props2)
      $$invalidate(0, name = $$props2.name);
    if ("arialabel" in $$props2)
      $$invalidate(1, arialabel = $$props2.arialabel);
    if ("arialabelledby" in $$props2)
      $$invalidate(2, arialabelledby = $$props2.arialabelledby);
    if ("value" in $$props2)
      $$invalidate(3, value = $$props2.value);
    if ("filterable" in $$props2)
      $$invalidate(37, filterable = $$props2.filterable);
    if ("leadingicon" in $$props2)
      $$invalidate(4, leadingicon = $$props2.leadingicon);
    if ("maxheight" in $$props2)
      $$invalidate(5, maxheight = $$props2.maxheight);
    if ("placeholder" in $$props2)
      $$invalidate(6, placeholder = $$props2.placeholder);
    if ("width" in $$props2)
      $$invalidate(7, width = $$props2.width);
    if ("disabled" in $$props2)
      $$invalidate(8, disabled = $$props2.disabled);
    if ("error" in $$props2)
      $$invalidate(38, error2 = $$props2.error);
    if ("multiselect" in $$props2)
      $$invalidate(39, multiselect = $$props2.multiselect);
    if ("native" in $$props2)
      $$invalidate(40, native = $$props2.native);
    if ("relative" in $$props2)
      $$invalidate(9, relative = $$props2.relative);
    if ("mt" in $$props2)
      $$invalidate(10, mt = $$props2.mt);
    if ("mr" in $$props2)
      $$invalidate(11, mr = $$props2.mr);
    if ("mb" in $$props2)
      $$invalidate(12, mb2 = $$props2.mb);
    if ("ml" in $$props2)
      $$invalidate(13, ml2 = $$props2.ml);
  };
  $$self.$$.update = () => {
    if ($$self.$$.dirty[0] & /*disabled*/
    256) {
      $$invalidate(26, _disabled = toBoolean(disabled));
    }
    if ($$self.$$.dirty[1] & /*error*/
    128) {
      $$invalidate(27, _error = toBoolean(error2));
    }
    if ($$self.$$.dirty[1] & /*multiselect*/
    256) {
      _multiselect = toBoolean(multiselect);
    }
    if ($$self.$$.dirty[1] & /*native*/
    512) {
      $$invalidate(16, _native = toBoolean(native));
    }
    if ($$self.$$.dirty[0] & /*_native*/
    65536 | $$self.$$.dirty[1] & /*filterable*/
    64) {
      $$invalidate(24, _filterable = toBoolean(filterable) && !_native);
    }
    if ($$self.$$.dirty[0] & /*_filteredOptions, _highlightedIndex*/
    49152) {
      $$invalidate(25, _activeDescendantId = _filteredOptions[_highlightedIndex] ? _filteredOptions[_highlightedIndex].value : void 0);
    }
    if ($$self.$$.dirty[0] & /*value*/
    8) {
      {
        _values = parseValues(value);
        setDisplayedValue();
      }
    }
  };
  return [name, arialabel, arialabelledby, value, leadingicon, maxheight, placeholder, width, disabled, relative, mt, mr, mb2, ml2, _highlightedIndex, _filteredOptions, _native, _options, _isMenuVisible, _width, _rootEl, _menuEl, _selectEl, _inputEl, _filterable, _activeDescendantId, _disabled, _error, showMenu, hideMenu, onSelect, onInputKeyUp, onInputKeyDown, onClearIconKeyDown, onClearIconClick, onNativeSelect, onChevronClick, filterable, error2, multiselect, native, select_binding, input_binding, click_handler, ul_binding, div_binding];
}
class Dropdown extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `:host{box-sizing:border-box;font-family:var(--goa-font-family-sans)}.dropdown{cursor:pointer;display:inline-block;width:var(--width, 100%)}.dropdown-input-group{box-sizing:border-box;outline:none;transition:box-shadow 0.1s ease-in;border:1px solid var(--goa-color-greyscale-700);border-radius:var(--goa-border-radius-m);display:inline-flex;align-items:stretch;vertical-align:middle;background-color:var(--goa-color-greyscale-white);cursor:pointer;width:100%}.dropdown-input-group:hover{border-color:var(--goa-color-interactive-hover);box-shadow:0 0 0 var(--goa-border-width-m) var(--goa-color-interactive-hover)}.dropdown-input-group:focus,.dropdown-input-group:focus-within{box-shadow:0 0 0 3px var(--goa-color-interactive-focus)}@media screen and (max-width: 623px){@media not (max-color:2147477350){.dropdown-input-group{width:var(--width)}}}@media not  screen and (max-width: 623px){@media not (color:2147477350){.dropdown-input-group{width:var(--width)}}}.dropdown-input-group.error,.dropdown-input-group.error:hover{border:2px solid var(--goa-color-interactive-error);box-shadow:0 0 0 1px var(--goa-color-interactive-error)}.dropdown-input-group.error:focus-within,.dropdown-input-group.error:focus{border:2px solid var(--goa-color-interactive-error);box-shadow:0 0 0 3px var(--goa-color-interactive-focus)}.dropdown-icon--arrow,.dropdown-icon--clear{margin-right:var(--goa-space-s)}.dropdown-icon--clear:focus:not(.disabled),.dropdown-icon--clear:active:not(.disabled){color:var(--goa-color-interactive-focus);outline:none}.dropdown-input--leading-icon{margin-left:0.75rem}.dropdown-input--leading-icon+input{padding-left:0.5rem}input{display:inline-block;color:var(--goa-color-text-default);font-size:var(--goa-font-size-4);padding:var(--goa-space-xs);padding-left:var(--goa-space-s);line-height:calc(40px - calc(var(--goa-space-xs) * 2));background-color:transparent;width:100%;flex:1 1 auto;font-family:var(--goa-font-family-sans);z-index:1}input,input:focus,input:hover,input:active{outline:none;border:none}input[aria-disabled="true"]{color:var(--goa-color-text-secondary)}.dropdown-input-group--disabled,.dropdown-input-group--disabled:hover,.dropdown-input-group--disabled:active,.dropdown-input-group--disabled:focus{background-color:var(--goa-color-greyscale-100);border-color:var(--goa-color-greyscale-200) !important;cursor:default;box-shadow:none !important}ul[role="listbox"]{border-radius:var(--goa-border-radius-m)}.dropdown-item{margin:0;padding:0.5rem;cursor:pointer;color:var(--goa-color-greyscale-black);overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.dropdown-item:hover,.dropdown-item--highlighted{background:var(--goa-color-greyscale-100);color:var(--goa-color-interactive-hover)}.dropdown-item[aria-selected="true"]{background:var(--goa-color-interactive-default);color:var(--goa-color-greyscale-white)}.dropdown-item[aria-selected="true"]:hover,.dropdown-item[aria-selected="true"].dropdown-item--highlighted{background:var(--goa-color-interactive-hover);color:var(--goa-color-greyscale-white)}.dropdown-native{position:relative;border:1px solid var(--goa-color-greyscale-700);border-radius:var(--goa-border-radius-m);background-color:var(--goa-color-greyscale-white);transition:box-shadow 0.1s ease-in}.dropdown-native:has(select:disabled){background-color:var(--goa-color-greyscale-100);border-color:var(--goa-color-greyscale-200);box-shadow:none;color:var(--goa-color-text-secondary);cursor:default}.dropdown-native:has(select.error){border:2px solid var(--goa-color-interactive-error)}.dropdown-native:hover{border-color:var(--goa-color-interactive-hover);box-shadow:0 0 0 var(--goa-border-width-m) var(--goa-color-interactive-hover)}select{border:none;font:var(--goa-font-family-sans);background-color:transparent;color:var(--goa-color-text-default);font-size:var(--goa-font-size-4);-webkit-appearance:none;-moz-appearance:none;appearance:none;padding:calc(var(--goa-space-xs) + 1px);padding-left:var(--goa-space-s);padding-right:3rem;outline:none;width:100%}.dropdown-native::after{content:"";position:absolute;right:0.6rem;top:0.6rem;pointer-events:none;width:1.5rem;height:1.5rem;background-image:url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512'><path fill='none' stroke='%23333333' stroke-linecap='round' stroke-linejoin='round' stroke-width='48' d='M112 184l144 144 144-144' /%3E%3C/svg%3E");background-repeat:none}.dropdown-native:focus-within{box-shadow:0 0 0 3px var(--goa-color-interactive-focus)}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$G, create_fragment$J, safe_not_equal, { name: 0, arialabel: 1, arialabelledby: 2, value: 3, filterable: 37, leadingicon: 4, maxheight: 5, placeholder: 6, width: 7, disabled: 8, error: 38, multiselect: 39, native: 40, relative: 9, mt: 10, mr: 11, mb: 12, ml: 13 }, null, [-1, -1, -1]);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["name", "arialabel", "arialabelledby", "value", "filterable", "leadingicon", "maxheight", "placeholder", "width", "disabled", "error", "multiselect", "native", "relative", "mt", "mr", "mb", "ml"];
  }
  get name() {
    return this.$$.ctx[0];
  }
  set name(name) {
    this.$$set({ name });
    flush();
  }
  get arialabel() {
    return this.$$.ctx[1];
  }
  set arialabel(arialabel) {
    this.$$set({ arialabel });
    flush();
  }
  get arialabelledby() {
    return this.$$.ctx[2];
  }
  set arialabelledby(arialabelledby) {
    this.$$set({ arialabelledby });
    flush();
  }
  get value() {
    return this.$$.ctx[3];
  }
  set value(value) {
    this.$$set({ value });
    flush();
  }
  get filterable() {
    return this.$$.ctx[37];
  }
  set filterable(filterable) {
    this.$$set({ filterable });
    flush();
  }
  get leadingicon() {
    return this.$$.ctx[4];
  }
  set leadingicon(leadingicon) {
    this.$$set({ leadingicon });
    flush();
  }
  get maxheight() {
    return this.$$.ctx[5];
  }
  set maxheight(maxheight) {
    this.$$set({ maxheight });
    flush();
  }
  get placeholder() {
    return this.$$.ctx[6];
  }
  set placeholder(placeholder) {
    this.$$set({ placeholder });
    flush();
  }
  get width() {
    return this.$$.ctx[7];
  }
  set width(width) {
    this.$$set({ width });
    flush();
  }
  get disabled() {
    return this.$$.ctx[8];
  }
  set disabled(disabled) {
    this.$$set({ disabled });
    flush();
  }
  get error() {
    return this.$$.ctx[38];
  }
  set error(error2) {
    this.$$set({ error: error2 });
    flush();
  }
  get multiselect() {
    return this.$$.ctx[39];
  }
  set multiselect(multiselect) {
    this.$$set({ multiselect });
    flush();
  }
  get native() {
    return this.$$.ctx[40];
  }
  set native(native) {
    this.$$set({ native });
    flush();
  }
  get relative() {
    return this.$$.ctx[9];
  }
  set relative(relative) {
    this.$$set({ relative });
    flush();
  }
  get mt() {
    return this.$$.ctx[10];
  }
  set mt(mt) {
    this.$$set({ mt });
    flush();
  }
  get mr() {
    return this.$$.ctx[11];
  }
  set mr(mr) {
    this.$$set({ mr });
    flush();
  }
  get mb() {
    return this.$$.ctx[12];
  }
  set mb(mb2) {
    this.$$set({ mb: mb2 });
    flush();
  }
  get ml() {
    return this.$$.ctx[13];
  }
  set ml(ml2) {
    this.$$set({ ml: ml2 });
    flush();
  }
}
customElements.define("goa-dropdown", Dropdown);
function create_fragment$I(ctx) {
  return { c() {
    this.c = noop;
  }, m: noop, p: noop, i: noop, o: noop, d: noop };
}
function instance$F($$self, $$props, $$invalidate) {
  let { filter = "" } = $$props;
  let { label = "" } = $$props;
  let { value = "" } = $$props;
  $$self.$$set = ($$props2) => {
    if ("filter" in $$props2)
      $$invalidate(0, filter = $$props2.filter);
    if ("label" in $$props2)
      $$invalidate(1, label = $$props2.label);
    if ("value" in $$props2)
      $$invalidate(2, value = $$props2.value);
  };
  return [filter, label, value];
}
class DropdownItem extends SvelteElement {
  constructor(options) {
    super();
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$F, create_fragment$I, safe_not_equal, { filter: 0, label: 1, value: 2 }, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["filter", "label", "value"];
  }
  get filter() {
    return this.$$.ctx[0];
  }
  set filter(filter) {
    this.$$set({ filter });
    flush();
  }
  get label() {
    return this.$$.ctx[1];
  }
  set label(label) {
    this.$$set({ label });
    flush();
  }
  get value() {
    return this.$$.ctx[2];
  }
  set value(value) {
    this.$$set({ value });
    flush();
  }
}
customElements.define("goa-dropdown-item", DropdownItem);
function create_fragment$H(ctx) {
  let div;
  return { c() {
    div = element("div");
    div.innerHTML = `<span data-tab-boundry="start" tabindex="0"></span> 
  <slot></slot> 
  
  <span data-tab-boundry="end" tabindex="0"></span>`;
    this.c = noop;
  }, m(target, anchor) {
    insert(target, div, anchor);
    ctx[1](div);
  }, p: noop, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(div);
    ctx[1](null);
  } };
}
function isFocusable(node) {
  var _a;
  const element2 = node;
  const isTabbable = element2.tabIndex > 0 || element2.tabIndex === 0 && element2.getAttribute("tabIndex") !== null;
  if (isTabbable)
    return node;
  if (element2["disabled"])
    return null;
  if (element2.tabIndex < 0 || ((_a = element2.getAttribute) === null || _a === void 0 ? void 0 : _a.call(element2, "tabindex")) === "-1")
    return null;
  switch (element2.nodeName) {
    case "A": {
      const el2 = element2;
      if (!!el2.href && el2.rel !== "ignore")
        return node;
    }
    case "INPUT": {
      const el2 = element2;
      if (el2.type !== "hidden" && el2.type !== "file")
        return node;
    }
    case "BUTTON":
    case "SELECT":
    case "TEXTAREA":
      return node;
    default:
      return null;
  }
}
function instance$E($$self, $$props, $$invalidate) {
  let rootEl;
  let boundryStartEl;
  let boundryEndEl;
  let isShiftPressed;
  onMount(async () => {
    await tick();
    rootEl.addEventListener("focus", onFocus, true);
    rootEl.addEventListener("keydown", onKeydown, true);
    rootEl.addEventListener("keyup", onKeyup, true);
    boundryStartEl = rootEl.querySelector("[data-tab-boundry=start]");
    boundryEndEl = rootEl.querySelector("[data-tab-boundry=end]");
  });
  function onKeydown(e) {
    if (e.shiftKey)
      isShiftPressed = true;
  }
  function onKeyup(e) {
    if (e.shiftKey)
      isShiftPressed = false;
  }
  function onFocus(event) {
    const el2 = event.target;
    if (el2.dataset.tabBoundry === "start") {
      if (isShiftPressed) {
        boundryEndEl.focus();
        return;
      }
      const next = findFirstNode([el2.nextElementSibling], false);
      next === null || next === void 0 ? void 0 : next.focus();
      return;
    }
    if (el2.dataset.tabBoundry === "end") {
      if (!isShiftPressed) {
        boundryStartEl.focus();
        return;
      }
      const next = findFirstNode([el2.previousElementSibling], true);
      next === null || next === void 0 ? void 0 : next.focus();
      return;
    }
  }
  function findFirstNode(nodes, reversed = false) {
    const nodeList = reversed ? [...nodes].reverse() : nodes;
    for (const node of nodeList) {
      const el2 = isFocusable(node) || findFirstNode(node.childNodes, reversed) || findFirstNodeOfSlot(node, reversed) || findFirstNodeOfShadowDOM(node, reversed);
      if (el2) {
        return el2;
      }
    }
    return null;
  }
  function findFirstNodeOfSlot(node, reversed) {
    if (!(node instanceof HTMLSlotElement))
      return null;
    return findFirstNode([...node.assignedNodes()], reversed);
  }
  function findFirstNodeOfShadowDOM(node, reversed) {
    var _a;
    if (!(node instanceof HTMLElement))
      return null;
    return findFirstNode([...((_a = node.shadowRoot) === null || _a === void 0 ? void 0 : _a.childNodes) || []], reversed);
  }
  function div_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      rootEl = $$value;
      $$invalidate(0, rootEl);
    });
  }
  return [rootEl, div_binding];
}
class FocusTrap extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `div{display:inline}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$E, create_fragment$H, safe_not_equal, {}, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
    }
  }
}
customElements.define("goa-focus-trap", FocusTrap);
function create_if_block$n(ctx) {
  let goa_divider;
  return { c() {
    goa_divider = element("goa-divider");
    set_custom_element_data(goa_divider, "spacing", "small");
  }, m(target, anchor) {
    insert(target, goa_divider, anchor);
  }, d(detaching) {
    if (detaching)
      detach(goa_divider);
  } };
}
function create_fragment$G(ctx) {
  let div5;
  let div4;
  let div0;
  let t0;
  let t1;
  let div3;
  let div1;
  let t2;
  let div2;
  let a0;
  let t3;
  let a1;
  let div5_style_value;
  let if_block = (
    /*navLinks*/
    ctx[2] && /*navLinks*/
    ctx[2].length > 0 && create_if_block$n()
  );
  return { c() {
    div5 = element("div");
    div4 = element("div");
    div0 = element("div");
    div0.innerHTML = `<slot name="nav"></slot>`;
    t0 = space();
    if (if_block)
      if_block.c();
    t1 = space();
    div3 = element("div");
    div1 = element("div");
    div1.innerHTML = `<slot name="meta"></slot>`;
    t2 = space();
    div2 = element("div");
    a0 = element("a");
    a0.innerHTML = `<img alt="GoA Logo" class="logo" src="data:image/svg+xml,%3Csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; xmlns:xlink=&#39;http://www.w3.org/1999/xlink&#39; width=&#39;149.351&#39; height=&#39;42&#39; viewBox=&#39;0 0 149.351 42&#39;%3E%3Cdefs%3E%3Cstyle%3E.a%7Bfill:none;%7D.b%7Bclip-path:url(%23a);%7D.c%7Bfill:%2300aad2;%7D.d%7Bfill:%235f6a72;%7D%3C/style%3E%3CclipPath id=&#39;a&#39;%3E%3Crect class=&#39;a&#39; width=&#39;149.351&#39; height=&#39;42&#39;/%3E%3C/clipPath%3E%3C/defs%3E%3Cg class=&#39;b&#39;%3E%3Crect class=&#39;c&#39; width=&#39;13.555&#39; height=&#39;13.555&#39; transform=&#39;translate(135.796 21.524)&#39;/%3E%3Cpath class=&#39;d&#39; d=&#39;M63.082,33.088c-1.383.138-2.835.277-4.357.346.553-4.357,2.835-10.373,5.671-9.405,1.66.553.761,5.671-1.314,9.059m-3.527,2.974a3.761,3.761,0,0,1-1.245,0,.851.851,0,0,0,.346-.692v-.553c.761,0,1.936-.138,3.389-.277a4.327,4.327,0,0,1-2.49,1.521M76.844,25.688c1.8-1.66,2.7-1.521,2.9-1.106.484.968-1.591,4.357-5.671,6.224a10.328,10.328,0,0,1,2.766-5.118m66.736,1.66c-.207-3.389-3.181-3.942-3.6-2.974-.138.346,1.106.207,1.106,2.628,0,3.942-4.011,9.129-9.129,9.129-5.532,0-6.985-4.357-7.261-6.432-.207-1.452.138-3.458-2.351-3.181-1.729.207-3.25,3.527-5.463,6.362-1.867,2.42-2.7,2.213-2.282.138.553-2.628,2.7-8.714,5.187-9.129,1.176-.207,1.591,1.8,2.075.553s.069-4.011-2.559-4.011c-1.8,0-3.942,1.936-5.74,4.08-1.521,1.936-9.336,13.416-12.656,10.927-1.521-1.176-1.383-5.878-.415-11.411,3.873-1.521,7.123-1.037,8.921-.138.9.415,1.037.346.622-.622-.553-1.452-3.665-3.734-8.575-2.7-.138,0-.207.069-.346.069.415-1.8.83-3.665,1.383-5.463.484-1.66,1.8-4.5-1.729-4.979-1.106-.207-.622.346-1.037,1.867-.692,2.766-1.521,6.362-2.144,10.028a19.745,19.745,0,0,0-7.538,8.091,38.59,38.59,0,0,0,.9-4.772,1.589,1.589,0,0,0-1.245-1.729c-.761-.207-1.729.138-2.628,1.452-2.144,3.043-4.841,7.815-8.99,9.82-2.974,1.452-4.288,0-4.357-2.282a9.869,9.869,0,0,0,1.521-.553c5.394-2.351,7.192-5.947,5.878-8.16-1.314-2.075-4.979-1.452-7.953,1.66a11.175,11.175,0,0,0-2.7,6.5c-1.245.277-2.628.484-4.219.692,2.49-4.08,2.282-9.613-1.383-10.581-4.288-1.106-6.432,3.043-7.331,6.5.346-3.873.9-7.745,1.591-11.549.346-1.66,1.452-4.5-2.075-4.979-1.106-.207-.968.346-.9,1.867.138,2.075-2.144,14.454-.968,19.848-1.521.484-2.144,1.66-.207,2.835,1.383.83,4.357,1.106,7.331-.346a9.3,9.3,0,0,0,2.766-2.144c1.8-.207,3.665-.553,5.394-.83.277,2.42,1.867,4.219,5.463,3.873,5.118-.484,9.682-6.777,11.411-9.82-.346,3.25-2.42,10.373,1.176,10.028,1.383-.138.83-.346.9-1.591.346-4.288,3.873-7.953,7.4-10.166-.622,5.256-.415,9.958,2.006,11.411,4.426,2.766,10.581-4.5,14.039-8.921-1.729,3.942-2.7,8.921-.138,9.682,3.043.9,5.463-4.219,8.3-8.091.346,2.766,2.213,7.607,9.682,7.607,8.022-.069,13.071-4.91,12.863-10.1m-108.3,8.645A66.439,66.439,0,0,1,27.4,32.534a59.168,59.168,0,0,0,6.777-2.974,54.453,54.453,0,0,0,1.106,6.432m20.4,3.873c-.069-.207-.622.069-1.106,0-1.452-.207-3.389-2.213-3.942-5.463-1.037-5.878-.415-11.687,1.314-20.332.346-1.66,1.452-4.5-2.075-5.048-1.106-.138-.553.415-.83,1.867C47.66,17.32,42.4,21.954,37.149,25.066,36.6,17.735,36.8,9.505,38.186,4.526c1.176-4.219,2.559-3.458.83-4.357s-3.734.277-5.325,3.458S24.839,23.89,13.221,35.439C7.273,41.317,1.879,38.274.842,37.375c-.9-.761-1.176.415-.138,1.591,4.772,5.256,11.826,2.282,14.384-.277,7.054-7.054,15.283-22.268,18.6-28.7a98.251,98.251,0,0,0,.277,16.874,50.129,50.129,0,0,1-8.3,3.181c-1.66.415-2.7,1.106-2.7,1.867s1.106,1.521,2.7,2.282c2.835,1.383,11.2,5.256,13.209,6.5,1.729,1.037,2.628.207,3.112-.9.692-1.452-1.176-2.282-2.974-2.766a60.545,60.545,0,0,1-1.66-9.267c4.219-2.628,8.437-6.086,10.788-10.443C47.522,20.916,46,33.3,49.873,38.482a5.451,5.451,0,0,0,4.564,2.213c.968-.069,1.383-.692,1.245-.83&#39; transform=&#39;translate(-0.038 0.124)&#39;/%3E%3C/g%3E%3C/svg%3E"/>`;
    t3 = space();
    a1 = element("a");
    a1.textContent = `© ${/*year*/
    ctx[4]} Government of Alberta`;
    this.c = noop;
    attr(div0, "class", "nav-links");
    attr(div1, "class", "meta-links");
    attr(a0, "href", "https://alberta.ca");
    attr(a1, "href", "https://alberta.ca");
    attr(a1, "class", "goa-copyright");
    attr(div2, "class", "abgov");
    toggle_class(
      div2,
      "with-meta-links",
      /*metaLinks*/
      ctx[3] && /*metaLinks*/
      ctx[3].length > 0
    );
    attr(div3, "class", "meta-section");
    toggle_class(
      div3,
      "with-meta-links",
      /*metaLinks*/
      ctx[3] && /*metaLinks*/
      ctx[3].length > 0
    );
    attr(div4, "class", "content");
    attr(div5, "class", "app-footer");
    attr(div5, "style", div5_style_value = `--max-content-width: ${/*maxcontentwidth*/
    ctx[0] || "100%"}`);
  }, m(target, anchor) {
    insert(target, div5, anchor);
    append(div5, div4);
    append(div4, div0);
    append(div4, t0);
    if (if_block)
      if_block.m(div4, null);
    append(div4, t1);
    append(div4, div3);
    append(div3, div1);
    append(div3, t2);
    append(div3, div2);
    append(div2, a0);
    append(div2, t3);
    append(div2, a1);
    ctx[5](div5);
  }, p(ctx2, [dirty]) {
    if (
      /*navLinks*/
      ctx2[2] && /*navLinks*/
      ctx2[2].length > 0
    ) {
      if (if_block)
        ;
      else {
        if_block = create_if_block$n();
        if_block.c();
        if_block.m(div4, t1);
      }
    } else if (if_block) {
      if_block.d(1);
      if_block = null;
    }
    if (dirty & /*metaLinks*/
    8) {
      toggle_class(
        div2,
        "with-meta-links",
        /*metaLinks*/
        ctx2[3] && /*metaLinks*/
        ctx2[3].length > 0
      );
    }
    if (dirty & /*metaLinks*/
    8) {
      toggle_class(
        div3,
        "with-meta-links",
        /*metaLinks*/
        ctx2[3] && /*metaLinks*/
        ctx2[3].length > 0
      );
    }
    if (dirty & /*maxcontentwidth*/
    1 && div5_style_value !== (div5_style_value = `--max-content-width: ${/*maxcontentwidth*/
    ctx2[0] || "100%"}`)) {
      attr(div5, "style", div5_style_value);
    }
  }, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(div5);
    if (if_block)
      if_block.d();
    ctx[5](null);
  } };
}
function instance$D($$self, $$props, $$invalidate) {
  let { maxcontentwidth = "" } = $$props;
  let rootEl;
  let navLinks;
  let metaLinks;
  const year = (/* @__PURE__ */ new Date()).getFullYear();
  onMount(async () => {
    await tick();
    const navSlot = rootEl.querySelector("slot[name=nav]");
    const metaSlot = rootEl.querySelector("slot[name=meta]");
    $$invalidate(2, navLinks = navSlot.assignedElements());
    $$invalidate(3, metaLinks = metaSlot.assignedElements());
  });
  function div5_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      rootEl = $$value;
      $$invalidate(1, rootEl);
    });
  }
  $$self.$$set = ($$props2) => {
    if ("maxcontentwidth" in $$props2)
      $$invalidate(0, maxcontentwidth = $$props2.maxcontentwidth);
  };
  return [maxcontentwidth, rootEl, navLinks, metaLinks, year, div5_binding];
}
class Footer extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `*{box-sizing:border-box}.app-footer{background-color:var(--goa-color-greyscale-100);border-top:2px solid var(--goa-color-greyscale-200);border-bottom:1rem solid var(--goa-color-brand-default)}.content{margin:0 auto;width:min(var(--max-content-width), 100%)}@media screen and (max-width: 623px){.content{padding:2rem 1rem}}@media screen and (min-width: 624px) and (max-width: 1023px){.content{padding:2rem 2rem}}@media screen and (min-width: 1024px){.content{padding:2rem 4.5rem}}.meta-section{display:flex;flex-direction:column;padding:1rem 0}.meta-section.with-meta-links{gap:2rem;justify-content:space-between}.meta-links{display:none}.with-meta-links .meta-links{display:block}.nav-links{display:flex;flex-direction:column;gap:2rem}.abgov{display:flex;flex-direction:column;justify-content:space-between;width:100%}@media screen and (max-width: 623px){@media not (max-color:2147477350){.meta-section{flex-direction:row;gap:2rem}.nav-links{flex-direction:row}.abgov{align-items:center;flex-direction:row-reverse}}}@media not  screen and (max-width: 623px){@media not (color:2147477350){.meta-section{flex-direction:row;gap:2rem}.nav-links{flex-direction:row}.abgov{align-items:center;flex-direction:row-reverse}}}.abgov.with-meta-links{gap:1rem;flex-direction:column;width:unset}@media screen and (max-width: 623px){@media not (max-color:2147477350){.abgov.with-meta-links{align-items:flex-end}}}@media not  screen and (max-width: 623px){@media not (color:2147477350){.abgov.with-meta-links{align-items:flex-end}}}.goa-copyright{white-space:nowrap}a{color:var(--goa-color-text-secondary)}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$D, create_fragment$G, safe_not_equal, { maxcontentwidth: 0 }, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["maxcontentwidth"];
  }
  get maxcontentwidth() {
    return this.$$.ctx[0];
  }
  set maxcontentwidth(maxcontentwidth) {
    this.$$set({ maxcontentwidth });
    flush();
  }
}
customElements.define("goa-app-footer", Footer);
function get_each_context$7(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[3] = list[i];
  return child_ctx;
}
function create_each_block$7(ctx) {
  let li2;
  let a;
  let t_value = (
    /*child*/
    ctx[3].innerHTML + ""
  );
  let t2;
  let a_href_value;
  return { c() {
    li2 = element("li");
    a = element("a");
    t2 = text(t_value);
    attr(a, "href", a_href_value = /*child*/
    ctx[3].href);
  }, m(target, anchor) {
    insert(target, li2, anchor);
    append(li2, a);
    append(a, t2);
  }, p(ctx2, dirty) {
    if (dirty & /*children*/
    2 && t_value !== (t_value = /*child*/
    ctx2[3].innerHTML + ""))
      set_data(t2, t_value);
    if (dirty & /*children*/
    2 && a_href_value !== (a_href_value = /*child*/
    ctx2[3].href)) {
      attr(a, "href", a_href_value);
    }
  }, d(detaching) {
    if (detaching)
      detach(li2);
  } };
}
function create_fragment$F(ctx) {
  let section;
  let div;
  let t2;
  let ul2;
  let each_value = (
    /*children*/
    ctx[1]
  );
  let each_blocks = [];
  for (let i = 0; i < each_value.length; i += 1) {
    each_blocks[i] = create_each_block$7(get_each_context$7(ctx, each_value, i));
  }
  return { c() {
    section = element("section");
    div = element("div");
    div.innerHTML = `<slot></slot>`;
    t2 = space();
    ul2 = element("ul");
    for (let i = 0; i < each_blocks.length; i += 1) {
      each_blocks[i].c();
    }
    this.c = noop;
    attr(div, "class", "hidden");
  }, m(target, anchor) {
    insert(target, section, anchor);
    append(section, div);
    append(section, t2);
    append(section, ul2);
    for (let i = 0; i < each_blocks.length; i += 1) {
      if (each_blocks[i]) {
        each_blocks[i].m(ul2, null);
      }
    }
    ctx[2](section);
  }, p(ctx2, [dirty]) {
    if (dirty & /*children*/
    2) {
      each_value = /*children*/
      ctx2[1];
      let i;
      for (i = 0; i < each_value.length; i += 1) {
        const child_ctx = get_each_context$7(ctx2, each_value, i);
        if (each_blocks[i]) {
          each_blocks[i].p(child_ctx, dirty);
        } else {
          each_blocks[i] = create_each_block$7(child_ctx);
          each_blocks[i].c();
          each_blocks[i].m(ul2, null);
        }
      }
      for (; i < each_blocks.length; i += 1) {
        each_blocks[i].d(1);
      }
      each_blocks.length = each_value.length;
    }
  }, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(section);
    destroy_each(each_blocks, detaching);
    ctx[2](null);
  } };
}
function instance$C($$self, $$props, $$invalidate) {
  let rootEl;
  let children2 = [];
  onMount(async () => {
    await tick();
    $$invalidate(1, children2 = rootEl.querySelector("slot").assignedElements());
    const isValid2 = children2.map((child) => child.hasAttribute("href")).reduce((sum, valid) => {
      return sum && valid;
    }, true);
    if (!isValid2) {
      $$invalidate(1, children2 = []);
      console.warn("GoAFooterMetaSection children must be anchor elements.");
      return;
    }
  });
  function section_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      rootEl = $$value;
      $$invalidate(0, rootEl);
    });
  }
  return [rootEl, children2, section_binding];
}
class FooterMetaSection extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `.hidden{display:none}ul{display:flex;flex-wrap:wrap;gap:1rem;padding-left:0}li{list-style-type:none}a{color:var(--goa-color-text-default);white-space:nowrap}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$C, create_fragment$F, safe_not_equal, {}, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
    }
  }
}
customElements.define("goa-app-footer-meta-section", FooterMetaSection);
function get_each_context$6(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[5] = list[i];
  return child_ctx;
}
function create_if_block$m(ctx) {
  let div;
  let t0;
  let t1;
  let goa_divider;
  return { c() {
    div = element("div");
    t0 = text(
      /*heading*/
      ctx[0]
    );
    t1 = space();
    goa_divider = element("goa-divider");
    attr(div, "class", "title");
    set_custom_element_data(goa_divider, "spacing", "small");
  }, m(target, anchor) {
    insert(target, div, anchor);
    append(div, t0);
    insert(target, t1, anchor);
    insert(target, goa_divider, anchor);
  }, p(ctx2, dirty) {
    if (dirty & /*heading*/
    1)
      set_data(
        t0,
        /*heading*/
        ctx2[0]
      );
  }, d(detaching) {
    if (detaching)
      detach(div);
    if (detaching)
      detach(t1);
    if (detaching)
      detach(goa_divider);
  } };
}
function create_each_block$6(ctx) {
  let li2;
  let a;
  let t_value = (
    /*child*/
    ctx[5].innerHTML + ""
  );
  let t2;
  let a_href_value;
  return { c() {
    li2 = element("li");
    a = element("a");
    t2 = text(t_value);
    attr(a, "href", a_href_value = /*child*/
    ctx[5].href);
  }, m(target, anchor) {
    insert(target, li2, anchor);
    append(li2, a);
    append(a, t2);
  }, p(ctx2, dirty) {
    if (dirty & /*children*/
    8 && t_value !== (t_value = /*child*/
    ctx2[5].innerHTML + ""))
      set_data(t2, t_value);
    if (dirty & /*children*/
    8 && a_href_value !== (a_href_value = /*child*/
    ctx2[5].href)) {
      attr(a, "href", a_href_value);
    }
  }, d(detaching) {
    if (detaching)
      detach(li2);
  } };
}
function create_fragment$E(ctx) {
  let section;
  let t0;
  let div;
  let t1;
  let ul2;
  let ul_style_value;
  let if_block = (
    /*heading*/
    ctx[0] && create_if_block$m(ctx)
  );
  let each_value = (
    /*children*/
    ctx[3]
  );
  let each_blocks = [];
  for (let i = 0; i < each_value.length; i += 1) {
    each_blocks[i] = create_each_block$6(get_each_context$6(ctx, each_value, i));
  }
  return { c() {
    section = element("section");
    if (if_block)
      if_block.c();
    t0 = space();
    div = element("div");
    div.innerHTML = `<slot></slot>`;
    t1 = space();
    ul2 = element("ul");
    for (let i = 0; i < each_blocks.length; i += 1) {
      each_blocks[i].c();
    }
    this.c = noop;
    attr(div, "class", "hidden");
    attr(ul2, "class", "links");
    attr(ul2, "style", ul_style_value = `
      --narrow-display-type: ${Math.ceil(
      /*maxcolumncount*/
      ctx[1] / 2
    ) > 1 ? "block" : "flex"};
      --narrow-column-count: ${Math.ceil(
      /*maxcolumncount*/
      ctx[1] / 2
    )};
      --wide-display-type: ${/*maxcolumncount*/
    ctx[1] > 1 ? "block" : "flex"};
      --wide-column-count: ${/*maxcolumncount*/
    ctx[1]};
    `);
  }, m(target, anchor) {
    insert(target, section, anchor);
    if (if_block)
      if_block.m(section, null);
    append(section, t0);
    append(section, div);
    append(section, t1);
    append(section, ul2);
    for (let i = 0; i < each_blocks.length; i += 1) {
      if (each_blocks[i]) {
        each_blocks[i].m(ul2, null);
      }
    }
    ctx[4](section);
  }, p(ctx2, [dirty]) {
    if (
      /*heading*/
      ctx2[0]
    ) {
      if (if_block) {
        if_block.p(ctx2, dirty);
      } else {
        if_block = create_if_block$m(ctx2);
        if_block.c();
        if_block.m(section, t0);
      }
    } else if (if_block) {
      if_block.d(1);
      if_block = null;
    }
    if (dirty & /*children*/
    8) {
      each_value = /*children*/
      ctx2[3];
      let i;
      for (i = 0; i < each_value.length; i += 1) {
        const child_ctx = get_each_context$6(ctx2, each_value, i);
        if (each_blocks[i]) {
          each_blocks[i].p(child_ctx, dirty);
        } else {
          each_blocks[i] = create_each_block$6(child_ctx);
          each_blocks[i].c();
          each_blocks[i].m(ul2, null);
        }
      }
      for (; i < each_blocks.length; i += 1) {
        each_blocks[i].d(1);
      }
      each_blocks.length = each_value.length;
    }
    if (dirty & /*maxcolumncount*/
    2 && ul_style_value !== (ul_style_value = `
      --narrow-display-type: ${Math.ceil(
      /*maxcolumncount*/
      ctx2[1] / 2
    ) > 1 ? "block" : "flex"};
      --narrow-column-count: ${Math.ceil(
      /*maxcolumncount*/
      ctx2[1] / 2
    )};
      --wide-display-type: ${/*maxcolumncount*/
    ctx2[1] > 1 ? "block" : "flex"};
      --wide-column-count: ${/*maxcolumncount*/
    ctx2[1]};
    `)) {
      attr(ul2, "style", ul_style_value);
    }
  }, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(section);
    if (if_block)
      if_block.d();
    destroy_each(each_blocks, detaching);
    ctx[4](null);
  } };
}
function instance$B($$self, $$props, $$invalidate) {
  let { heading = "" } = $$props;
  let { maxcolumncount = 1 } = $$props;
  let rootEl;
  let children2 = [];
  onMount(async () => {
    await tick();
    $$invalidate(3, children2 = rootEl.querySelector("slot").assignedElements());
    const isValid2 = children2.map((child) => child.hasAttribute("href")).reduce((sum, valid) => {
      return sum && valid;
    }, true);
    if (!isValid2) {
      $$invalidate(3, children2 = []);
      console.warn("GoAFooterNavSection children must be anchor elements.");
      return;
    }
    injectCss(rootEl, ":host", { "flex-grow": maxcolumncount });
  });
  function section_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      rootEl = $$value;
      $$invalidate(2, rootEl);
    });
  }
  $$self.$$set = ($$props2) => {
    if ("heading" in $$props2)
      $$invalidate(0, heading = $$props2.heading);
    if ("maxcolumncount" in $$props2)
      $$invalidate(1, maxcolumncount = $$props2.maxcolumncount);
  };
  return [heading, maxcolumncount, rootEl, children2, section_binding];
}
class FooterNavSection extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `:host{flex:auto}.title{font-size:var(--goa-font-size-7);line-height:var(--goa-line-height-4);padding-bottom:var(--goa-space-l)}.hidden{display:none}.links{display:block;list-style-type:none;padding-left:0}@media screen and (max-width: 623px){@media not (max-color:2147477350){.links{list-style-type:none;padding-left:0;flex-direction:column}}}@media not  screen and (max-width: 623px){@media not (color:2147477350){.links{list-style-type:none;padding-left:0;flex-direction:column}}}@media screen and (min-width: 624px) and (max-width: 1023px){.links{display:var(--narrow-display-type);-moz-column-count:var(--narrow-column-count);column-count:var(--narrow-column-count)}}@media screen and (min-width: 1024px){.links{display:var(--wide-display-type);-moz-column-count:var(--wide-column-count);column-count:var(--wide-column-count)}}li{padding:0.75rem 0}a{color:var(--goa-color-text-default)}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$B, create_fragment$E, safe_not_equal, { heading: 0, maxcolumncount: 1 }, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["heading", "maxcolumncount"];
  }
  get heading() {
    return this.$$.ctx[0];
  }
  set heading(heading) {
    this.$$set({ heading });
    flush();
  }
  get maxcolumncount() {
    return this.$$.ctx[1];
  }
  set maxcolumncount(maxcolumncount) {
    this.$$set({ maxcolumncount });
    flush();
  }
}
customElements.define("goa-app-footer-nav-section", FooterNavSection);
function create_if_block_2$9(ctx) {
  let div;
  let t0;
  let t1;
  let show_if = (
    /*requirement*/
    ctx[9] && /*REQUIREMENT_TYPES*/
    ctx[11].includes(
      /*requirement*/
      ctx[9]
    )
  );
  let div_class_value;
  let if_block = show_if && create_if_block_3$9(ctx);
  return { c() {
    div = element("div");
    t0 = text(
      /*label*/
      ctx[5]
    );
    t1 = space();
    if (if_block)
      if_block.c();
    attr(div, "class", div_class_value = `label ${/*labelsize*/
    ctx[6]}`);
    attr(
      div,
      "id",
      /*id*/
      ctx[10]
    );
  }, m(target, anchor) {
    insert(target, div, anchor);
    append(div, t0);
    append(div, t1);
    if (if_block)
      if_block.m(div, null);
  }, p(ctx2, dirty) {
    if (dirty & /*label*/
    32)
      set_data(
        t0,
        /*label*/
        ctx2[5]
      );
    if (dirty & /*requirement*/
    512)
      show_if = /*requirement*/
      ctx2[9] && /*REQUIREMENT_TYPES*/
      ctx2[11].includes(
        /*requirement*/
        ctx2[9]
      );
    if (show_if) {
      if (if_block) {
        if_block.p(ctx2, dirty);
      } else {
        if_block = create_if_block_3$9(ctx2);
        if_block.c();
        if_block.m(div, null);
      }
    } else if (if_block) {
      if_block.d(1);
      if_block = null;
    }
    if (dirty & /*labelsize*/
    64 && div_class_value !== (div_class_value = `label ${/*labelsize*/
    ctx2[6]}`)) {
      attr(div, "class", div_class_value);
    }
    if (dirty & /*id*/
    1024) {
      attr(
        div,
        "id",
        /*id*/
        ctx2[10]
      );
    }
  }, d(detaching) {
    if (detaching)
      detach(div);
    if (if_block)
      if_block.d();
  } };
}
function create_if_block_3$9(ctx) {
  let em;
  let t0;
  let t1;
  let t2;
  return { c() {
    em = element("em");
    t0 = text("(");
    t1 = text(
      /*requirement*/
      ctx[9]
    );
    t2 = text(")");
  }, m(target, anchor) {
    insert(target, em, anchor);
    append(em, t0);
    append(em, t1);
    append(em, t2);
  }, p(ctx2, dirty) {
    if (dirty & /*requirement*/
    512)
      set_data(
        t1,
        /*requirement*/
        ctx2[9]
      );
  }, d(detaching) {
    if (detaching)
      detach(em);
  } };
}
function create_if_block_1$b(ctx) {
  let div;
  let goa_icon;
  let t0;
  let t1;
  return { c() {
    div = element("div");
    goa_icon = element("goa-icon");
    t0 = space();
    t1 = text(
      /*error*/
      ctx[8]
    );
    set_custom_element_data(goa_icon, "type", "warning");
    set_custom_element_data(goa_icon, "size", "small");
    set_custom_element_data(goa_icon, "theme", "filled");
    set_style(goa_icon, "pointer-events", "none");
    attr(div, "class", "error-msg");
  }, m(target, anchor) {
    insert(target, div, anchor);
    append(div, goa_icon);
    append(div, t0);
    append(div, t1);
  }, p(ctx2, dirty) {
    if (dirty & /*error*/
    256)
      set_data(
        t1,
        /*error*/
        ctx2[8]
      );
  }, d(detaching) {
    if (detaching)
      detach(div);
  } };
}
function create_if_block$l(ctx) {
  let div;
  let t2;
  return { c() {
    div = element("div");
    t2 = text(
      /*helptext*/
      ctx[7]
    );
    attr(div, "class", "help-msg");
  }, m(target, anchor) {
    insert(target, div, anchor);
    append(div, t2);
  }, p(ctx2, dirty) {
    if (dirty & /*helptext*/
    128)
      set_data(
        t2,
        /*helptext*/
        ctx2[7]
      );
  }, d(detaching) {
    if (detaching)
      detach(div);
  } };
}
function create_fragment$D(ctx) {
  let div1;
  let t0;
  let div0;
  let t1;
  let t2;
  let div1_style_value;
  let if_block0 = (
    /*label*/
    ctx[5] && create_if_block_2$9(ctx)
  );
  let if_block1 = (
    /*error*/
    ctx[8] && create_if_block_1$b(ctx)
  );
  let if_block2 = (
    /*helptext*/
    ctx[7] && create_if_block$l(ctx)
  );
  return { c() {
    div1 = element("div");
    if (if_block0)
      if_block0.c();
    t0 = space();
    div0 = element("div");
    div0.innerHTML = `<slot></slot>`;
    t1 = space();
    if (if_block1)
      if_block1.c();
    t2 = space();
    if (if_block2)
      if_block2.c();
    this.c = noop;
    attr(div0, "class", "form-item-input");
    attr(
      div1,
      "data-testid",
      /*testid*/
      ctx[0]
    );
    attr(div1, "style", div1_style_value = calculateMargin(
      /*mt*/
      ctx[1],
      /*mr*/
      ctx[2],
      /*mb*/
      ctx[3],
      /*ml*/
      ctx[4]
    ));
  }, m(target, anchor) {
    insert(target, div1, anchor);
    if (if_block0)
      if_block0.m(div1, null);
    append(div1, t0);
    append(div1, div0);
    append(div1, t1);
    if (if_block1)
      if_block1.m(div1, null);
    append(div1, t2);
    if (if_block2)
      if_block2.m(div1, null);
  }, p(ctx2, [dirty]) {
    if (
      /*label*/
      ctx2[5]
    ) {
      if (if_block0) {
        if_block0.p(ctx2, dirty);
      } else {
        if_block0 = create_if_block_2$9(ctx2);
        if_block0.c();
        if_block0.m(div1, t0);
      }
    } else if (if_block0) {
      if_block0.d(1);
      if_block0 = null;
    }
    if (
      /*error*/
      ctx2[8]
    ) {
      if (if_block1) {
        if_block1.p(ctx2, dirty);
      } else {
        if_block1 = create_if_block_1$b(ctx2);
        if_block1.c();
        if_block1.m(div1, t2);
      }
    } else if (if_block1) {
      if_block1.d(1);
      if_block1 = null;
    }
    if (
      /*helptext*/
      ctx2[7]
    ) {
      if (if_block2) {
        if_block2.p(ctx2, dirty);
      } else {
        if_block2 = create_if_block$l(ctx2);
        if_block2.c();
        if_block2.m(div1, null);
      }
    } else if (if_block2) {
      if_block2.d(1);
      if_block2 = null;
    }
    if (dirty & /*testid*/
    1) {
      attr(
        div1,
        "data-testid",
        /*testid*/
        ctx2[0]
      );
    }
    if (dirty & /*mt, mr, mb, ml*/
    30 && div1_style_value !== (div1_style_value = calculateMargin(
      /*mt*/
      ctx2[1],
      /*mr*/
      ctx2[2],
      /*mb*/
      ctx2[3],
      /*ml*/
      ctx2[4]
    ))) {
      attr(div1, "style", div1_style_value);
    }
  }, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(div1);
    if (if_block0)
      if_block0.d();
    if (if_block1)
      if_block1.d();
    if (if_block2)
      if_block2.d();
  } };
}
function instance$A($$self, $$props, $$invalidate) {
  const [REQUIREMENT_TYPES, validateRequirementType] = typeValidator("Requirement type", ["optional", "required"], false);
  let { testid = "" } = $$props;
  let { mt = null } = $$props;
  let { mr = null } = $$props;
  let { mb: mb2 = null } = $$props;
  let { ml: ml2 = null } = $$props;
  let { label = "" } = $$props;
  let { labelsize = "regular" } = $$props;
  let { helptext = "" } = $$props;
  let { error: error2 = "" } = $$props;
  let { requirement = "" } = $$props;
  let { id: id2 = "" } = $$props;
  onMount(() => {
    validateRequirementType(requirement);
  });
  $$self.$$set = ($$props2) => {
    if ("testid" in $$props2)
      $$invalidate(0, testid = $$props2.testid);
    if ("mt" in $$props2)
      $$invalidate(1, mt = $$props2.mt);
    if ("mr" in $$props2)
      $$invalidate(2, mr = $$props2.mr);
    if ("mb" in $$props2)
      $$invalidate(3, mb2 = $$props2.mb);
    if ("ml" in $$props2)
      $$invalidate(4, ml2 = $$props2.ml);
    if ("label" in $$props2)
      $$invalidate(5, label = $$props2.label);
    if ("labelsize" in $$props2)
      $$invalidate(6, labelsize = $$props2.labelsize);
    if ("helptext" in $$props2)
      $$invalidate(7, helptext = $$props2.helptext);
    if ("error" in $$props2)
      $$invalidate(8, error2 = $$props2.error);
    if ("requirement" in $$props2)
      $$invalidate(9, requirement = $$props2.requirement);
    if ("id" in $$props2)
      $$invalidate(10, id2 = $$props2.id);
  };
  return [testid, mt, mr, mb2, ml2, label, labelsize, helptext, error2, requirement, id2, REQUIREMENT_TYPES];
}
class FormItem extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `:host{box-sizing:border-box;font-family:var(--goa-font-family-sans)}*{box-sizing:border-box}.label{display:block;font-weight:var(--goa-font-weight-bold);color:var(--goa-color-text-default);font-size:var(--goa-font-size-4);padding-bottom:0.5rem}.label.large{font:var(--goa-typography-heading-l)}.label em{color:var(--goa-color-greyscale-700);font-weight:var(--goa-font-weight-regular);font-size:var(--goa-font-size-2);line-height:var(--goa-line-height-1);font-style:normal}.form-item-input{margin-bottom:0.25rem}.help-msg{font-size:var(--goa-font-size-2);color:var(--goa-color-text-default);margin-right:56px}.error-msg{display:inline-flex;gap:0.25rem;font-size:var(--goa-font-size-2);color:var(--goa-color-interactive-error);margin-bottom:0.25rem}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$A, create_fragment$D, safe_not_equal, { testid: 0, mt: 1, mr: 2, mb: 3, ml: 4, label: 5, labelsize: 6, helptext: 7, error: 8, requirement: 9, id: 10 }, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["testid", "mt", "mr", "mb", "ml", "label", "labelsize", "helptext", "error", "requirement", "id"];
  }
  get testid() {
    return this.$$.ctx[0];
  }
  set testid(testid) {
    this.$$set({ testid });
    flush();
  }
  get mt() {
    return this.$$.ctx[1];
  }
  set mt(mt) {
    this.$$set({ mt });
    flush();
  }
  get mr() {
    return this.$$.ctx[2];
  }
  set mr(mr) {
    this.$$set({ mr });
    flush();
  }
  get mb() {
    return this.$$.ctx[3];
  }
  set mb(mb2) {
    this.$$set({ mb: mb2 });
    flush();
  }
  get ml() {
    return this.$$.ctx[4];
  }
  set ml(ml2) {
    this.$$set({ ml: ml2 });
    flush();
  }
  get label() {
    return this.$$.ctx[5];
  }
  set label(label) {
    this.$$set({ label });
    flush();
  }
  get labelsize() {
    return this.$$.ctx[6];
  }
  set labelsize(labelsize) {
    this.$$set({ labelsize });
    flush();
  }
  get helptext() {
    return this.$$.ctx[7];
  }
  set helptext(helptext) {
    this.$$set({ helptext });
    flush();
  }
  get error() {
    return this.$$.ctx[8];
  }
  set error(error2) {
    this.$$set({ error: error2 });
    flush();
  }
  get requirement() {
    return this.$$.ctx[9];
  }
  set requirement(requirement) {
    this.$$set({ requirement });
    flush();
  }
  get id() {
    return this.$$.ctx[10];
  }
  set id(id2) {
    this.$$set({ id: id2 });
    flush();
  }
}
customElements.define("goa-form-item", FormItem);
function create_fragment$C(ctx) {
  let div;
  let slot;
  let div_style_value;
  return { c() {
    div = element("div");
    slot = element("slot");
    this.c = noop;
    attr(div, "class", "goa-grid");
    attr(div, "style", div_style_value = `
    ${calculateMargin(
      /*mt*/
      ctx[2],
      /*mr*/
      ctx[3],
      /*mb*/
      ctx[4],
      /*ml*/
      ctx[5]
    )}
    --min-child-width: ${/*minchildwidth*/
    ctx[1] || 0};
    gap: var(--goa-space-${/*gap*/
    ctx[0]})
  `);
  }, m(target, anchor) {
    insert(target, div, anchor);
    append(div, slot);
  }, p(ctx2, [dirty]) {
    if (dirty & /*mt, mr, mb, ml, minchildwidth, gap*/
    63 && div_style_value !== (div_style_value = `
    ${calculateMargin(
      /*mt*/
      ctx2[2],
      /*mr*/
      ctx2[3],
      /*mb*/
      ctx2[4],
      /*ml*/
      ctx2[5]
    )}
    --min-child-width: ${/*minchildwidth*/
    ctx2[1] || 0};
    gap: var(--goa-space-${/*gap*/
    ctx2[0]})
  `)) {
      attr(div, "style", div_style_value);
    }
  }, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(div);
  } };
}
function instance$z($$self, $$props, $$invalidate) {
  let { gap = "m" } = $$props;
  let { minchildwidth = "" } = $$props;
  let { mt = null } = $$props;
  let { mr = null } = $$props;
  let { mb: mb2 = null } = $$props;
  let { ml: ml2 = null } = $$props;
  onMount(() => {
    validateRequired("Grid", { minchildwidth });
  });
  $$self.$$set = ($$props2) => {
    if ("gap" in $$props2)
      $$invalidate(0, gap = $$props2.gap);
    if ("minchildwidth" in $$props2)
      $$invalidate(1, minchildwidth = $$props2.minchildwidth);
    if ("mt" in $$props2)
      $$invalidate(2, mt = $$props2.mt);
    if ("mr" in $$props2)
      $$invalidate(3, mr = $$props2.mr);
    if ("mb" in $$props2)
      $$invalidate(4, mb2 = $$props2.mb);
    if ("ml" in $$props2)
      $$invalidate(5, ml2 = $$props2.ml);
  };
  return [gap, minchildwidth, mt, mr, mb2, ml2];
}
class Grid extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `:host{box-sizing:border-box;font-family:var(--goa-font-family-sans)}.goa-grid{display:flex;flex-direction:column;gap:var(--gap)}@media screen and (max-width: 623px){@media not (max-color:2147477350){.goa-grid{display:grid;grid-template-columns:repeat(auto-fit, minmax(var(--min-child-width), 1fr))}}}@media not  screen and (max-width: 623px){@media not (color:2147477350){.goa-grid{display:grid;grid-template-columns:repeat(auto-fit, minmax(var(--min-child-width), 1fr))}}}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$z, create_fragment$C, safe_not_equal, { gap: 0, minchildwidth: 1, mt: 2, mr: 3, mb: 4, ml: 5 }, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["gap", "minchildwidth", "mt", "mr", "mb", "ml"];
  }
  get gap() {
    return this.$$.ctx[0];
  }
  set gap(gap) {
    this.$$set({ gap });
    flush();
  }
  get minchildwidth() {
    return this.$$.ctx[1];
  }
  set minchildwidth(minchildwidth) {
    this.$$set({ minchildwidth });
    flush();
  }
  get mt() {
    return this.$$.ctx[2];
  }
  set mt(mt) {
    this.$$set({ mt });
    flush();
  }
  get mr() {
    return this.$$.ctx[3];
  }
  set mr(mr) {
    this.$$set({ mr });
    flush();
  }
  get mb() {
    return this.$$.ctx[4];
  }
  set mb(mb2) {
    this.$$set({ mb: mb2 });
    flush();
  }
  get ml() {
    return this.$$.ctx[5];
  }
  set ml(ml2) {
    this.$$set({ ml: ml2 });
    flush();
  }
}
customElements.define("goa-grid", Grid);
function create_fragment$B(ctx) {
  let div2;
  let goa_page_block;
  let h1;
  let t0;
  let t1;
  let div0;
  let t2;
  let div1;
  let goa_page_block_width_value;
  return { c() {
    div2 = element("div");
    goa_page_block = element("goa-page-block");
    h1 = element("h1");
    t0 = text(
      /*heading*/
      ctx[1]
    );
    t1 = space();
    div0 = element("div");
    div0.innerHTML = `<slot></slot>`;
    t2 = space();
    div1 = element("div");
    div1.innerHTML = `<slot name="actions"></slot>`;
    this.c = noop;
    attr(div0, "class", "goa-hero-banner-content");
    attr(div0, "role", "note");
    attr(div1, "class", "goa-hero-banner-actions");
    set_custom_element_data(goa_page_block, "width", goa_page_block_width_value = /*maxcontentwidth*/
    ctx[3] || "full");
    attr(div2, "class", "goa-hero");
    attr(div2, "data-testid", "background");
    set_style(
      div2,
      "min-height",
      /*minheight*/
      ctx[0]
    );
    set_style(
      div2,
      "--hero-banner-background-color",
      /*backgroundcolor*/
      ctx[4]
    );
    set_style(
      div2,
      "--hero-banner-text-color",
      /*textcolor*/
      ctx[5]
    );
    set_style(div2, "--hero-background-url", "url(" + /*backgroundurl*/
    ctx[2] + ")");
    toggle_class(
      div2,
      "with-image",
      /*backgroundurl*/
      ctx[2]
    );
  }, m(target, anchor) {
    insert(target, div2, anchor);
    append(div2, goa_page_block);
    append(goa_page_block, h1);
    append(h1, t0);
    append(goa_page_block, t1);
    append(goa_page_block, div0);
    append(goa_page_block, t2);
    append(goa_page_block, div1);
  }, p(ctx2, [dirty]) {
    if (dirty & /*heading*/
    2)
      set_data(
        t0,
        /*heading*/
        ctx2[1]
      );
    if (dirty & /*maxcontentwidth*/
    8 && goa_page_block_width_value !== (goa_page_block_width_value = /*maxcontentwidth*/
    ctx2[3] || "full")) {
      set_custom_element_data(goa_page_block, "width", goa_page_block_width_value);
    }
    if (dirty & /*minheight*/
    1) {
      set_style(
        div2,
        "min-height",
        /*minheight*/
        ctx2[0]
      );
    }
    if (dirty & /*backgroundcolor*/
    16) {
      set_style(
        div2,
        "--hero-banner-background-color",
        /*backgroundcolor*/
        ctx2[4]
      );
    }
    if (dirty & /*textcolor*/
    32) {
      set_style(
        div2,
        "--hero-banner-text-color",
        /*textcolor*/
        ctx2[5]
      );
    }
    if (dirty & /*backgroundurl*/
    4) {
      set_style(div2, "--hero-background-url", "url(" + /*backgroundurl*/
      ctx2[2] + ")");
    }
    if (dirty & /*backgroundurl*/
    4) {
      toggle_class(
        div2,
        "with-image",
        /*backgroundurl*/
        ctx2[2]
      );
    }
  }, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(div2);
  } };
}
function instance$y($$self, $$props, $$invalidate) {
  let { heading } = $$props;
  let { backgroundurl } = $$props;
  let { minheight } = $$props;
  let { maxcontentwidth = "100%" } = $$props;
  let { backgroundcolor = "#f8f8f8" } = $$props;
  let { textcolor = "" } = $$props;
  $$self.$$set = ($$props2) => {
    if ("heading" in $$props2)
      $$invalidate(1, heading = $$props2.heading);
    if ("backgroundurl" in $$props2)
      $$invalidate(2, backgroundurl = $$props2.backgroundurl);
    if ("minheight" in $$props2)
      $$invalidate(0, minheight = $$props2.minheight);
    if ("maxcontentwidth" in $$props2)
      $$invalidate(3, maxcontentwidth = $$props2.maxcontentwidth);
    if ("backgroundcolor" in $$props2)
      $$invalidate(4, backgroundcolor = $$props2.backgroundcolor);
    if ("textcolor" in $$props2)
      $$invalidate(5, textcolor = $$props2.textcolor);
  };
  $$self.$$.update = () => {
    if ($$self.$$.dirty & /*minheight, backgroundurl*/
    5) {
      if (!minheight && backgroundurl)
        $$invalidate(0, minheight = "600px");
    }
  };
  return [minheight, heading, backgroundurl, maxcontentwidth, backgroundcolor, textcolor];
}
class HeroBanner extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `:host{box-sizing:border-box;font-family:var(--goa-font-family-sans)}.goa-hero{background:var(--hero-banner-background-color);box-sizing:border-box;display:flex;align-items:center;justify-content:center;flex-direction:column;color:var(--hero-banner-text-color, var(--goa-color-text-default));background-position:center center;width:100%;padding:var(--goa-space-3xl) 0}.goa-hero.with-image{border-bottom:8px solid var(--goa-color-brand-default);justify-content:flex-end;background:unset;background-image:linear-gradient(
        rgba(0, 0, 0, 0) 0%,
        rgba(0, 0, 0, 0.4) 40%,
        rgba(0, 0, 0, 0.6) 100%
      ),
      var(--hero-background-url);background-size:cover;background-position:center;background-repeat:no-repeat;color:var(--hero-banner-text-color, var(--goa-color-text-light))}h1{font:var(--goa-typography-heading-xl);margin:0}.goa-hero-banner-content{font:var(--goa-typography-body-l);margin:var(--goa-space-l) 0 0}.goa-hero-banner-actions{margin:var(--goa-space-l) 0 0}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$y, create_fragment$B, safe_not_equal, { heading: 1, backgroundurl: 2, minheight: 0, maxcontentwidth: 3, backgroundcolor: 4, textcolor: 5 }, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["heading", "backgroundurl", "minheight", "maxcontentwidth", "backgroundcolor", "textcolor"];
  }
  get heading() {
    return this.$$.ctx[1];
  }
  set heading(heading) {
    this.$$set({ heading });
    flush();
  }
  get backgroundurl() {
    return this.$$.ctx[2];
  }
  set backgroundurl(backgroundurl) {
    this.$$set({ backgroundurl });
    flush();
  }
  get minheight() {
    return this.$$.ctx[0];
  }
  set minheight(minheight) {
    this.$$set({ minheight });
    flush();
  }
  get maxcontentwidth() {
    return this.$$.ctx[3];
  }
  set maxcontentwidth(maxcontentwidth) {
    this.$$set({ maxcontentwidth });
    flush();
  }
  get backgroundcolor() {
    return this.$$.ctx[4];
  }
  set backgroundcolor(backgroundcolor) {
    this.$$set({ backgroundcolor });
    flush();
  }
  get textcolor() {
    return this.$$.ctx[5];
  }
  set textcolor(textcolor) {
    this.$$set({ textcolor });
    flush();
  }
}
customElements.define("goa-hero-banner", HeroBanner);
function create_fragment$A(ctx) {
  let button;
  let goa_icon;
  let button_style_value;
  let mounted;
  let dispose;
  return { c() {
    button = element("button");
    goa_icon = element("goa-icon");
    this.c = noop;
    set_custom_element_data(
      goa_icon,
      "title",
      /*title*/
      ctx[3]
    );
    set_custom_element_data(
      goa_icon,
      "type",
      /*icon*/
      ctx[0]
    );
    set_custom_element_data(
      goa_icon,
      "size",
      /*size*/
      ctx[1]
    );
    set_custom_element_data(
      goa_icon,
      "theme",
      /*theme*/
      ctx[2]
    );
    set_custom_element_data(
      goa_icon,
      "inverted",
      /*isInverted*/
      ctx[9]
    );
    attr(button, "style", button_style_value = calculateMargin(
      /*mt*/
      ctx[5],
      /*mr*/
      ctx[6],
      /*mb*/
      ctx[7],
      /*ml*/
      ctx[8]
    ) + "; --pading-size: " + /*_paddingSize*/
    ctx[10]);
    attr(
      button,
      "title",
      /*title*/
      ctx[3]
    );
    button.disabled = /*isDisabled*/
    ctx[11];
    attr(
      button,
      "class",
      /*css*/
      ctx[12]
    );
    attr(
      button,
      "data-testid",
      /*testid*/
      ctx[4]
    );
  }, m(target, anchor) {
    insert(target, button, anchor);
    append(button, goa_icon);
    if (!mounted) {
      dispose = listen(button, "click", handleClick);
      mounted = true;
    }
  }, p(ctx2, [dirty]) {
    if (dirty & /*title*/
    8) {
      set_custom_element_data(
        goa_icon,
        "title",
        /*title*/
        ctx2[3]
      );
    }
    if (dirty & /*icon*/
    1) {
      set_custom_element_data(
        goa_icon,
        "type",
        /*icon*/
        ctx2[0]
      );
    }
    if (dirty & /*size*/
    2) {
      set_custom_element_data(
        goa_icon,
        "size",
        /*size*/
        ctx2[1]
      );
    }
    if (dirty & /*theme*/
    4) {
      set_custom_element_data(
        goa_icon,
        "theme",
        /*theme*/
        ctx2[2]
      );
    }
    if (dirty & /*isInverted*/
    512) {
      set_custom_element_data(
        goa_icon,
        "inverted",
        /*isInverted*/
        ctx2[9]
      );
    }
    if (dirty & /*mt, mr, mb, ml, _paddingSize*/
    1504 && button_style_value !== (button_style_value = calculateMargin(
      /*mt*/
      ctx2[5],
      /*mr*/
      ctx2[6],
      /*mb*/
      ctx2[7],
      /*ml*/
      ctx2[8]
    ) + "; --pading-size: " + /*_paddingSize*/
    ctx2[10])) {
      attr(button, "style", button_style_value);
    }
    if (dirty & /*title*/
    8) {
      attr(
        button,
        "title",
        /*title*/
        ctx2[3]
      );
    }
    if (dirty & /*isDisabled*/
    2048) {
      button.disabled = /*isDisabled*/
      ctx2[11];
    }
    if (dirty & /*css*/
    4096) {
      attr(
        button,
        "class",
        /*css*/
        ctx2[12]
      );
    }
    if (dirty & /*testid*/
    16) {
      attr(
        button,
        "data-testid",
        /*testid*/
        ctx2[4]
      );
    }
  }, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(button);
    mounted = false;
    dispose();
  } };
}
function handleClick(e) {
  e.target.dispatchEvent(new CustomEvent("_click", { composed: true, detail: { event: e } }));
}
function instance$x($$self, $$props, $$invalidate) {
  let css;
  let isDisabled;
  let isInverted;
  let _paddingSize;
  const [Variants, validateVariant] = typeValidator("Icon Button Variant", ["color", "nocolor", "dark", "destructive"], true);
  let { icon } = $$props;
  let { size = "medium" } = $$props;
  let { theme = "outline" } = $$props;
  let { variant = "color" } = $$props;
  let { title = "" } = $$props;
  let { testid = "" } = $$props;
  let { disabled = "false" } = $$props;
  let { inverted = "false" } = $$props;
  let { mt = null } = $$props;
  let { mr = null } = $$props;
  let { mb: mb2 = null } = $$props;
  let { ml: ml2 = null } = $$props;
  onMount(() => {
    validateVariant(variant);
  });
  $$self.$$set = ($$props2) => {
    if ("icon" in $$props2)
      $$invalidate(0, icon = $$props2.icon);
    if ("size" in $$props2)
      $$invalidate(1, size = $$props2.size);
    if ("theme" in $$props2)
      $$invalidate(2, theme = $$props2.theme);
    if ("variant" in $$props2)
      $$invalidate(13, variant = $$props2.variant);
    if ("title" in $$props2)
      $$invalidate(3, title = $$props2.title);
    if ("testid" in $$props2)
      $$invalidate(4, testid = $$props2.testid);
    if ("disabled" in $$props2)
      $$invalidate(14, disabled = $$props2.disabled);
    if ("inverted" in $$props2)
      $$invalidate(15, inverted = $$props2.inverted);
    if ("mt" in $$props2)
      $$invalidate(5, mt = $$props2.mt);
    if ("mr" in $$props2)
      $$invalidate(6, mr = $$props2.mr);
    if ("mb" in $$props2)
      $$invalidate(7, mb2 = $$props2.mb);
    if ("ml" in $$props2)
      $$invalidate(8, ml2 = $$props2.ml);
  };
  $$self.$$.update = () => {
    if ($$self.$$.dirty & /*inverted*/
    32768) {
      $$invalidate(9, isInverted = toBoolean(inverted));
    }
    if ($$self.$$.dirty & /*variant, isInverted*/
    8704) {
      $$invalidate(12, css = `${variant} ${isInverted ? "inverted" : ""}`);
    }
    if ($$self.$$.dirty & /*disabled*/
    16384) {
      $$invalidate(11, isDisabled = toBoolean(disabled));
    }
    if ($$self.$$.dirty & /*size*/
    2) {
      $$invalidate(10, _paddingSize = { small: "0.25rem", medium: "0.25rem", large: "0.5rem" }[size]);
    }
  };
  return [icon, size, theme, title, testid, mt, mr, mb2, ml2, isInverted, _paddingSize, isDisabled, css, variant, disabled, inverted];
}
class IconButton extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `:host{display:inline-flex;align-items:center;box-sizing:border-box;font-family:var(--goa-font-family-sans)}button,button *{box-sizing:border-box}button{display:inline-flex;align-items:center;box-sizing:border-box;justify-content:center;background:transparent;cursor:pointer;border:none;border-radius:var(--goa-border-radius-m);padding:var(--pading-size)}.color,.dark{color:var(--goa-color-interactive-default);fill:var(--goa-color-interactive-default);cursor:pointer;transition:background-color 100ms ease-in, transform 100ms ease-in}.dark:not(.inverted){color:unset}button:hover:not(.destructive){background-color:var(--goa-color-greyscale-100);border-color:var(--goa-color-greyscale-100);color:var(--goa-color-interactive-hover);outline:none}button:focus:not(.destructive),button:active:not(.destructive){background-color:var(--goa-color-greyscale-100);border-color:var(--goa-color-interactive-focus);color:var(--goa-color-interactive-focus);box-shadow:0 0 0 3px var(--goa-color-interactive-focus);outline:none}.color.inverted:hover{background-color:var(--goa-color-interactive-hover)}.destructive{color:var(--goa-color-emergency-dark);fill:var(--goa-color-emergency-dark)}.destructive:hover{background-color:var(--goa-color-emergency-light);border-color:var(--goa-color-emergency-light);outline:none}.destructive:focus,.destructive:active{background-color:var(--goa-color-emergency-light);border-color:var(--goa-color-interactive-focus);box-shadow:0 0 0 3px var(--goa-color-interactive-focus);outline:none}button:disabled{pointer-events:none;opacity:0.5;transform:none;cursor:default}button:disabled:hover{background-color:transparent}button.dark:hover{background-color:rgba(0, 0, 0, 0.3)}button.dark:focus,button.dark:active{background-color:rgba(0, 0, 0, 0.3);box-shadow:0 0 0 3px var(--goa-color-greyscale-white)}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$x, create_fragment$A, safe_not_equal, { icon: 0, size: 1, theme: 2, variant: 13, title: 3, testid: 4, disabled: 14, inverted: 15, mt: 5, mr: 6, mb: 7, ml: 8 }, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["icon", "size", "theme", "variant", "title", "testid", "disabled", "inverted", "mt", "mr", "mb", "ml"];
  }
  get icon() {
    return this.$$.ctx[0];
  }
  set icon(icon) {
    this.$$set({ icon });
    flush();
  }
  get size() {
    return this.$$.ctx[1];
  }
  set size(size) {
    this.$$set({ size });
    flush();
  }
  get theme() {
    return this.$$.ctx[2];
  }
  set theme(theme) {
    this.$$set({ theme });
    flush();
  }
  get variant() {
    return this.$$.ctx[13];
  }
  set variant(variant) {
    this.$$set({ variant });
    flush();
  }
  get title() {
    return this.$$.ctx[3];
  }
  set title(title) {
    this.$$set({ title });
    flush();
  }
  get testid() {
    return this.$$.ctx[4];
  }
  set testid(testid) {
    this.$$set({ testid });
    flush();
  }
  get disabled() {
    return this.$$.ctx[14];
  }
  set disabled(disabled) {
    this.$$set({ disabled });
    flush();
  }
  get inverted() {
    return this.$$.ctx[15];
  }
  set inverted(inverted) {
    this.$$set({ inverted });
    flush();
  }
  get mt() {
    return this.$$.ctx[5];
  }
  set mt(mt) {
    this.$$set({ mt });
    flush();
  }
  get mr() {
    return this.$$.ctx[6];
  }
  set mr(mr) {
    this.$$set({ mr });
    flush();
  }
  get mb() {
    return this.$$.ctx[7];
  }
  set mb(mb2) {
    this.$$set({ mb: mb2 });
    flush();
  }
  get ml() {
    return this.$$.ctx[8];
  }
  set ml(ml2) {
    this.$$set({ ml: ml2 });
    flush();
  }
}
customElements.define("goa-icon-button", IconButton);
function create_if_block$k(ctx) {
  let show_if;
  let if_block_anchor;
  function select_block_type(ctx2, dirty) {
    if (dirty & /*type*/
    16)
      show_if = null;
    if (show_if == null)
      show_if = !!Object.keys(
        /*_iconOverrides*/
        ctx2[16]
      ).includes(
        /*type*/
        ctx2[4]
      );
    if (show_if)
      return create_if_block_1$a;
    return create_else_block$9;
  }
  let current_block_type = select_block_type(ctx, -1);
  let if_block = current_block_type(ctx);
  return { c() {
    if_block.c();
    if_block_anchor = empty();
  }, m(target, anchor) {
    if_block.m(target, anchor);
    insert(target, if_block_anchor, anchor);
  }, p(ctx2, dirty) {
    if (current_block_type === (current_block_type = select_block_type(ctx2, dirty)) && if_block) {
      if_block.p(ctx2, dirty);
    } else {
      if_block.d(1);
      if_block = current_block_type(ctx2);
      if (if_block) {
        if_block.c();
        if_block.m(if_block_anchor.parentNode, if_block_anchor);
      }
    }
  }, d(detaching) {
    if_block.d(detaching);
    if (detaching)
      detach(if_block_anchor);
  } };
}
function create_else_block$9(ctx) {
  let ion_icon;
  let ion_icon_name_value;
  return { c() {
    ion_icon = element("ion-icon");
    set_custom_element_data(ion_icon, "name", ion_icon_name_value = /*theme*/
    ctx[6] === "filled" || /*type*/
    ctx[4].indexOf("logo") === 0 ? (
      /*type*/
      ctx[4]
    ) : `${/*type*/
    ctx[4]}-${/*theme*/
    ctx[6]}`);
  }, m(target, anchor) {
    insert(target, ion_icon, anchor);
  }, p(ctx2, dirty) {
    if (dirty & /*theme, type*/
    80 && ion_icon_name_value !== (ion_icon_name_value = /*theme*/
    ctx2[6] === "filled" || /*type*/
    ctx2[4].indexOf("logo") === 0 ? (
      /*type*/
      ctx2[4]
    ) : `${/*type*/
    ctx2[4]}-${/*theme*/
    ctx2[6]}`)) {
      set_custom_element_data(ion_icon, "name", ion_icon_name_value);
    }
  }, d(detaching) {
    if (detaching)
      detach(ion_icon);
  } };
}
function create_if_block_1$a(ctx) {
  let div;
  let raw_value = (
    /*_iconOverrides*/
    ctx[16][
      /*type*/
      ctx[4]
    ] + ""
  );
  return { c() {
    div = element("div");
    attr(div, "class", "icon-override");
  }, m(target, anchor) {
    insert(target, div, anchor);
    div.innerHTML = raw_value;
  }, p(ctx2, dirty) {
    if (dirty & /*type*/
    16 && raw_value !== (raw_value = /*_iconOverrides*/
    ctx2[16][
      /*type*/
      ctx2[4]
    ] + ""))
      div.innerHTML = raw_value;
  }, d(detaching) {
    if (detaching)
      detach(div);
  } };
}
function create_fragment$z(ctx) {
  let div;
  let div_aria_expanded_value;
  let div_class_value;
  let div_style_value;
  let if_block = (
    /*type*/
    ctx[4] && create_if_block$k(ctx)
  );
  return { c() {
    div = element("div");
    if (if_block)
      if_block.c();
    this.c = noop;
    attr(
      div,
      "role",
      /*role*/
      ctx[13]
    );
    attr(
      div,
      "aria-label",
      /*arialabel*/
      ctx[11]
    );
    attr(
      div,
      "aria-controls",
      /*ariacontrols*/
      ctx[12]
    );
    attr(div, "aria-expanded", div_aria_expanded_value = /*_ariaexpanded*/
    ctx[14].length > 0 ? (
      /*_ariaexpanded*/
      ctx[14]
    ) : void 0);
    attr(div, "class", div_class_value = `goa-icon goa-icon--${/*size*/
    ctx[5]}`);
    attr(
      div,
      "data-testid",
      /*testid*/
      ctx[10]
    );
    attr(
      div,
      "title",
      /*title*/
      ctx[9]
    );
    attr(div, "style", div_style_value = `
    ${calculateMargin(
      /*mt*/
      ctx[0],
      /*mr*/
      ctx[1],
      /*mb*/
      ctx[2],
      /*ml*/
      ctx[3]
    )}
    ${cssVar(
      "--fill-color",
      /*fillcolor*/
      ctx[7]
    )};
    ${cssVar(
      "--opacity",
      /*opacity*/
      ctx[8]
    )};
  `);
    toggle_class(
      div,
      "inverted",
      /*isInverted*/
      ctx[15]
    );
  }, m(target, anchor) {
    insert(target, div, anchor);
    if (if_block)
      if_block.m(div, null);
  }, p(ctx2, [dirty]) {
    if (
      /*type*/
      ctx2[4]
    ) {
      if (if_block) {
        if_block.p(ctx2, dirty);
      } else {
        if_block = create_if_block$k(ctx2);
        if_block.c();
        if_block.m(div, null);
      }
    } else if (if_block) {
      if_block.d(1);
      if_block = null;
    }
    if (dirty & /*role*/
    8192) {
      attr(
        div,
        "role",
        /*role*/
        ctx2[13]
      );
    }
    if (dirty & /*arialabel*/
    2048) {
      attr(
        div,
        "aria-label",
        /*arialabel*/
        ctx2[11]
      );
    }
    if (dirty & /*ariacontrols*/
    4096) {
      attr(
        div,
        "aria-controls",
        /*ariacontrols*/
        ctx2[12]
      );
    }
    if (dirty & /*_ariaexpanded*/
    16384 && div_aria_expanded_value !== (div_aria_expanded_value = /*_ariaexpanded*/
    ctx2[14].length > 0 ? (
      /*_ariaexpanded*/
      ctx2[14]
    ) : void 0)) {
      attr(div, "aria-expanded", div_aria_expanded_value);
    }
    if (dirty & /*size*/
    32 && div_class_value !== (div_class_value = `goa-icon goa-icon--${/*size*/
    ctx2[5]}`)) {
      attr(div, "class", div_class_value);
    }
    if (dirty & /*testid*/
    1024) {
      attr(
        div,
        "data-testid",
        /*testid*/
        ctx2[10]
      );
    }
    if (dirty & /*title*/
    512) {
      attr(
        div,
        "title",
        /*title*/
        ctx2[9]
      );
    }
    if (dirty & /*mt, mr, mb, ml, fillcolor, opacity*/
    399 && div_style_value !== (div_style_value = `
    ${calculateMargin(
      /*mt*/
      ctx2[0],
      /*mr*/
      ctx2[1],
      /*mb*/
      ctx2[2],
      /*ml*/
      ctx2[3]
    )}
    ${cssVar(
      "--fill-color",
      /*fillcolor*/
      ctx2[7]
    )};
    ${cssVar(
      "--opacity",
      /*opacity*/
      ctx2[8]
    )};
  `)) {
      attr(div, "style", div_style_value);
    }
    if (dirty & /*size, isInverted*/
    32800) {
      toggle_class(
        div,
        "inverted",
        /*isInverted*/
        ctx2[15]
      );
    }
  }, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(div);
    if (if_block)
      if_block.d();
  } };
}
function instance$w($$self, $$props, $$invalidate) {
  let isInverted;
  let _ariaexpanded;
  let { mt = null } = $$props;
  let { mr = null } = $$props;
  let { mb: mb2 = null } = $$props;
  let { ml: ml2 = null } = $$props;
  let { type } = $$props;
  let { size = "medium" } = $$props;
  let { theme = "outline" } = $$props;
  let { inverted = "false" } = $$props;
  let { fillcolor = "" } = $$props;
  let { opacity = 1 } = $$props;
  let { title = "" } = $$props;
  let { testid = "" } = $$props;
  let { arialabel = "" } = $$props;
  let { ariacontrols = "" } = $$props;
  let { ariaexpanded = "" } = $$props;
  let { role = "img" } = $$props;
  const _iconOverrides = { pencil: `<svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M16.1442 5.47956L12.5355 1.87088L13.7196 0.686776C14.0391 0.367257 14.4385 0.212197 14.9178 0.221594C15.3971 0.230992 15.7965 0.39545 16.116 0.714969L17.3283 1.92726C17.6478 2.24678 17.8076 2.64148 17.8076 3.11136C17.8076 3.58124 17.6478 3.97594 17.3283 4.29546L16.1442 5.47956ZM1.03951 17.8424C0.795173 17.8424 0.593125 17.7626 0.433365 17.6028C0.273605 17.443 0.193726 17.241 0.193726 16.9966V14.5721C0.193726 14.4593 0.212521 14.356 0.250112 14.262C0.287702 14.168 0.353485 14.074 0.447461 13.9801L11.4689 2.93435L15.0776 6.54303L4.05615 17.5887C3.96217 17.6827 3.8682 17.7485 3.77422 17.7861C3.68024 17.8236 3.57687 17.8424 3.4641 17.8424H1.03951Z" fill="currentcolor"/> </svg>`, checkmark: `<svg width="18" height="14" viewBox="0 0 18 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path fill-rule="evenodd" clip-rule="evenodd" d="M6.20129 11.5368L15.9974 0.341265C16.3611 -0.0743717 16.9929 -0.116489 17.4085 0.247193C17.8241 0.610875 17.8663 1.24264 17.5026 1.65827L7.00258 13.6583C6.82032 13.8666 6.5599 13.99 6.28328 13.9992C6.00666 14.0084 5.7386 13.9026 5.54289 13.7069L1.04289 9.20688C0.652369 8.81635 0.652369 8.18319 1.04289 7.79266C1.43342 7.40214 2.06658 7.40214 2.45711 7.79266L6.20129 11.5368Z" fill="currentcolor"/> </svg>`, remove: `<svg width="16" height="20" viewBox="0 0 16 1" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M1.5 -0.000244141C0.947715 -0.000244141 0.5 0.447471 0.5 0.999756C0.5 1.55204 0.947715 1.99976 1.5 1.99976H15C15.5523 1.99976 16 1.55204 16 0.999756C16 0.447471 15.5523 -0.000244141 15 -0.000244141H1.5Z" fill="currentcolor"/> </svg>`, "goa-file": `<svg width="39" height="48" viewBox="0 0 39 48" fill="none" xmlns="http://www.w3.org/2000/svg"> <g clip-path="url(#clip0_1357_108691)"> <path d="M38.741 14C38.541 13.07 38.081 12.22 37.401 11.54L36.861 11L27.861 2L27.321 1.46C26.641 0.78 25.781 0.32 24.861 0.12C24.511 0.04 24.151 0 23.791 0H5.86096C3.10096 0 0.860962 2.24 0.860962 5V43C0.860962 45.76 3.10096 48 5.86096 48H33.861C36.621 48 38.861 45.76 38.861 43V15.07C38.861 14.71 38.811 14.35 38.741 14ZM35.041 12H29.871C28.221 12 26.871 10.65 26.871 9V3.83L35.041 12ZM36.871 43C36.871 44.65 35.521 46 33.871 46H5.87097C4.22097 46 2.87097 44.65 2.87097 43V5C2.87097 3.35 4.22097 2 5.87097 2H23.801C24.171 2 24.531 2.07 24.871 2.2V9C24.871 11.76 27.111 14 29.871 14H36.671C36.801 14.34 36.871 14.7 36.871 15.07V43Z" fill="currentcolor"/> </g> <defs> <clipPath id="clip0_1357_108691"><rect width="38" height="48" fill="white" transform="translate(0.861328)"/></clipPath></defs></svg>`, "goa-text": `<svg width="39" height="48" viewBox="0 0 39 48" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M38.7953 14C38.5953 13.07 38.1353 12.22 37.4553 11.54L36.9153 11L27.9153 2L27.3753 1.46C26.6953 0.78 25.8353 0.32 24.9153 0.12C24.5653 0.04 24.2053 0 23.8453 0H5.91528C3.15528 0 0.915283 2.24 0.915283 5V43C0.915283 45.76 3.15528 48 5.91528 48H33.9153C36.6753 48 38.9153 45.76 38.9153 43V15.07C38.9153 14.71 38.8653 14.35 38.7953 14ZM35.0953 12H29.9253C28.2753 12 26.9253 10.65 26.9253 9V3.83L35.0953 12ZM36.9253 43C36.9253 44.65 35.5753 46 33.9253 46H5.91528C4.26528 46 2.91528 44.65 2.91528 43V5C2.91528 3.35 4.26528 2 5.91528 2H23.8453C24.2153 2 24.5753 2.07 24.9153 2.2V9C24.9153 11.76 27.1553 14 29.9153 14H36.7153C36.8453 14.34 36.9153 14.7 36.9153 15.07V43H36.9253Z" fill="currentcolor"/> <path d="M27.9153 34H11.9153C11.363 34 10.9153 34.4477 10.9153 35C10.9153 35.5523 11.363 36 11.9153 36H27.9153C28.4676 36 28.9153 35.5523 28.9153 35C28.9153 34.4477 28.4676 34 27.9153 34Z" fill="currentcolor"/> <path d="M27.9153 26H11.9153C11.363 26 10.9153 26.4477 10.9153 27C10.9153 27.5523 11.363 28 11.9153 28H27.9153C28.4676 28 28.9153 27.5523 28.9153 27C28.9153 26.4477 28.4676 26 27.9153 26Z" fill="currentcolor"/> </svg>`, "goa-pdf": `<svg width="39" height="48" viewBox="0 0 39 48" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M37.8861 14C37.6861 13.07 37.2261 12.22 36.5461 11.54L36.0061 11L27.0061 2L26.4661 1.46C25.7861 0.78 24.9261 0.32 24.0061 0.12C23.6561 0.04 23.2961 0 22.9361 0H5.0061C2.2461 0 0.00610352 2.24 0.00610352 5V43C0.00610352 45.76 2.2461 48 5.0061 48H33.0061C35.7661 48 38.0061 45.76 38.0061 43V15.07C38.0061 14.71 37.9561 14.35 37.8861 14ZM34.1861 12H29.0161C27.3661 12 26.0161 10.65 26.0161 9V3.83L34.1861 12ZM36.0161 43C36.0161 44.65 34.6661 46 33.0161 46H5.0061C3.3561 46 2.0061 44.65 2.0061 43V5C2.0061 3.35 3.3561 2 5.0061 2H22.9361C23.3061 2 23.6661 2.07 24.0061 2.2V9C24.0061 11.76 26.2461 14 29.0061 14H35.8061C35.9361 14.34 36.0061 14.7 36.0061 15.07V43H36.0161Z" fill="currentcolor"/> <path d="M5.02611 27C5.02611 26.45 5.47611 26 6.02611 26H9.05611C11.1161 26 12.9261 27.06 12.9261 29.28C12.9261 31.5 11.2461 32.74 8.85611 32.74H7.25611V35.85C7.25611 36.47 6.75611 36.97 6.13611 36.97C5.51611 36.97 5.01611 36.47 5.01611 35.85V27.01L5.02611 27ZM7.26611 30.96H8.73611C9.91611 30.96 10.6561 30.53 10.6561 29.31C10.6561 28.22 9.90611 27.77 8.79611 27.77H7.25611V30.96H7.26611Z" fill="currentcolor"/> <path d="M15.0361 27C15.0361 26.45 15.4861 26 16.0361 26H18.8461C22.1761 26 24.0161 28.03 24.0161 31.25C24.0161 34.82 22.0961 36.96 18.7661 36.96H16.0361C15.4861 36.96 15.0361 36.51 15.0361 35.96V27ZM17.2961 35.2H18.7361C20.6861 35.2 21.6961 33.74 21.6961 31.28C21.6961 29.25 20.7861 27.79 18.7461 27.79H17.2861V35.2H17.2961Z" fill="currentcolor"/> <path d="M25.9761 27C25.9761 26.45 26.4261 26 26.9761 26H32.0861C32.5961 26 33.0061 26.41 33.0061 26.92C33.0061 27.43 32.5961 27.84 32.0861 27.84H28.1761V30.63H31.8161C32.3161 30.63 32.7161 31.03 32.7161 31.53C32.7161 32.03 32.3161 32.43 31.8161 32.43H28.1761V35.86C28.1761 36.47 27.6861 36.96 27.0761 36.96C26.4661 36.96 25.9761 36.47 25.9761 35.86V26.99V27Z" fill="currentcolor"/> </svg> `, "goa-doc": `<svg width="39" height="48" viewBox="0 0 39 48" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M38.6134 14C38.4134 13.07 37.9534 12.22 37.2734 11.54L36.7334 11L27.7334 2L27.1934 1.46C26.5134 0.78 25.6534 0.32 24.7334 0.12C24.3834 0.04 24.0234 0 23.6634 0H5.7334C2.9734 0 0.733398 2.24 0.733398 5V43C0.733398 45.76 2.9734 48 5.7334 48H33.7334C36.4934 48 38.7334 45.76 38.7334 43V15.07C38.7334 14.71 38.6834 14.35 38.6134 14ZM34.9134 12H29.7434C28.0934 12 26.7434 10.65 26.7434 9V3.83L34.9134 12ZM36.7434 43C36.7434 44.65 35.3934 46 33.7434 46H5.7334C4.0834 46 2.7334 44.65 2.7334 43V5C2.7334 3.35 4.0834 2 5.7334 2H23.6634C24.0334 2 24.3934 2.07 24.7334 2.2V9C24.7334 11.76 26.9734 14 29.7334 14H36.5334C36.6634 14.34 36.7334 14.7 36.7334 15.07V43H36.7434Z" fill="currentcolor"/> <path d="M13.7834 36.6406L10.9034 24.5806C10.6934 23.7206 11.3534 22.8906 12.2334 22.8906C12.8734 22.8906 13.4334 23.3406 13.5734 23.9706C14.4934 28.2306 15.3434 32.5006 15.6434 34.9706H15.6634C16.0934 32.6806 17.3834 27.7106 18.2434 24.0806C18.4134 23.3806 19.0334 22.8906 19.7534 22.8906C20.4634 22.8906 21.0834 23.3706 21.2534 24.0606C22.0734 27.3606 23.3634 32.5806 23.7534 34.8406H23.7734C24.1834 32.0406 25.4534 26.8306 26.1134 23.8706C26.2434 23.3006 26.7434 22.8906 27.3334 22.8906C28.1534 22.8906 28.7434 23.6606 28.5434 24.4506L25.4134 36.6706C25.2134 37.4606 24.5034 38.0106 23.6934 38.0106C22.8634 38.0106 22.1534 37.4506 21.9634 36.6406C21.1734 33.2806 20.0434 28.8506 19.6434 26.6306H19.6234C19.1834 28.9106 18.0234 33.4506 17.2234 36.6606C17.0234 37.4506 16.3134 38.0006 15.5034 38.0006C14.6834 38.0006 13.9634 37.4406 13.7734 36.6406H13.7834Z" fill="currentcolor"/> </svg> `, "goa-ppt": `<svg width="39" height="48" viewBox="0 0 39 48" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M38.2498 14C38.0498 13.07 37.5898 12.22 36.9098 11.54L36.3698 11L27.3698 2L26.8298 1.46C26.1497 0.78 25.2898 0.32 24.3698 0.12C24.0198 0.04 23.6598 0 23.2998 0H5.36975C2.60975 0 0.369751 2.24 0.369751 5V43C0.369751 45.76 2.60975 48 5.36975 48H33.3698C36.1297 48 38.3698 45.76 38.3698 43V15.07C38.3698 14.71 38.3198 14.35 38.2498 14ZM34.5498 12H29.3798C27.7298 12 26.3798 10.65 26.3798 9V3.83L34.5498 12ZM36.3797 43C36.3797 44.65 35.0298 46 33.3797 46H5.36975C3.71975 46 2.36975 44.65 2.36975 43V5C2.36975 3.35 3.71975 2 5.36975 2H23.2998C23.6698 2 24.0298 2.07 24.3698 2.2V9C24.3698 11.76 26.6098 14 29.3698 14H36.1698C36.2998 14.34 36.3698 14.7 36.3698 15.07V43H36.3797Z" fill="currentcolor"/> <path d="M14.0798 24.8906C14.0798 23.7906 14.9798 22.8906 16.0798 22.8906H19.4698C22.3098 22.8906 24.6598 24.3406 24.6598 27.2906C24.6598 30.2406 22.4198 31.9306 19.2298 31.9306H16.7698V36.6606C16.7698 37.4006 16.1698 38.0006 15.4298 38.0006C14.6898 38.0006 14.0898 37.4006 14.0898 36.6606V24.8906H14.0798ZM16.7598 29.8206H19.0698C20.8098 29.8206 21.9498 29.1806 21.9498 27.3606C21.9498 25.7306 20.7798 25.0306 19.1298 25.0306H16.7498V29.8306L16.7598 29.8206Z" fill="currentcolor"/> </svg> `, "goa-xls": `<svg width="39" height="48" viewBox="0 0 39 48" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M38.3407 14C38.1407 13.07 37.6807 12.22 37.0007 11.54L36.4607 11L27.4607 2L26.9207 1.46C26.2407 0.78 25.3807 0.32 24.4607 0.12C24.1107 0.04 23.7507 0 23.3907 0H5.46069C2.70069 0 0.460693 2.24 0.460693 5V43C0.460693 45.76 2.70069 48 5.46069 48H33.4607C36.2207 48 38.4607 45.76 38.4607 43V15.07C38.4607 14.71 38.4107 14.35 38.3407 14ZM34.6407 12H29.4707C27.8207 12 26.4707 10.65 26.4707 9V3.83L34.6407 12ZM36.4707 43C36.4707 44.65 35.1207 46 33.4707 46H5.46069C3.81069 46 2.46069 44.65 2.46069 43V5C2.46069 3.35 3.81069 2 5.46069 2H23.3907C23.7607 2 24.1207 2.07 24.4607 2.2V9C24.4607 11.76 26.7007 14 29.4607 14H36.2607C36.3907 14.34 36.4607 14.7 36.4607 15.07V43H36.4707Z" fill="currentcolor"/> <path d="M23.4107 38.0006C22.9407 38.0006 22.5107 37.7506 22.2707 37.3406L19.3907 32.2806H19.3707L16.4607 37.3906C16.2507 37.7706 15.8407 38.0006 15.4107 38.0006C14.4707 38.0006 13.8907 36.9706 14.3807 36.1606L17.9207 30.3906L14.5807 24.8606C14.0607 23.9906 14.6807 22.8906 15.6907 22.8906C16.1607 22.8906 16.5907 23.1406 16.8207 23.5406L19.5307 28.2806L19.5507 28.2606L22.3507 23.4806C22.5607 23.1206 22.9507 22.8906 23.3807 22.8906C24.3107 22.8906 24.8807 23.9106 24.3907 24.7006L21.0307 30.1206L24.5407 36.0206C25.0607 36.8906 24.4307 38.0006 23.4207 38.0006H23.4107Z" fill="currentcolor"/> </svg> `, "goa-zip": `<svg width="39" height="48" viewBox="0 0 39 48" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M38.7043 14C38.5043 13.07 38.0443 12.22 37.3643 11.54L36.8243 11L27.8243 2L27.2843 1.46C26.6043 0.78 25.7443 0.32 24.8243 0.12C24.4743 0.04 24.1143 0 23.7543 0H5.82434C3.06434 0 0.824341 2.24 0.824341 5V43C0.824341 45.76 3.06434 48 5.82434 48H33.8243C36.5843 48 38.8243 45.76 38.8243 43V15.07C38.8243 14.71 38.7743 14.35 38.7043 14ZM35.0043 12H29.8343C28.1843 12 26.8343 10.65 26.8343 9V3.83L35.0043 12ZM36.8343 43C36.8343 44.65 35.4843 46 33.8343 46H5.82434C4.17434 46 2.82434 44.65 2.82434 43V5C2.82434 3.35 4.17434 2 5.82434 2H23.7543C24.1243 2 24.4843 2.07 24.8243 2.2V9C24.8243 11.76 27.0643 14 29.8243 14H36.6243C36.7543 14.34 36.8243 14.7 36.8243 15.07V43H36.8343Z" fill="currentcolor"/> <path d="M14.8243 20H12.8243V22H14.8243V20Z" fill="currentcolor"/> <path d="M12.8243 18H10.8243V20H12.8243V18Z" fill="currentcolor"/> <path d="M14.8243 16H12.8243V18H14.8243V16Z" fill="currentcolor"/> <path d="M12.8243 14H10.8243V16H12.8243V14Z" fill="currentcolor"/> <path d="M14.8243 12H12.8243V14H14.8243V12Z" fill="currentcolor"/> <path d="M12.8243 10H10.8243V12H12.8243V10Z" fill="currentcolor"/> <path d="M14.8243 8H12.8243V10H14.8243V8Z" fill="currentcolor"/> <path d="M12.8243 6H10.8243V8H12.8243V6Z" fill="currentcolor"/> <path d="M14.8243 4H12.8243V6H14.8243V4Z" fill="currentcolor"/> <path d="M12.8243 2H10.8243V4H12.8243V2Z" fill="currentcolor"/> <path d="M17.7244 32.14L15.4744 23.69C15.3644 23.29 15.0044 23 14.5844 23H11.0644C10.6444 23 10.2744 23.28 10.1744 23.69L7.92435 32.14C7.30435 35.17 9.62435 37.97 12.8244 38C16.0144 37.98 18.3444 35.18 17.7244 32.14ZM15.1944 34.89C14.6244 35.58 13.7644 35.98 12.8244 35.99C11.8844 35.98 11.0244 35.58 10.4544 34.89C9.92435 34.24 9.71435 33.42 9.87435 32.59L11.8944 25H13.7544L15.7744 32.59C15.9344 33.42 15.7244 34.24 15.1944 34.89Z" fill="currentcolor"/> <path d="M13.8243 32H11.8243C11.2721 32 10.8243 32.4477 10.8243 33C10.8243 33.5523 11.2721 34 11.8243 34H13.8243C14.3766 34 14.8243 33.5523 14.8243 33C14.8243 32.4477 14.3766 32 13.8243 32Z" fill="currentcolor"/> </svg> `, "goa-video": `<svg width="39" height="48" viewBox="0 0 39 48" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M37.977 14C37.777 13.07 37.317 12.22 36.637 11.54L36.097 11L27.097 2L26.557 1.46C25.877 0.78 25.017 0.32 24.097 0.12C23.747 0.04 23.387 0 23.027 0H5.09705C2.33705 0 0.0970459 2.24 0.0970459 5V43C0.0970459 45.76 2.33705 48 5.09705 48H33.097C35.857 48 38.097 45.76 38.097 43V15.07C38.097 14.71 38.047 14.35 37.977 14ZM34.277 12H29.107C27.457 12 26.107 10.65 26.107 9V3.83L34.277 12ZM36.107 43C36.107 44.65 34.757 46 33.107 46H5.09705C3.44705 46 2.09705 44.65 2.09705 43V5C2.09705 3.35 3.44705 2 5.09705 2H23.027C23.397 2 23.757 2.07 24.097 2.2V9C24.097 11.76 26.337 14 29.097 14H35.897C36.027 14.34 36.097 14.7 36.097 15.07V43H36.107Z" fill="currentcolor"/> <path d="M22.097 26.0002V29.0102C22.097 29.7802 22.927 30.2602 23.587 29.8802L25.077 29.0302L28.087 27.3202V34.6902L25.077 32.9802L23.587 32.1302C22.917 31.7502 22.097 32.2302 22.097 33.0002V35.9902H10.097V25.9902H22.097M22.097 23.9902H10.097C8.99705 23.9902 8.09705 24.8902 8.09705 25.9902V35.9902C8.09705 37.0902 8.99705 37.9902 10.097 37.9902H22.097C23.197 37.9902 24.097 37.0902 24.097 35.9902V34.7202L27.107 36.4302C27.427 36.6102 27.767 36.6902 28.087 36.6902C29.137 36.6902 30.087 35.8502 30.087 34.6902V27.3202C30.087 26.1502 29.127 25.3202 28.087 25.3202C27.757 25.3202 27.417 25.4002 27.107 25.5802L24.097 27.2902V25.9902C24.097 24.8902 23.197 23.9902 22.097 23.9902Z" fill="currentcolor"/> </svg> `, "goa-audio": `<svg width="39" height="49" viewBox="0 0 39 49" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M38.0679 14.2305C37.8679 13.3005 37.4079 12.4505 36.7279 11.7705L36.1879 11.2305L27.1879 2.23047L26.6479 1.69047C25.9679 1.01047 25.1079 0.550469 24.1879 0.350469C23.8379 0.270469 23.4779 0.230469 23.1179 0.230469H5.18793C2.42793 0.230469 0.187927 2.47047 0.187927 5.23047V43.2305C0.187927 45.9905 2.42793 48.2305 5.18793 48.2305H33.1879C35.9479 48.2305 38.1879 45.9905 38.1879 43.2305V15.3005C38.1879 14.9405 38.1379 14.5805 38.0679 14.2305ZM34.3679 12.2305H29.1979C27.5479 12.2305 26.1979 10.8805 26.1979 9.23047V4.06047L34.3679 12.2305ZM36.1979 43.2305C36.1979 44.8805 34.8479 46.2305 33.1979 46.2305H5.19792C3.54792 46.2305 2.19792 44.8805 2.19792 43.2305V5.23047C2.19792 3.58047 3.54792 2.23047 5.19792 2.23047H23.1279C23.4979 2.23047 23.8579 2.30047 24.1979 2.43047V9.23047C24.1979 11.9905 26.4379 14.2305 29.1979 14.2305H35.9979C36.1279 14.5705 36.1979 14.9305 36.1979 15.3005V43.2305Z" fill="currentcolor"/> <path d="M20.1879 25.1189V37.3489L16.3479 34.6089L15.8279 34.2389H10.1879V28.2389H15.8279L16.3479 27.8689L20.1879 25.1289M20.1879 23.1289C19.7979 23.1289 19.3979 23.2489 19.0279 23.5089L15.1879 26.2489H10.1879C9.08793 26.2489 8.18793 27.1489 8.18793 28.2489V34.2489C8.18793 35.3489 9.08793 36.2489 10.1879 36.2489H15.1879L19.0279 38.9889C19.3879 39.2489 19.7879 39.3689 20.1879 39.3689C21.2279 39.3689 22.1979 38.5489 22.1979 37.3689V25.1389C22.1979 23.9589 21.2279 23.1389 20.1879 23.1389V23.1289Z" fill="currentcolor"/> <path d="M26.1381 23.707C26.6381 24.037 27.1081 24.417 27.5481 24.857C27.9881 25.297 28.3681 25.767 28.6981 26.267C29.0281 26.767 29.2981 27.287 29.5181 27.837C29.7381 28.387 29.8981 28.937 30.0081 29.507C30.1181 30.077 30.1681 30.647 30.1681 31.227C30.1681 31.807 30.1181 32.377 30.0081 32.947C29.8981 33.517 29.7381 34.077 29.5181 34.617C29.2981 35.157 29.0281 35.687 28.6981 36.187C28.3681 36.687 27.9881 37.157 27.5481 37.597C27.1081 38.037 26.6381 38.417 26.1381 38.747" stroke="currentcolor" stroke-width="2" stroke-miterlimit="10" stroke-linecap="round"/> </svg> `, "goa-image": `<svg width="39" height="49" viewBox="0 0 39 49" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M38.1588 14.2305C37.9588 13.3005 37.4988 12.4505 36.8188 11.7705L36.2788 11.2305L27.2788 2.23047L26.7388 1.69047C26.0588 1.01047 25.1988 0.550469 24.2788 0.350469C23.9288 0.270469 23.5688 0.230469 23.2088 0.230469H5.27881C2.51881 0.230469 0.278809 2.47047 0.278809 5.23047V43.2305C0.278809 45.9905 2.51881 48.2305 5.27881 48.2305H33.2788C36.0388 48.2305 38.2788 45.9905 38.2788 43.2305V15.3005C38.2788 14.9405 38.2288 14.5805 38.1588 14.2305ZM34.4588 12.2305H29.2888C27.6388 12.2305 26.2888 10.8805 26.2888 9.23047V4.06047L34.4588 12.2305ZM36.2888 43.2305C36.2888 44.8805 34.9388 46.2305 33.2888 46.2305H5.2888C3.6388 46.2305 2.2888 44.8805 2.2888 43.2305V5.23047C2.2888 3.58047 3.6388 2.23047 5.2888 2.23047H23.2188C23.5888 2.23047 23.9488 2.30047 24.2888 2.43047V9.23047C24.2888 11.9905 26.5288 14.2305 29.2888 14.2305H36.0888C36.2188 14.5705 36.2888 14.9305 36.2888 15.3005V43.2305Z" fill="currentcolor"/> <path d="M20.9985 28.2305C21.3585 28.2305 21.6485 28.4405 21.7885 28.7305L27.1085 36.7305C27.3185 37.0205 27.3185 37.4405 27.1785 37.7305C27.0385 38.0905 26.6785 38.2305 26.3185 38.2305H12.2385C11.8785 38.2305 11.5885 38.0905 11.3785 37.7305C11.2385 37.4405 11.2385 37.0205 11.4485 36.7305L14.8285 31.7305C14.9685 31.4405 15.3285 31.2305 15.6185 31.2305C15.9785 31.2305 16.2685 31.4405 16.4785 31.7305L17.3385 32.9405L20.1385 28.7305C20.3585 28.4405 20.6385 28.2305 20.9985 28.2305ZM20.9985 26.2305C20.0485 26.2305 19.1685 26.6905 18.5385 27.5305L18.4985 27.5805L18.4685 27.6305L17.1185 29.6605C16.6585 29.3805 16.1485 29.2405 15.6085 29.2405C14.6085 29.2405 13.6185 29.8205 13.1085 30.6905L9.79851 35.5905C9.17851 36.4505 9.08851 37.6705 9.57851 38.6305L9.60851 38.7005L9.6485 38.7705C10.2085 39.7005 11.1485 40.2405 12.2285 40.2405H26.3085C27.5185 40.2405 28.5385 39.6005 28.9985 38.5605C29.4385 37.6105 29.3385 36.4405 28.7485 35.6005L23.5085 27.7105C22.9885 26.8005 22.0485 26.2405 21.0085 26.2405L20.9985 26.2305Z" fill="currentcolor"/> <path d="M12.7788 23.2305C13.6088 23.2305 14.2788 23.9005 14.2788 24.7305C14.2788 25.5605 13.6088 26.2305 12.7788 26.2305C11.9488 26.2305 11.2788 25.5605 11.2788 24.7305C11.2788 23.9005 11.9488 23.2305 12.7788 23.2305ZM12.7788 21.2305C10.8488 21.2305 9.27881 22.8005 9.27881 24.7305C9.27881 26.6605 10.8488 28.2305 12.7788 28.2305C14.7088 28.2305 16.2788 26.6605 16.2788 24.7305C16.2788 22.8005 14.7088 21.2305 12.7788 21.2305Z" fill="currentcolor"/> </svg> ` };
  $$self.$$set = ($$props2) => {
    if ("mt" in $$props2)
      $$invalidate(0, mt = $$props2.mt);
    if ("mr" in $$props2)
      $$invalidate(1, mr = $$props2.mr);
    if ("mb" in $$props2)
      $$invalidate(2, mb2 = $$props2.mb);
    if ("ml" in $$props2)
      $$invalidate(3, ml2 = $$props2.ml);
    if ("type" in $$props2)
      $$invalidate(4, type = $$props2.type);
    if ("size" in $$props2)
      $$invalidate(5, size = $$props2.size);
    if ("theme" in $$props2)
      $$invalidate(6, theme = $$props2.theme);
    if ("inverted" in $$props2)
      $$invalidate(17, inverted = $$props2.inverted);
    if ("fillcolor" in $$props2)
      $$invalidate(7, fillcolor = $$props2.fillcolor);
    if ("opacity" in $$props2)
      $$invalidate(8, opacity = $$props2.opacity);
    if ("title" in $$props2)
      $$invalidate(9, title = $$props2.title);
    if ("testid" in $$props2)
      $$invalidate(10, testid = $$props2.testid);
    if ("arialabel" in $$props2)
      $$invalidate(11, arialabel = $$props2.arialabel);
    if ("ariacontrols" in $$props2)
      $$invalidate(12, ariacontrols = $$props2.ariacontrols);
    if ("ariaexpanded" in $$props2)
      $$invalidate(18, ariaexpanded = $$props2.ariaexpanded);
    if ("role" in $$props2)
      $$invalidate(13, role = $$props2.role);
  };
  $$self.$$.update = () => {
    if ($$self.$$.dirty & /*inverted*/
    131072) {
      $$invalidate(15, isInverted = toBoolean(inverted));
    }
    if ($$self.$$.dirty & /*ariaexpanded*/
    262144) {
      $$invalidate(14, _ariaexpanded = ariaexpanded);
    }
  };
  return [mt, mr, mb2, ml2, type, size, theme, fillcolor, opacity, title, testid, arialabel, ariacontrols, role, _ariaexpanded, isInverted, _iconOverrides, inverted, ariaexpanded];
}
class Icon extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `:host{display:inline-flex;align-items:center}ion-icon{pointer-events:none;width:100%;height:100%}.goa-icon{fill:var(--fill-color);color:var(--fill-color);opacity:var(--opacity);display:inline-flex;align-items:center;justify-content:center}.goa-icon--small{width:var(--goa-icon-size-m);height:var(--goa-icon-size-m)}.goa-icon--medium{width:var(--goa-icon-size-l);height:var(--goa-icon-size-l)}.goa-icon--large{width:2rem;height:2rem}.goa-icon--xlarge{width:2.5rem;height:2.5rem}.goa-icon:has(.icon-override){height:-moz-fit-content;height:fit-content}.icon-override{display:flex;flex-direction:column;align-items:center}.inverted *{color:#fff;fill:#fff}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$w, create_fragment$z, safe_not_equal, { mt: 0, mr: 1, mb: 2, ml: 3, type: 4, size: 5, theme: 6, inverted: 17, fillcolor: 7, opacity: 8, title: 9, testid: 10, arialabel: 11, ariacontrols: 12, ariaexpanded: 18, role: 13 }, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["mt", "mr", "mb", "ml", "type", "size", "theme", "inverted", "fillcolor", "opacity", "title", "testid", "arialabel", "ariacontrols", "ariaexpanded", "role"];
  }
  get mt() {
    return this.$$.ctx[0];
  }
  set mt(mt) {
    this.$$set({ mt });
    flush();
  }
  get mr() {
    return this.$$.ctx[1];
  }
  set mr(mr) {
    this.$$set({ mr });
    flush();
  }
  get mb() {
    return this.$$.ctx[2];
  }
  set mb(mb2) {
    this.$$set({ mb: mb2 });
    flush();
  }
  get ml() {
    return this.$$.ctx[3];
  }
  set ml(ml2) {
    this.$$set({ ml: ml2 });
    flush();
  }
  get type() {
    return this.$$.ctx[4];
  }
  set type(type) {
    this.$$set({ type });
    flush();
  }
  get size() {
    return this.$$.ctx[5];
  }
  set size(size) {
    this.$$set({ size });
    flush();
  }
  get theme() {
    return this.$$.ctx[6];
  }
  set theme(theme) {
    this.$$set({ theme });
    flush();
  }
  get inverted() {
    return this.$$.ctx[17];
  }
  set inverted(inverted) {
    this.$$set({ inverted });
    flush();
  }
  get fillcolor() {
    return this.$$.ctx[7];
  }
  set fillcolor(fillcolor) {
    this.$$set({ fillcolor });
    flush();
  }
  get opacity() {
    return this.$$.ctx[8];
  }
  set opacity(opacity) {
    this.$$set({ opacity });
    flush();
  }
  get title() {
    return this.$$.ctx[9];
  }
  set title(title) {
    this.$$set({ title });
    flush();
  }
  get testid() {
    return this.$$.ctx[10];
  }
  set testid(testid) {
    this.$$set({ testid });
    flush();
  }
  get arialabel() {
    return this.$$.ctx[11];
  }
  set arialabel(arialabel) {
    this.$$set({ arialabel });
    flush();
  }
  get ariacontrols() {
    return this.$$.ctx[12];
  }
  set ariacontrols(ariacontrols) {
    this.$$set({ ariacontrols });
    flush();
  }
  get ariaexpanded() {
    return this.$$.ctx[18];
  }
  set ariaexpanded(ariaexpanded) {
    this.$$set({ ariaexpanded });
    flush();
  }
  get role() {
    return this.$$.ctx[13];
  }
  set role(role) {
    this.$$set({ role });
    flush();
  }
}
customElements.define("goa-icon", Icon);
function create_if_block_4$2(ctx) {
  let div;
  let t2;
  return { c() {
    div = element("div");
    t2 = text(
      /*prefix*/
      ctx[15]
    );
    attr(div, "class", "prefix");
  }, m(target, anchor) {
    insert(target, div, anchor);
    append(div, t2);
  }, p(ctx2, dirty) {
    if (dirty[0] & /*prefix*/
    32768)
      set_data(
        t2,
        /*prefix*/
        ctx2[15]
      );
  }, d(detaching) {
    if (detaching)
      detach(div);
  } };
}
function create_if_block_3$8(ctx) {
  let goa_icon;
  return { c() {
    goa_icon = element("goa-icon");
    set_custom_element_data(goa_icon, "class", "goa-input-leading-icon");
    set_custom_element_data(goa_icon, "data-testid", "leading-icon");
    set_custom_element_data(
      goa_icon,
      "type",
      /*leadingicon*/
      ctx[5]
    );
  }, m(target, anchor) {
    insert(target, goa_icon, anchor);
  }, p(ctx2, dirty) {
    if (dirty[0] & /*leadingicon*/
    32) {
      set_custom_element_data(
        goa_icon,
        "type",
        /*leadingicon*/
        ctx2[5]
      );
    }
  }, d(detaching) {
    if (detaching)
      detach(goa_icon);
  } };
}
function create_if_block_2$8(ctx) {
  let goa_icon;
  return { c() {
    goa_icon = element("goa-icon");
    set_custom_element_data(goa_icon, "class", "goa-input-trailing-icon");
    set_custom_element_data(goa_icon, "data-testid", "trailing-icon");
    set_custom_element_data(goa_icon, "size", "medium");
    set_custom_element_data(
      goa_icon,
      "type",
      /*trailingicon*/
      ctx[6]
    );
  }, m(target, anchor) {
    insert(target, goa_icon, anchor);
  }, p(ctx2, dirty) {
    if (dirty[0] & /*trailingicon*/
    64) {
      set_custom_element_data(
        goa_icon,
        "type",
        /*trailingicon*/
        ctx2[6]
      );
    }
  }, d(detaching) {
    if (detaching)
      detach(goa_icon);
  } };
}
function create_if_block_1$9(ctx) {
  let goa_icon_button;
  let mounted;
  let dispose;
  return { c() {
    goa_icon_button = element("goa-icon-button");
    set_custom_element_data(
      goa_icon_button,
      "disabled",
      /*isDisabled*/
      ctx[28]
    );
    set_custom_element_data(goa_icon_button, "variant", "nocolor");
    set_custom_element_data(goa_icon_button, "size", "medium");
    set_custom_element_data(
      goa_icon_button,
      "icon",
      /*trailingicon*/
      ctx[6]
    );
    set_custom_element_data(goa_icon_button, "data-testid", "trailing-icon-button");
    set_custom_element_data(goa_icon_button, "class", "goa-input-trailing-icon-button");
  }, m(target, anchor) {
    insert(target, goa_icon_button, anchor);
    if (!mounted) {
      dispose = listen(goa_icon_button, "click", doClick);
      mounted = true;
    }
  }, p(ctx2, dirty) {
    if (dirty[0] & /*isDisabled*/
    268435456) {
      set_custom_element_data(
        goa_icon_button,
        "disabled",
        /*isDisabled*/
        ctx2[28]
      );
    }
    if (dirty[0] & /*trailingicon*/
    64) {
      set_custom_element_data(
        goa_icon_button,
        "icon",
        /*trailingicon*/
        ctx2[6]
      );
    }
  }, d(detaching) {
    if (detaching)
      detach(goa_icon_button);
    mounted = false;
    dispose();
  } };
}
function create_if_block$j(ctx) {
  let span;
  let t2;
  return { c() {
    span = element("span");
    t2 = text(
      /*suffix*/
      ctx[16]
    );
    attr(span, "class", "suffix");
  }, m(target, anchor) {
    insert(target, span, anchor);
    append(span, t2);
  }, p(ctx2, dirty) {
    if (dirty[0] & /*suffix*/
    65536)
      set_data(
        t2,
        /*suffix*/
        ctx2[16]
      );
  }, d(detaching) {
    if (detaching)
      detach(span);
  } };
}
function create_fragment$y(ctx) {
  let div3;
  let div2;
  let t0;
  let div0;
  let t1;
  let t2;
  let input;
  let input_class_value;
  let input_style_value;
  let input_id_value;
  let input_aria_label_value;
  let t3;
  let t4;
  let t5;
  let t6;
  let div1;
  let div2_class_value;
  let div3_style_value;
  let mounted;
  let dispose;
  let if_block0 = (
    /*prefix*/
    ctx[15] && create_if_block_4$2(ctx)
  );
  let if_block1 = (
    /*leadingicon*/
    ctx[5] && create_if_block_3$8(ctx)
  );
  let if_block2 = (
    /*trailingicon*/
    ctx[6] && !/*handlesTrailingIconClick*/
    ctx[30] && create_if_block_2$8(ctx)
  );
  let if_block3 = (
    /*trailingicon*/
    ctx[6] && /*handlesTrailingIconClick*/
    ctx[30] && create_if_block_1$9(ctx)
  );
  let if_block4 = (
    /*suffix*/
    ctx[16] && create_if_block$j(ctx)
  );
  return { c() {
    div3 = element("div");
    div2 = element("div");
    if (if_block0)
      if_block0.c();
    t0 = space();
    div0 = element("div");
    div0.innerHTML = `<slot name="leadingContent"></slot>`;
    t1 = space();
    if (if_block1)
      if_block1.c();
    t2 = space();
    input = element("input");
    t3 = space();
    if (if_block2)
      if_block2.c();
    t4 = space();
    if (if_block3)
      if_block3.c();
    t5 = space();
    if (if_block4)
      if_block4.c();
    t6 = space();
    div1 = element("div");
    div1.innerHTML = `<slot name="trailingContent"></slot>`;
    this.c = noop;
    attr(div0, "class", "leading-content");
    attr(input, "class", input_class_value = "input--" + /*variant*/
    ctx[7]);
    attr(input, "style", input_style_value = `--search-icon-offset: ${/*trailingicon*/
    ctx[6] ? "-0.5rem" : "0"}`);
    input.readOnly = /*isReadonly*/
    ctx[27];
    input.disabled = /*isDisabled*/
    ctx[28];
    attr(
      input,
      "data-testid",
      /*testid*/
      ctx[8]
    );
    attr(
      input,
      "autocapitalize",
      /*autocapitalize*/
      ctx[3]
    );
    attr(
      input,
      "name",
      /*name*/
      ctx[2]
    );
    attr(
      input,
      "type",
      /*type*/
      ctx[1]
    );
    input.value = /*value*/
    ctx[0];
    attr(
      input,
      "placeholder",
      /*placeholder*/
      ctx[4]
    );
    attr(
      input,
      "min",
      /*min*/
      ctx[12]
    );
    attr(
      input,
      "max",
      /*max*/
      ctx[13]
    );
    attr(
      input,
      "step",
      /*step*/
      ctx[14]
    );
    attr(
      input,
      "maxlength",
      /*maxlength*/
      ctx[17]
    );
    attr(input, "id", input_id_value = /*id*/
    ctx[18] || /*name*/
    ctx[2]);
    attr(input, "role", "textbox");
    attr(input, "aria-label", input_aria_label_value = /*arialabel*/
    ctx[10] || /*name*/
    ctx[2]);
    attr(
      input,
      "aria-labelledby",
      /*arialabelledby*/
      ctx[11]
    );
    toggle_class(
      input,
      "input-leading-content",
      /*_leadingContentSlot*/
      ctx[25] && !/*isDisabled*/
      ctx[28]
    );
    toggle_class(
      input,
      "input-trailing-content",
      /*_trailingContentSlot*/
      ctx[26] && !/*isDisabled*/
      ctx[28]
    );
    attr(div1, "class", "trailing-content");
    attr(div2, "class", div2_class_value = "goa-input variant--" + /*variant*/
    ctx[7] + " type--" + /*type*/
    ctx[1]);
    toggle_class(
      div2,
      "input--disabled",
      /*isDisabled*/
      ctx[28]
    );
    toggle_class(
      div2,
      "input-leading-content",
      /*_leadingContentSlot*/
      ctx[25]
    );
    toggle_class(
      div2,
      "input-trailing-content",
      /*_trailingContentSlot*/
      ctx[26]
    );
    toggle_class(
      div2,
      "error",
      /*isError*/
      ctx[29]
    );
    attr(div3, "class", "container");
    attr(div3, "style", div3_style_value = `--width: ${/*width*/
    ctx[9]};${calculateMargin(
      /*mt*/
      ctx[19],
      /*mr*/
      ctx[20],
      /*mb*/
      ctx[21],
      /*ml*/
      ctx[22]
    )}`);
  }, m(target, anchor) {
    insert(target, div3, anchor);
    append(div3, div2);
    if (if_block0)
      if_block0.m(div2, null);
    append(div2, t0);
    append(div2, div0);
    append(div2, t1);
    if (if_block1)
      if_block1.m(div2, null);
    append(div2, t2);
    append(div2, input);
    ctx[41](input);
    append(div2, t3);
    if (if_block2)
      if_block2.m(div2, null);
    append(div2, t4);
    if (if_block3)
      if_block3.m(div2, null);
    append(div2, t5);
    if (if_block4)
      if_block4.m(div2, null);
    append(div2, t6);
    append(div2, div1);
    ctx[42](div3);
    if (!mounted) {
      dispose = [listen(
        input,
        "keyup",
        /*onKeyUp*/
        ctx[31]
      ), listen(
        input,
        "change",
        /*onKeyUp*/
        ctx[31]
      ), listen(
        input,
        "focus",
        /*onFocus*/
        ctx[32]
      ), listen(
        input,
        "blur",
        /*onBlur*/
        ctx[33]
      )];
      mounted = true;
    }
  }, p(ctx2, dirty) {
    if (
      /*prefix*/
      ctx2[15]
    ) {
      if (if_block0) {
        if_block0.p(ctx2, dirty);
      } else {
        if_block0 = create_if_block_4$2(ctx2);
        if_block0.c();
        if_block0.m(div2, t0);
      }
    } else if (if_block0) {
      if_block0.d(1);
      if_block0 = null;
    }
    if (
      /*leadingicon*/
      ctx2[5]
    ) {
      if (if_block1) {
        if_block1.p(ctx2, dirty);
      } else {
        if_block1 = create_if_block_3$8(ctx2);
        if_block1.c();
        if_block1.m(div2, t2);
      }
    } else if (if_block1) {
      if_block1.d(1);
      if_block1 = null;
    }
    if (dirty[0] & /*variant*/
    128 && input_class_value !== (input_class_value = "input--" + /*variant*/
    ctx2[7])) {
      attr(input, "class", input_class_value);
    }
    if (dirty[0] & /*trailingicon*/
    64 && input_style_value !== (input_style_value = `--search-icon-offset: ${/*trailingicon*/
    ctx2[6] ? "-0.5rem" : "0"}`)) {
      attr(input, "style", input_style_value);
    }
    if (dirty[0] & /*isReadonly*/
    134217728) {
      input.readOnly = /*isReadonly*/
      ctx2[27];
    }
    if (dirty[0] & /*isDisabled*/
    268435456) {
      input.disabled = /*isDisabled*/
      ctx2[28];
    }
    if (dirty[0] & /*testid*/
    256) {
      attr(
        input,
        "data-testid",
        /*testid*/
        ctx2[8]
      );
    }
    if (dirty[0] & /*autocapitalize*/
    8) {
      attr(
        input,
        "autocapitalize",
        /*autocapitalize*/
        ctx2[3]
      );
    }
    if (dirty[0] & /*name*/
    4) {
      attr(
        input,
        "name",
        /*name*/
        ctx2[2]
      );
    }
    if (dirty[0] & /*type*/
    2) {
      attr(
        input,
        "type",
        /*type*/
        ctx2[1]
      );
    }
    if (dirty[0] & /*value*/
    1 && input.value !== /*value*/
    ctx2[0]) {
      input.value = /*value*/
      ctx2[0];
    }
    if (dirty[0] & /*placeholder*/
    16) {
      attr(
        input,
        "placeholder",
        /*placeholder*/
        ctx2[4]
      );
    }
    if (dirty[0] & /*min*/
    4096) {
      attr(
        input,
        "min",
        /*min*/
        ctx2[12]
      );
    }
    if (dirty[0] & /*max*/
    8192) {
      attr(
        input,
        "max",
        /*max*/
        ctx2[13]
      );
    }
    if (dirty[0] & /*step*/
    16384) {
      attr(
        input,
        "step",
        /*step*/
        ctx2[14]
      );
    }
    if (dirty[0] & /*maxlength*/
    131072) {
      attr(
        input,
        "maxlength",
        /*maxlength*/
        ctx2[17]
      );
    }
    if (dirty[0] & /*id, name*/
    262148 && input_id_value !== (input_id_value = /*id*/
    ctx2[18] || /*name*/
    ctx2[2])) {
      attr(input, "id", input_id_value);
    }
    if (dirty[0] & /*arialabel, name*/
    1028 && input_aria_label_value !== (input_aria_label_value = /*arialabel*/
    ctx2[10] || /*name*/
    ctx2[2])) {
      attr(input, "aria-label", input_aria_label_value);
    }
    if (dirty[0] & /*arialabelledby*/
    2048) {
      attr(
        input,
        "aria-labelledby",
        /*arialabelledby*/
        ctx2[11]
      );
    }
    if (dirty[0] & /*variant, _leadingContentSlot, isDisabled*/
    301990016) {
      toggle_class(
        input,
        "input-leading-content",
        /*_leadingContentSlot*/
        ctx2[25] && !/*isDisabled*/
        ctx2[28]
      );
    }
    if (dirty[0] & /*variant, _trailingContentSlot, isDisabled*/
    335544448) {
      toggle_class(
        input,
        "input-trailing-content",
        /*_trailingContentSlot*/
        ctx2[26] && !/*isDisabled*/
        ctx2[28]
      );
    }
    if (
      /*trailingicon*/
      ctx2[6] && !/*handlesTrailingIconClick*/
      ctx2[30]
    ) {
      if (if_block2) {
        if_block2.p(ctx2, dirty);
      } else {
        if_block2 = create_if_block_2$8(ctx2);
        if_block2.c();
        if_block2.m(div2, t4);
      }
    } else if (if_block2) {
      if_block2.d(1);
      if_block2 = null;
    }
    if (
      /*trailingicon*/
      ctx2[6] && /*handlesTrailingIconClick*/
      ctx2[30]
    ) {
      if (if_block3) {
        if_block3.p(ctx2, dirty);
      } else {
        if_block3 = create_if_block_1$9(ctx2);
        if_block3.c();
        if_block3.m(div2, t5);
      }
    } else if (if_block3) {
      if_block3.d(1);
      if_block3 = null;
    }
    if (
      /*suffix*/
      ctx2[16]
    ) {
      if (if_block4) {
        if_block4.p(ctx2, dirty);
      } else {
        if_block4 = create_if_block$j(ctx2);
        if_block4.c();
        if_block4.m(div2, t6);
      }
    } else if (if_block4) {
      if_block4.d(1);
      if_block4 = null;
    }
    if (dirty[0] & /*variant, type*/
    130 && div2_class_value !== (div2_class_value = "goa-input variant--" + /*variant*/
    ctx2[7] + " type--" + /*type*/
    ctx2[1])) {
      attr(div2, "class", div2_class_value);
    }
    if (dirty[0] & /*variant, type, isDisabled*/
    268435586) {
      toggle_class(
        div2,
        "input--disabled",
        /*isDisabled*/
        ctx2[28]
      );
    }
    if (dirty[0] & /*variant, type, _leadingContentSlot*/
    33554562) {
      toggle_class(
        div2,
        "input-leading-content",
        /*_leadingContentSlot*/
        ctx2[25]
      );
    }
    if (dirty[0] & /*variant, type, _trailingContentSlot*/
    67108994) {
      toggle_class(
        div2,
        "input-trailing-content",
        /*_trailingContentSlot*/
        ctx2[26]
      );
    }
    if (dirty[0] & /*variant, type, isError*/
    536871042) {
      toggle_class(
        div2,
        "error",
        /*isError*/
        ctx2[29]
      );
    }
    if (dirty[0] & /*width, mt, mr, mb, ml*/
    7864832 && div3_style_value !== (div3_style_value = `--width: ${/*width*/
    ctx2[9]};${calculateMargin(
      /*mt*/
      ctx2[19],
      /*mr*/
      ctx2[20],
      /*mb*/
      ctx2[21],
      /*ml*/
      ctx2[22]
    )}`)) {
      attr(div3, "style", div3_style_value);
    }
  }, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(div3);
    if (if_block0)
      if_block0.d();
    if (if_block1)
      if_block1.d();
    ctx[41](null);
    if (if_block2)
      if_block2.d();
    if (if_block3)
      if_block3.d();
    if (if_block4)
      if_block4.d();
    ctx[42](null);
    mounted = false;
    run_all(dispose);
  } };
}
function doClick() {
  this.dispatchEvent(new CustomEvent("_trailingIconClick", { composed: true }));
}
function instance$v($$self, $$props, $$invalidate) {
  let handlesTrailingIconClick;
  let isFocused;
  let isReadonly;
  let isError;
  let isDisabled;
  const [Types, validateType] = typeValidator("Input type", ["text", "number", "password", "email", "date", "datetime-local", "month", "range", "search", "tel", "time", "url", "week"]);
  const [AutoCapitalize, validateAutoCapitalize] = typeValidator("Input auto capitalize", ["on", "off", "none", "sentences", "words", "characters"]);
  let { type = "text" } = $$props;
  let { name = "" } = $$props;
  let { value = "" } = $$props;
  let { autocapitalize = "off" } = $$props;
  let { placeholder = "" } = $$props;
  let { leadingicon = null } = $$props;
  let { trailingicon = null } = $$props;
  let { variant = "goa" } = $$props;
  let { disabled = "false" } = $$props;
  let { handletrailingiconclick = "false" } = $$props;
  let { focused = "false" } = $$props;
  let { readonly = "false" } = $$props;
  let { error: error2 = "false" } = $$props;
  let { testid = "" } = $$props;
  let { width = "30ch" } = $$props;
  let { arialabel = null } = $$props;
  let { arialabelledby = null } = $$props;
  let { min = "" } = $$props;
  let { max = "" } = $$props;
  let { step = 1 } = $$props;
  let { prefix = "" } = $$props;
  let { suffix = "" } = $$props;
  let { debounce = 0 } = $$props;
  let { maxlength = null } = $$props;
  let { id: id2 = "" } = $$props;
  let { mt = null } = $$props;
  let { mr = null } = $$props;
  let { mb: mb2 = null } = $$props;
  let { ml: ml2 = null } = $$props;
  let inputEl;
  let _rootEL;
  let _leadingContentSlot = false;
  let _trailingContentSlot = false;
  let _debounceId = null;
  function onKeyUp(e) {
    const input = e.target;
    if (!input)
      return;
    if (isReadonly)
      return;
    if (_debounceId != null) {
      clearTimeout(_debounceId);
    }
    _debounceId = setTimeout(() => {
      input.dispatchEvent(new CustomEvent("_change", { composed: true, bubbles: false, cancelable: true, detail: { name, value: input.value } }));
    }, debounce);
    $$invalidate(0, value = input.value);
  }
  function onFocus(e) {
    const input = e.target;
    input.dispatchEvent(new CustomEvent("_focus", { composed: true, detail: { name, value: input.value } }));
  }
  function onBlur(e) {
    const input = e.target;
    input.dispatchEvent(new CustomEvent("_blur", { composed: true, detail: { name, value: input.value } }));
  }
  onMount(async () => {
    await tick();
    validateType(type);
    validateAutoCapitalize(autocapitalize);
    if (prefix != "" || suffix != "") {
      console.warn("GoAInput [prefix] and [suffix] properties are deprecated. Instead use leadingContent and trailingContent.");
    }
    const leadingContentSlot = _rootEL.querySelector("slot[name=leadingContent]");
    if (leadingContentSlot && leadingContentSlot.assignedNodes().length > 0) {
      $$invalidate(25, _leadingContentSlot = true);
    }
    const trailingContentSlot = _rootEL.querySelector("slot[name=trailingContent]");
    if (trailingContentSlot && trailingContentSlot.assignedNodes().length > 0) {
      $$invalidate(26, _trailingContentSlot = true);
    }
  });
  function input_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      inputEl = $$value;
      $$invalidate(23, inputEl);
    });
  }
  function div3_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      _rootEL = $$value;
      $$invalidate(24, _rootEL);
    });
  }
  $$self.$$set = ($$props2) => {
    if ("type" in $$props2)
      $$invalidate(1, type = $$props2.type);
    if ("name" in $$props2)
      $$invalidate(2, name = $$props2.name);
    if ("value" in $$props2)
      $$invalidate(0, value = $$props2.value);
    if ("autocapitalize" in $$props2)
      $$invalidate(3, autocapitalize = $$props2.autocapitalize);
    if ("placeholder" in $$props2)
      $$invalidate(4, placeholder = $$props2.placeholder);
    if ("leadingicon" in $$props2)
      $$invalidate(5, leadingicon = $$props2.leadingicon);
    if ("trailingicon" in $$props2)
      $$invalidate(6, trailingicon = $$props2.trailingicon);
    if ("variant" in $$props2)
      $$invalidate(7, variant = $$props2.variant);
    if ("disabled" in $$props2)
      $$invalidate(34, disabled = $$props2.disabled);
    if ("handletrailingiconclick" in $$props2)
      $$invalidate(35, handletrailingiconclick = $$props2.handletrailingiconclick);
    if ("focused" in $$props2)
      $$invalidate(36, focused = $$props2.focused);
    if ("readonly" in $$props2)
      $$invalidate(37, readonly = $$props2.readonly);
    if ("error" in $$props2)
      $$invalidate(38, error2 = $$props2.error);
    if ("testid" in $$props2)
      $$invalidate(8, testid = $$props2.testid);
    if ("width" in $$props2)
      $$invalidate(9, width = $$props2.width);
    if ("arialabel" in $$props2)
      $$invalidate(10, arialabel = $$props2.arialabel);
    if ("arialabelledby" in $$props2)
      $$invalidate(11, arialabelledby = $$props2.arialabelledby);
    if ("min" in $$props2)
      $$invalidate(12, min = $$props2.min);
    if ("max" in $$props2)
      $$invalidate(13, max = $$props2.max);
    if ("step" in $$props2)
      $$invalidate(14, step = $$props2.step);
    if ("prefix" in $$props2)
      $$invalidate(15, prefix = $$props2.prefix);
    if ("suffix" in $$props2)
      $$invalidate(16, suffix = $$props2.suffix);
    if ("debounce" in $$props2)
      $$invalidate(39, debounce = $$props2.debounce);
    if ("maxlength" in $$props2)
      $$invalidate(17, maxlength = $$props2.maxlength);
    if ("id" in $$props2)
      $$invalidate(18, id2 = $$props2.id);
    if ("mt" in $$props2)
      $$invalidate(19, mt = $$props2.mt);
    if ("mr" in $$props2)
      $$invalidate(20, mr = $$props2.mr);
    if ("mb" in $$props2)
      $$invalidate(21, mb2 = $$props2.mb);
    if ("ml" in $$props2)
      $$invalidate(22, ml2 = $$props2.ml);
  };
  $$self.$$.update = () => {
    if ($$self.$$.dirty[1] & /*handletrailingiconclick*/
    16) {
      $$invalidate(30, handlesTrailingIconClick = toBoolean(handletrailingiconclick));
    }
    if ($$self.$$.dirty[1] & /*focused*/
    32) {
      $$invalidate(40, isFocused = toBoolean(focused));
    }
    if ($$self.$$.dirty[1] & /*readonly*/
    64) {
      $$invalidate(27, isReadonly = toBoolean(readonly));
    }
    if ($$self.$$.dirty[1] & /*error*/
    128) {
      $$invalidate(29, isError = toBoolean(error2));
    }
    if ($$self.$$.dirty[1] & /*disabled*/
    8) {
      $$invalidate(28, isDisabled = toBoolean(disabled));
    }
    if ($$self.$$.dirty[0] & /*inputEl*/
    8388608 | $$self.$$.dirty[1] & /*isFocused*/
    512) {
      if (isFocused && inputEl) {
        setTimeout(() => inputEl.focus(), 1);
      }
    }
    if ($$self.$$.dirty[0] & /*inputEl, type*/
    8388610) {
      if (inputEl && type === "search") {
        inputEl.addEventListener("search", (e) => {
          onKeyUp(e);
        });
      }
    }
  };
  return [value, type, name, autocapitalize, placeholder, leadingicon, trailingicon, variant, testid, width, arialabel, arialabelledby, min, max, step, prefix, suffix, maxlength, id2, mt, mr, mb2, ml2, inputEl, _rootEL, _leadingContentSlot, _trailingContentSlot, isReadonly, isDisabled, isError, handlesTrailingIconClick, onKeyUp, onFocus, onBlur, disabled, handletrailingiconclick, focused, readonly, error2, debounce, isFocused, input_binding, div3_binding];
}
class Input extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `:host{box-sizing:border-box}.container{position:relative;width:100%;display:inline-block}@media screen and (max-width: 623px){@media not (max-color:2147477350){.container{width:var(--width)}}}@media not  screen and (max-width: 623px){@media not (color:2147477350){.container{width:var(--width)}}}.goa-input,.goa-input *{box-sizing:border-box;line-height:normal}.goa-input{box-sizing:border-box;outline:none;transition:box-shadow 0.1s ease-in;border:1px solid var(--goa-color-greyscale-700);border-radius:var(--goa-border-radius-m);display:inline-flex;align-items:stretch;vertical-align:middle;min-width:100%;background-color:var(--goa-color-greyscale-white)}.goa-input:hover:not(.goa-input-leading-content):not(.goa-input-trailing-content){border-color:var(--goa-color-interactive-hover);box-shadow:0 0 0 var(--goa-border-width-m) var(--goa-color-interactive-hover)}.goa-input:active:not(.goa-input-leading-content):not(.goa-input-trailing-content),.goa-input:focus:not(.goa-input-leading-content):not(.goa-input-trailing-content),.goa-input:focus-within:not(.goa-input-leading-content):not(.goa-input-trailing-content){box-shadow:0 0 0 3px var(--goa-color-interactive-focus)}.goa-input.type--range{border:none}.goa-input.type--range:active,.goa-input.type--range:focus,.goa-input.type--range:focus-within{box-shadow:none}.goa-input-leading-icon{margin-left:0.75rem}.goa-input-trailing-icon{margin-right:var(--goa-space-s)}.goa-input-trailing-icon-button{margin-right:var(--goa-space-xs)}input{display:inline-block;color:var(--goa-color-text-default);font-size:var(--goa-font-size-4);padding:var(--goa-space-xs) var(--goa-space-s);line-height:calc(40px - calc(var(--goa-space-xs) * 2));background-color:transparent;width:100%;flex:1 1 auto;font-family:var(--goa-font-family-sans);z-index:1}input[readonly]{cursor:pointer}.goa-input-leading-icon+input{padding-left:0.5rem}input,input:focus,input:hover,input:active{outline:none;border:none}.goa-input--disabled,.goa-input--disabled:hover,.goa-input--disabled:active,.goa-input--disabled:focus{background-color:var(--goa-color-greyscale-100);border-color:var(--goa-color-greyscale-200) !important;cursor:default;box-shadow:none !important}.goa-input--disabled input,.goa-input--disabled input:hover,.goa-input--disabled input:active,.goa-input--disabled input:focus{color:var(--goa-color-text-secondary)}.goa-input--disabled input:hover{cursor:default !important}.prefix,.suffix,.leading-content ::slotted(div),.trailing-content ::slotted(div){background-color:var(--goa-color-greyscale-100);padding:0 0.75rem;display:flex;align-items:center}.leading-content ::slotted(div),.trailing-content ::slotted(div){padding:0.5rem 0.75rem}.prefix,.leading-content ::slotted(div){border-top-left-radius:var(--goa-border-radius-m);border-bottom-left-radius:var(--goa-border-radius-m);border-right:1px solid var(--goa-color-greyscale-700)}.suffix,.trailing-content ::slotted(div){border-top-right-radius:var(--goa-border-radius-m);border-bottom-right-radius:var(--goa-border-radius-m);border-left:1px solid var(--goa-color-greyscale-700)}.goa-input--disabled .prefix,.goa-input--disabled .leading-content ::slotted(div){border-right:1px solid var(--goa-color-greyscale-200)}.goa-input--disabled .suffix,.goa-input--disabled .trailing-content ::slotted(div){border-left:1px solid var(--goa-color-greyscale-200)}input.input--goa{display:block;border:none;flex:1 1 auto}.variant--bare{border:none}.variant--bare:focus,.variant--bare:active,.variant--bare:focus-within{box-shadow:none}.error:not(.goa-input-leading-content):not(.goa-input-trailing-content),.error:hover:not(.goa-input-leading-content):not(.goa-input-trailing-content){border:2px solid var(--goa-color-interactive-error);box-shadow:0 0 0 1px var(--goa-color-interactive-error)}.error:focus-within:hover:not(.goa-input-leading-content):not(.goa-input-trailing-content){border:2px solid var(--goa-color-interactive-error);box-shadow:0 0 0 3px var(--goa-color-interactive-focus)}.error .input-leading-content,.error .input-leading-content:hover,.error .input-trailing-content,.error .input-trailing-content:hover{outline:var(--goa-border-width-s) solid var(--goa-color-interactive-error);box-shadow:inset 0 0 0 var(--goa-border-width-m) var(--goa-color-interactive-error)}.error .input-leading-content:focus,.error .input-trailing-content:focus,.error .input-leading-content:active,.error .input-trailing-content:active{outline:var(--goa-border-width-s) solid var(--goa-color-interactive-error);box-shadow:0 0 0 var(--goa-border-width-l) var(--goa-color-interactive-focus)}.input-leading-content:hover,.input-trailing-content:hover{box-shadow:inset 0 0 0 var(--goa-border-width-m) var(--goa-color-interactive-hover);outline:var(--goa-border-width-s) solid var(--goa-color-interactive-hover)}.input-leading-content:active,.input-leading-content:focus,.input-leading-content:focus-within,.input-trailing-content:active,.input-trailing-content:focus,.input-trailing-content:focus-within{box-shadow:0 0 0 var(--goa-border-width-l) var(--goa-color-interactive-focus);outline:var(--goa-border-width-s) solid var(--goa-color-greyscale-700)}.error .input-trailing-content,.input-trailing-content:hover,.input-trailing-content:active,.input-trailing-content:focus,.input-trailing-content:focus-within{border-top-left-radius:var(--goa-border-radius-m);border-bottom-left-radius:var(--goa-border-radius-m)}.error .input-leading-content,.input-leading-content:hover,.input-leading-content:active,.input-leading-content:focus,.input-leading-content:focus-within{border-top-right-radius:var(--goa-border-radius-m);border-bottom-right-radius:var(--goa-border-radius-m)}.input-leading-content.input-trailing-content,.input-leading-content.input-trailing-content:hover,.input-leading-content.input-trailing-content:active,.input-leading-content.input-trailing-content:focus,.input-leading-content.input-trailing-content:focus-within{border-radius:0}input[type="search"]:enabled:read-write:-webkit-any(:focus, :hover)::-webkit-search-cancel-button{position:relative;right:var(--search-icon-offset);cursor:pointer;-webkit-appearance:none;height:1.2rem;width:1.2rem;background:url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path fill="%23333" d="M405 136.798L375.202 107 256 226.202 136.798 107 107 136.798 226.202 256 107 375.202 136.798 405 256 285.798 375.202 405 405 375.202 285.798 256z"/></svg>')
    center center no-repeat}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$v, create_fragment$y, safe_not_equal, { type: 1, name: 2, value: 0, autocapitalize: 3, placeholder: 4, leadingicon: 5, trailingicon: 6, variant: 7, disabled: 34, handletrailingiconclick: 35, focused: 36, readonly: 37, error: 38, testid: 8, width: 9, arialabel: 10, arialabelledby: 11, min: 12, max: 13, step: 14, prefix: 15, suffix: 16, debounce: 39, maxlength: 17, id: 18, mt: 19, mr: 20, mb: 21, ml: 22 }, null, [-1, -1]);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["type", "name", "value", "autocapitalize", "placeholder", "leadingicon", "trailingicon", "variant", "disabled", "handletrailingiconclick", "focused", "readonly", "error", "testid", "width", "arialabel", "arialabelledby", "min", "max", "step", "prefix", "suffix", "debounce", "maxlength", "id", "mt", "mr", "mb", "ml"];
  }
  get type() {
    return this.$$.ctx[1];
  }
  set type(type) {
    this.$$set({ type });
    flush();
  }
  get name() {
    return this.$$.ctx[2];
  }
  set name(name) {
    this.$$set({ name });
    flush();
  }
  get value() {
    return this.$$.ctx[0];
  }
  set value(value) {
    this.$$set({ value });
    flush();
  }
  get autocapitalize() {
    return this.$$.ctx[3];
  }
  set autocapitalize(autocapitalize) {
    this.$$set({ autocapitalize });
    flush();
  }
  get placeholder() {
    return this.$$.ctx[4];
  }
  set placeholder(placeholder) {
    this.$$set({ placeholder });
    flush();
  }
  get leadingicon() {
    return this.$$.ctx[5];
  }
  set leadingicon(leadingicon) {
    this.$$set({ leadingicon });
    flush();
  }
  get trailingicon() {
    return this.$$.ctx[6];
  }
  set trailingicon(trailingicon) {
    this.$$set({ trailingicon });
    flush();
  }
  get variant() {
    return this.$$.ctx[7];
  }
  set variant(variant) {
    this.$$set({ variant });
    flush();
  }
  get disabled() {
    return this.$$.ctx[34];
  }
  set disabled(disabled) {
    this.$$set({ disabled });
    flush();
  }
  get handletrailingiconclick() {
    return this.$$.ctx[35];
  }
  set handletrailingiconclick(handletrailingiconclick) {
    this.$$set({ handletrailingiconclick });
    flush();
  }
  get focused() {
    return this.$$.ctx[36];
  }
  set focused(focused) {
    this.$$set({ focused });
    flush();
  }
  get readonly() {
    return this.$$.ctx[37];
  }
  set readonly(readonly) {
    this.$$set({ readonly });
    flush();
  }
  get error() {
    return this.$$.ctx[38];
  }
  set error(error2) {
    this.$$set({ error: error2 });
    flush();
  }
  get testid() {
    return this.$$.ctx[8];
  }
  set testid(testid) {
    this.$$set({ testid });
    flush();
  }
  get width() {
    return this.$$.ctx[9];
  }
  set width(width) {
    this.$$set({ width });
    flush();
  }
  get arialabel() {
    return this.$$.ctx[10];
  }
  set arialabel(arialabel) {
    this.$$set({ arialabel });
    flush();
  }
  get arialabelledby() {
    return this.$$.ctx[11];
  }
  set arialabelledby(arialabelledby) {
    this.$$set({ arialabelledby });
    flush();
  }
  get min() {
    return this.$$.ctx[12];
  }
  set min(min) {
    this.$$set({ min });
    flush();
  }
  get max() {
    return this.$$.ctx[13];
  }
  set max(max) {
    this.$$set({ max });
    flush();
  }
  get step() {
    return this.$$.ctx[14];
  }
  set step(step) {
    this.$$set({ step });
    flush();
  }
  get prefix() {
    return this.$$.ctx[15];
  }
  set prefix(prefix) {
    this.$$set({ prefix });
    flush();
  }
  get suffix() {
    return this.$$.ctx[16];
  }
  set suffix(suffix) {
    this.$$set({ suffix });
    flush();
  }
  get debounce() {
    return this.$$.ctx[39];
  }
  set debounce(debounce) {
    this.$$set({ debounce });
    flush();
  }
  get maxlength() {
    return this.$$.ctx[17];
  }
  set maxlength(maxlength) {
    this.$$set({ maxlength });
    flush();
  }
  get id() {
    return this.$$.ctx[18];
  }
  set id(id2) {
    this.$$set({ id: id2 });
    flush();
  }
  get mt() {
    return this.$$.ctx[19];
  }
  set mt(mt) {
    this.$$set({ mt });
    flush();
  }
  get mr() {
    return this.$$.ctx[20];
  }
  set mr(mr) {
    this.$$set({ mr });
    flush();
  }
  get mb() {
    return this.$$.ctx[21];
  }
  set mb(mb2) {
    this.$$set({ mb: mb2 });
    flush();
  }
  get ml() {
    return this.$$.ctx[22];
  }
  set ml(ml2) {
    this.$$set({ ml: ml2 });
    flush();
  }
}
customElements.define("goa-input", Input);
function create_if_block_3$7(ctx) {
  let div;
  let t0;
  let a;
  let t1;
  let a_target_value;
  return { c() {
    div = element("div");
    t0 = text("An official site of the ");
    a = element("a");
    t1 = text("Alberta Government");
    attr(a, "href", "https://www.alberta.ca/index.aspx");
    attr(a, "target", a_target_value = `_${/*headerurltarget*/
    ctx[4]}`);
    attr(div, "data-testid", "type");
    attr(div, "class", "site-text");
  }, m(target, anchor) {
    insert(target, div, anchor);
    append(div, t0);
    append(div, a);
    append(a, t1);
  }, p(ctx2, dirty) {
    if (dirty & /*headerurltarget*/
    16 && a_target_value !== (a_target_value = `_${/*headerurltarget*/
    ctx2[4]}`)) {
      attr(a, "target", a_target_value);
    }
  }, d(detaching) {
    if (detaching)
      detach(div);
  } };
}
function create_if_block_1$8(ctx) {
  let div0;
  let t0_value = capitalize(
    /*type*/
    ctx[0]
  ) + "";
  let t0;
  let div0_class_value;
  let t1;
  let div1;
  let t2;
  let a;
  let t3;
  let a_target_value;
  let t4;
  let if_block = (
    /*feedbackurl*/
    ctx[2] && create_if_block_2$7(ctx)
  );
  return { c() {
    div0 = element("div");
    t0 = text(t0_value);
    t1 = space();
    div1 = element("div");
    t2 = text("This is a new ");
    a = element("a");
    t3 = text("Alberta Government");
    t4 = text(" service\n        ");
    if (if_block)
      if_block.c();
    attr(div0, "data-testid", "type");
    attr(div0, "class", div0_class_value = "service-type service-type--" + /*type*/
    ctx[0].toLowerCase());
    attr(a, "href", "https://www.alberta.ca/index.aspx");
    attr(a, "target", a_target_value = `_${/*headerurltarget*/
    ctx[4]}`);
    attr(div1, "data-testid", "site-text");
    attr(div1, "class", "site-text");
  }, m(target, anchor) {
    insert(target, div0, anchor);
    append(div0, t0);
    insert(target, t1, anchor);
    insert(target, div1, anchor);
    append(div1, t2);
    append(div1, a);
    append(a, t3);
    append(div1, t4);
    if (if_block)
      if_block.m(div1, null);
  }, p(ctx2, dirty) {
    if (dirty & /*type*/
    1 && t0_value !== (t0_value = capitalize(
      /*type*/
      ctx2[0]
    ) + ""))
      set_data(t0, t0_value);
    if (dirty & /*type*/
    1 && div0_class_value !== (div0_class_value = "service-type service-type--" + /*type*/
    ctx2[0].toLowerCase())) {
      attr(div0, "class", div0_class_value);
    }
    if (dirty & /*headerurltarget*/
    16 && a_target_value !== (a_target_value = `_${/*headerurltarget*/
    ctx2[4]}`)) {
      attr(a, "target", a_target_value);
    }
    if (
      /*feedbackurl*/
      ctx2[2]
    ) {
      if (if_block) {
        if_block.p(ctx2, dirty);
      } else {
        if_block = create_if_block_2$7(ctx2);
        if_block.c();
        if_block.m(div1, null);
      }
    } else if (if_block) {
      if_block.d(1);
      if_block = null;
    }
  }, d(detaching) {
    if (detaching)
      detach(div0);
    if (detaching)
      detach(t1);
    if (detaching)
      detach(div1);
    if (if_block)
      if_block.d();
  } };
}
function create_if_block_2$7(ctx) {
  let span;
  let t0;
  let a;
  let t1;
  let a_target_value;
  return { c() {
    span = element("span");
    t0 = text("— help us improve it by giving ");
    a = element("a");
    t1 = text("feedback");
    attr(
      a,
      "href",
      /*feedbackurl*/
      ctx[2]
    );
    attr(a, "target", a_target_value = `_${/*feedbackurltarget*/
    ctx[5]}`);
    attr(span, "data-testid", "feedback");
  }, m(target, anchor) {
    insert(target, span, anchor);
    append(span, t0);
    append(span, a);
    append(a, t1);
  }, p(ctx2, dirty) {
    if (dirty & /*feedbackurl*/
    4) {
      attr(
        a,
        "href",
        /*feedbackurl*/
        ctx2[2]
      );
    }
    if (dirty & /*feedbackurltarget*/
    32 && a_target_value !== (a_target_value = `_${/*feedbackurltarget*/
    ctx2[5]}`)) {
      attr(a, "target", a_target_value);
    }
  }, d(detaching) {
    if (detaching)
      detach(span);
  } };
}
function create_if_block$i(ctx) {
  let div;
  let t2;
  return { c() {
    div = element("div");
    t2 = text(
      /*version*/
      ctx[1]
    );
    attr(div, "data-testid", "version");
    attr(div, "class", "version");
  }, m(target, anchor) {
    insert(target, div, anchor);
    append(div, t2);
  }, p(ctx2, dirty) {
    if (dirty & /*version*/
    2)
      set_data(
        t2,
        /*version*/
        ctx2[1]
      );
  }, d(detaching) {
    if (detaching)
      detach(div);
  } };
}
function create_fragment$x(ctx) {
  let header;
  let div1;
  let t0;
  let show_if = ["alpha", "beta"].includes(
    /*type*/
    ctx[0]
  );
  let t1;
  let div0;
  let t2;
  let header_style_value;
  let if_block0 = (
    /*type*/
    ctx[0] === "live" && create_if_block_3$7(ctx)
  );
  let if_block1 = show_if && create_if_block_1$8(ctx);
  let if_block2 = (
    /*version*/
    ctx[1] && create_if_block$i(ctx)
  );
  return { c() {
    header = element("header");
    div1 = element("div");
    if (if_block0)
      if_block0.c();
    t0 = space();
    if (if_block1)
      if_block1.c();
    t1 = space();
    div0 = element("div");
    t2 = space();
    if (if_block2)
      if_block2.c();
    this.c = noop;
    attr(div0, "class", "spacer");
    attr(div1, "class", "content-container");
    attr(header, "class", "goa-official-site-header");
    attr(header, "style", header_style_value = `--max-content-width: ${/*maxcontentwidth*/
    ctx[3]}`);
  }, m(target, anchor) {
    insert(target, header, anchor);
    append(header, div1);
    if (if_block0)
      if_block0.m(div1, null);
    append(div1, t0);
    if (if_block1)
      if_block1.m(div1, null);
    append(div1, t1);
    append(div1, div0);
    append(div1, t2);
    if (if_block2)
      if_block2.m(div1, null);
  }, p(ctx2, [dirty]) {
    if (
      /*type*/
      ctx2[0] === "live"
    ) {
      if (if_block0) {
        if_block0.p(ctx2, dirty);
      } else {
        if_block0 = create_if_block_3$7(ctx2);
        if_block0.c();
        if_block0.m(div1, t0);
      }
    } else if (if_block0) {
      if_block0.d(1);
      if_block0 = null;
    }
    if (dirty & /*type*/
    1)
      show_if = ["alpha", "beta"].includes(
        /*type*/
        ctx2[0]
      );
    if (show_if) {
      if (if_block1) {
        if_block1.p(ctx2, dirty);
      } else {
        if_block1 = create_if_block_1$8(ctx2);
        if_block1.c();
        if_block1.m(div1, t1);
      }
    } else if (if_block1) {
      if_block1.d(1);
      if_block1 = null;
    }
    if (
      /*version*/
      ctx2[1]
    ) {
      if (if_block2) {
        if_block2.p(ctx2, dirty);
      } else {
        if_block2 = create_if_block$i(ctx2);
        if_block2.c();
        if_block2.m(div1, null);
      }
    } else if (if_block2) {
      if_block2.d(1);
      if_block2 = null;
    }
    if (dirty & /*maxcontentwidth*/
    8 && header_style_value !== (header_style_value = `--max-content-width: ${/*maxcontentwidth*/
    ctx2[3]}`)) {
      attr(header, "style", header_style_value);
    }
  }, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(header);
    if (if_block0)
      if_block0.d();
    if (if_block1)
      if_block1.d();
    if (if_block2)
      if_block2.d();
  } };
}
function capitalize(val) {
  if (!val || val && val.length === 0)
    return "";
  return val[0].toUpperCase() + val.slice(1);
}
function instance$u($$self, $$props, $$invalidate) {
  const [Types, validateType] = typeValidator("Microsite header type", ["live", "alpha", "beta"], true);
  let { type } = $$props;
  let { version: version2 = "" } = $$props;
  let { feedbackurl = "" } = $$props;
  let { maxcontentwidth = "100%" } = $$props;
  let { headerurltarget = "blank" } = $$props;
  let { feedbackurltarget = "blank" } = $$props;
  const [UrlTarget, validateUrlTargetType] = typeValidator("URL target values", ["self", "blank"]);
  onMount(() => {
    setTimeout(() => validateType(type), 1);
    validateUrlTargetType(headerurltarget);
    validateUrlTargetType(feedbackurltarget);
  });
  $$self.$$set = ($$props2) => {
    if ("type" in $$props2)
      $$invalidate(0, type = $$props2.type);
    if ("version" in $$props2)
      $$invalidate(1, version2 = $$props2.version);
    if ("feedbackurl" in $$props2)
      $$invalidate(2, feedbackurl = $$props2.feedbackurl);
    if ("maxcontentwidth" in $$props2)
      $$invalidate(3, maxcontentwidth = $$props2.maxcontentwidth);
    if ("headerurltarget" in $$props2)
      $$invalidate(4, headerurltarget = $$props2.headerurltarget);
    if ("feedbackurltarget" in $$props2)
      $$invalidate(5, feedbackurltarget = $$props2.feedbackurltarget);
  };
  return [type, version2, feedbackurl, maxcontentwidth, headerurltarget, feedbackurltarget];
}
class MicrositeHeader extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `:host{box-sizing:border-box;font-family:var(--goa-font-family-sans)}a{color:var(--goa-color-interactive-default);cursor:pointer}a:hover{color:var(--goa-color-interactive-hover)}a:focus{outline-width:thin;outline-style:solid;outline-color:var(--goa-color-interactive-hover);outline-offset:0px}a[target="_blank"]::after{content:"";width:var(--goa-icon-size-s);height:var(--goa-icon-size-s);background-color:var(--goa-color-interactive-default);display:inline-block;margin-left:var(--goa-space-2xs);vertical-align:sub;mask:url("data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20class%3D%22ionicon%22%20viewBox%3D%220%200%20512%20512%22%3E%3Cpath%20d%3D%22M384%20224v184a40%2040%200%200%201-40%2040H104a40%2040%200%200%201-40-40V168a40%2040%200%200%201%2040-40h167.48M336%2064h112v112M224%20288%20440%2072%22%20fill%3D%22none%22%20stroke%3D%22currentColor%22%20stroke-linecap%3D%22round%22%20stroke-linejoin%3D%22round%22%20stroke-width%3D%2232%22%2F%3E%3C%2Fsvg%3E")
    center bottom no-repeat;-webkit-mask:url("data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20class%3D%22ionicon%22%20viewBox%3D%220%200%20512%20512%22%3E%3Cpath%20d%3D%22M384%20224v184a40%2040%200%200%201-40%2040H104a40%2040%200%200%201-40-40V168a40%2040%200%200%201%2040-40h167.48M336%2064h112v112M224%20288%20440%2072%22%20fill%3D%22none%22%20stroke%3D%22currentColor%22%20stroke-linecap%3D%22round%22%20stroke-linejoin%3D%22round%22%20stroke-width%3D%2232%22%2F%3E%3C%2Fsvg%3E")
    center bottom no-repeat}a[target="_blank"]:hover:after{background-color:var(--goa-color-interactive-hover)}.goa-official-site-header{font-size:var(--goa-font-size-2);background-color:var(--goa-color-greyscale-100);padding:0.5rem 1rem}.content-container{display:flex;align-items:start;justify-content:space-between;max-width:min(var(--max-content-width), 100%);margin:0 auto}@media screen and (max-width: 623px){@media not (max-color:2147477350){.goa-official-site-header{padding:0.25rem 2rem}.content-container{align-items:center}}}@media not  screen and (max-width: 623px){@media not (color:2147477350){.goa-official-site-header{padding:0.25rem 2rem}.content-container{align-items:center}}}@media screen and (min-width: 1024px){.goa-official-site-header{padding:0.25rem 4.5rem}}.spacer{flex:1 1 auto}.version{color:var(--goa-color-text-secondary);padding-left:1rem;line-height:1.25rem}.service-type{font-weight:bold;padding:0.125rem 0.25rem;display:flex;margin-right:1rem;line-height:initial}.service-type--alpha{background-color:var(--goa-color-warning-default);color:var(--goa-color-text-default)}.service-type--beta{background-color:var(--goa-color-brand-default);color:var(--goa-color-text-light)}.site-text{color:var(--goa-color-text-default);line-height:1.25rem}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$u, create_fragment$x, safe_not_equal, { type: 0, version: 1, feedbackurl: 2, maxcontentwidth: 3, headerurltarget: 4, feedbackurltarget: 5 }, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["type", "version", "feedbackurl", "maxcontentwidth", "headerurltarget", "feedbackurltarget"];
  }
  get type() {
    return this.$$.ctx[0];
  }
  set type(type) {
    this.$$set({ type });
    flush();
  }
  get version() {
    return this.$$.ctx[1];
  }
  set version(version2) {
    this.$$set({ version: version2 });
    flush();
  }
  get feedbackurl() {
    return this.$$.ctx[2];
  }
  set feedbackurl(feedbackurl) {
    this.$$set({ feedbackurl });
    flush();
  }
  get maxcontentwidth() {
    return this.$$.ctx[3];
  }
  set maxcontentwidth(maxcontentwidth) {
    this.$$set({ maxcontentwidth });
    flush();
  }
  get headerurltarget() {
    return this.$$.ctx[4];
  }
  set headerurltarget(headerurltarget) {
    this.$$set({ headerurltarget });
    flush();
  }
  get feedbackurltarget() {
    return this.$$.ctx[5];
  }
  set feedbackurltarget(feedbackurltarget) {
    this.$$set({ feedbackurltarget });
    flush();
  }
}
customElements.define("goa-microsite-header", MicrositeHeader);
function create_if_block$h(ctx) {
  let goa_focus_trap;
  let div6;
  let div0;
  let t0;
  let div5;
  let t1;
  let div4;
  let header;
  let div1;
  let t2;
  let t3;
  let div2;
  let goa_scrollable;
  let t4;
  let div3;
  let div5_intro;
  let div5_outro;
  let div6_style_value;
  let noscroll_action;
  let div6_intro;
  let div6_outro;
  let current;
  let mounted;
  let dispose;
  let if_block0 = (
    /*calloutvariant*/
    ctx[3] !== null && create_if_block_3$6(ctx)
  );
  function select_block_type(ctx2, dirty) {
    if (
      /*heading*/
      ctx2[1]
    )
      return create_if_block_2$6;
    return create_else_block$8;
  }
  let current_block_type = select_block_type(ctx);
  let if_block1 = current_block_type(ctx);
  let if_block2 = (
    /*_isClosable*/
    ctx[9] && create_if_block_1$7(ctx)
  );
  return { c() {
    goa_focus_trap = element("goa-focus-trap");
    div6 = element("div");
    div0 = element("div");
    t0 = space();
    div5 = element("div");
    if (if_block0)
      if_block0.c();
    t1 = space();
    div4 = element("div");
    header = element("header");
    div1 = element("div");
    if_block1.c();
    t2 = space();
    if (if_block2)
      if_block2.c();
    t3 = space();
    div2 = element("div");
    goa_scrollable = element("goa-scrollable");
    goa_scrollable.innerHTML = `<slot></slot>`;
    t4 = space();
    div3 = element("div");
    div3.innerHTML = `<slot name="actions"></slot>`;
    attr(div0, "data-testid", "modal-overlay");
    attr(div0, "class", "modal-overlay");
    attr(div1, "data-testid", "modal-title");
    attr(div1, "class", "modal-title");
    set_custom_element_data(goa_scrollable, "direction", "vertical");
    set_custom_element_data(goa_scrollable, "hpadding", "1.9rem");
    set_custom_element_data(goa_scrollable, "maxheight", "70vh");
    attr(div2, "data-testid", "modal-content");
    attr(div2, "class", "modal-content");
    attr(div3, "class", "modal-actions");
    attr(div3, "data-testid", "modal-actions");
    attr(div4, "class", "content");
    attr(div5, "class", "modal-pane");
    attr(div6, "data-testid", "modal");
    attr(div6, "class", "modal");
    attr(div6, "style", div6_style_value = `--maxwidth: ${/*maxwidth*/
    ctx[0]};`);
    set_custom_element_data(
      goa_focus_trap,
      "open",
      /*open*/
      ctx[2]
    );
  }, m(target, anchor) {
    insert(target, goa_focus_trap, anchor);
    append(goa_focus_trap, div6);
    append(div6, div0);
    append(div6, t0);
    append(div6, div5);
    if (if_block0)
      if_block0.m(div5, null);
    append(div5, t1);
    append(div5, div4);
    append(div4, header);
    append(header, div1);
    if_block1.m(div1, null);
    append(header, t2);
    if (if_block2)
      if_block2.m(header, null);
    ctx[17](header);
    append(div4, t3);
    append(div4, div2);
    append(div2, goa_scrollable);
    ctx[18](goa_scrollable);
    ctx[19](div2);
    append(div4, t4);
    append(div4, div3);
    ctx[20](div6);
    current = true;
    if (!mounted) {
      dispose = [listen(
        div0,
        "click",
        /*close*/
        ctx[12]
      ), listen(
        goa_scrollable,
        "_scroll",
        /*handleScroll*/
        ctx[13]
      ), action_destroyer(noscroll_action = noscroll.call(null, div6, { enable: (
        /*_isOpen*/
        ctx[7]
      ) }))];
      mounted = true;
    }
  }, p(new_ctx, dirty) {
    ctx = new_ctx;
    if (
      /*calloutvariant*/
      ctx[3] !== null
    ) {
      if (if_block0) {
        if_block0.p(ctx, dirty);
      } else {
        if_block0 = create_if_block_3$6(ctx);
        if_block0.c();
        if_block0.m(div5, t1);
      }
    } else if (if_block0) {
      if_block0.d(1);
      if_block0 = null;
    }
    if (current_block_type === (current_block_type = select_block_type(ctx)) && if_block1) {
      if_block1.p(ctx, dirty);
    } else {
      if_block1.d(1);
      if_block1 = current_block_type(ctx);
      if (if_block1) {
        if_block1.c();
        if_block1.m(div1, null);
      }
    }
    if (
      /*_isClosable*/
      ctx[9]
    ) {
      if (if_block2) {
        if_block2.p(ctx, dirty);
      } else {
        if_block2 = create_if_block_1$7(ctx);
        if_block2.c();
        if_block2.m(header, null);
      }
    } else if (if_block2) {
      if_block2.d(1);
      if_block2 = null;
    }
    if (!current || dirty & /*maxwidth*/
    1 && div6_style_value !== (div6_style_value = `--maxwidth: ${/*maxwidth*/
    ctx[0]};`)) {
      attr(div6, "style", div6_style_value);
    }
    if (noscroll_action && is_function(noscroll_action.update) && dirty & /*_isOpen*/
    128)
      noscroll_action.update.call(null, { enable: (
        /*_isOpen*/
        ctx[7]
      ) });
    if (!current || dirty & /*open*/
    4) {
      set_custom_element_data(
        goa_focus_trap,
        "open",
        /*open*/
        ctx[2]
      );
    }
  }, i(local) {
    if (current)
      return;
    add_render_callback(() => {
      if (!current)
        return;
      if (div5_outro)
        div5_outro.end(1);
      div5_intro = create_in_transition(div5, fly, { duration: (
        /*_transitionTime*/
        ctx[11]
      ), y: 200 });
      div5_intro.start();
    });
    add_render_callback(() => {
      if (!current)
        return;
      if (div6_outro)
        div6_outro.end(1);
      div6_intro = create_in_transition(div6, fade, { duration: (
        /*_transitionTime*/
        ctx[11]
      ) });
      div6_intro.start();
    });
    current = true;
  }, o(local) {
    if (div5_intro)
      div5_intro.invalidate();
    div5_outro = create_out_transition(div5, fly, { delay: (
      /*_transitionTime*/
      ctx[11]
    ), duration: (
      /*_transitionTime*/
      ctx[11]
    ), y: -100 });
    if (div6_intro)
      div6_intro.invalidate();
    div6_outro = create_out_transition(div6, fade, { delay: (
      /*_transitionTime*/
      ctx[11]
    ), duration: (
      /*_transitionTime*/
      ctx[11]
    ) });
    current = false;
  }, d(detaching) {
    if (detaching)
      detach(goa_focus_trap);
    if (if_block0)
      if_block0.d();
    if_block1.d();
    if (if_block2)
      if_block2.d();
    ctx[17](null);
    ctx[18](null);
    ctx[19](null);
    if (detaching && div5_outro)
      div5_outro.end();
    ctx[20](null);
    if (detaching && div6_outro)
      div6_outro.end();
    mounted = false;
    run_all(dispose);
  } };
}
function create_if_block_3$6(ctx) {
  let div;
  let goa_icon;
  let goa_icon_inverted_value;
  let div_class_value;
  return { c() {
    div = element("div");
    goa_icon = element("goa-icon");
    set_custom_element_data(
      goa_icon,
      "type",
      /*_iconType*/
      ctx[10]
    );
    set_custom_element_data(goa_icon, "inverted", goa_icon_inverted_value = /*calloutvariant*/
    ctx[3] === "important" ? "false" : "true");
    attr(div, "class", div_class_value = "callout-bar " + /*calloutvariant*/
    ctx[3]);
  }, m(target, anchor) {
    insert(target, div, anchor);
    append(div, goa_icon);
  }, p(ctx2, dirty) {
    if (dirty & /*_iconType*/
    1024) {
      set_custom_element_data(
        goa_icon,
        "type",
        /*_iconType*/
        ctx2[10]
      );
    }
    if (dirty & /*calloutvariant*/
    8 && goa_icon_inverted_value !== (goa_icon_inverted_value = /*calloutvariant*/
    ctx2[3] === "important" ? "false" : "true")) {
      set_custom_element_data(goa_icon, "inverted", goa_icon_inverted_value);
    }
    if (dirty & /*calloutvariant*/
    8 && div_class_value !== (div_class_value = "callout-bar " + /*calloutvariant*/
    ctx2[3])) {
      attr(div, "class", div_class_value);
    }
  }, d(detaching) {
    if (detaching)
      detach(div);
  } };
}
function create_else_block$8(ctx) {
  let slot;
  return { c() {
    slot = element("slot");
    attr(slot, "name", "heading");
  }, m(target, anchor) {
    insert(target, slot, anchor);
  }, p: noop, d(detaching) {
    if (detaching)
      detach(slot);
  } };
}
function create_if_block_2$6(ctx) {
  let t2;
  return { c() {
    t2 = text(
      /*heading*/
      ctx[1]
    );
  }, m(target, anchor) {
    insert(target, t2, anchor);
  }, p(ctx2, dirty) {
    if (dirty & /*heading*/
    2)
      set_data(
        t2,
        /*heading*/
        ctx2[1]
      );
  }, d(detaching) {
    if (detaching)
      detach(t2);
  } };
}
function create_if_block_1$7(ctx) {
  let div;
  let goa_icon_button;
  let mounted;
  let dispose;
  return { c() {
    div = element("div");
    goa_icon_button = element("goa-icon-button");
    set_custom_element_data(goa_icon_button, "data-testid", "modal-close-button");
    set_custom_element_data(goa_icon_button, "icon", "close");
    set_custom_element_data(goa_icon_button, "variant", "nocolor");
    attr(div, "class", "modal-close");
  }, m(target, anchor) {
    insert(target, div, anchor);
    append(div, goa_icon_button);
    if (!mounted) {
      dispose = listen(
        goa_icon_button,
        "click",
        /*close*/
        ctx[12]
      );
      mounted = true;
    }
  }, p: noop, d(detaching) {
    if (detaching)
      detach(div);
    mounted = false;
    dispose();
  } };
}
function create_fragment$w(ctx) {
  let if_block_anchor;
  let current;
  let if_block = (
    /*_isOpen*/
    ctx[7] && create_if_block$h(ctx)
  );
  return { c() {
    if (if_block)
      if_block.c();
    if_block_anchor = empty();
    this.c = noop;
  }, m(target, anchor) {
    if (if_block)
      if_block.m(target, anchor);
    insert(target, if_block_anchor, anchor);
    current = true;
  }, p(ctx2, [dirty]) {
    if (
      /*_isOpen*/
      ctx2[7]
    ) {
      if (if_block) {
        if_block.p(ctx2, dirty);
        if (dirty & /*_isOpen*/
        128) {
          transition_in(if_block, 1);
        }
      } else {
        if_block = create_if_block$h(ctx2);
        if_block.c();
        transition_in(if_block, 1);
        if_block.m(if_block_anchor.parentNode, if_block_anchor);
      }
    } else if (if_block) {
      group_outros();
      transition_out(if_block, 1, 1, () => {
        if_block = null;
      });
      check_outros();
    }
  }, i(local) {
    if (current)
      return;
    transition_in(if_block);
    current = true;
  }, o(local) {
    transition_out(if_block);
    current = false;
  }, d(detaching) {
    if (if_block)
      if_block.d(detaching);
    if (detaching)
      detach(if_block_anchor);
  } };
}
function instance$t($$self, $$props, $$invalidate) {
  let _isClosable;
  let _transitionTime;
  let _iconType;
  let { heading = "" } = $$props;
  let { closable = "false" } = $$props;
  let { open = "false" } = $$props;
  let { transition = "none" } = $$props;
  let { calloutvariant = null } = $$props;
  let { maxwidth = "60ch" } = $$props;
  let { width = "" } = $$props;
  let _rootEl = null;
  let _contentEl = null;
  let _scrollEl = null;
  let _headerEl = null;
  const [CALLOUT_VARIANT, validateCalloutVariant] = typeValidator("Callout variant", ["emergency", "important", "information", "success", "event"]);
  const [Transitions, validateTransition] = typeValidator("Modal transition", ["fast", "slow", "none"]);
  let _isOpen = false;
  onMount(async () => {
    await tick();
    validateCalloutVariant(calloutvariant);
    validateTransition(transition);
    if (width) {
      $$invalidate(0, maxwidth = width);
      console.warn("`width` is deprecated. Please use `maxwidth` instead.");
    }
  });
  function close(e) {
    if (!_isClosable) {
      return;
    }
    _rootEl === null || _rootEl === void 0 ? void 0 : _rootEl.dispatchEvent(new CustomEvent("_close", { composed: true }));
    e.stopPropagation();
  }
  const onInputKeyDown = (e) => {
    switch (e.key) {
      case "Escape":
        close(e);
        e.preventDefault();
        break;
    }
  };
  function handleScroll(e) {
    const hasScroll = e.detail.scrollHeight > e.detail.offsetHeight;
    if (_isOpen && hasScroll) {
      const atTop = e.detail.scrollTop == 0;
      const atBottom = Math.abs(e.detail.scrollHeight - e.detail.scrollTop - e.detail.offsetHeight) < 1;
      _contentEl.classList.remove("scroll-top", "scroll-bottom", "scroll-middle");
      if (atTop) {
        _contentEl.classList.add("scroll-top");
      } else if (atBottom) {
        _contentEl.classList.add("scroll-bottom");
      } else {
        _contentEl.classList.add("scroll-middle");
      }
    }
  }
  function getChildren() {
    const slot = _headerEl.querySelector("slot");
    if (slot) {
      return [...slot.assignedElements()];
    } else {
      return [..._headerEl.children];
    }
  }
  function header_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      _headerEl = $$value;
      $$invalidate(6, _headerEl), $$invalidate(7, _isOpen), $$invalidate(2, open);
    });
  }
  function goa_scrollable_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      _scrollEl = $$value;
      $$invalidate(5, _scrollEl), $$invalidate(7, _isOpen), $$invalidate(2, open);
    });
  }
  function div2_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      _contentEl = $$value;
      $$invalidate(4, _contentEl), $$invalidate(7, _isOpen), $$invalidate(2, open);
    });
  }
  function div6_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      _rootEl = $$value;
      $$invalidate(8, _rootEl), $$invalidate(7, _isOpen), $$invalidate(2, open);
    });
  }
  $$self.$$set = ($$props2) => {
    if ("heading" in $$props2)
      $$invalidate(1, heading = $$props2.heading);
    if ("closable" in $$props2)
      $$invalidate(14, closable = $$props2.closable);
    if ("open" in $$props2)
      $$invalidate(2, open = $$props2.open);
    if ("transition" in $$props2)
      $$invalidate(15, transition = $$props2.transition);
    if ("calloutvariant" in $$props2)
      $$invalidate(3, calloutvariant = $$props2.calloutvariant);
    if ("maxwidth" in $$props2)
      $$invalidate(0, maxwidth = $$props2.maxwidth);
    if ("width" in $$props2)
      $$invalidate(16, width = $$props2.width);
  };
  $$self.$$.update = () => {
    if ($$self.$$.dirty & /*closable*/
    16384) {
      $$invalidate(9, _isClosable = toBoolean(closable));
    }
    if ($$self.$$.dirty & /*open*/
    4) {
      setTimeout(() => $$invalidate(7, _isOpen = toBoolean(open)), 1);
    }
    if ($$self.$$.dirty & /*_isOpen*/
    128) {
      if (!_isOpen) {
        $$invalidate(4, _contentEl = $$invalidate(5, _scrollEl = $$invalidate(8, _rootEl = $$invalidate(6, _headerEl = null))));
        window.removeEventListener("keydown", onInputKeyDown);
      }
    }
    if ($$self.$$.dirty & /*_isOpen, _scrollEl, _contentEl*/
    176) {
      if (_isOpen && _scrollEl && _contentEl) {
        const hasScroll = _scrollEl.scrollHeight > _scrollEl.offsetHeight;
        if (hasScroll) {
          _contentEl.classList.add("scroll-top");
        }
      }
    }
    if ($$self.$$.dirty & /*_isOpen, _contentEl, _headerEl*/
    208) {
      if (_isOpen && _contentEl) {
        window.addEventListener("keydown", onInputKeyDown);
        const children2 = getChildren();
        if (_headerEl.querySelector("div.modal-title").textContent || _headerEl.querySelector("div.modal-close") || children2.length) {
          _headerEl.classList.add("has-content");
        }
      }
    }
    if ($$self.$$.dirty & /*transition*/
    32768) {
      $$invalidate(11, _transitionTime = transition === "none" ? 0 : transition === "slow" ? 400 : 200);
    }
    if ($$self.$$.dirty & /*calloutvariant*/
    8) {
      $$invalidate(10, _iconType = calloutvariant === "emergency" ? "warning" : calloutvariant === "important" ? "alert-circle" : calloutvariant === "information" ? "information-circle" : calloutvariant === "success" ? "checkmark-circle" : calloutvariant === "event" ? "calendar" : "");
    }
  };
  return [maxwidth, heading, open, calloutvariant, _contentEl, _scrollEl, _headerEl, _isOpen, _rootEl, _isClosable, _iconType, _transitionTime, close, handleScroll, closable, transition, width, header_binding, goa_scrollable_binding, div2_binding, div6_binding];
}
let Modal$1 = class Modal extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `:host{box-sizing:border-box;font-family:var(--goa-font-family-sans)}:host *{box-sizing:border-box}.modal{font-family:var(--goa-font-family-sans);position:fixed;inset:0;display:flex;align-items:center;justify-content:center;height:100vh;width:100%;z-index:100}.modal-overlay{position:absolute;top:0;left:0;width:100%;height:100%;background-color:rgba(0, 0, 0, 0.2);z-index:1000}.emergency{background-color:var(--goa-color-emergency-default)}.important{background-color:var(--goa-color-warning-default)}.information{background-color:var(--goa-color-info-default)}.event{background-color:var(--goa-color-info-default)}.success{background-color:var(--goa-color-success-default)}.callout-bar{flex:0 0 3rem;text-align:center;padding-top:2rem;border-radius:4px 0px 0px 4px}.content{flex:1 1 auto;width:100%;margin:var(--goa-space-xl)}.content header{display:flex;justify-content:space-between}.content header.has-content{margin-bottom:var(--goa-space-l)}@media screen and (max-width: 623px){.content{margin:var(--goa-space-l)}.content header.has-content{margin-bottom:var(--goa-space-m)}.modal-actions ::slotted(*){padding:var(--goa-space-l) 0 0}}@media screen and (min-width: 1024px){.modal-pane{max-width:var(--maxwidth)}}.modal-pane{background-color:#fff;z-index:1001;width:90%;display:flex;box-shadow:var(--goa-shadow-modal);border-radius:4px;border:1px solid var(--goa-color-greyscale-700)}.modal-actions ::slotted(*){padding:var(--goa-space-xl) 0 0}.modal-content{margin:0 -2rem;line-height:1.75rem}.modal-content ::slotted(:last-child){margin-bottom:0 !important}.modal-title{font:var(--goa-typography-heading-m)}.modal-close{padding-left:var(--goa-space-m);margin-top:var(--goa-space-2xs)}.scroll-top{box-shadow:inset 0px -8px 6px -6px rgba(0, 0, 0, 0.1)}.scroll-middle{box-shadow:inset 0px -8px 6px -6px rgba(0, 0, 0, 0.1), inset 0px 8px 6px -6px rgba(0, 0, 0, 0.1)}.scroll-bottom{box-shadow:inset 0px 8px 6px -6px rgba(0, 0, 0, 0.1)}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$t, create_fragment$w, safe_not_equal, { heading: 1, closable: 14, open: 2, transition: 15, calloutvariant: 3, maxwidth: 0, width: 16 }, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["heading", "closable", "open", "transition", "calloutvariant", "maxwidth", "width"];
  }
  get heading() {
    return this.$$.ctx[1];
  }
  set heading(heading) {
    this.$$set({ heading });
    flush();
  }
  get closable() {
    return this.$$.ctx[14];
  }
  set closable(closable) {
    this.$$set({ closable });
    flush();
  }
  get open() {
    return this.$$.ctx[2];
  }
  set open(open) {
    this.$$set({ open });
    flush();
  }
  get transition() {
    return this.$$.ctx[15];
  }
  set transition(transition) {
    this.$$set({ transition });
    flush();
  }
  get calloutvariant() {
    return this.$$.ctx[3];
  }
  set calloutvariant(calloutvariant) {
    this.$$set({ calloutvariant });
    flush();
  }
  get maxwidth() {
    return this.$$.ctx[0];
  }
  set maxwidth(maxwidth) {
    this.$$set({ maxwidth });
    flush();
  }
  get width() {
    return this.$$.ctx[16];
  }
  set width(width) {
    this.$$set({ width });
    flush();
  }
};
customElements.define("goa-modal", Modal$1);
function create_if_block$g(ctx) {
  let div4;
  let div3;
  let div0;
  let goa_icon0;
  let goa_icon0_inverted_value;
  let t0;
  let div1;
  let t1;
  let div2;
  let button;
  let goa_icon1;
  let goa_icon1_inverted_value;
  let div4_class_value;
  let div4_style_value;
  let div4_transition;
  let current;
  let mounted;
  let dispose;
  return { c() {
    div4 = element("div");
    div3 = element("div");
    div0 = element("div");
    goa_icon0 = element("goa-icon");
    t0 = space();
    div1 = element("div");
    div1.innerHTML = `<slot></slot>`;
    t1 = space();
    div2 = element("div");
    button = element("button");
    goa_icon1 = element("goa-icon");
    set_custom_element_data(
      goa_icon0,
      "type",
      /*iconType*/
      ctx[4]
    );
    set_custom_element_data(goa_icon0, "inverted", goa_icon0_inverted_value = /*type*/
    ctx[0] === "important" ? "false" : "true");
    attr(div0, "class", "icon");
    attr(div1, "class", "content");
    set_custom_element_data(goa_icon1, "type", "close");
    set_custom_element_data(goa_icon1, "inverted", goa_icon1_inverted_value = /*type*/
    ctx[0] === "important" ? "false" : "true");
    attr(
      button,
      "class",
      /*type*/
      ctx[0]
    );
    attr(div2, "class", "close");
    attr(div3, "class", "content-container");
    attr(div3, "role", "alert");
    attr(
      div3,
      "aria-live",
      /*arialive*/
      ctx[2]
    );
    attr(div3, "aria-atomic", "true");
    attr(div4, "class", div4_class_value = "notification " + /*type*/
    ctx[0]);
    attr(div4, "style", div4_style_value = `--max-content-width: ${/*maxcontentwidth*/
    ctx[1]}`);
  }, m(target, anchor) {
    insert(target, div4, anchor);
    append(div4, div3);
    append(div3, div0);
    append(div0, goa_icon0);
    append(div3, t0);
    append(div3, div1);
    append(div3, t1);
    append(div3, div2);
    append(div2, button);
    append(button, goa_icon1);
    current = true;
    if (!mounted) {
      dispose = listen(
        button,
        "click",
        /*close*/
        ctx[5]
      );
      mounted = true;
    }
  }, p(ctx2, dirty) {
    if (!current || dirty & /*iconType*/
    16) {
      set_custom_element_data(
        goa_icon0,
        "type",
        /*iconType*/
        ctx2[4]
      );
    }
    if (!current || dirty & /*type*/
    1 && goa_icon0_inverted_value !== (goa_icon0_inverted_value = /*type*/
    ctx2[0] === "important" ? "false" : "true")) {
      set_custom_element_data(goa_icon0, "inverted", goa_icon0_inverted_value);
    }
    if (!current || dirty & /*type*/
    1 && goa_icon1_inverted_value !== (goa_icon1_inverted_value = /*type*/
    ctx2[0] === "important" ? "false" : "true")) {
      set_custom_element_data(goa_icon1, "inverted", goa_icon1_inverted_value);
    }
    if (!current || dirty & /*type*/
    1) {
      attr(
        button,
        "class",
        /*type*/
        ctx2[0]
      );
    }
    if (!current || dirty & /*arialive*/
    4) {
      attr(
        div3,
        "aria-live",
        /*arialive*/
        ctx2[2]
      );
    }
    if (!current || dirty & /*type*/
    1 && div4_class_value !== (div4_class_value = "notification " + /*type*/
    ctx2[0])) {
      attr(div4, "class", div4_class_value);
    }
    if (!current || dirty & /*maxcontentwidth*/
    2 && div4_style_value !== (div4_style_value = `--max-content-width: ${/*maxcontentwidth*/
    ctx2[1]}`)) {
      attr(div4, "style", div4_style_value);
    }
  }, i(local) {
    if (current)
      return;
    add_render_callback(() => {
      if (!current)
        return;
      if (!div4_transition)
        div4_transition = create_bidirectional_transition(div4, fade, {}, true);
      div4_transition.run(1);
    });
    current = true;
  }, o(local) {
    if (!div4_transition)
      div4_transition = create_bidirectional_transition(div4, fade, {}, false);
    div4_transition.run(0);
    current = false;
  }, d(detaching) {
    if (detaching)
      detach(div4);
    if (detaching && div4_transition)
      div4_transition.end();
    mounted = false;
    dispose();
  } };
}
function create_fragment$v(ctx) {
  let if_block_anchor;
  let current;
  let if_block = (
    /*show*/
    ctx[3] && create_if_block$g(ctx)
  );
  return { c() {
    if (if_block)
      if_block.c();
    if_block_anchor = empty();
    this.c = noop;
  }, m(target, anchor) {
    if (if_block)
      if_block.m(target, anchor);
    insert(target, if_block_anchor, anchor);
    current = true;
  }, p(ctx2, [dirty]) {
    if (
      /*show*/
      ctx2[3]
    ) {
      if (if_block) {
        if_block.p(ctx2, dirty);
        if (dirty & /*show*/
        8) {
          transition_in(if_block, 1);
        }
      } else {
        if_block = create_if_block$g(ctx2);
        if_block.c();
        transition_in(if_block, 1);
        if_block.m(if_block_anchor.parentNode, if_block_anchor);
      }
    } else if (if_block) {
      group_outros();
      transition_out(if_block, 1, 1, () => {
        if_block = null;
      });
      check_outros();
    }
  }, i(local) {
    if (current)
      return;
    transition_in(if_block);
    current = true;
  }, o(local) {
    transition_out(if_block);
    current = false;
  }, d(detaching) {
    if (if_block)
      if_block.d(detaching);
    if (detaching)
      detach(if_block_anchor);
  } };
}
function instance$s($$self, $$props, $$invalidate) {
  let iconType;
  const [Types, validateType] = typeValidator("Notification type", ["emergency", "important", "information", "event"], true);
  const [AriaLiveTypes, validateAriaLiveType] = typeValidator("Aria-Live type", ["assertive", "off", "polite"], true);
  let { type = "" } = $$props;
  let { maxcontentwidth = "100%" } = $$props;
  let { arialive = "polite" } = $$props;
  let show = true;
  onMount(() => {
    validateAriaLiveType(arialive);
    setTimeout(() => validateType(type), 1);
  });
  function close(e) {
    $$invalidate(3, show = false);
    e.target.dispatchEvent(new CustomEvent("_dismiss", { composed: true }));
    e.stopPropagation();
  }
  $$self.$$set = ($$props2) => {
    if ("type" in $$props2)
      $$invalidate(0, type = $$props2.type);
    if ("maxcontentwidth" in $$props2)
      $$invalidate(1, maxcontentwidth = $$props2.maxcontentwidth);
    if ("arialive" in $$props2)
      $$invalidate(2, arialive = $$props2.arialive);
  };
  $$self.$$.update = () => {
    if ($$self.$$.dirty & /*type*/
    1) {
      $$invalidate(4, iconType = type === "emergency" ? "warning" : type === "important" ? "alert-circle" : type === "information" ? "information-circle" : type === "event" ? "calendar" : "");
    }
  };
  return [type, maxcontentwidth, arialive, show, iconType, close];
}
class Notification extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `:host{box-sizing:border-box;font-family:var(--goa-font-family-sans)}.notification{padding:var(--goa-space-l) var(--goa-space-m);display:flex}@media screen and (max-width: 623px){@media not (max-color:2147477350){.notification{padding:var(--goa-space-l) var(--goa-space-xl)}}}@media not  screen and (max-width: 623px){@media not (color:2147477350){.notification{padding:var(--goa-space-l) var(--goa-space-xl)}}}@media screen and (min-width: 1024px){.notification{padding:var(--goa-space-l) calc(3 * var(--goa-space-l))}}.emergency{background-color:var(--goa-color-emergency-default);color:var(--goa-color-text-light)}.important{background-color:var(--goa-color-warning-default);color:var(--goa-color-text-default)}.information,.event{background-color:var(--goa-color-info-default);color:var(--goa-color-text-light)}.icon{flex:0 0 auto}.content-container{display:flex;flex-direction:row;flex:1 1 auto;gap:var(--goa-space-m);margin:0 auto;max-width:min(var(--max-content-width), 100%)}.content{flex:1 1 auto}::slotted(a){color:unset !important;outline:unset !important}::slotted(a:focus){outline:auto!important;border-radius:var(--goa-border-radius-m)}.notification.important ::slotted(a:focus){outline:unset!important;box-shadow:0 0 0 3px var(--goa-color-greyscale-black);border-radius:var(--goa-border-radius-m)}.close{flex:0 0 auto}.close button{background-color:transparent;border:none;cursor:pointer;padding:var(--goa-space-2xs);margin:0;outline:none;border-radius:var(--goa-border-radius-m);display:inline-flex}.close button.information:hover,.close button.information:focus,.close button.event:hover,.close button.event:focus{background-color:var(--goa-color-info-dark)}.close button.information:focus,.close button.event:focus{box-shadow:0 0 0 3px var(--goa-color-greyscale-white)}.close button.important:hover,.close button.important:focus{background-color:var(--goa-color-warning-dark)}.close button.important:focus{box-shadow:0 0 0 3px var(--goa-color-greyscale-black)}.close button.emergency:hover,.close button.emergency:focus{background-color:var(--goa-color-emergency-dark)}.close button.emergency:focus{box-shadow:0 0 0 3px var(--goa-color-greyscale-white)}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$s, create_fragment$v, safe_not_equal, { type: 0, maxcontentwidth: 1, arialive: 2 }, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["type", "maxcontentwidth", "arialive"];
  }
  get type() {
    return this.$$.ctx[0];
  }
  set type(type) {
    this.$$set({ type });
    flush();
  }
  get maxcontentwidth() {
    return this.$$.ctx[1];
  }
  set maxcontentwidth(maxcontentwidth) {
    this.$$set({ maxcontentwidth });
    flush();
  }
  get arialive() {
    return this.$$.ctx[2];
  }
  set arialive(arialive) {
    this.$$set({ arialive });
    flush();
  }
}
customElements.define("goa-notification", Notification);
const dimensionRegex = /^[1-9]+[0-9]*(px|em|rem|ch|vh|vw|%)$/;
function isValidDimension(value) {
  return dimensionRegex.test(value);
}
function create_fragment$u(ctx) {
  let div;
  let slot;
  let div_style_value;
  return { c() {
    div = element("div");
    slot = element("slot");
    this.c = noop;
    attr(div, "class", "page-content");
    attr(div, "style", div_style_value = `--max-width: ${/*_width*/
    ctx[0]}`);
  }, m(target, anchor) {
    insert(target, div, anchor);
    append(div, slot);
  }, p(ctx2, [dirty]) {
    if (dirty & /*_width*/
    1 && div_style_value !== (div_style_value = `--max-width: ${/*_width*/
    ctx2[0]}`)) {
      attr(div, "style", div_style_value);
    }
  }, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(div);
  } };
}
function instance$r($$self, $$props, $$invalidate) {
  const Sizes = { "full": "100%" };
  let { width } = $$props;
  let { _width } = $$props;
  function isValidSize(value) {
    if (["full"].includes(width))
      return true;
    if (isValidDimension(value))
      return true;
    return false;
  }
  onMount(() => {
    if (!isValidSize(width)) {
      console.error("Invalid PageBlock width");
    }
    $$invalidate(0, _width = Sizes[width] || width);
  });
  $$self.$$set = ($$props2) => {
    if ("width" in $$props2)
      $$invalidate(1, width = $$props2.width);
    if ("_width" in $$props2)
      $$invalidate(0, _width = $$props2._width);
  };
  return [_width, width];
}
class PageBlock extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `:host{box-sizing:border-box;font-family:var(--goa-font-family-sans)}.page-content{max-width:var(--max-width);margin:0 auto;padding:0 1rem}@media screen and (max-width: 623px){@media not (max-color:2147477350){.page-content{padding:0 2rem}}}@media not  screen and (max-width: 623px){@media not (color:2147477350){.page-content{padding:0 2rem}}}@media screen and (min-width: 1024px){.page-content{padding:0 4.5rem}}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$r, create_fragment$u, safe_not_equal, { width: 1, _width: 0 }, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["width", "_width"];
  }
  get width() {
    return this.$$.ctx[1];
  }
  set width(width) {
    this.$$set({ width });
    flush();
  }
  get _width() {
    return this.$$.ctx[0];
  }
  set _width(_width) {
    this.$$set({ _width });
    flush();
  }
}
customElements.define("goa-page-block", PageBlock);
function get_each_context$5(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[18] = list[i];
  child_ctx[20] = i;
  return child_ctx;
}
function create_if_block$f(ctx) {
  let goa_block;
  let span0;
  let t1;
  let input;
  let t2;
  let goa_dropdown;
  let t3;
  let span1;
  let t4;
  let t5;
  let each_value = { length: (
    /*_pageCount*/
    ctx[8]
  ) };
  let each_blocks = [];
  for (let i = 0; i < each_value.length; i += 1) {
    each_blocks[i] = create_each_block$5(get_each_context$5(ctx, each_value, i));
  }
  return { c() {
    goa_block = element("goa-block");
    span0 = element("span");
    span0.textContent = "Page";
    t1 = space();
    input = element("input");
    t2 = space();
    goa_dropdown = element("goa-dropdown");
    for (let i = 0; i < each_blocks.length; i += 1) {
      each_blocks[i].c();
    }
    t3 = space();
    span1 = element("span");
    t4 = text("of ");
    t5 = text(
      /*_pageCount*/
      ctx[8]
    );
    attr(input, "type", "hidden");
    set_custom_element_data(
      goa_dropdown,
      "value",
      /*pagenumber*/
      ctx[0]
    );
    set_custom_element_data(goa_block, "data-testid", "page-selector");
    set_custom_element_data(goa_block, "alignment", "center");
    set_custom_element_data(goa_block, "gap", "s");
  }, m(target, anchor) {
    insert(target, goa_block, anchor);
    append(goa_block, span0);
    append(goa_block, t1);
    append(goa_block, input);
    ctx[12](input);
    append(goa_block, t2);
    append(goa_block, goa_dropdown);
    for (let i = 0; i < each_blocks.length; i += 1) {
      if (each_blocks[i]) {
        each_blocks[i].m(goa_dropdown, null);
      }
    }
    ctx[13](goa_dropdown);
    append(goa_block, t3);
    append(goa_block, span1);
    append(span1, t4);
    append(span1, t5);
  }, p(ctx2, dirty) {
    if (dirty & /*_pageCount*/
    256) {
      each_value = { length: (
        /*_pageCount*/
        ctx2[8]
      ) };
      let i;
      for (i = 0; i < each_value.length; i += 1) {
        const child_ctx = get_each_context$5(ctx2, each_value, i);
        if (each_blocks[i]) {
          each_blocks[i].p(child_ctx, dirty);
        } else {
          each_blocks[i] = create_each_block$5(child_ctx);
          each_blocks[i].c();
          each_blocks[i].m(goa_dropdown, null);
        }
      }
      for (; i < each_blocks.length; i += 1) {
        each_blocks[i].d(1);
      }
      each_blocks.length = each_value.length;
    }
    if (dirty & /*pagenumber*/
    1) {
      set_custom_element_data(
        goa_dropdown,
        "value",
        /*pagenumber*/
        ctx2[0]
      );
    }
    if (dirty & /*_pageCount*/
    256)
      set_data(
        t5,
        /*_pageCount*/
        ctx2[8]
      );
  }, d(detaching) {
    if (detaching)
      detach(goa_block);
    ctx[12](null);
    destroy_each(each_blocks, detaching);
    ctx[13](null);
  } };
}
function create_each_block$5(ctx) {
  let goa_dropdown_item;
  return { c() {
    goa_dropdown_item = element("goa-dropdown-item");
    set_custom_element_data(
      goa_dropdown_item,
      "value",
      /*i*/
      ctx[20] + 1
    );
    set_custom_element_data(
      goa_dropdown_item,
      "label",
      /*i*/
      ctx[20] + 1
    );
  }, m(target, anchor) {
    insert(target, goa_dropdown_item, anchor);
  }, p: noop, d(detaching) {
    if (detaching)
      detach(goa_dropdown_item);
  } };
}
function create_fragment$t(ctx) {
  let goa_block1;
  let div;
  let t0;
  let goa_block0;
  let goa_button0;
  let t1;
  let goa_button0_disabled_value;
  let t2;
  let goa_button1;
  let t3;
  let goa_button1_disabled_value;
  let mounted;
  let dispose;
  let if_block = (
    /*variant*/
    ctx[1] === "all" && create_if_block$f(ctx)
  );
  return { c() {
    goa_block1 = element("goa-block");
    div = element("div");
    if (if_block)
      if_block.c();
    t0 = space();
    goa_block0 = element("goa-block");
    goa_button0 = element("goa-button");
    t1 = text("Previous");
    t2 = space();
    goa_button1 = element("goa-button");
    t3 = text("Next");
    this.c = noop;
    set_custom_element_data(goa_button0, "type", "tertiary");
    set_custom_element_data(goa_button0, "leadingicon", "arrow-back");
    set_custom_element_data(goa_button0, "disabled", goa_button0_disabled_value = /*pagenumber*/
    ctx[0] == 1 ? "true" : "false");
    set_custom_element_data(goa_button1, "type", "tertiary");
    set_custom_element_data(goa_button1, "trailingicon", "arrow-forward");
    set_custom_element_data(goa_button1, "disabled", goa_button1_disabled_value = /*pagenumber*/
    ctx[0] == /*_pageCount*/
    ctx[8] ? "true" : "false");
    set_custom_element_data(goa_block0, "alignment", "center");
    set_custom_element_data(goa_block0, "gap", "m");
    set_custom_element_data(goa_block0, "data-testid", "page-links");
    attr(div, "class", "controls");
    set_custom_element_data(goa_block1, "id", "root");
    set_custom_element_data(
      goa_block1,
      "ml",
      /*ml*/
      ctx[5]
    );
    set_custom_element_data(
      goa_block1,
      "mr",
      /*mr*/
      ctx[3]
    );
    set_custom_element_data(
      goa_block1,
      "mb",
      /*mb*/
      ctx[4]
    );
    set_custom_element_data(
      goa_block1,
      "mt",
      /*mt*/
      ctx[2]
    );
  }, m(target, anchor) {
    insert(target, goa_block1, anchor);
    append(goa_block1, div);
    if (if_block)
      if_block.m(div, null);
    append(div, t0);
    append(div, goa_block0);
    append(goa_block0, goa_button0);
    append(goa_button0, t1);
    append(goa_block0, t2);
    append(goa_block0, goa_button1);
    append(goa_button1, t3);
    if (!mounted) {
      dispose = [listen(
        goa_button0,
        "click",
        /*click_handler*/
        ctx[14]
      ), listen(
        goa_button1,
        "click",
        /*click_handler_1*/
        ctx[15]
      )];
      mounted = true;
    }
  }, p(ctx2, [dirty]) {
    if (
      /*variant*/
      ctx2[1] === "all"
    ) {
      if (if_block) {
        if_block.p(ctx2, dirty);
      } else {
        if_block = create_if_block$f(ctx2);
        if_block.c();
        if_block.m(div, t0);
      }
    } else if (if_block) {
      if_block.d(1);
      if_block = null;
    }
    if (dirty & /*pagenumber*/
    1 && goa_button0_disabled_value !== (goa_button0_disabled_value = /*pagenumber*/
    ctx2[0] == 1 ? "true" : "false")) {
      set_custom_element_data(goa_button0, "disabled", goa_button0_disabled_value);
    }
    if (dirty & /*pagenumber, _pageCount*/
    257 && goa_button1_disabled_value !== (goa_button1_disabled_value = /*pagenumber*/
    ctx2[0] == /*_pageCount*/
    ctx2[8] ? "true" : "false")) {
      set_custom_element_data(goa_button1, "disabled", goa_button1_disabled_value);
    }
    if (dirty & /*ml*/
    32) {
      set_custom_element_data(
        goa_block1,
        "ml",
        /*ml*/
        ctx2[5]
      );
    }
    if (dirty & /*mr*/
    8) {
      set_custom_element_data(
        goa_block1,
        "mr",
        /*mr*/
        ctx2[3]
      );
    }
    if (dirty & /*mb*/
    16) {
      set_custom_element_data(
        goa_block1,
        "mb",
        /*mb*/
        ctx2[4]
      );
    }
    if (dirty & /*mt*/
    4) {
      set_custom_element_data(
        goa_block1,
        "mt",
        /*mt*/
        ctx2[2]
      );
    }
  }, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(goa_block1);
    if (if_block)
      if_block.d();
    mounted = false;
    run_all(dispose);
  } };
}
function instance$q($$self, $$props, $$invalidate) {
  let _pageCount;
  const [Variants, validateVariant] = typeValidator("Pagination variant", ["all", "links-only"]);
  let { pagenumber } = $$props;
  let { itemcount } = $$props;
  let { perpagecount = 10 } = $$props;
  let { variant = "all" } = $$props;
  let { mt = null } = $$props;
  let { mr = null } = $$props;
  let { mb: mb2 = "m" } = $$props;
  let { ml: ml2 = null } = $$props;
  let pageDropdownEl = null;
  let hiddenEl = null;
  onMount(async () => {
    await tick();
    validateRequired("GoAPagination", { itemcount, pagenumber });
    validateVariant(variant);
    pageDropdownEl && pageDropdownEl.addEventListener("_change", (e) => {
      const page = Number.parseInt(e.detail.value);
      e.stopPropagation();
      hiddenEl.dispatchEvent(new CustomEvent("_change", { composed: true, bubbles: true, detail: { page } }));
    });
  });
  function goto(e, offset) {
    const newPage = Number.parseInt(pagenumber + "") + offset;
    if (newPage > 0 && newPage <= _pageCount) {
      e.target.dispatchEvent(new CustomEvent("_change", { composed: true, bubbles: true, detail: { page: newPage } }));
    }
    e.preventDefault();
  }
  function input_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      hiddenEl = $$value;
      $$invalidate(7, hiddenEl);
    });
  }
  function goa_dropdown_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      pageDropdownEl = $$value;
      $$invalidate(6, pageDropdownEl);
    });
  }
  const click_handler = (e) => goto(e, -1);
  const click_handler_1 = (e) => goto(e, 1);
  $$self.$$set = ($$props2) => {
    if ("pagenumber" in $$props2)
      $$invalidate(0, pagenumber = $$props2.pagenumber);
    if ("itemcount" in $$props2)
      $$invalidate(10, itemcount = $$props2.itemcount);
    if ("perpagecount" in $$props2)
      $$invalidate(11, perpagecount = $$props2.perpagecount);
    if ("variant" in $$props2)
      $$invalidate(1, variant = $$props2.variant);
    if ("mt" in $$props2)
      $$invalidate(2, mt = $$props2.mt);
    if ("mr" in $$props2)
      $$invalidate(3, mr = $$props2.mr);
    if ("mb" in $$props2)
      $$invalidate(4, mb2 = $$props2.mb);
    if ("ml" in $$props2)
      $$invalidate(5, ml2 = $$props2.ml);
  };
  $$self.$$.update = () => {
    if ($$self.$$.dirty & /*itemcount, perpagecount*/
    3072) {
      $$invalidate(8, _pageCount = Math.ceil(itemcount / perpagecount));
    }
  };
  return [pagenumber, variant, mt, mr, mb2, ml2, pageDropdownEl, hiddenEl, _pageCount, goto, itemcount, perpagecount, input_binding, goa_dropdown_binding, click_handler, click_handler_1];
}
class Pagination extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `span{white-space:nowrap}.controls{display:flex;gap:1rem;flex-direction:column;align-items:center;width:100%}@media screen and (max-width: 623px){@media not (max-color:2147477350){.controls{flex-direction:row;justify-content:space-between}}}@media not  screen and (max-width: 623px){@media not (color:2147477350){.controls{flex-direction:row;justify-content:space-between}}}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$q, create_fragment$t, safe_not_equal, { pagenumber: 0, itemcount: 10, perpagecount: 11, variant: 1, mt: 2, mr: 3, mb: 4, ml: 5 }, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["pagenumber", "itemcount", "perpagecount", "variant", "mt", "mr", "mb", "ml"];
  }
  get pagenumber() {
    return this.$$.ctx[0];
  }
  set pagenumber(pagenumber) {
    this.$$set({ pagenumber });
    flush();
  }
  get itemcount() {
    return this.$$.ctx[10];
  }
  set itemcount(itemcount) {
    this.$$set({ itemcount });
    flush();
  }
  get perpagecount() {
    return this.$$.ctx[11];
  }
  set perpagecount(perpagecount) {
    this.$$set({ perpagecount });
    flush();
  }
  get variant() {
    return this.$$.ctx[1];
  }
  set variant(variant) {
    this.$$set({ variant });
    flush();
  }
  get mt() {
    return this.$$.ctx[2];
  }
  set mt(mt) {
    this.$$set({ mt });
    flush();
  }
  get mr() {
    return this.$$.ctx[3];
  }
  set mr(mr) {
    this.$$set({ mr });
    flush();
  }
  get mb() {
    return this.$$.ctx[4];
  }
  set mb(mb2) {
    this.$$set({ mb: mb2 });
    flush();
  }
  get ml() {
    return this.$$.ctx[5];
  }
  set ml(ml2) {
    this.$$set({ ml: ml2 });
    flush();
  }
}
customElements.define("goa-pagination", Pagination);
function create_if_block$e(ctx) {
  let div0;
  let t2;
  let div2;
  let section;
  let goa_focus_trap;
  let div1;
  let section_style_value;
  let section_resize_listener;
  let mounted;
  let dispose;
  return { c() {
    div0 = element("div");
    t2 = space();
    div2 = element("div");
    section = element("section");
    goa_focus_trap = element("goa-focus-trap");
    div1 = element("div");
    div1.innerHTML = `<slot></slot>`;
    attr(div0, "data-testid", "popover-background");
    attr(div0, "class", "popover-background");
    set_custom_element_data(goa_focus_trap, "open", "true");
    attr(section, "data-testid", "popover-content");
    attr(section, "class", "popover-content");
    attr(section, "style", section_style_value = `
          ${cssVar(
      "width",
      /*width*/
      ctx[2]
    )}
          max-width: ${/*maxwidth*/
    ctx[1]};
          padding: ${/*_padded*/
    ctx[19] ? "var(--goa-space-m)" : "0"};
        `);
    add_render_callback(() => (
      /*section_elementresize_handler*/
      ctx[29].call(section)
    ));
    attr(div2, "class", "popover-container");
  }, m(target, anchor) {
    insert(target, div0, anchor);
    insert(target, t2, anchor);
    insert(target, div2, anchor);
    append(div2, section);
    append(section, goa_focus_trap);
    append(goa_focus_trap, div1);
    ctx[28](div1);
    section_resize_listener = add_iframe_resize_listener(
      section,
      /*section_elementresize_handler*/
      ctx[29].bind(section)
    );
    ctx[30](section);
    if (!mounted) {
      dispose = listen(
        div0,
        "click",
        /*closePopover*/
        ctx[21]
      );
      mounted = true;
    }
  }, p(ctx2, dirty) {
    if (dirty[0] & /*width, maxwidth, _padded*/
    524294 && section_style_value !== (section_style_value = `
          ${cssVar(
      "width",
      /*width*/
      ctx2[2]
    )}
          max-width: ${/*maxwidth*/
    ctx2[1]};
          padding: ${/*_padded*/
    ctx2[19] ? "var(--goa-space-m)" : "0"};
        `)) {
      attr(section, "style", section_style_value);
    }
  }, d(detaching) {
    if (detaching)
      detach(div0);
    if (detaching)
      detach(t2);
    if (detaching)
      detach(div2);
    ctx[28](null);
    section_resize_listener();
    ctx[30](null);
    mounted = false;
    dispose();
  } };
}
function create_fragment$s(ctx) {
  let div1;
  let div0;
  let slot;
  let div0_tabindex_value;
  let t2;
  let div1_style_value;
  let mounted;
  let dispose;
  let if_block = (
    /*_open*/
    ctx[13] && create_if_block$e(ctx)
  );
  return { c() {
    div1 = element("div");
    div0 = element("div");
    slot = element("slot");
    t2 = space();
    if (if_block)
      if_block.c();
    this.c = noop;
    attr(slot, "name", "target");
    attr(div0, "class", "popover-target");
    attr(div0, "tabindex", div0_tabindex_value = +/*tabindex*/
    ctx[7]);
    attr(div0, "data-testid", "popover-target");
    attr(
      div1,
      "data-testid",
      /*testid*/
      ctx[0]
    );
    attr(div1, "style", div1_style_value = `
    ${/*_relative*/
    ctx[18] && "position: relative;"}
    ${calculateMargin(
      /*mt*/
      ctx[3],
      /*mr*/
      ctx[4],
      /*mb*/
      ctx[5],
      /*ml*/
      ctx[6]
    )}
    ${cssVar(
      "--offset-top",
      /*voffset*/
      ctx[8]
    )}
    ${cssVar(
      "--offset-bottom",
      /*voffset*/
      ctx[8]
    )}
    ${cssVar(
      "--offset-left",
      /*hoffset*/
      ctx[9]
    )}
    ${cssVar(
      "--offset-right",
      /*hoffset*/
      ctx[9]
    )}
    ${cssVar(
      "--focus-border-width",
      /*focusborderwidth*/
      ctx[10]
    )}
    ${cssVar(
      "--border-radius",
      /*borderradius*/
      ctx[11]
    )}
    ${cssVar("width", "100%")}
  `);
  }, m(target, anchor) {
    insert(target, div1, anchor);
    append(div1, div0);
    append(div0, slot);
    ctx[27](div0);
    append(div1, t2);
    if (if_block)
      if_block.m(div1, null);
    ctx[31](div1);
    if (!mounted) {
      dispose = listen(
        div0,
        "click",
        /*openPopover*/
        ctx[20]
      );
      mounted = true;
    }
  }, p(ctx2, dirty) {
    if (dirty[0] & /*tabindex*/
    128 && div0_tabindex_value !== (div0_tabindex_value = +/*tabindex*/
    ctx2[7])) {
      attr(div0, "tabindex", div0_tabindex_value);
    }
    if (
      /*_open*/
      ctx2[13]
    ) {
      if (if_block) {
        if_block.p(ctx2, dirty);
      } else {
        if_block = create_if_block$e(ctx2);
        if_block.c();
        if_block.m(div1, null);
      }
    } else if (if_block) {
      if_block.d(1);
      if_block = null;
    }
    if (dirty[0] & /*testid*/
    1) {
      attr(
        div1,
        "data-testid",
        /*testid*/
        ctx2[0]
      );
    }
    if (dirty[0] & /*_relative, mt, mr, mb, ml, voffset, hoffset, focusborderwidth, borderradius*/
    266104 && div1_style_value !== (div1_style_value = `
    ${/*_relative*/
    ctx2[18] && "position: relative;"}
    ${calculateMargin(
      /*mt*/
      ctx2[3],
      /*mr*/
      ctx2[4],
      /*mb*/
      ctx2[5],
      /*ml*/
      ctx2[6]
    )}
    ${cssVar(
      "--offset-top",
      /*voffset*/
      ctx2[8]
    )}
    ${cssVar(
      "--offset-bottom",
      /*voffset*/
      ctx2[8]
    )}
    ${cssVar(
      "--offset-left",
      /*hoffset*/
      ctx2[9]
    )}
    ${cssVar(
      "--offset-right",
      /*hoffset*/
      ctx2[9]
    )}
    ${cssVar(
      "--focus-border-width",
      /*focusborderwidth*/
      ctx2[10]
    )}
    ${cssVar(
      "--border-radius",
      /*borderradius*/
      ctx2[11]
    )}
    ${cssVar("width", "100%")}
  `)) {
      attr(div1, "style", div1_style_value);
    }
  }, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(div1);
    ctx[27](null);
    if (if_block)
      if_block.d();
    ctx[31](null);
    mounted = false;
    dispose();
  } };
}
function getBoundingClientRectWithMargins(el2) {
  const rect = el2.getBoundingClientRect();
  const style = window.getComputedStyle(el2);
  const mTop = parseInt(style.marginTop, 10) || 0;
  const mRight = parseInt(style.marginRight, 10) || 0;
  const mBottom = parseInt(style.marginBottom, 10) || 0;
  const mLeft = parseInt(style.marginLeft, 10) || 0;
  return { top: rect.top - mTop, right: rect.right + mRight, bottom: rect.bottom + mBottom, left: rect.left - mLeft, width: rect.width + mLeft + mRight, height: rect.height + mTop + mBottom, x: rect.x - mLeft, y: rect.y - mTop };
}
function instance$p($$self, $$props, $$invalidate) {
  let _padded;
  let _open;
  let _disabled;
  let _relative;
  let { testid = "popover" } = $$props;
  let { maxwidth = "320px" } = $$props;
  let { width = "" } = $$props;
  let { padded = "true" } = $$props;
  let { position = "auto" } = $$props;
  let { relative = "false" } = $$props;
  let { mt = null } = $$props;
  let { mr = null } = $$props;
  let { mb: mb2 = null } = $$props;
  let { ml: ml2 = null } = $$props;
  let { open = "false" } = $$props;
  let { disabled = "false" } = $$props;
  let { tabindex = "0" } = $$props;
  let { voffset = "" } = $$props;
  let { hoffset = "" } = $$props;
  let { focusborderwidth = "var(--goa-border-width-l)" } = $$props;
  let { borderradius = "var(--goa-border-radius-m)" } = $$props;
  let _rootEl;
  let _targetEl;
  let _popoverEl;
  let _focusTrapEl;
  let _initFocusedEl;
  let _sectionHeight;
  onMount(async () => {
    await tick();
    _targetEl.addEventListener("keydown", onTargetEvent);
    const slot = _targetEl.querySelector("slot");
    let children2;
    if (slot) {
      children2 = slot.assignedElements();
    } else {
      children2 = [..._targetEl.children];
    }
    _initFocusedEl = children2.find((el2) => el2.tabIndex >= 0) || _targetEl;
  });
  function handleUrlChange(_e) {
    closePopover();
  }
  function onTargetEvent(e) {
    switch (e.key) {
      case " ":
      case "Enter":
        openPopover();
        break;
      case "Escape":
        closePopover();
        break;
    }
  }
  function onFocusTrapEvent(e) {
    switch (e.key) {
      case "Escape":
        closePopover();
        break;
    }
  }
  function openPopover() {
    if (_disabled)
      return;
    (async () => {
      $$invalidate(13, _open = true);
      await tick();
      _focusTrapEl.addEventListener("keydown", onFocusTrapEvent, true);
      _rootEl.dispatchEvent(new CustomEvent("_open", { composed: true }));
    })();
  }
  function closePopover() {
    _initFocusedEl.focus();
    $$invalidate(13, _open = false);
    window.removeEventListener("popstate", handleUrlChange, true);
    _rootEl.dispatchEvent(new CustomEvent("_close", { composed: true }));
  }
  async function setPopoverPosition() {
    await tick();
    const rootRect = _rootEl.getBoundingClientRect();
    const targetRect = getBoundingClientRectWithMargins(_targetEl);
    const contentRect = getBoundingClientRectWithMargins(_popoverEl);
    const spaceAbove = targetRect.top;
    const spaceBelow = window.innerHeight - targetRect.bottom;
    const displayOnTop = position === "auto" ? spaceBelow < contentRect.height && spaceAbove > contentRect.height && spaceAbove > spaceBelow : position === "above";
    const usingNoScroll = document.body.style.overflow === "hidden";
    const windowOffset = usingNoScroll ? 0 : window.scrollY;
    if (_relative) {
      $$invalidate(16, _popoverEl.style.top = displayOnTop ? `-${contentRect.height}px` : `${rootRect.height}px`, _popoverEl);
    } else {
      $$invalidate(16, _popoverEl.style.top = displayOnTop ? `${rootRect.top - contentRect.height + windowOffset}px` : `${rootRect.top + rootRect.height + windowOffset}px`, _popoverEl);
    }
    const displayOnRight = document.body.clientWidth - targetRect.left < contentRect.width && targetRect.left > contentRect.width;
    if (_relative) {
      if (displayOnRight) {
        $$invalidate(16, _popoverEl.style.right = "0", _popoverEl);
      } else {
        $$invalidate(16, _popoverEl.style.left = "0", _popoverEl);
      }
    } else {
      $$invalidate(16, _popoverEl.style.left = displayOnRight ? `${rootRect.left + targetRect.width - contentRect.width}px` : `${rootRect.left}px`, _popoverEl);
    }
  }
  function div0_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      _targetEl = $$value;
      $$invalidate(15, _targetEl);
    });
  }
  function div1_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      _focusTrapEl = $$value;
      $$invalidate(17, _focusTrapEl);
    });
  }
  function section_elementresize_handler() {
    _sectionHeight = this.clientHeight;
    $$invalidate(12, _sectionHeight);
  }
  function section_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      _popoverEl = $$value;
      $$invalidate(16, _popoverEl);
    });
  }
  function div1_binding_1($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      _rootEl = $$value;
      $$invalidate(14, _rootEl);
    });
  }
  $$self.$$set = ($$props2) => {
    if ("testid" in $$props2)
      $$invalidate(0, testid = $$props2.testid);
    if ("maxwidth" in $$props2)
      $$invalidate(1, maxwidth = $$props2.maxwidth);
    if ("width" in $$props2)
      $$invalidate(2, width = $$props2.width);
    if ("padded" in $$props2)
      $$invalidate(22, padded = $$props2.padded);
    if ("position" in $$props2)
      $$invalidate(23, position = $$props2.position);
    if ("relative" in $$props2)
      $$invalidate(24, relative = $$props2.relative);
    if ("mt" in $$props2)
      $$invalidate(3, mt = $$props2.mt);
    if ("mr" in $$props2)
      $$invalidate(4, mr = $$props2.mr);
    if ("mb" in $$props2)
      $$invalidate(5, mb2 = $$props2.mb);
    if ("ml" in $$props2)
      $$invalidate(6, ml2 = $$props2.ml);
    if ("open" in $$props2)
      $$invalidate(25, open = $$props2.open);
    if ("disabled" in $$props2)
      $$invalidate(26, disabled = $$props2.disabled);
    if ("tabindex" in $$props2)
      $$invalidate(7, tabindex = $$props2.tabindex);
    if ("voffset" in $$props2)
      $$invalidate(8, voffset = $$props2.voffset);
    if ("hoffset" in $$props2)
      $$invalidate(9, hoffset = $$props2.hoffset);
    if ("focusborderwidth" in $$props2)
      $$invalidate(10, focusborderwidth = $$props2.focusborderwidth);
    if ("borderradius" in $$props2)
      $$invalidate(11, borderradius = $$props2.borderradius);
  };
  $$self.$$.update = () => {
    if ($$self.$$.dirty[0] & /*padded*/
    4194304) {
      $$invalidate(19, _padded = toBoolean(padded));
    }
    if ($$self.$$.dirty[0] & /*open*/
    33554432) {
      $$invalidate(13, _open = toBoolean(open));
    }
    if ($$self.$$.dirty[0] & /*disabled*/
    67108864) {
      _disabled = toBoolean(disabled);
    }
    if ($$self.$$.dirty[0] & /*relative*/
    16777216) {
      $$invalidate(18, _relative = toBoolean(relative));
    }
    if ($$self.$$.dirty[0] & /*_open*/
    8192) {
      (async () => _open && await setPopoverPosition())();
    }
    if ($$self.$$.dirty[0] & /*_sectionHeight*/
    4096) {
      (async () => _sectionHeight && await setPopoverPosition())();
    }
    if ($$self.$$.dirty[0] & /*_open*/
    8192) {
      {
        if (_open) {
          window.addEventListener("popstate", handleUrlChange, true);
        } else {
          window.removeEventListener("popstate", handleUrlChange, true);
        }
      }
    }
  };
  return [testid, maxwidth, width, mt, mr, mb2, ml2, tabindex, voffset, hoffset, focusborderwidth, borderradius, _sectionHeight, _open, _rootEl, _targetEl, _popoverEl, _focusTrapEl, _relative, _padded, openPopover, closePopover, padded, position, relative, open, disabled, div0_binding, div1_binding, section_elementresize_handler, section_binding, div1_binding_1];
}
class Popover extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `:host{box-sizing:border-box;font-family:var(--goa-font-family-sans);font-size:var(--goa-font-size-4);display:flex;align-items:center}.popover-target{cursor:pointer}.popover-target:focus{outline:var(--focus-border-width) solid var(--goa-color-interactive-focus)}.popover-content{color:var(--goa-color-text-default);position:absolute;width:-moz-fit-content;width:fit-content;list-style-type:none;background:var(--goa-color-greyscale-white);border-radius:var(--border-radius);outline:none;filter:drop-shadow(0px 2px 4px rgba(0, 0, 0, 0.2));z-index:99;width:-moz-max-content;width:max-content;margin-top:var(--offset-top, 3px);margin-bottom:var(--offset-bottom, 3px);margin-left:var(--offset-left, 0);margin-right:var(--offset-right, 0)}::slotted(ul){display:block;padding:0;margin:0;list-style-type:none;line-height:2rem}.popover-background{cursor:default;position:fixed;z-index:98;inset:0}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$p, create_fragment$s, safe_not_equal, { testid: 0, maxwidth: 1, width: 2, padded: 22, position: 23, relative: 24, mt: 3, mr: 4, mb: 5, ml: 6, open: 25, disabled: 26, tabindex: 7, voffset: 8, hoffset: 9, focusborderwidth: 10, borderradius: 11 }, null, [-1, -1]);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["testid", "maxwidth", "width", "padded", "position", "relative", "mt", "mr", "mb", "ml", "open", "disabled", "tabindex", "voffset", "hoffset", "focusborderwidth", "borderradius"];
  }
  get testid() {
    return this.$$.ctx[0];
  }
  set testid(testid) {
    this.$$set({ testid });
    flush();
  }
  get maxwidth() {
    return this.$$.ctx[1];
  }
  set maxwidth(maxwidth) {
    this.$$set({ maxwidth });
    flush();
  }
  get width() {
    return this.$$.ctx[2];
  }
  set width(width) {
    this.$$set({ width });
    flush();
  }
  get padded() {
    return this.$$.ctx[22];
  }
  set padded(padded) {
    this.$$set({ padded });
    flush();
  }
  get position() {
    return this.$$.ctx[23];
  }
  set position(position) {
    this.$$set({ position });
    flush();
  }
  get relative() {
    return this.$$.ctx[24];
  }
  set relative(relative) {
    this.$$set({ relative });
    flush();
  }
  get mt() {
    return this.$$.ctx[3];
  }
  set mt(mt) {
    this.$$set({ mt });
    flush();
  }
  get mr() {
    return this.$$.ctx[4];
  }
  set mr(mr) {
    this.$$set({ mr });
    flush();
  }
  get mb() {
    return this.$$.ctx[5];
  }
  set mb(mb2) {
    this.$$set({ mb: mb2 });
    flush();
  }
  get ml() {
    return this.$$.ctx[6];
  }
  set ml(ml2) {
    this.$$set({ ml: ml2 });
    flush();
  }
  get open() {
    return this.$$.ctx[25];
  }
  set open(open) {
    this.$$set({ open });
    flush();
  }
  get disabled() {
    return this.$$.ctx[26];
  }
  set disabled(disabled) {
    this.$$set({ disabled });
    flush();
  }
  get tabindex() {
    return this.$$.ctx[7];
  }
  set tabindex(tabindex) {
    this.$$set({ tabindex });
    flush();
  }
  get voffset() {
    return this.$$.ctx[8];
  }
  set voffset(voffset) {
    this.$$set({ voffset });
    flush();
  }
  get hoffset() {
    return this.$$.ctx[9];
  }
  set hoffset(hoffset) {
    this.$$set({ hoffset });
    flush();
  }
  get focusborderwidth() {
    return this.$$.ctx[10];
  }
  set focusborderwidth(focusborderwidth) {
    this.$$set({ focusborderwidth });
    flush();
  }
  get borderradius() {
    return this.$$.ctx[11];
  }
  set borderradius(borderradius) {
    this.$$set({ borderradius });
    flush();
  }
}
customElements.define("goa-popover", Popover);
function get_each_context$4(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[22] = list[i];
  child_ctx[24] = i;
  return child_ctx;
}
function create_if_block$d(ctx) {
  let div;
  let t_value = (
    /*option*/
    ctx[22].description + ""
  );
  let t2;
  let div_id_value;
  return { c() {
    div = element("div");
    t2 = text(t_value);
    attr(div, "class", "goa-radio-description");
    attr(div, "id", div_id_value = `description-${/*name*/
    ctx[1]}-${/*index*/
    ctx[24]}`);
  }, m(target, anchor) {
    insert(target, div, anchor);
    append(div, t2);
  }, p(ctx2, dirty) {
    if (dirty & /*options*/
    512 && t_value !== (t_value = /*option*/
    ctx2[22].description + ""))
      set_data(t2, t_value);
    if (dirty & /*name, options*/
    514 && div_id_value !== (div_id_value = `description-${/*name*/
    ctx2[1]}-${/*index*/
    ctx2[24]}`)) {
      attr(div, "id", div_id_value);
    }
  }, d(detaching) {
    if (detaching)
      detach(div);
  } };
}
function create_each_block$4(key_1, ctx) {
  let div1;
  let label;
  let input;
  let input_value_value;
  let input_checked_value;
  let input_aria_label_value;
  let input_aria_describedby_value;
  let t0;
  let div0;
  let t1;
  let span;
  let t2_value = (
    /*option*/
    (ctx[22].label || /*option*/
    ctx[22].value) + ""
  );
  let t2;
  let label_data_testid_value;
  let t3;
  let t4;
  let mounted;
  let dispose;
  function change_handler() {
    return (
      /*change_handler*/
      ctx[16](
        /*option*/
        ctx[22]
      )
    );
  }
  let if_block = (
    /*option*/
    ctx[22].description && create_if_block$d(ctx)
  );
  return { key: key_1, first: null, c() {
    div1 = element("div");
    label = element("label");
    input = element("input");
    t0 = space();
    div0 = element("div");
    t1 = space();
    span = element("span");
    t2 = text(t2_value);
    t3 = space();
    if (if_block)
      if_block.c();
    t4 = space();
    attr(input, "type", "radio");
    attr(
      input,
      "name",
      /*name*/
      ctx[1]
    );
    input.value = input_value_value = /*option*/
    ctx[22].value;
    input.disabled = /*isDisabled*/
    ctx[12];
    input.checked = input_checked_value = /*option*/
    ctx[22].value === /*value*/
    ctx[0];
    attr(input, "aria-label", input_aria_label_value = /*arialabel*/
    ctx[4] || /*name*/
    ctx[1]);
    attr(input, "aria-describedby", input_aria_describedby_value = `description-${/*name*/
    ctx[1]}-${/*index*/
    ctx[24]}`);
    attr(div0, "class", "goa-radio-icon");
    attr(span, "class", "goa-radio-label");
    attr(label, "data-testid", label_data_testid_value = "radio-option-" + /*option*/
    ctx[22].value);
    attr(label, "class", "goa-radio");
    toggle_class(
      label,
      "goa-radio--disabled",
      /*isDisabled*/
      ctx[12]
    );
    toggle_class(
      label,
      "goa-radio--error",
      /*isError*/
      ctx[11]
    );
    attr(div1, "class", "goa-radio-container");
    this.first = div1;
  }, m(target, anchor) {
    insert(target, div1, anchor);
    append(div1, label);
    append(label, input);
    append(label, t0);
    append(label, div0);
    append(label, t1);
    append(label, span);
    append(span, t2);
    append(div1, t3);
    if (if_block)
      if_block.m(div1, null);
    append(div1, t4);
    if (!mounted) {
      dispose = listen(input, "change", change_handler);
      mounted = true;
    }
  }, p(new_ctx, dirty) {
    ctx = new_ctx;
    if (dirty & /*name*/
    2) {
      attr(
        input,
        "name",
        /*name*/
        ctx[1]
      );
    }
    if (dirty & /*options*/
    512 && input_value_value !== (input_value_value = /*option*/
    ctx[22].value)) {
      input.value = input_value_value;
    }
    if (dirty & /*isDisabled*/
    4096) {
      input.disabled = /*isDisabled*/
      ctx[12];
    }
    if (dirty & /*options, value*/
    513 && input_checked_value !== (input_checked_value = /*option*/
    ctx[22].value === /*value*/
    ctx[0])) {
      input.checked = input_checked_value;
    }
    if (dirty & /*arialabel, name*/
    18 && input_aria_label_value !== (input_aria_label_value = /*arialabel*/
    ctx[4] || /*name*/
    ctx[1])) {
      attr(input, "aria-label", input_aria_label_value);
    }
    if (dirty & /*name, options*/
    514 && input_aria_describedby_value !== (input_aria_describedby_value = `description-${/*name*/
    ctx[1]}-${/*index*/
    ctx[24]}`)) {
      attr(input, "aria-describedby", input_aria_describedby_value);
    }
    if (dirty & /*options*/
    512 && t2_value !== (t2_value = /*option*/
    (ctx[22].label || /*option*/
    ctx[22].value) + ""))
      set_data(t2, t2_value);
    if (dirty & /*options*/
    512 && label_data_testid_value !== (label_data_testid_value = "radio-option-" + /*option*/
    ctx[22].value)) {
      attr(label, "data-testid", label_data_testid_value);
    }
    if (dirty & /*isDisabled*/
    4096) {
      toggle_class(
        label,
        "goa-radio--disabled",
        /*isDisabled*/
        ctx[12]
      );
    }
    if (dirty & /*isError*/
    2048) {
      toggle_class(
        label,
        "goa-radio--error",
        /*isError*/
        ctx[11]
      );
    }
    if (
      /*option*/
      ctx[22].description
    ) {
      if (if_block) {
        if_block.p(ctx, dirty);
      } else {
        if_block = create_if_block$d(ctx);
        if_block.c();
        if_block.m(div1, t4);
      }
    } else if (if_block) {
      if_block.d(1);
      if_block = null;
    }
  }, d(detaching) {
    if (detaching)
      detach(div1);
    if (if_block)
      if_block.d();
    mounted = false;
    dispose();
  } };
}
function create_fragment$r(ctx) {
  let div;
  let slot;
  let t2;
  let each_blocks = [];
  let each_1_lookup = /* @__PURE__ */ new Map();
  let div_style_value;
  let div_class_value;
  let each_value = (
    /*options*/
    ctx[9]
  );
  const get_key = (ctx2) => (
    /*option*/
    ctx2[22].value
  );
  for (let i = 0; i < each_value.length; i += 1) {
    let child_ctx = get_each_context$4(ctx, each_value, i);
    let key = get_key(child_ctx);
    each_1_lookup.set(key, each_blocks[i] = create_each_block$4(key, child_ctx));
  }
  return { c() {
    div = element("div");
    slot = element("slot");
    t2 = space();
    for (let i = 0; i < each_blocks.length; i += 1) {
      each_blocks[i].c();
    }
    this.c = noop;
    attr(div, "style", div_style_value = calculateMargin(
      /*mt*/
      ctx[5],
      /*mr*/
      ctx[6],
      /*mb*/
      ctx[7],
      /*ml*/
      ctx[8]
    ));
    attr(div, "class", div_class_value = `goa-radio-group--${/*orientation*/
    ctx[2]}`);
    attr(
      div,
      "data-testid",
      /*testid*/
      ctx[3]
    );
  }, m(target, anchor) {
    insert(target, div, anchor);
    append(div, slot);
    append(div, t2);
    for (let i = 0; i < each_blocks.length; i += 1) {
      if (each_blocks[i]) {
        each_blocks[i].m(div, null);
      }
    }
    ctx[17](div);
  }, p(ctx2, [dirty]) {
    if (dirty & /*name, options, isDisabled, isError, value, arialabel, onChange*/
    14867) {
      each_value = /*options*/
      ctx2[9];
      each_blocks = update_keyed_each(each_blocks, dirty, get_key, 1, ctx2, each_value, each_1_lookup, div, destroy_block, create_each_block$4, null, get_each_context$4);
    }
    if (dirty & /*mt, mr, mb, ml*/
    480 && div_style_value !== (div_style_value = calculateMargin(
      /*mt*/
      ctx2[5],
      /*mr*/
      ctx2[6],
      /*mb*/
      ctx2[7],
      /*ml*/
      ctx2[8]
    ))) {
      attr(div, "style", div_style_value);
    }
    if (dirty & /*orientation*/
    4 && div_class_value !== (div_class_value = `goa-radio-group--${/*orientation*/
    ctx2[2]}`)) {
      attr(div, "class", div_class_value);
    }
    if (dirty & /*testid*/
    8) {
      attr(
        div,
        "data-testid",
        /*testid*/
        ctx2[3]
      );
    }
  }, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(div);
    for (let i = 0; i < each_blocks.length; i += 1) {
      each_blocks[i].d();
    }
    ctx[17](null);
  } };
}
function instance$o($$self, $$props, $$invalidate) {
  let isDisabled;
  let isError;
  const [Orientations, validateOrientation] = typeValidator("Radio group orientation", ["vertical", "horizontal"]);
  let { name } = $$props;
  let { value } = $$props;
  let { orientation = "vertical" } = $$props;
  let { disabled = "false" } = $$props;
  let { error: error2 = "false" } = $$props;
  let { testid = "" } = $$props;
  let { arialabel = "" } = $$props;
  let { mt = null } = $$props;
  let { mr = null } = $$props;
  let { mb: mb2 = null } = $$props;
  let { ml: ml2 = null } = $$props;
  let options = [];
  let el2;
  onMount(async () => {
    await tick();
    $$invalidate(9, options = getOptions());
  });
  function getChildren() {
    const slot = el2.querySelector("slot");
    if (slot)
      return [...slot.assignedElements()];
    else
      return [...el2.children];
  }
  function getOptions() {
    const children2 = getChildren();
    return children2.map((el3) => {
      const option = el3;
      const value2 = el3.getAttribute("value") || option.value;
      const label = el3.getAttribute("label") || el3.innerText || option.label || option.innerText;
      const description = el3.getAttribute("description") || option.description;
      return { value: value2, label, description };
    });
  }
  function onChange(newValue) {
    if (newValue === value)
      return;
    $$invalidate(0, value = newValue);
    el2.dispatchEvent(new CustomEvent("_change", { composed: true, detail: { name, value } }));
  }
  onMount(() => {
    validateOrientation(orientation);
  });
  const change_handler = (option) => onChange(option.value);
  function div_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      el2 = $$value;
      $$invalidate(10, el2);
    });
  }
  $$self.$$set = ($$props2) => {
    if ("name" in $$props2)
      $$invalidate(1, name = $$props2.name);
    if ("value" in $$props2)
      $$invalidate(0, value = $$props2.value);
    if ("orientation" in $$props2)
      $$invalidate(2, orientation = $$props2.orientation);
    if ("disabled" in $$props2)
      $$invalidate(14, disabled = $$props2.disabled);
    if ("error" in $$props2)
      $$invalidate(15, error2 = $$props2.error);
    if ("testid" in $$props2)
      $$invalidate(3, testid = $$props2.testid);
    if ("arialabel" in $$props2)
      $$invalidate(4, arialabel = $$props2.arialabel);
    if ("mt" in $$props2)
      $$invalidate(5, mt = $$props2.mt);
    if ("mr" in $$props2)
      $$invalidate(6, mr = $$props2.mr);
    if ("mb" in $$props2)
      $$invalidate(7, mb2 = $$props2.mb);
    if ("ml" in $$props2)
      $$invalidate(8, ml2 = $$props2.ml);
  };
  $$self.$$.update = () => {
    if ($$self.$$.dirty & /*disabled*/
    16384) {
      $$invalidate(12, isDisabled = toBoolean(disabled));
    }
    if ($$self.$$.dirty & /*error*/
    32768) {
      $$invalidate(11, isError = toBoolean(error2));
    }
  };
  return [value, name, orientation, testid, arialabel, mt, mr, mb2, ml2, options, el2, isError, isDisabled, onChange, disabled, error2, change_handler, div_binding];
}
class RadioGroup extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `:host{box-sizing:border-box;font-family:var(--goa-font-family-sans)}.goa-radio-group--horizontal{display:flex;flex-direction:row}.goa-radio-group--vertical{display:inline-block}label.goa-radio{--goa-radio-outline-width:3px;--goa-radio-diameter:1.5rem;--goa-radio-border-width:1px;--goa-radio-border-width--checked:7px;display:inline-block;box-sizing:border-box;display:flex}.goa-radio-container{padding-bottom:1rem}.goa-radio:hover{cursor:pointer}.goa-radio *,.goa-radio *:before,.goa-radio *:after{box-sizing:border-box}.goa-radio input[type="radio"]{width:0;height:0;margin:0;opacity:0}.goa-radio-label{padding:0 0.5rem;font-weight:var(--goa-font-weight-regular)}.goa-radio-description{font:var(--goa-typography-body-xs);margin-left:var(--goa-space-xl);margin-top:var(--goa-space-2xs)}.goa-radio-icon{display:inline-block;height:var(--goa-radio-diameter);width:var(--goa-radio-diameter);border-radius:50%;background-color:#fff;transition:box-shadow 100ms ease-in-out;flex:0 0 auto;margin-top:var(--font-valign-fix)}.goa-radio:focus>input:not(:disabled)~.goa-radio-icon{box-shadow:0 0 0 var(--goa-radio-outline-width) var(--goa-color-interactive-focus)}.goa-radio--disabled .goa-radio-label{opacity:0.4}.goa-radio--disabled:hover{cursor:default}input[type="radio"]:not(:checked)~.goa-radio-icon{border:var(--goa-radio-border-width) solid var(--goa-color-greyscale-700)}input[type="radio"]:hover~.goa-radio-icon{border:1px solid var(--goa-color-interactive-hover);box-shadow:0 0 0 1px var(--goa-color-interactive-hover)}input[type="radio"]:checked:hover~.goa-radio-icon{border:7px solid var(--goa-color-interactive-hover);box-shadow:0 0 0 1px var(--goa-color-interactive-hover)}input[type="radio"]:focus~.goa-radio-icon,input[type="radio"]:hover:active~.goa-radio-icon,input[type="radio"]:hover:focus~.goa-radio-icon,input[type="radio"]:active~.goa-radio-icon{box-shadow:0 0 0 var(--goa-radio-outline-width) var(--goa-color-interactive-focus)}input[type="radio"]:checked~.goa-radio-icon{border:var(--goa-radio-border-width--checked) solid var(--goa-color-interactive-default)}input[type="radio"]:disabled~.goa-radio-icon{border:var(--goa-radio-border-width) solid var(--goa-color-greyscale-700);box-shadow:none;opacity:40%}input[type="radio"]:disabled:checked~.goa-radio-icon{border:var(--goa-radio-border-width--checked) solid
      var(--goa-color-interactive-hover);box-shadow:none}.goa-radio--error input[type="radio"]:checked~.goa-radio-icon{border:7px solid var(--goa-color-emergency-default)}.goa-radio--error input[type="radio"]:hover~.goa-radio-icon{box-shadow:0 0 0 1px var(--goa-color-emergency-default)}.goa-radio--error input[type="radio"]:disabled:hover~.goa-radio-icon{box-shadow:none}.goa-radio--error input[type="radio"]:not(:checked)~.goa-radio-icon{border:2px solid var(--goa-color-emergency-default)}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$o, create_fragment$r, safe_not_equal, { name: 1, value: 0, orientation: 2, disabled: 14, error: 15, testid: 3, arialabel: 4, mt: 5, mr: 6, mb: 7, ml: 8 }, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["name", "value", "orientation", "disabled", "error", "testid", "arialabel", "mt", "mr", "mb", "ml"];
  }
  get name() {
    return this.$$.ctx[1];
  }
  set name(name) {
    this.$$set({ name });
    flush();
  }
  get value() {
    return this.$$.ctx[0];
  }
  set value(value) {
    this.$$set({ value });
    flush();
  }
  get orientation() {
    return this.$$.ctx[2];
  }
  set orientation(orientation) {
    this.$$set({ orientation });
    flush();
  }
  get disabled() {
    return this.$$.ctx[14];
  }
  set disabled(disabled) {
    this.$$set({ disabled });
    flush();
  }
  get error() {
    return this.$$.ctx[15];
  }
  set error(error2) {
    this.$$set({ error: error2 });
    flush();
  }
  get testid() {
    return this.$$.ctx[3];
  }
  set testid(testid) {
    this.$$set({ testid });
    flush();
  }
  get arialabel() {
    return this.$$.ctx[4];
  }
  set arialabel(arialabel) {
    this.$$set({ arialabel });
    flush();
  }
  get mt() {
    return this.$$.ctx[5];
  }
  set mt(mt) {
    this.$$set({ mt });
    flush();
  }
  get mr() {
    return this.$$.ctx[6];
  }
  set mr(mr) {
    this.$$set({ mr });
    flush();
  }
  get mb() {
    return this.$$.ctx[7];
  }
  set mb(mb2) {
    this.$$set({ mb: mb2 });
    flush();
  }
  get ml() {
    return this.$$.ctx[8];
  }
  set ml(ml2) {
    this.$$set({ ml: ml2 });
    flush();
  }
}
customElements.define("goa-radio-group", RadioGroup);
function create_fragment$q(ctx) {
  let div;
  let slot;
  let div_style_value;
  let mounted;
  let dispose;
  return { c() {
    div = element("div");
    slot = element("slot");
    this.c = noop;
    attr(div, "class", "goa-scrollable");
    attr(div, "style", div_style_value = `
  max-height: ${/*maxheight*/
    ctx[3] || "50vh"};
  overflow-y: ${/*direction*/
    ctx[0] === "vertical" ? "auto" : "hidden"};
  overflow-x: ${/*direction*/
    ctx[0] === "horizontal" ? "auto" : "hidden"};
  margin: ${/*vpadding*/
    ctx[2]} 0;
  padding: 0 ${/*hpadding*/
    ctx[1]};
`);
  }, m(target, anchor) {
    insert(target, div, anchor);
    append(div, slot);
    ctx[8](div);
    if (!mounted) {
      dispose = listen(
        div,
        "scroll",
        /*onScroll*/
        ctx[5]
      );
      mounted = true;
    }
  }, p(ctx2, [dirty]) {
    if (dirty & /*maxheight, direction, vpadding, hpadding*/
    15 && div_style_value !== (div_style_value = `
  max-height: ${/*maxheight*/
    ctx2[3] || "50vh"};
  overflow-y: ${/*direction*/
    ctx2[0] === "vertical" ? "auto" : "hidden"};
  overflow-x: ${/*direction*/
    ctx2[0] === "horizontal" ? "auto" : "hidden"};
  margin: ${/*vpadding*/
    ctx2[2]} 0;
  padding: 0 ${/*hpadding*/
    ctx2[1]};
`)) {
      attr(div, "style", div_style_value);
    }
  }, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(div);
    ctx[8](null);
    mounted = false;
    dispose();
  } };
}
function instance$n($$self, $$props, $$invalidate) {
  let { direction = "vertical" } = $$props;
  let { hpadding = "" } = $$props;
  let { vpadding = "" } = $$props;
  let { maxheight = "" } = $$props;
  let { offsetHeight } = $$props;
  let { scrollHeight } = $$props;
  let _el;
  function onScroll(e) {
    e.target.dispatchEvent(new CustomEvent("_scroll", { composed: true, detail: { offsetHeight: _el.offsetHeight, scrollHeight: _el.scrollHeight, scrollTop: _el.scrollTop } }));
    e.stopPropagation();
  }
  onMount(async () => {
    await tick();
    $$invalidate(6, offsetHeight = _el.offsetHeight);
    $$invalidate(7, scrollHeight = _el.scrollHeight);
  });
  function div_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      _el = $$value;
      $$invalidate(4, _el);
    });
  }
  $$self.$$set = ($$props2) => {
    if ("direction" in $$props2)
      $$invalidate(0, direction = $$props2.direction);
    if ("hpadding" in $$props2)
      $$invalidate(1, hpadding = $$props2.hpadding);
    if ("vpadding" in $$props2)
      $$invalidate(2, vpadding = $$props2.vpadding);
    if ("maxheight" in $$props2)
      $$invalidate(3, maxheight = $$props2.maxheight);
    if ("offsetHeight" in $$props2)
      $$invalidate(6, offsetHeight = $$props2.offsetHeight);
    if ("scrollHeight" in $$props2)
      $$invalidate(7, scrollHeight = $$props2.scrollHeight);
  };
  return [direction, hpadding, vpadding, maxheight, _el, onScroll, offsetHeight, scrollHeight, div_binding];
}
class Scrollable extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `.goa-scrollable{scroll-behavior:smooth}.goa-scrollable::-webkit-scrollbar{width:6px}.goa-scrollable::-webkit-scrollbar-track{background:#f1f1f1}.goa-scrollable::-webkit-scrollbar-thumb{background:#888}.goa-scrollable::-webkit-scrollbar-thumb:hover{background:#555}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$n, create_fragment$q, safe_not_equal, { direction: 0, hpadding: 1, vpadding: 2, maxheight: 3, offsetHeight: 6, scrollHeight: 7 }, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["direction", "hpadding", "vpadding", "maxheight", "offsetHeight", "scrollHeight"];
  }
  get direction() {
    return this.$$.ctx[0];
  }
  set direction(direction) {
    this.$$set({ direction });
    flush();
  }
  get hpadding() {
    return this.$$.ctx[1];
  }
  set hpadding(hpadding) {
    this.$$set({ hpadding });
    flush();
  }
  get vpadding() {
    return this.$$.ctx[2];
  }
  set vpadding(vpadding) {
    this.$$set({ vpadding });
    flush();
  }
  get maxheight() {
    return this.$$.ctx[3];
  }
  set maxheight(maxheight) {
    this.$$set({ maxheight });
    flush();
  }
  get offsetHeight() {
    return this.$$.ctx[6];
  }
  set offsetHeight(offsetHeight) {
    this.$$set({ offsetHeight });
    flush();
  }
  get scrollHeight() {
    return this.$$.ctx[7];
  }
  set scrollHeight(scrollHeight) {
    this.$$set({ scrollHeight });
    flush();
  }
}
customElements.define("goa-scrollable", Scrollable);
function get_each_context$3(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[13] = list[i];
  return child_ctx;
}
function create_else_block$7(ctx) {
  let div;
  let div_class_value;
  return { c() {
    div = element("div");
    attr(div, "class", div_class_value = "skeleton " + /*type*/
    ctx[3] + ` ${/*type*/
    ctx[3]}-${/*size*/
    ctx[1]}`);
  }, m(target, anchor) {
    insert(target, div, anchor);
  }, p(ctx2, dirty) {
    if (dirty & /*type, size*/
    10 && div_class_value !== (div_class_value = "skeleton " + /*type*/
    ctx2[3] + ` ${/*type*/
    ctx2[3]}-${/*size*/
    ctx2[1]}`)) {
      attr(div, "class", div_class_value);
    }
  }, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(div);
  } };
}
function create_if_block_3$5(ctx) {
  let div3;
  let div2;
  let div0;
  let skeleton0;
  let t0;
  let div1;
  let skeleton1;
  let t1;
  let skeleton2;
  let t2;
  let skeleton3;
  let current;
  skeleton0 = new Skeleton({ props: { type: "image", size: (
    /*size*/
    ctx[1]
  ) } });
  skeleton1 = new Skeleton({ props: { type: "header", size: "4" } });
  skeleton2 = new Skeleton({ props: { type: "header", size: "1" } });
  skeleton3 = new Skeleton({ props: { type: "lines", size: (
    /*size*/
    ctx[1]
  ) } });
  return { c() {
    div3 = element("div");
    div2 = element("div");
    div0 = element("div");
    create_component(skeleton0.$$.fragment);
    t0 = space();
    div1 = element("div");
    create_component(skeleton1.$$.fragment);
    t1 = space();
    create_component(skeleton2.$$.fragment);
    t2 = space();
    create_component(skeleton3.$$.fragment);
    set_style(div0, "flex", "1 1 auto");
    set_style(div1, "flex", "2 2 auto");
    set_style(div2, "display", "flex");
    set_style(div2, "gap", "1rem");
  }, m(target, anchor) {
    insert(target, div3, anchor);
    append(div3, div2);
    append(div2, div0);
    mount_component(skeleton0, div0, null);
    append(div2, t0);
    append(div2, div1);
    mount_component(skeleton1, div1, null);
    append(div1, t1);
    mount_component(skeleton2, div1, null);
    append(div3, t2);
    mount_component(skeleton3, div3, null);
    current = true;
  }, p(ctx2, dirty) {
    const skeleton0_changes = {};
    if (dirty & /*size*/
    2)
      skeleton0_changes.size = /*size*/
      ctx2[1];
    skeleton0.$set(skeleton0_changes);
    const skeleton3_changes = {};
    if (dirty & /*size*/
    2)
      skeleton3_changes.size = /*size*/
      ctx2[1];
    skeleton3.$set(skeleton3_changes);
  }, i(local) {
    if (current)
      return;
    transition_in(skeleton0.$$.fragment, local);
    transition_in(skeleton1.$$.fragment, local);
    transition_in(skeleton2.$$.fragment, local);
    transition_in(skeleton3.$$.fragment, local);
    current = true;
  }, o(local) {
    transition_out(skeleton0.$$.fragment, local);
    transition_out(skeleton1.$$.fragment, local);
    transition_out(skeleton2.$$.fragment, local);
    transition_out(skeleton3.$$.fragment, local);
    current = false;
  }, d(detaching) {
    if (detaching)
      detach(div3);
    destroy_component(skeleton0);
    destroy_component(skeleton1);
    destroy_component(skeleton2);
    destroy_component(skeleton3);
  } };
}
function create_if_block_2$5(ctx) {
  let each_1_anchor;
  let current;
  let each_value = Array(Number.parseInt(
    /*linecount*/
    ctx[2] + ""
  ));
  let each_blocks = [];
  for (let i = 0; i < each_value.length; i += 1) {
    each_blocks[i] = create_each_block$3(get_each_context$3(ctx, each_value, i));
  }
  const out = (i) => transition_out(each_blocks[i], 1, 1, () => {
    each_blocks[i] = null;
  });
  return { c() {
    for (let i = 0; i < each_blocks.length; i += 1) {
      each_blocks[i].c();
    }
    each_1_anchor = empty();
  }, m(target, anchor) {
    for (let i = 0; i < each_blocks.length; i += 1) {
      if (each_blocks[i]) {
        each_blocks[i].m(target, anchor);
      }
    }
    insert(target, each_1_anchor, anchor);
    current = true;
  }, p(ctx2, dirty) {
    if (dirty & /*size, linecount*/
    6) {
      each_value = Array(Number.parseInt(
        /*linecount*/
        ctx2[2] + ""
      ));
      let i;
      for (i = 0; i < each_value.length; i += 1) {
        const child_ctx = get_each_context$3(ctx2, each_value, i);
        if (each_blocks[i]) {
          each_blocks[i].p(child_ctx, dirty);
          transition_in(each_blocks[i], 1);
        } else {
          each_blocks[i] = create_each_block$3(child_ctx);
          each_blocks[i].c();
          transition_in(each_blocks[i], 1);
          each_blocks[i].m(each_1_anchor.parentNode, each_1_anchor);
        }
      }
      group_outros();
      for (i = each_value.length; i < each_blocks.length; i += 1) {
        out(i);
      }
      check_outros();
    }
  }, i(local) {
    if (current)
      return;
    for (let i = 0; i < each_value.length; i += 1) {
      transition_in(each_blocks[i]);
    }
    current = true;
  }, o(local) {
    each_blocks = each_blocks.filter(Boolean);
    for (let i = 0; i < each_blocks.length; i += 1) {
      transition_out(each_blocks[i]);
    }
    current = false;
  }, d(detaching) {
    destroy_each(each_blocks, detaching);
    if (detaching)
      detach(each_1_anchor);
  } };
}
function create_if_block_1$6(ctx) {
  let div2;
  let div0;
  let skeleton0;
  let t0;
  let div1;
  let skeleton1;
  let t1;
  let skeleton2;
  let div2_class_value;
  let current;
  skeleton0 = new Skeleton({ props: { type: "avatar", size: (
    /*size*/
    ctx[1]
  ) } });
  skeleton1 = new Skeleton({ props: { type: "title", size: (
    /*size*/
    ctx[1]
  ) } });
  skeleton2 = new Skeleton({ props: { type: "text-small", size: (
    /*size*/
    ctx[1]
  ) } });
  return { c() {
    div2 = element("div");
    div0 = element("div");
    create_component(skeleton0.$$.fragment);
    t0 = space();
    div1 = element("div");
    create_component(skeleton1.$$.fragment);
    t1 = space();
    create_component(skeleton2.$$.fragment);
    attr(div0, "class", "profile-avatar");
    attr(div1, "class", "profile-name");
    attr(div2, "class", div2_class_value = "profile profile-" + /*size*/
    ctx[1]);
  }, m(target, anchor) {
    insert(target, div2, anchor);
    append(div2, div0);
    mount_component(skeleton0, div0, null);
    append(div2, t0);
    append(div2, div1);
    mount_component(skeleton1, div1, null);
    append(div1, t1);
    mount_component(skeleton2, div1, null);
    current = true;
  }, p(ctx2, dirty) {
    const skeleton0_changes = {};
    if (dirty & /*size*/
    2)
      skeleton0_changes.size = /*size*/
      ctx2[1];
    skeleton0.$set(skeleton0_changes);
    const skeleton1_changes = {};
    if (dirty & /*size*/
    2)
      skeleton1_changes.size = /*size*/
      ctx2[1];
    skeleton1.$set(skeleton1_changes);
    const skeleton2_changes = {};
    if (dirty & /*size*/
    2)
      skeleton2_changes.size = /*size*/
      ctx2[1];
    skeleton2.$set(skeleton2_changes);
    if (!current || dirty & /*size*/
    2 && div2_class_value !== (div2_class_value = "profile profile-" + /*size*/
    ctx2[1])) {
      attr(div2, "class", div2_class_value);
    }
  }, i(local) {
    if (current)
      return;
    transition_in(skeleton0.$$.fragment, local);
    transition_in(skeleton1.$$.fragment, local);
    transition_in(skeleton2.$$.fragment, local);
    current = true;
  }, o(local) {
    transition_out(skeleton0.$$.fragment, local);
    transition_out(skeleton1.$$.fragment, local);
    transition_out(skeleton2.$$.fragment, local);
    current = false;
  }, d(detaching) {
    if (detaching)
      detach(div2);
    destroy_component(skeleton0);
    destroy_component(skeleton1);
    destroy_component(skeleton2);
  } };
}
function create_if_block$c(ctx) {
  let div1;
  let skeleton0;
  let t0;
  let div0;
  let skeleton1;
  let t1;
  let skeleton2;
  let div1_class_value;
  let current;
  skeleton0 = new Skeleton({ props: { type: "image", size: (
    /*size*/
    ctx[1]
  ) } });
  skeleton1 = new Skeleton({ props: { type: "header", size: (
    /*size*/
    ctx[1]
  ) } });
  skeleton2 = new Skeleton({ props: { type: "lines", size: (
    /*size*/
    ctx[1]
  ), linecount: (
    /*linecount*/
    ctx[2]
  ) } });
  return { c() {
    div1 = element("div");
    create_component(skeleton0.$$.fragment);
    t0 = space();
    div0 = element("div");
    create_component(skeleton1.$$.fragment);
    t1 = space();
    create_component(skeleton2.$$.fragment);
    attr(div0, "class", "card-content");
    attr(div1, "class", div1_class_value = "card card-" + /*size*/
    ctx[1]);
    set_style(
      div1,
      "--max-width",
      /*maxwidth*/
      ctx[0]
    );
  }, m(target, anchor) {
    insert(target, div1, anchor);
    mount_component(skeleton0, div1, null);
    append(div1, t0);
    append(div1, div0);
    mount_component(skeleton1, div0, null);
    append(div0, t1);
    mount_component(skeleton2, div0, null);
    current = true;
  }, p(ctx2, dirty) {
    const skeleton0_changes = {};
    if (dirty & /*size*/
    2)
      skeleton0_changes.size = /*size*/
      ctx2[1];
    skeleton0.$set(skeleton0_changes);
    const skeleton1_changes = {};
    if (dirty & /*size*/
    2)
      skeleton1_changes.size = /*size*/
      ctx2[1];
    skeleton1.$set(skeleton1_changes);
    const skeleton2_changes = {};
    if (dirty & /*size*/
    2)
      skeleton2_changes.size = /*size*/
      ctx2[1];
    if (dirty & /*linecount*/
    4)
      skeleton2_changes.linecount = /*linecount*/
      ctx2[2];
    skeleton2.$set(skeleton2_changes);
    if (!current || dirty & /*size*/
    2 && div1_class_value !== (div1_class_value = "card card-" + /*size*/
    ctx2[1])) {
      attr(div1, "class", div1_class_value);
    }
    if (!current || dirty & /*maxwidth*/
    1) {
      set_style(
        div1,
        "--max-width",
        /*maxwidth*/
        ctx2[0]
      );
    }
  }, i(local) {
    if (current)
      return;
    transition_in(skeleton0.$$.fragment, local);
    transition_in(skeleton1.$$.fragment, local);
    transition_in(skeleton2.$$.fragment, local);
    current = true;
  }, o(local) {
    transition_out(skeleton0.$$.fragment, local);
    transition_out(skeleton1.$$.fragment, local);
    transition_out(skeleton2.$$.fragment, local);
    current = false;
  }, d(detaching) {
    if (detaching)
      detach(div1);
    destroy_component(skeleton0);
    destroy_component(skeleton1);
    destroy_component(skeleton2);
  } };
}
function create_each_block$3(ctx) {
  let skeleton;
  let current;
  skeleton = new Skeleton({ props: { type: "text", size: (
    /*size*/
    ctx[1]
  ), linecount: (
    /*linecount*/
    ctx[2]
  ) } });
  return { c() {
    create_component(skeleton.$$.fragment);
  }, m(target, anchor) {
    mount_component(skeleton, target, anchor);
    current = true;
  }, p(ctx2, dirty) {
    const skeleton_changes = {};
    if (dirty & /*size*/
    2)
      skeleton_changes.size = /*size*/
      ctx2[1];
    if (dirty & /*linecount*/
    4)
      skeleton_changes.linecount = /*linecount*/
      ctx2[2];
    skeleton.$set(skeleton_changes);
  }, i(local) {
    if (current)
      return;
    transition_in(skeleton.$$.fragment, local);
    current = true;
  }, o(local) {
    transition_out(skeleton.$$.fragment, local);
    current = false;
  }, d(detaching) {
    destroy_component(skeleton, detaching);
  } };
}
function create_fragment$p(ctx) {
  let div;
  let current_block_type_index;
  let if_block;
  let div_style_value;
  let current;
  const if_block_creators = [create_if_block$c, create_if_block_1$6, create_if_block_2$5, create_if_block_3$5, create_else_block$7];
  const if_blocks = [];
  function select_block_type(ctx2, dirty) {
    if (
      /*type*/
      ctx2[3] === "card"
    )
      return 0;
    if (
      /*type*/
      ctx2[3] === "profile"
    )
      return 1;
    if (
      /*type*/
      ctx2[3] === "lines"
    )
      return 2;
    if (
      /*type*/
      ctx2[3] === "article"
    )
      return 3;
    return 4;
  }
  current_block_type_index = select_block_type(ctx);
  if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
  return { c() {
    div = element("div");
    if_block.c();
    this.c = noop;
    attr(
      div,
      "data-testid",
      /*testid*/
      ctx[4]
    );
    attr(div, "style", div_style_value = calculateMargin(
      /*mt*/
      ctx[5],
      /*mr*/
      ctx[6],
      /*mb*/
      ctx[7],
      /*ml*/
      ctx[8]
    ) + ";");
  }, m(target, anchor) {
    insert(target, div, anchor);
    if_blocks[current_block_type_index].m(div, null);
    current = true;
  }, p(ctx2, [dirty]) {
    let previous_block_index = current_block_type_index;
    current_block_type_index = select_block_type(ctx2);
    if (current_block_type_index === previous_block_index) {
      if_blocks[current_block_type_index].p(ctx2, dirty);
    } else {
      group_outros();
      transition_out(if_blocks[previous_block_index], 1, 1, () => {
        if_blocks[previous_block_index] = null;
      });
      check_outros();
      if_block = if_blocks[current_block_type_index];
      if (!if_block) {
        if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx2);
        if_block.c();
      } else {
        if_block.p(ctx2, dirty);
      }
      transition_in(if_block, 1);
      if_block.m(div, null);
    }
    if (!current || dirty & /*testid*/
    16) {
      attr(
        div,
        "data-testid",
        /*testid*/
        ctx2[4]
      );
    }
    if (!current || dirty & /*mt, mr, mb, ml*/
    480 && div_style_value !== (div_style_value = calculateMargin(
      /*mt*/
      ctx2[5],
      /*mr*/
      ctx2[6],
      /*mb*/
      ctx2[7],
      /*ml*/
      ctx2[8]
    ) + ";")) {
      attr(div, "style", div_style_value);
    }
  }, i(local) {
    if (current)
      return;
    transition_in(if_block);
    current = true;
  }, o(local) {
    transition_out(if_block);
    current = false;
  }, d(detaching) {
    if (detaching)
      detach(div);
    if_blocks[current_block_type_index].d();
  } };
}
function instance$m($$self, $$props, $$invalidate) {
  const [Types, validateType] = typeValidator("Skeleton type", ["image", "text", "title", "text-small", "avatar", "header", "paragraph", "thumbnail", "card", "lines", "profile", "article"], true);
  const [Sizes, validateSize] = typeValidator("Skeleton size", ["1", "2", "3", "4"]);
  let { maxwidth = "" } = $$props;
  let { size = "1" } = $$props;
  let { linecount = 3 } = $$props;
  let { type } = $$props;
  let { testid = "" } = $$props;
  let { mt = null } = $$props;
  let { mr = null } = $$props;
  let { mb: mb2 = null } = $$props;
  let { ml: ml2 = null } = $$props;
  onMount(() => {
    setTimeout(() => validateType(type), 1);
    validateSize(size);
  });
  $$self.$$set = ($$props2) => {
    if ("maxwidth" in $$props2)
      $$invalidate(0, maxwidth = $$props2.maxwidth);
    if ("size" in $$props2)
      $$invalidate(1, size = $$props2.size);
    if ("linecount" in $$props2)
      $$invalidate(2, linecount = $$props2.linecount);
    if ("type" in $$props2)
      $$invalidate(3, type = $$props2.type);
    if ("testid" in $$props2)
      $$invalidate(4, testid = $$props2.testid);
    if ("mt" in $$props2)
      $$invalidate(5, mt = $$props2.mt);
    if ("mr" in $$props2)
      $$invalidate(6, mr = $$props2.mr);
    if ("mb" in $$props2)
      $$invalidate(7, mb2 = $$props2.mb);
    if ("ml" in $$props2)
      $$invalidate(8, ml2 = $$props2.ml);
  };
  return [maxwidth, size, linecount, type, testid, mt, mr, mb2, ml2];
}
class Skeleton extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `:host{box-sizing:border-box;font-family:var(--goa-font-family-sans)}@keyframes pulse{0%{opacity:0.5}50%{opacity:1}100%{opacity:0.5}}.skeleton{background-color:var(--goa-color-greyscale-100);animation:pulse 2s infinite ease-in-out;overflow:hidden;margin:10px 0}.image,.image-1{background-color:var(--goa-color-greyscale-100);flex:1 1 100px;height:100px;margin:0}.image-2{height:140px}.image-3{height:200px}.image-4{height:300px}.text,.text-1,.text-2,.text-3,.text-4{width:100%;height:.75rem;border-radius:0.25rem;margin:6px 0}.title,.title-1,.title-2{width:100%;height:.75rem;border-radius:0.25rem}.title-3{height:.8rem}.title-4{height:1rem}.text-small,.text-small-1{width:30%;height:6px;border-radius:2px}.text-small-2{width:40%;height:8px;border-radius:2px}.text-small-3{width:50%;height:10px;border-radius:3px}.text-small-4{width:70%;height:12px;border-radius:4px}.paragraph{width:100%;height:70px;border-radius:4px}.header,.header-1{width:50%;height:18px;margin:12px 0;border-radius:0.25rem}.header-2{width:60%;height:20px;margin:14px 0;border-radius:0.25rem}.header-3{width:70%;height:22px;margin:16px 0;border-radius:0.25rem}.header-4{width:80%;height:24px;margin:18px 0;border-radius:0.3rem}.avatar{display:inline-block}.avatar,.avatar-1{width:40px;height:40px;border-radius:50%}.avatar-2{width:60px;height:60px;border-radius:50%}.avatar-3{width:80px;height:80px;border-radius:50%}.avatar-4{width:120px;height:120px;border-radius:50%}.thumbnail{display:inline-block}.thumbnail,.thumbnail-1{width:40px;height:40px;border-radius:4px}.thumbnail-2{width:60px;height:60px;border-radius:4px}.thumbnail-3{width:80px;height:80px;border-radius:4px}.thumbnail-4{width:120px;height:120px;border-radius:4px}.card{display:inline-block}.card,.card-1,.card-2,.card-3,.card-4{border:1px solid var(--goa-color-greyscale-100);border-radius:4px}.card{width:100%}@media screen and (max-width: 623px){@media not (max-color:2147477350){.card{max-width:var(--max-width)}}}@media not  screen and (max-width: 623px){@media not (color:2147477350){.card{max-width:var(--max-width)}}}.card-content{flex:1 1 auto;padding:1rem}.profile{display:flex;flex-direction:row;align-items:center}.profile-1{max-width:280px;gap:1rem}.profile-2{max-width:360px;gap:1rem}.profile-3{max-width:480px;gap:1rem}.profile-4{max-width:560px;gap:1rem}.profile .profile-avatar{flex-shrink:0}.profile .profile-name{flex:1 1 auto}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$m, create_fragment$p, safe_not_equal, { maxwidth: 0, size: 1, linecount: 2, type: 3, testid: 4, mt: 5, mr: 6, mb: 7, ml: 8 }, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["maxwidth", "size", "linecount", "type", "testid", "mt", "mr", "mb", "ml"];
  }
  get maxwidth() {
    return this.$$.ctx[0];
  }
  set maxwidth(maxwidth) {
    this.$$set({ maxwidth });
    flush();
  }
  get size() {
    return this.$$.ctx[1];
  }
  set size(size) {
    this.$$set({ size });
    flush();
  }
  get linecount() {
    return this.$$.ctx[2];
  }
  set linecount(linecount) {
    this.$$set({ linecount });
    flush();
  }
  get type() {
    return this.$$.ctx[3];
  }
  set type(type) {
    this.$$set({ type });
    flush();
  }
  get testid() {
    return this.$$.ctx[4];
  }
  set testid(testid) {
    this.$$set({ testid });
    flush();
  }
  get mt() {
    return this.$$.ctx[5];
  }
  set mt(mt) {
    this.$$set({ mt });
    flush();
  }
  get mr() {
    return this.$$.ctx[6];
  }
  set mr(mr) {
    this.$$set({ mr });
    flush();
  }
  get mb() {
    return this.$$.ctx[7];
  }
  set mb(mb2) {
    this.$$set({ mb: mb2 });
    flush();
  }
  get ml() {
    return this.$$.ctx[8];
  }
  set ml(ml2) {
    this.$$set({ ml: ml2 });
    flush();
  }
}
customElements.define("goa-skeleton", Skeleton);
function create_fragment$o(ctx) {
  let div;
  return { c() {
    div = element("div");
    this.c = noop;
  }, m(target, anchor) {
    insert(target, div, anchor);
    ctx[3](div);
  }, p: noop, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(div);
    ctx[3](null);
  } };
}
function instance$l($$self, $$props, $$invalidate) {
  let { hspacing = "none" } = $$props;
  let { vspacing = "none" } = $$props;
  let rootEl;
  onMount(() => {
    injectCss(rootEl, ":host", { display: "block", width: hspacing === "fill" ? "100%" : `var(--goa-space-${hspacing})`, height: `var(--goa-space-${vspacing})` });
  });
  function div_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      rootEl = $$value;
      $$invalidate(0, rootEl);
    });
  }
  $$self.$$set = ($$props2) => {
    if ("hspacing" in $$props2)
      $$invalidate(1, hspacing = $$props2.hspacing);
    if ("vspacing" in $$props2)
      $$invalidate(2, vspacing = $$props2.vspacing);
  };
  return [rootEl, hspacing, vspacing, div_binding];
}
class Spacer extends SvelteElement {
  constructor(options) {
    super();
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$l, create_fragment$o, safe_not_equal, { hspacing: 1, vspacing: 2 }, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["hspacing", "vspacing"];
  }
  get hspacing() {
    return this.$$.ctx[1];
  }
  set hspacing(hspacing) {
    this.$$set({ hspacing });
    flush();
  }
  get vspacing() {
    return this.$$.ctx[2];
  }
  set vspacing(vspacing) {
    this.$$set({ vspacing });
    flush();
  }
}
customElements.define("goa-spacer", Spacer);
const subscriber_queue = [];
function writable(value, start = noop) {
  let stop;
  const subscribers = /* @__PURE__ */ new Set();
  function set(new_value) {
    if (safe_not_equal(value, new_value)) {
      value = new_value;
      if (stop) {
        const run_queue = !subscriber_queue.length;
        for (const subscriber of subscribers) {
          subscriber[1]();
          subscriber_queue.push(subscriber, value);
        }
        if (run_queue) {
          for (let i = 0; i < subscriber_queue.length; i += 2) {
            subscriber_queue[i][0](subscriber_queue[i + 1]);
          }
          subscriber_queue.length = 0;
        }
      }
    }
  }
  function update2(fn) {
    set(fn(value));
  }
  function subscribe2(run2, invalidate = noop) {
    const subscriber = [run2, invalidate];
    subscribers.add(subscriber);
    if (subscribers.size === 1) {
      stop = start(set) || noop;
    }
    run2(value);
    return () => {
      subscribers.delete(subscriber);
      if (subscribers.size === 0 && stop) {
        stop();
        stop = null;
      }
    };
  }
  return { set, update: update2, subscribe: subscribe2 };
}
function is_date(obj) {
  return Object.prototype.toString.call(obj) === "[object Date]";
}
function get_interpolator(a, b) {
  if (a === b || a !== a)
    return () => a;
  const type = typeof a;
  if (type !== typeof b || Array.isArray(a) !== Array.isArray(b)) {
    throw new Error("Cannot interpolate values of different type");
  }
  if (Array.isArray(a)) {
    const arr = b.map((bi2, i) => {
      return get_interpolator(a[i], bi2);
    });
    return (t2) => arr.map((fn) => fn(t2));
  }
  if (type === "object") {
    if (!a || !b)
      throw new Error("Object cannot be null");
    if (is_date(a) && is_date(b)) {
      a = a.getTime();
      b = b.getTime();
      const delta = b - a;
      return (t2) => new Date(a + t2 * delta);
    }
    const keys = Object.keys(b);
    const interpolators = {};
    keys.forEach((key) => {
      interpolators[key] = get_interpolator(a[key], b[key]);
    });
    return (t2) => {
      const result = {};
      keys.forEach((key) => {
        result[key] = interpolators[key](t2);
      });
      return result;
    };
  }
  if (type === "number") {
    const delta = b - a;
    return (t2) => a + t2 * delta;
  }
  throw new Error(`Cannot interpolate ${type} values`);
}
function tweened(value, defaults = {}) {
  const store = writable(value);
  let task;
  let target_value = value;
  function set(new_value, opts) {
    if (value == null) {
      store.set(value = new_value);
      return Promise.resolve();
    }
    target_value = new_value;
    let previous_task = task;
    let started = false;
    let { delay = 0, duration = 400, easing = identity, interpolate = get_interpolator } = assign(assign({}, defaults), opts);
    if (duration === 0) {
      if (previous_task) {
        previous_task.abort();
        previous_task = null;
      }
      store.set(value = target_value);
      return Promise.resolve();
    }
    const start = now() + delay;
    let fn;
    task = loop((now2) => {
      if (now2 < start)
        return true;
      if (!started) {
        fn = interpolate(value, new_value);
        if (typeof duration === "function")
          duration = duration(value, new_value);
        started = true;
      }
      if (previous_task) {
        previous_task.abort();
        previous_task = null;
      }
      const elapsed = now2 - start;
      if (elapsed > duration) {
        store.set(value = new_value);
        return false;
      }
      store.set(value = fn(easing(elapsed / duration)));
      return true;
    });
    return task.promise;
  }
  return { set, update: (fn, opts) => set(fn(target_value, value), opts), subscribe: store.subscribe };
}
function create_if_block$b(ctx) {
  let svg;
  let circle;
  let circle_stroke_value;
  let circle_r_value;
  let path;
  let path_d_value;
  let path_stroke_value;
  let svg_class_value;
  let svg_viewBox_value;
  return { c() {
    svg = svg_element("svg");
    circle = svg_element("circle");
    path = svg_element("path");
    attr(
      circle,
      "cx",
      /*radius*/
      ctx[3]
    );
    attr(
      circle,
      "cy",
      /*radius*/
      ctx[3]
    );
    attr(circle, "stroke", circle_stroke_value = /*invert*/
    ctx[0] ? "var(--goa-color-info-hover)" : "var(--goa-color-brand-light)");
    attr(
      circle,
      "stroke-width",
      /*strokewidth*/
      ctx[4]
    );
    attr(circle, "r", circle_r_value = /*radius*/
    ctx[3] - /*strokewidth*/
    ctx[4] / 2);
    attr(path, "d", path_d_value = /*getArc*/
    ctx[9](
      /*$_progress*/
      ctx[7]
    ));
    attr(
      path,
      "stroke-width",
      /*strokewidth*/
      ctx[4]
    );
    attr(path, "stroke", path_stroke_value = /*invert*/
    ctx[0] ? "var(--goa-color-brand-light)" : "var(--goa-color-info-default)");
    attr(path, "stroke-linecap", "round");
    attr(svg, "class", svg_class_value = `spinner-${/*type*/
    ctx[2]}`);
    attr(svg, "fill", "none");
    attr(svg, "viewBox", svg_viewBox_value = "0 0 " + /*diameter*/
    ctx[5] + " " + /*diameter*/
    ctx[5]);
    attr(
      svg,
      "width",
      /*diameter*/
      ctx[5]
    );
    attr(
      svg,
      "height",
      /*diameter*/
      ctx[5]
    );
    attr(
      svg,
      "data-testid",
      /*testid*/
      ctx[1]
    );
    attr(svg, "xmlns", "http://www.w3.org/2000/svg");
  }, m(target, anchor) {
    insert(target, svg, anchor);
    append(svg, circle);
    append(svg, path);
  }, p(ctx2, dirty) {
    if (dirty & /*radius*/
    8) {
      attr(
        circle,
        "cx",
        /*radius*/
        ctx2[3]
      );
    }
    if (dirty & /*radius*/
    8) {
      attr(
        circle,
        "cy",
        /*radius*/
        ctx2[3]
      );
    }
    if (dirty & /*invert*/
    1 && circle_stroke_value !== (circle_stroke_value = /*invert*/
    ctx2[0] ? "var(--goa-color-info-hover)" : "var(--goa-color-brand-light)")) {
      attr(circle, "stroke", circle_stroke_value);
    }
    if (dirty & /*strokewidth*/
    16) {
      attr(
        circle,
        "stroke-width",
        /*strokewidth*/
        ctx2[4]
      );
    }
    if (dirty & /*radius, strokewidth*/
    24 && circle_r_value !== (circle_r_value = /*radius*/
    ctx2[3] - /*strokewidth*/
    ctx2[4] / 2)) {
      attr(circle, "r", circle_r_value);
    }
    if (dirty & /*$_progress*/
    128 && path_d_value !== (path_d_value = /*getArc*/
    ctx2[9](
      /*$_progress*/
      ctx2[7]
    ))) {
      attr(path, "d", path_d_value);
    }
    if (dirty & /*strokewidth*/
    16) {
      attr(
        path,
        "stroke-width",
        /*strokewidth*/
        ctx2[4]
      );
    }
    if (dirty & /*invert*/
    1 && path_stroke_value !== (path_stroke_value = /*invert*/
    ctx2[0] ? "var(--goa-color-brand-light)" : "var(--goa-color-info-default)")) {
      attr(path, "stroke", path_stroke_value);
    }
    if (dirty & /*type*/
    4 && svg_class_value !== (svg_class_value = `spinner-${/*type*/
    ctx2[2]}`)) {
      attr(svg, "class", svg_class_value);
    }
    if (dirty & /*diameter*/
    32 && svg_viewBox_value !== (svg_viewBox_value = "0 0 " + /*diameter*/
    ctx2[5] + " " + /*diameter*/
    ctx2[5])) {
      attr(svg, "viewBox", svg_viewBox_value);
    }
    if (dirty & /*diameter*/
    32) {
      attr(
        svg,
        "width",
        /*diameter*/
        ctx2[5]
      );
    }
    if (dirty & /*diameter*/
    32) {
      attr(
        svg,
        "height",
        /*diameter*/
        ctx2[5]
      );
    }
    if (dirty & /*testid*/
    2) {
      attr(
        svg,
        "data-testid",
        /*testid*/
        ctx2[1]
      );
    }
  }, d(detaching) {
    if (detaching)
      detach(svg);
  } };
}
function create_fragment$n(ctx) {
  let if_block_anchor;
  let if_block = (
    /*ready*/
    ctx[6] && create_if_block$b(ctx)
  );
  return { c() {
    if (if_block)
      if_block.c();
    if_block_anchor = empty();
    this.c = noop;
  }, m(target, anchor) {
    if (if_block)
      if_block.m(target, anchor);
    insert(target, if_block_anchor, anchor);
  }, p(ctx2, [dirty]) {
    if (
      /*ready*/
      ctx2[6]
    ) {
      if (if_block) {
        if_block.p(ctx2, dirty);
      } else {
        if_block = create_if_block$b(ctx2);
        if_block.c();
        if_block.m(if_block_anchor.parentNode, if_block_anchor);
      }
    } else if (if_block) {
      if_block.d(1);
      if_block = null;
    }
  }, i: noop, o: noop, d(detaching) {
    if (if_block)
      if_block.d(detaching);
    if (detaching)
      detach(if_block_anchor);
  } };
}
function instance$k($$self, $$props, $$invalidate) {
  let diameter;
  let strokewidth;
  let radius;
  let pathRadius;
  let ready;
  let $_progress;
  let { size } = $$props;
  let { invert = false } = $$props;
  let { progress = -1 } = $$props;
  let { testid = "" } = $$props;
  let type = "infinite";
  const _progress = tweened(0, { duration: 500, easing: quartOut });
  component_subscribe($$self, _progress, (value) => $$invalidate(7, $_progress = value));
  function getCoords(radians) {
    const x2 = radius + pathRadius * Math.cos(radians);
    const y2 = radius + pathRadius * Math.sin(radians);
    return x2 + " " + y2;
  }
  function getArc(progress2) {
    switch (type) {
      case "progress": {
        const start = getCoords(-Math.PI / 2);
        const end = getCoords(-Math.PI / 2 + 2 * Math.PI * (progress2 / 100));
        const largeArcFlag = progress2 % 100 < 50 ? 0 : 1;
        return `M ${start} A ${pathRadius} ${pathRadius} 0 ${largeArcFlag} 1 ${end}`;
      }
      case "infinite": {
        const start = getCoords(Math.PI * 1.5);
        const end = getCoords(0);
        return `M ${start} A ${pathRadius} ${pathRadius} 0 1 0 ${end}`;
      }
    }
  }
  $$self.$$set = ($$props2) => {
    if ("size" in $$props2)
      $$invalidate(10, size = $$props2.size);
    if ("invert" in $$props2)
      $$invalidate(0, invert = $$props2.invert);
    if ("progress" in $$props2)
      $$invalidate(11, progress = $$props2.progress);
    if ("testid" in $$props2)
      $$invalidate(1, testid = $$props2.testid);
  };
  $$self.$$.update = () => {
    if ($$self.$$.dirty & /*progress*/
    2048) {
      {
        const p2 = parseFloat(progress + "");
        if (p2 >= 0) {
          _progress.set(p2 || 1);
          $$invalidate(2, type = "progress");
        }
      }
    }
    if ($$self.$$.dirty & /*size*/
    1024) {
      $$invalidate(5, diameter = size && { small: 16, medium: 32, large: 64, xlarge: 100 }[size]);
    }
    if ($$self.$$.dirty & /*size*/
    1024) {
      $$invalidate(4, strokewidth = size && { small: 2, medium: 4, large: 7, xlarge: 9 }[size]);
    }
    if ($$self.$$.dirty & /*diameter*/
    32) {
      $$invalidate(3, radius = diameter / 2);
    }
    if ($$self.$$.dirty & /*radius, strokewidth*/
    24) {
      $$invalidate(12, pathRadius = radius - strokewidth / 2);
    }
    if ($$self.$$.dirty & /*type, pathRadius, progress*/
    6148) {
      $$invalidate(6, ready = type === "infinite" ? pathRadius : pathRadius && progress);
    }
  };
  return [invert, testid, type, radius, strokewidth, diameter, ready, $_progress, _progress, getArc, size, progress, pathRadius];
}
class Spinner extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `:host{box-sizing:border-box;font-family:var(--goa-font-family-sans)}@keyframes rotate{100%{transform:rotate(360deg)}}.spinner-infinite{animation:rotate 2s linear infinite}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$k, create_fragment$n, safe_not_equal, { size: 10, invert: 0, progress: 11, testid: 1 }, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["size", "invert", "progress", "testid"];
  }
  get size() {
    return this.$$.ctx[10];
  }
  set size(size) {
    this.$$set({ size });
    flush();
  }
  get invert() {
    return this.$$.ctx[0];
  }
  set invert(invert) {
    this.$$set({ invert });
    flush();
  }
  get progress() {
    return this.$$.ctx[11];
  }
  set progress(progress) {
    this.$$set({ progress });
    flush();
  }
  get testid() {
    return this.$$.ctx[1];
  }
  set testid(testid) {
    this.$$set({ testid });
    flush();
  }
}
customElements.define("goa-spinner", Spinner);
function create_else_block$6(ctx) {
  let table;
  let slot;
  let table_style_value;
  return { c() {
    table = element("table");
    slot = element("slot");
    attr(table, "style", table_style_value = /*width*/
    ctx[0] && "width: 100%;");
  }, m(target, anchor) {
    insert(target, table, anchor);
    append(table, slot);
  }, p(ctx2, dirty) {
    if (dirty & /*width*/
    1 && table_style_value !== (table_style_value = /*width*/
    ctx2[0] && "width: 100%;")) {
      attr(table, "style", table_style_value);
    }
  }, d(detaching) {
    if (detaching)
      detach(table);
  } };
}
function create_if_block$a(ctx) {
  let slot;
  return { c() {
    slot = element("slot");
  }, m(target, anchor) {
    insert(target, slot, anchor);
  }, p: noop, d(detaching) {
    if (detaching)
      detach(slot);
  } };
}
function create_fragment$m(ctx) {
  let div;
  let div_class_value;
  let div_style_value;
  function select_block_type(ctx2, dirty) {
    if (
      /*_isTableRoot*/
      ctx2[7]
    )
      return create_if_block$a;
    return create_else_block$6;
  }
  let current_block_type = select_block_type(ctx);
  let if_block = current_block_type(ctx);
  return { c() {
    div = element("div");
    if_block.c();
    this.c = noop;
    attr(div, "class", div_class_value = `goatable ${/*variant*/
    ctx[1]}`);
    attr(div, "style", div_style_value = `
    ${/*width*/
    ctx[0] && `width: ${/*width*/
    ctx[0]};`}
    ${calculateMargin(
      /*mt*/
      ctx[2],
      /*mr*/
      ctx[3],
      /*mb*/
      ctx[4],
      /*ml*/
      ctx[5]
    )}
  `);
    toggle_class(
      div,
      "sticky",
      /*_stickyHeader*/
      ctx[8]
    );
  }, m(target, anchor) {
    insert(target, div, anchor);
    if_block.m(div, null);
    ctx[10](div);
  }, p(ctx2, [dirty]) {
    if (current_block_type === (current_block_type = select_block_type(ctx2)) && if_block) {
      if_block.p(ctx2, dirty);
    } else {
      if_block.d(1);
      if_block = current_block_type(ctx2);
      if (if_block) {
        if_block.c();
        if_block.m(div, null);
      }
    }
    if (dirty & /*variant*/
    2 && div_class_value !== (div_class_value = `goatable ${/*variant*/
    ctx2[1]}`)) {
      attr(div, "class", div_class_value);
    }
    if (dirty & /*width, mt, mr, mb, ml*/
    61 && div_style_value !== (div_style_value = `
    ${/*width*/
    ctx2[0] && `width: ${/*width*/
    ctx2[0]};`}
    ${calculateMargin(
      /*mt*/
      ctx2[2],
      /*mr*/
      ctx2[3],
      /*mb*/
      ctx2[4],
      /*ml*/
      ctx2[5]
    )}
  `)) {
      attr(div, "style", div_style_value);
    }
    if (dirty & /*variant, _stickyHeader*/
    258) {
      toggle_class(
        div,
        "sticky",
        /*_stickyHeader*/
        ctx2[8]
      );
    }
  }, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(div);
    if_block.d();
    ctx[10](null);
  } };
}
function dispatch(el2, params) {
  el2.dispatchEvent(new CustomEvent("_sort", { composed: true, bubbles: true, cancelable: false, detail: params }));
}
function instance$j($$self, $$props, $$invalidate) {
  let _stickyHeader;
  const [Variants, validateVariant] = typeValidator("Table variant", ["normal", "relaxed"], true);
  let { width = "" } = $$props;
  let { stickyheader = "false" } = $$props;
  let { variant = "normal" } = $$props;
  let { mt = null } = $$props;
  let { mr = null } = $$props;
  let { mb: mb2 = null } = $$props;
  let { ml: ml2 = null } = $$props;
  let _rootEl;
  let _isTableRoot = false;
  onMount(() => {
    validateVariant(variant);
    setTimeout(attachSortEventHandling, 0);
    const slot = _rootEl.querySelector("slot");
    if (!slot || slot.assignedElements().length === 0) {
      return;
    }
    $$invalidate(7, _isTableRoot = slot.assignedElements()[0].tagName === "TABLE");
  });
  async function attachSortEventHandling() {
    var _a;
    await tick();
    const contentSlot = _rootEl.querySelector("slot");
    const headings = (_a = contentSlot.assignedElements().find((el2) => el2.tagName === "THEAD" || el2.tagName === "TABLE")) === null || _a === void 0 ? void 0 : _a.querySelectorAll("goa-table-sort-header");
    headings === null || headings === void 0 ? void 0 : headings.forEach((heading) => {
      heading.addEventListener("click", () => {
        const sortBy = heading.getAttribute("name");
        let sortDir;
        headings.forEach((child) => {
          if (child.getAttribute("name") === sortBy) {
            const direction = child["direction"];
            const newDirection = direction === "asc" ? "desc" : "asc";
            sortDir = newDirection === "asc" ? 1 : -1;
            child.setAttribute("direction", newDirection);
          } else {
            child.setAttribute("direction", "none");
          }
        });
        dispatch(heading, { sortBy, sortDir });
      });
      const initialSortBy = heading.getAttribute("name");
      const initialDirection = heading["direction"];
      if (initialDirection && initialDirection !== "none") {
        setTimeout(() => {
          dispatch(heading, { sortBy: initialSortBy, sortDir: initialDirection === "asc" ? 1 : -1 });
        }, 10);
      }
    });
  }
  function div_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      _rootEl = $$value;
      $$invalidate(6, _rootEl);
    });
  }
  $$self.$$set = ($$props2) => {
    if ("width" in $$props2)
      $$invalidate(0, width = $$props2.width);
    if ("stickyheader" in $$props2)
      $$invalidate(9, stickyheader = $$props2.stickyheader);
    if ("variant" in $$props2)
      $$invalidate(1, variant = $$props2.variant);
    if ("mt" in $$props2)
      $$invalidate(2, mt = $$props2.mt);
    if ("mr" in $$props2)
      $$invalidate(3, mr = $$props2.mr);
    if ("mb" in $$props2)
      $$invalidate(4, mb2 = $$props2.mb);
    if ("ml" in $$props2)
      $$invalidate(5, ml2 = $$props2.ml);
  };
  $$self.$$.update = () => {
    if ($$self.$$.dirty & /*stickyheader*/
    512) {
      $$invalidate(8, _stickyHeader = toBoolean(stickyheader));
    }
  };
  return [width, variant, mt, mr, mb2, ml2, _rootEl, _isTableRoot, _stickyHeader, stickyheader, div_binding];
}
class Table extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `:host{overflow-x:auto}.goatable{width:0}table{border-collapse:collapse}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$j, create_fragment$m, safe_not_equal, { width: 0, stickyheader: 9, variant: 1, mt: 2, mr: 3, mb: 4, ml: 5 }, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["width", "stickyheader", "variant", "mt", "mr", "mb", "ml"];
  }
  get width() {
    return this.$$.ctx[0];
  }
  set width(width) {
    this.$$set({ width });
    flush();
  }
  get stickyheader() {
    return this.$$.ctx[9];
  }
  set stickyheader(stickyheader) {
    this.$$set({ stickyheader });
    flush();
  }
  get variant() {
    return this.$$.ctx[1];
  }
  set variant(variant) {
    this.$$set({ variant });
    flush();
  }
  get mt() {
    return this.$$.ctx[2];
  }
  set mt(mt) {
    this.$$set({ mt });
    flush();
  }
  get mr() {
    return this.$$.ctx[3];
  }
  set mr(mr) {
    this.$$set({ mr });
    flush();
  }
  get mb() {
    return this.$$.ctx[4];
  }
  set mb(mb2) {
    this.$$set({ mb: mb2 });
    flush();
  }
  get ml() {
    return this.$$.ctx[5];
  }
  set ml(ml2) {
    this.$$set({ ml: ml2 });
    flush();
  }
}
customElements.define("goa-table", Table);
function create_else_block$5(ctx) {
  let div;
  return { c() {
    div = element("div");
    div.innerHTML = `<goa-icon type="caret-up" size="small"></goa-icon> 
      <goa-icon type="caret-down" size="small"></goa-icon>`;
    attr(div, "class", "direction--none");
  }, m(target, anchor) {
    insert(target, div, anchor);
  }, d(detaching) {
    if (detaching)
      detach(div);
  } };
}
function create_if_block_1$5(ctx) {
  let goa_icon;
  return { c() {
    goa_icon = element("goa-icon");
    set_custom_element_data(goa_icon, "type", "caret-up");
    set_custom_element_data(goa_icon, "size", "small");
  }, m(target, anchor) {
    insert(target, goa_icon, anchor);
  }, d(detaching) {
    if (detaching)
      detach(goa_icon);
  } };
}
function create_if_block$9(ctx) {
  let goa_icon;
  return { c() {
    goa_icon = element("goa-icon");
    set_custom_element_data(goa_icon, "type", "caret-down");
    set_custom_element_data(goa_icon, "size", "small");
  }, m(target, anchor) {
    insert(target, goa_icon, anchor);
  }, d(detaching) {
    if (detaching)
      detach(goa_icon);
  } };
}
function create_fragment$l(ctx) {
  let button;
  let slot;
  let t2;
  function select_block_type(ctx2, dirty) {
    if (
      /*direction*/
      ctx2[0] === "desc"
    )
      return create_if_block$9;
    if (
      /*direction*/
      ctx2[0] === "asc"
    )
      return create_if_block_1$5;
    return create_else_block$5;
  }
  let current_block_type = select_block_type(ctx);
  let if_block = current_block_type(ctx);
  return { c() {
    button = element("button");
    slot = element("slot");
    t2 = space();
    if_block.c();
    this.c = noop;
  }, m(target, anchor) {
    insert(target, button, anchor);
    append(button, slot);
    append(button, t2);
    if_block.m(button, null);
  }, p(ctx2, [dirty]) {
    if (current_block_type !== (current_block_type = select_block_type(ctx2))) {
      if_block.d(1);
      if_block = current_block_type(ctx2);
      if (if_block) {
        if_block.c();
        if_block.m(button, null);
      }
    }
  }, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(button);
    if_block.d();
  } };
}
function instance$i($$self, $$props, $$invalidate) {
  let { direction = "none" } = $$props;
  $$self.$$set = ($$props2) => {
    if ("direction" in $$props2)
      $$invalidate(0, direction = $$props2.direction);
  };
  return [direction];
}
class TableSortHeader extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `:host{display:flex;align-items:flex-end}button{border:none;background:none;display:flex;font-family:inherit;font-size:inherit;font-weight:inherit;color:inherit;width:100%;height:3.75rem;align-items:center;padding:0 1rem;text-align:left;gap:0.25rem;align-items:center}button:hover{background-color:var(--goa-color-greyscale-100);cursor:pointer;color:var(--goa-color-interactive-hover)}button goa-icon{color:var(--goa-color-interactive-default)}button:hover goa-icon{color:var(--goa-color-interactive-hover)}button .direction--none goa-icon{color:var(--goa-color-greyscale-400)}button:hover .direction--none goa-icon{color:var(--goa-color-greyscale-400)}goa-icon{scale:0.8}.direction--none goa-icon{height:0.625rem}.direction--none{display:inline-flex;flex-direction:column;align-items:center}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$i, create_fragment$l, safe_not_equal, { direction: 0 }, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["direction"];
  }
  get direction() {
    return this.$$.ctx[0];
  }
  set direction(direction) {
    this.$$set({ direction });
    flush();
  }
}
customElements.define("goa-table-sort-header", TableSortHeader);
function create_fragment$k(ctx) {
  let div;
  let textarea;
  let textarea_aria_label_value;
  let t2;
  let div_style_value;
  let mounted;
  let dispose;
  return { c() {
    div = element("div");
    textarea = element("textarea");
    t2 = space();
    this.c = noop;
    attr(
      textarea,
      "name",
      /*name*/
      ctx[1]
    );
    attr(
      textarea,
      "placeholder",
      /*placeholder*/
      ctx[2]
    );
    attr(
      textarea,
      "rows",
      /*rows*/
      ctx[3]
    );
    attr(textarea, "aria-label", textarea_aria_label_value = /*arialabel*/
    ctx[6] || /*name*/
    ctx[1]);
    attr(textarea, "class", "goa-textarea");
    textarea.disabled = /*isDisabled*/
    ctx[13];
    textarea.readOnly = /*isReadonly*/
    ctx[14];
    attr(
      textarea,
      "data-testid",
      /*testid*/
      ctx[4]
    );
    toggle_class(
      textarea,
      "error",
      /*isError*/
      ctx[15]
    );
    attr(div, "class", "container");
    attr(div, "style", div_style_value = `
    ${calculateMargin(
      /*mt*/
      ctx[7],
      /*mr*/
      ctx[8],
      /*mb*/
      ctx[9],
      /*ml*/
      ctx[10]
    )};
    --width: ${/*width*/
    ctx[5]};
  `);
  }, m(target, anchor) {
    insert(target, div, anchor);
    append(div, textarea);
    ctx[19](textarea);
    set_input_value(
      textarea,
      /*value*/
      ctx[0]
    );
    append(div, t2);
    if (!mounted) {
      dispose = listen(
        textarea,
        "input",
        /*textarea_input_handler*/
        ctx[20]
      );
      mounted = true;
    }
  }, p(ctx2, [dirty]) {
    if (dirty & /*name*/
    2) {
      attr(
        textarea,
        "name",
        /*name*/
        ctx2[1]
      );
    }
    if (dirty & /*placeholder*/
    4) {
      attr(
        textarea,
        "placeholder",
        /*placeholder*/
        ctx2[2]
      );
    }
    if (dirty & /*rows*/
    8) {
      attr(
        textarea,
        "rows",
        /*rows*/
        ctx2[3]
      );
    }
    if (dirty & /*arialabel, name*/
    66 && textarea_aria_label_value !== (textarea_aria_label_value = /*arialabel*/
    ctx2[6] || /*name*/
    ctx2[1])) {
      attr(textarea, "aria-label", textarea_aria_label_value);
    }
    if (dirty & /*isDisabled*/
    8192) {
      textarea.disabled = /*isDisabled*/
      ctx2[13];
    }
    if (dirty & /*isReadonly*/
    16384) {
      textarea.readOnly = /*isReadonly*/
      ctx2[14];
    }
    if (dirty & /*testid*/
    16) {
      attr(
        textarea,
        "data-testid",
        /*testid*/
        ctx2[4]
      );
    }
    if (dirty & /*value*/
    1) {
      set_input_value(
        textarea,
        /*value*/
        ctx2[0]
      );
    }
    if (dirty & /*isError*/
    32768) {
      toggle_class(
        textarea,
        "error",
        /*isError*/
        ctx2[15]
      );
    }
    if (dirty & /*mt, mr, mb, ml, width*/
    1952 && div_style_value !== (div_style_value = `
    ${calculateMargin(
      /*mt*/
      ctx2[7],
      /*mr*/
      ctx2[8],
      /*mb*/
      ctx2[9],
      /*ml*/
      ctx2[10]
    )};
    --width: ${/*width*/
    ctx2[5]};
  `)) {
      attr(div, "style", div_style_value);
    }
  }, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(div);
    ctx[19](null);
    mounted = false;
    dispose();
  } };
}
function instance$h($$self, $$props, $$invalidate) {
  let isError;
  let isDisabled;
  let isReadonly;
  let { name } = $$props;
  let { value = "" } = $$props;
  let { placeholder = "" } = $$props;
  let { rows = 3 } = $$props;
  let { testid = "" } = $$props;
  let { width = "60ch" } = $$props;
  let { error: error2 = "false" } = $$props;
  let { readonly = "false" } = $$props;
  let { disabled = "false" } = $$props;
  let { arialabel = "" } = $$props;
  let { mt = null } = $$props;
  let { mr = null } = $$props;
  let { mb: mb2 = null } = $$props;
  let { ml: ml2 = null } = $$props;
  let { maxcharcount = 0 } = $$props;
  let _textAreaEl;
  function textarea_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      _textAreaEl = $$value;
      $$invalidate(12, _textAreaEl);
    });
  }
  function textarea_input_handler() {
    value = this.value;
    $$invalidate(0, value);
  }
  $$self.$$set = ($$props2) => {
    if ("name" in $$props2)
      $$invalidate(1, name = $$props2.name);
    if ("value" in $$props2)
      $$invalidate(0, value = $$props2.value);
    if ("placeholder" in $$props2)
      $$invalidate(2, placeholder = $$props2.placeholder);
    if ("rows" in $$props2)
      $$invalidate(3, rows = $$props2.rows);
    if ("testid" in $$props2)
      $$invalidate(4, testid = $$props2.testid);
    if ("width" in $$props2)
      $$invalidate(5, width = $$props2.width);
    if ("error" in $$props2)
      $$invalidate(16, error2 = $$props2.error);
    if ("readonly" in $$props2)
      $$invalidate(17, readonly = $$props2.readonly);
    if ("disabled" in $$props2)
      $$invalidate(18, disabled = $$props2.disabled);
    if ("arialabel" in $$props2)
      $$invalidate(6, arialabel = $$props2.arialabel);
    if ("mt" in $$props2)
      $$invalidate(7, mt = $$props2.mt);
    if ("mr" in $$props2)
      $$invalidate(8, mr = $$props2.mr);
    if ("mb" in $$props2)
      $$invalidate(9, mb2 = $$props2.mb);
    if ("ml" in $$props2)
      $$invalidate(10, ml2 = $$props2.ml);
    if ("maxcharcount" in $$props2)
      $$invalidate(11, maxcharcount = $$props2.maxcharcount);
  };
  $$self.$$.update = () => {
    if ($$self.$$.dirty & /*error*/
    65536) {
      $$invalidate(15, isError = toBoolean(error2));
    }
    if ($$self.$$.dirty & /*disabled*/
    262144) {
      $$invalidate(13, isDisabled = toBoolean(disabled));
    }
    if ($$self.$$.dirty & /*readonly*/
    131072) {
      $$invalidate(14, isReadonly = toBoolean(readonly));
    }
    if ($$self.$$.dirty & /*_textAreaEl, isDisabled, name, value*/
    12291) {
      {
        if (_textAreaEl && !isDisabled) {
          _textAreaEl.dispatchEvent(new CustomEvent("_change", { composed: true, bubbles: false, cancelable: true, detail: { name, value } }));
        }
      }
    }
  };
  return [value, name, placeholder, rows, testid, width, arialabel, mt, mr, mb2, ml2, maxcharcount, _textAreaEl, isDisabled, isReadonly, isError, error2, readonly, disabled, textarea_binding, textarea_input_handler];
}
class TextArea extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `:host{--textarea-padding-vertical:0.625rem;--textarea-padding-horizontal:var(--goa-space-s);box-sizing:border-box;font-family:var(--goa-font-family-sans)}.container{position:relative;width:100%}@media screen and (max-width: 623px){@media not (max-color:2147477350){.container{max-width:var(--width)}}}@media not  screen and (max-width: 623px){@media not (color:2147477350){.container{max-width:var(--width)}}}.goa-textarea{display:block;width:100%;box-sizing:border-box;outline:none;border:1px solid var(--goa-color-greyscale-700);border-radius:3px;color:var(--goa-color-greyscale-black, #ccc);padding:var(--textarea-padding-vertical) var(--textarea-padding-horizontal);font-size:var(--goa-font-size-4);font-family:var(--goa-font-family-sans);min-width:100%;resize:vertical}@media screen and (max-width: 623px){@media not (max-color:2147477350){.goa-textarea{min-width:0;width:var(--width)}}}@media not  screen and (max-width: 623px){@media not (color:2147477350){.goa-textarea{min-width:0;width:var(--width)}}}.goa-textarea[readonly]{cursor:pointer}.goa-textarea:hover{box-shadow:0 0 0 var(--goa-border-width-m) var(--goa-color-interactive-hover)}.goa-textarea:active,.goa-textarea:focus,.goa-textarea:focus-within{box-shadow:0 0 0 var(--goa-border-width-l) var(--goa-color-interactive-focus)}.goa-textarea:disabled,.goa-textarea:disabled:hover,.goa-textarea:disabled:active,.goa-textarea:disabled:focus{background-color:var(--goa-color-greyscale-100);border-color:var(--goa-color-greyscale-200);cursor:default;box-shadow:none}.counter{position:absolute;right:0;padding-top:0.25rem;font-size:var(--goa-font-size-2)}.counter-error{color:var(--goa-color-interactive-error)
  }.error{border:var(--goa-border-width-m) solid var(--goa-color-interactive-error);box-shadow:0 0 0 var(--goa-border-width-s) var(--goa-color-interactive-error)}.error:hover{box-shadow:0 0 0 var(--goa-border-width-m) var(--goa-color-interactive-error)}.error:active,.error:focus{box-shadow:0 0 0 var(--goa-border-width-l) var(--goa-color-interactive-focus)}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$h, create_fragment$k, safe_not_equal, { name: 1, value: 0, placeholder: 2, rows: 3, testid: 4, width: 5, error: 16, readonly: 17, disabled: 18, arialabel: 6, mt: 7, mr: 8, mb: 9, ml: 10, maxcharcount: 11 }, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["name", "value", "placeholder", "rows", "testid", "width", "error", "readonly", "disabled", "arialabel", "mt", "mr", "mb", "ml", "maxcharcount"];
  }
  get name() {
    return this.$$.ctx[1];
  }
  set name(name) {
    this.$$set({ name });
    flush();
  }
  get value() {
    return this.$$.ctx[0];
  }
  set value(value) {
    this.$$set({ value });
    flush();
  }
  get placeholder() {
    return this.$$.ctx[2];
  }
  set placeholder(placeholder) {
    this.$$set({ placeholder });
    flush();
  }
  get rows() {
    return this.$$.ctx[3];
  }
  set rows(rows) {
    this.$$set({ rows });
    flush();
  }
  get testid() {
    return this.$$.ctx[4];
  }
  set testid(testid) {
    this.$$set({ testid });
    flush();
  }
  get width() {
    return this.$$.ctx[5];
  }
  set width(width) {
    this.$$set({ width });
    flush();
  }
  get error() {
    return this.$$.ctx[16];
  }
  set error(error2) {
    this.$$set({ error: error2 });
    flush();
  }
  get readonly() {
    return this.$$.ctx[17];
  }
  set readonly(readonly) {
    this.$$set({ readonly });
    flush();
  }
  get disabled() {
    return this.$$.ctx[18];
  }
  set disabled(disabled) {
    this.$$set({ disabled });
    flush();
  }
  get arialabel() {
    return this.$$.ctx[6];
  }
  set arialabel(arialabel) {
    this.$$set({ arialabel });
    flush();
  }
  get mt() {
    return this.$$.ctx[7];
  }
  set mt(mt) {
    this.$$set({ mt });
    flush();
  }
  get mr() {
    return this.$$.ctx[8];
  }
  set mr(mr) {
    this.$$set({ mr });
    flush();
  }
  get mb() {
    return this.$$.ctx[9];
  }
  set mb(mb2) {
    this.$$set({ mb: mb2 });
    flush();
  }
  get ml() {
    return this.$$.ctx[10];
  }
  set ml(ml2) {
    this.$$set({ ml: ml2 });
    flush();
  }
  get maxcharcount() {
    return this.$$.ctx[11];
  }
  set maxcharcount(maxcharcount) {
    this.$$set({ maxcharcount });
    flush();
  }
}
customElements.define("goa-textarea", TextArea);
const { window: window_1$1 } = globals;
function create_fragment$j(ctx) {
  let div1;
  let div0;
  let t0;
  let span;
  let t1;
  let span_id_value;
  let span_class_value;
  let div1_class_value;
  let div1_aria_describedby_value;
  let div1_style_value;
  let mounted;
  let dispose;
  add_render_callback(
    /*onwindowresize*/
    ctx[16]
  );
  return { c() {
    div1 = element("div");
    div0 = element("div");
    div0.innerHTML = `<slot></slot>`;
    t0 = space();
    span = element("span");
    t1 = text(
      /*content*/
      ctx[1]
    );
    this.c = noop;
    attr(div0, "class", "tooltiptarget");
    attr(span, "id", span_id_value = /*_tooltipInstanceId*/
    ctx[13] + "-tooltip");
    attr(span, "class", span_class_value = "tooltiptext " + /*position*/
    ctx[0] + " align-" + /*halign*/
    ctx[3]);
    set_style(
      span,
      "visibility",
      /*_tooltipVisible*/
      ctx[11] ? "visible" : "hidden"
    );
    attr(div1, "class", div1_class_value = "tooltip align-" + /*halign*/
    ctx[3]);
    attr(
      div1,
      "data-testid",
      /*testid*/
      ctx[2]
    );
    attr(div1, "role", "tooltip");
    attr(div1, "aria-describedby", div1_aria_describedby_value = /*_tooltipInstanceId*/
    ctx[13] + "-tooltip");
    attr(div1, "tabindex", "0");
    attr(div1, "style", div1_style_value = calculateMargin(
      /*mt*/
      ctx[4],
      /*mr*/
      ctx[5],
      /*mb*/
      ctx[6],
      /*ml*/
      ctx[7]
    ));
  }, m(target, anchor) {
    insert(target, div1, anchor);
    append(div1, div0);
    append(div1, t0);
    append(div1, span);
    append(span, t1);
    ctx[17](span);
    ctx[18](div1);
    if (!mounted) {
      dispose = [listen(
        window_1$1,
        "resize",
        /*onwindowresize*/
        ctx[16]
      ), listen(
        div1,
        "mouseenter",
        /*mouseenter_handler*/
        ctx[19]
      ), listen(
        div1,
        "mouseleave",
        /*hideTooltip*/
        ctx[15]
      ), listen(
        div1,
        "focus",
        /*focus_handler*/
        ctx[20]
      ), listen(
        div1,
        "blur",
        /*hideTooltip*/
        ctx[15]
      )];
      mounted = true;
    }
  }, p(ctx2, [dirty]) {
    if (dirty & /*content*/
    2)
      set_data(
        t1,
        /*content*/
        ctx2[1]
      );
    if (dirty & /*_tooltipInstanceId*/
    8192 && span_id_value !== (span_id_value = /*_tooltipInstanceId*/
    ctx2[13] + "-tooltip")) {
      attr(span, "id", span_id_value);
    }
    if (dirty & /*position, halign*/
    9 && span_class_value !== (span_class_value = "tooltiptext " + /*position*/
    ctx2[0] + " align-" + /*halign*/
    ctx2[3])) {
      attr(span, "class", span_class_value);
    }
    if (dirty & /*_tooltipVisible*/
    2048) {
      set_style(
        span,
        "visibility",
        /*_tooltipVisible*/
        ctx2[11] ? "visible" : "hidden"
      );
    }
    if (dirty & /*halign*/
    8 && div1_class_value !== (div1_class_value = "tooltip align-" + /*halign*/
    ctx2[3])) {
      attr(div1, "class", div1_class_value);
    }
    if (dirty & /*testid*/
    4) {
      attr(
        div1,
        "data-testid",
        /*testid*/
        ctx2[2]
      );
    }
    if (dirty & /*_tooltipInstanceId*/
    8192 && div1_aria_describedby_value !== (div1_aria_describedby_value = /*_tooltipInstanceId*/
    ctx2[13] + "-tooltip")) {
      attr(div1, "aria-describedby", div1_aria_describedby_value);
    }
    if (dirty & /*mt, mr, mb, ml*/
    240 && div1_style_value !== (div1_style_value = calculateMargin(
      /*mt*/
      ctx2[4],
      /*mr*/
      ctx2[5],
      /*mb*/
      ctx2[6],
      /*ml*/
      ctx2[7]
    ))) {
      attr(div1, "style", div1_style_value);
    }
  }, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(div1);
    ctx[17](null);
    ctx[18](null);
    mounted = false;
    run_all(dispose);
  } };
}
function instance$g($$self, $$props, $$invalidate) {
  const [Positions, validatePosition] = typeValidator("Tooltip positions", ["top", "bottom", "left", "right"], false);
  const [Alignment, validateAlignment] = typeValidator("Tooltip alignment", ["left", "right", "center"], false);
  const validator = (position2, align) => {
    if (position2 === "left" || position2 === "right") {
      if (align !== "center") {
        console.error(`[${align}] is an invalid option for position ${position2}`);
      }
    }
  };
  let { content = "" } = $$props;
  let { testid = "" } = $$props;
  let { position = "top" } = $$props;
  let { halign = "center" } = $$props;
  let { mt = null } = $$props;
  let { mr = null } = $$props;
  let { mb: mb2 = null } = $$props;
  let { ml: ml2 = null } = $$props;
  let _screenSize = 0;
  let _rootEl;
  let _tooltipEl;
  let _initialPosition;
  let _tooltipVisible = false;
  let _showTooltipTimeout = null;
  let _hideTooltipTimeout = null;
  let _tooltipInstanceId;
  onMount(() => {
    setTimeout(() => {
      validatePosition(position);
      validateAlignment(halign);
      validator(position, halign);
    }, 1);
    _initialPosition = position;
    $$invalidate(13, _tooltipInstanceId = Math.random().toString(36));
    _tooltipEl.getBoundingClientRect().width;
    window.addEventListener("resize", checkAndAdjustPosition);
    checkAndAdjustPosition();
  });
  onDestroy(() => {
    window.removeEventListener("resize", checkAndAdjustPosition);
    clearTimeout(_showTooltipTimeout);
    clearTimeout(_hideTooltipTimeout);
  });
  const showTooltip = () => {
    _showTooltipTimeout = setTimeout(() => {
      $$invalidate(11, _tooltipVisible = true);
      checkAndAdjustPosition();
    }, 300);
  };
  const hideTooltip = () => {
    clearTimeout(_showTooltipTimeout);
    $$invalidate(12, _hideTooltipTimeout = setTimeout(() => {
      $$invalidate(11, _tooltipVisible = false);
      $$invalidate(0, position = _initialPosition);
    }, 500));
  };
  function checkAndAdjustPosition() {
    if (!_tooltipEl || !_rootEl) {
      return;
    }
    const tooltipRect = _tooltipEl.getBoundingClientRect();
    const rootRect = _rootEl.getBoundingClientRect();
    const spaceTop = rootRect.top;
    const spaceBottom = window.innerHeight - rootRect.bottom;
    const spaceLeft = rootRect.left;
    const spaceRight = window.innerWidth - rootRect.right;
    const newWidth = Math.min(_screenSize * 0.8, 400, tooltipRect.width, Math.max(spaceLeft, spaceRight) - 10);
    const shouldWrapContent = newWidth > rootRect.width || newWidth > spaceLeft || newWidth > spaceRight;
    $$invalidate(9, _tooltipEl.style.width = `${newWidth - 32}px`, _tooltipEl);
    if (shouldWrapContent) {
      $$invalidate(9, _tooltipEl.style.whiteSpace = "normal", _tooltipEl);
    } else {
      $$invalidate(9, _tooltipEl.style.whiteSpace = "nowrap", _tooltipEl);
    }
    let newPosition = position;
    let newAlign = halign;
    if (position === "bottom" && tooltipRect.height > spaceBottom) {
      newPosition = "top";
    } else if (position === "top" && tooltipRect.height > spaceTop) {
      newPosition = "bottom";
    }
    if (position === "right" && tooltipRect.width > spaceRight) {
      newPosition = "left";
    } else if (position === "left" && tooltipRect.width > spaceLeft) {
      newPosition = "right";
    }
    if (halign === "right" && tooltipRect.width > spaceRight) {
      newAlign = "left";
    } else if (halign === "left" && tooltipRect.width > spaceLeft) {
      newAlign = "right";
    } else if (halign === "center" && (position === "top" || position === "bottom") && (tooltipRect.width / 2 > spaceLeft || tooltipRect.width / 2 > spaceRight)) {
      newAlign = spaceLeft > spaceRight ? "left" : "right";
    }
    $$invalidate(9, _tooltipEl.className = `tooltiptext ${newPosition} align-${newAlign}`, _tooltipEl);
  }
  function onwindowresize() {
    $$invalidate(10, _screenSize = window_1$1.innerWidth);
  }
  function span_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      _tooltipEl = $$value;
      $$invalidate(9, _tooltipEl);
    });
  }
  function div1_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      _rootEl = $$value;
      $$invalidate(8, _rootEl);
    });
  }
  const mouseenter_handler = () => {
    clearTimeout(_hideTooltipTimeout);
    showTooltip();
  };
  const focus_handler = () => {
    clearTimeout(_hideTooltipTimeout);
    showTooltip();
  };
  $$self.$$set = ($$props2) => {
    if ("content" in $$props2)
      $$invalidate(1, content = $$props2.content);
    if ("testid" in $$props2)
      $$invalidate(2, testid = $$props2.testid);
    if ("position" in $$props2)
      $$invalidate(0, position = $$props2.position);
    if ("halign" in $$props2)
      $$invalidate(3, halign = $$props2.halign);
    if ("mt" in $$props2)
      $$invalidate(4, mt = $$props2.mt);
    if ("mr" in $$props2)
      $$invalidate(5, mr = $$props2.mr);
    if ("mb" in $$props2)
      $$invalidate(6, mb2 = $$props2.mb);
    if ("ml" in $$props2)
      $$invalidate(7, ml2 = $$props2.ml);
  };
  $$self.$$.update = () => {
    if ($$self.$$.dirty & /*_rootEl, _tooltipEl*/
    768) {
      {
        if (_rootEl && _tooltipEl) {
          _rootEl.style.setProperty("--target-width", `${_rootEl.getBoundingClientRect().width / 2}px`);
        }
      }
    }
    if ($$self.$$.dirty & /*content*/
    2) {
      {
        checkAndAdjustPosition();
      }
    }
  };
  return [position, content, testid, halign, mt, mr, mb2, ml2, _rootEl, _tooltipEl, _screenSize, _tooltipVisible, _hideTooltipTimeout, _tooltipInstanceId, showTooltip, hideTooltip, onwindowresize, span_binding, div1_binding, mouseenter_handler, focus_handler];
}
class Tooltip extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `:host{box-sizing:border-box;font-family:var(--goa-font-family-sans)}.tooltip{position:relative;display:inline-flex;justify-content:center;align-items:center;cursor:pointer}.tooltiptext{visibility:hidden;font:var(--goa-typography-body-s);background-color:var(--goa-color-greyscale-700);color:var(--goa-color-text-light);text-align:center;border-radius:var(--goa-border-radius-m);position:absolute;z-index:1;opacity:0;transition:opacity 0.3s;padding:var(--goa-space-xs) var(--goa-space-m);text-align:left;white-space:nowrap;display:flex;flex-direction:column}.tooltiptarget{margin:4px}.tooltiptext.bottom{top:calc(100% + 10px)}.tooltiptext.top{bottom:calc(100% + 10px)}.tooltiptext.right{left:calc(100% + 10px)}.tooltiptext.left{right:calc(100% + 10px)}.tooltip:hover .tooltiptext,.tooltip:focus .tooltiptext{opacity:1}.tooltiptext.bottom::before,.tooltiptext.top::before,.tooltiptext.left::before,.tooltiptext.right::before{content:"";position:absolute;border-style:solid;aria-hidden:true}.tooltiptext.bottom::before{top:-10px;left:50%;border-width:0 10px 10px 10px;transform:translateX(-50%);border-color:transparent transparent var(--goa-color-greyscale-700) transparent}.tooltiptext.top::before{bottom:-10px;left:50%;transform:translateX(-50%);border-width:10px 10px 0 10px;border-color:var(--goa-color-greyscale-700) transparent transparent transparent}.tooltiptext.left::before{top:50%;right:-10px;transform:translateY(-50%);border-width:10px 0 10px 10px;border-color:transparent transparent transparent var(--goa-color-greyscale-700)}.tooltiptext.right::before{top:50%;left:-10px;transform:translateY(-50%);border-width:10px 10px 10px 0;border-style:solid;border-color:transparent var(--goa-color-greyscale-700) transparent transparent}.tooltiptext.bottom.align-left::before,.tooltiptext.top.align-left::before{left:calc(100% - (var(--target-width) + 1rem))}.tooltiptext.bottom.align-right::before,.tooltiptext.top.align-right::before{left:calc(var(--target-width) + 1rem)}.tooltip.align-right{justify-content:flex-start}.tooltip.align-left{justify-content:flex-end}.tooltiptext.align-right{left:0;margin-left:-1rem}.tooltiptext.align-left{right:0;margin-right:-1rem}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$g, create_fragment$j, safe_not_equal, { content: 1, testid: 2, position: 0, halign: 3, mt: 4, mr: 5, mb: 6, ml: 7 }, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["content", "testid", "position", "halign", "mt", "mr", "mb", "ml"];
  }
  get content() {
    return this.$$.ctx[1];
  }
  set content(content) {
    this.$$set({ content });
    flush();
  }
  get testid() {
    return this.$$.ctx[2];
  }
  set testid(testid) {
    this.$$set({ testid });
    flush();
  }
  get position() {
    return this.$$.ctx[0];
  }
  set position(position) {
    this.$$set({ position });
    flush();
  }
  get halign() {
    return this.$$.ctx[3];
  }
  set halign(halign) {
    this.$$set({ halign });
    flush();
  }
  get mt() {
    return this.$$.ctx[4];
  }
  set mt(mt) {
    this.$$set({ mt });
    flush();
  }
  get mr() {
    return this.$$.ctx[5];
  }
  set mr(mr) {
    this.$$set({ mr });
    flush();
  }
  get mb() {
    return this.$$.ctx[6];
  }
  set mb(mb2) {
    this.$$set({ mb: mb2 });
    flush();
  }
  get ml() {
    return this.$$.ctx[7];
  }
  set ml(ml2) {
    this.$$set({ ml: ml2 });
    flush();
  }
}
customElements.define("goa-tooltip", Tooltip);
function create_fragment$i(ctx) {
  let div;
  return { c() {
    div = element("div");
    div.innerHTML = `<header class="header"><slot name="header"></slot></header> 

  <nav class="nav"><slot name="nav"></slot></nav> 

  <main><slot></slot></main> 

  <footer class="footer"><slot name="footer"></slot></footer>`;
    this.c = noop;
    attr(div, "class", "page");
  }, m(target, anchor) {
    insert(target, div, anchor);
  }, p: noop, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(div);
  } };
}
class FullScreenNavbarLayout extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `.page{height:100vh;grid-template-columns:auto;grid-template-rows:min-content auto min-content;grid-template-areas:"header"
      "content"
      "nav"
      "footer";display:grid;place-content:stretch stretch;gap:0 0}@media screen and (max-width: 623px){.page{grid-template-columns:300px auto;grid-template-rows:min-content auto min-content;grid-template-areas:"header header"
        "nav content"
        "footer footer"}}.header{grid-area:header}.footer{grid-area:footer}main{grid-area:content;justify-self:stretch;padding:1rem}.nav{grid-area:nav;padding:1rem;background-color:var(--goa-color-greyscale-100)}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, null, create_fragment$i, safe_not_equal, {}, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
    }
  }
}
customElements.define("goa-layout-full-nav", FullScreenNavbarLayout);
function create_fragment$h(ctx) {
  let div;
  return { c() {
    div = element("div");
    div.innerHTML = `<section class="header"><slot name="header"></slot></section> 

  <main><slot></slot></main> 

  <section class="footer"><slot name="footer"></slot></section>`;
    this.c = noop;
    attr(div, "class", "page");
  }, m(target, anchor) {
    insert(target, div, anchor);
  }, p: noop, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(div);
  } };
}
class OneColumnLayout extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `.page{min-height:100vh;display:flex;flex-direction:column}.header,.footer{flex:0 0 auto}main{flex:1 1 auto}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, null, create_fragment$h, safe_not_equal, {}, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
    }
  }
}
customElements.define("goa-one-column-layout", OneColumnLayout);
function create_fragment$g(ctx) {
  let div;
  let header;
  let t0;
  let section;
  let t2;
  let footer;
  let div_style_value;
  return { c() {
    div = element("div");
    header = element("header");
    header.innerHTML = `<slot name="header"></slot>`;
    t0 = space();
    section = element("section");
    section.innerHTML = `<nav class="nav"><slot name="nav"></slot></nav> 

    <main><slot></slot></main>`;
    t2 = space();
    footer = element("footer");
    footer.innerHTML = `<slot name="footer"></slot>`;
    this.c = noop;
    attr(header, "class", "header");
    attr(section, "class", "content");
    attr(footer, "class", "footer");
    attr(div, "class", "page");
    attr(div, "style", div_style_value = `
    --max-content-width: ${/*maxcontentwidth*/
    ctx[1] || "100%"};
    --nav-column-width: ${/*navcolumnwidth*/
    ctx[0] || "256px"};
  `);
  }, m(target, anchor) {
    insert(target, div, anchor);
    append(div, header);
    append(div, t0);
    append(div, section);
    append(div, t2);
    append(div, footer);
  }, p(ctx2, [dirty]) {
    if (dirty & /*maxcontentwidth, navcolumnwidth*/
    3 && div_style_value !== (div_style_value = `
    --max-content-width: ${/*maxcontentwidth*/
    ctx2[1] || "100%"};
    --nav-column-width: ${/*navcolumnwidth*/
    ctx2[0] || "256px"};
  `)) {
      attr(div, "style", div_style_value);
    }
  }, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(div);
  } };
}
function instance$f($$self, $$props, $$invalidate) {
  let { navcolumnwidth = "" } = $$props;
  let { maxcontentwidth = "" } = $$props;
  $$self.$$set = ($$props2) => {
    if ("navcolumnwidth" in $$props2)
      $$invalidate(0, navcolumnwidth = $$props2.navcolumnwidth);
    if ("maxcontentwidth" in $$props2)
      $$invalidate(1, maxcontentwidth = $$props2.maxcontentwidth);
  };
  return [navcolumnwidth, maxcontentwidth];
}
class TwoColumnLayout extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `*{box-sizing:border-box}.page{min-height:100vh;display:flex;flex-direction:column}.content{flex:1 1 auto;display:flex;flex-direction:column;gap:2rem}.header,.footer{flex:0 0 auto}main{flex:1 1 auto;padding:0 1rem}.nav{padding:0 1rem;transition:transform 200ms ease-in-out;background-color:var(--goa-color-greyscale-white)}.nav>*{display:block;padding:0.5rem 0}@media screen and (max-width: 623px){@media not (max-color:2147477350){.page{gap:2rem}.content{display:flex;flex-direction:row;justify-content:center;width:min(var(--max-content-width), 100vw);margin:0 auto}.nav{padding:0 2rem;transform:translateX(0);flex:0 0 var(--nav-column-width)}main{padding-right:2rem}}}@media not  screen and (max-width: 623px){@media not (color:2147477350){.page{gap:2rem}.content{display:flex;flex-direction:row;justify-content:center;width:min(var(--max-content-width), 100vw);margin:0 auto}.nav{padding:0 2rem;transform:translateX(0);flex:0 0 var(--nav-column-width)}main{padding-right:2rem}}}@media screen and (min-width: 1024px){main{padding-right:4.5rem}}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$f, create_fragment$g, safe_not_equal, { navcolumnwidth: 0, maxcontentwidth: 1 }, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["navcolumnwidth", "maxcontentwidth"];
  }
  get navcolumnwidth() {
    return this.$$.ctx[0];
  }
  set navcolumnwidth(navcolumnwidth) {
    this.$$set({ navcolumnwidth });
    flush();
  }
  get maxcontentwidth() {
    return this.$$.ctx[1];
  }
  set maxcontentwidth(maxcontentwidth) {
    this.$$set({ maxcontentwidth });
    flush();
  }
}
customElements.define("goa-two-column-layout", TwoColumnLayout);
function create_fragment$f(ctx) {
  let div;
  let header;
  let t0;
  let section;
  let t4;
  let footer;
  let div_style_value;
  return { c() {
    div = element("div");
    header = element("header");
    header.innerHTML = `<slot name="header"></slot>`;
    t0 = space();
    section = element("section");
    section.innerHTML = `<nav class="nav"><slot name="nav"></slot></nav> 

    <main><slot></slot></main> 

    <nav class="nav side-menu"><slot name="sidebar"></slot> 
      <slot name="side-menu"></slot></nav>`;
    t4 = space();
    footer = element("footer");
    footer.innerHTML = `<slot name="footer"></slot>`;
    this.c = noop;
    attr(header, "class", "header");
    attr(section, "class", "content");
    attr(footer, "class", "footer");
    attr(div, "class", "page");
    attr(div, "style", div_style_value = `
    --max-content-width: ${/*maxcontentwidth*/
    ctx[2] || "100%"};
    --nav-column-width: ${/*leftcolumnwidth*/
    ctx[0] || "256px"};
    --side-menu-column-width: ${/*rightcolumnwidth*/
    ctx[1] || "256px"}
  `);
  }, m(target, anchor) {
    insert(target, div, anchor);
    append(div, header);
    append(div, t0);
    append(div, section);
    append(div, t4);
    append(div, footer);
  }, p(ctx2, [dirty]) {
    if (dirty & /*maxcontentwidth, leftcolumnwidth, rightcolumnwidth*/
    7 && div_style_value !== (div_style_value = `
    --max-content-width: ${/*maxcontentwidth*/
    ctx2[2] || "100%"};
    --nav-column-width: ${/*leftcolumnwidth*/
    ctx2[0] || "256px"};
    --side-menu-column-width: ${/*rightcolumnwidth*/
    ctx2[1] || "256px"}
  `)) {
      attr(div, "style", div_style_value);
    }
  }, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(div);
  } };
}
function instance$e($$self, $$props, $$invalidate) {
  let { leftcolumnwidth } = $$props;
  let { rightcolumnwidth } = $$props;
  let { maxcontentwidth } = $$props;
  $$self.$$set = ($$props2) => {
    if ("leftcolumnwidth" in $$props2)
      $$invalidate(0, leftcolumnwidth = $$props2.leftcolumnwidth);
    if ("rightcolumnwidth" in $$props2)
      $$invalidate(1, rightcolumnwidth = $$props2.rightcolumnwidth);
    if ("maxcontentwidth" in $$props2)
      $$invalidate(2, maxcontentwidth = $$props2.maxcontentwidth);
  };
  return [leftcolumnwidth, rightcolumnwidth, maxcontentwidth];
}
class ThreeColumnLayout extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `*{box-sizing:border-box}.page{min-height:100vh;display:flex;flex-direction:column}.content{flex:1 1 auto;display:flex;flex-direction:column;gap:2rem}.header,.footer{flex:0 0 auto}main{flex:1 1 auto;padding:0 1rem}.nav{padding:0 1rem;transition:transform 200ms ease-in-out;background-color:var(--goa-color-greyscale-white)}.nav>*{display:block;padding:0.5rem 0}@media screen and (max-width: 623px){@media not (max-color:2147477350){.page{gap:2rem}.content{display:flex;flex-direction:row;justify-content:center;width:min(var(--max-content-width), 100vw);margin:0 auto}.nav{padding:0 2rem;transform:translateX(0)}.nav:not(.side-menu){flex:0 0 var(--nav-column-width)}.nav.side-menu{flex:0 0 var(--side-menu-column-width)}main{padding-right:2rem}}}@media not  screen and (max-width: 623px){@media not (color:2147477350){.page{gap:2rem}.content{display:flex;flex-direction:row;justify-content:center;width:min(var(--max-content-width), 100vw);margin:0 auto}.nav{padding:0 2rem;transform:translateX(0)}.nav:not(.side-menu){flex:0 0 var(--nav-column-width)}.nav.side-menu{flex:0 0 var(--side-menu-column-width)}main{padding-right:2rem}}}@media screen and (min-width: 1024px){main{padding-right:4.5rem}}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$e, create_fragment$f, safe_not_equal, { leftcolumnwidth: 0, rightcolumnwidth: 1, maxcontentwidth: 2 }, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["leftcolumnwidth", "rightcolumnwidth", "maxcontentwidth"];
  }
  get leftcolumnwidth() {
    return this.$$.ctx[0];
  }
  set leftcolumnwidth(leftcolumnwidth) {
    this.$$set({ leftcolumnwidth });
    flush();
  }
  get rightcolumnwidth() {
    return this.$$.ctx[1];
  }
  set rightcolumnwidth(rightcolumnwidth) {
    this.$$set({ rightcolumnwidth });
    flush();
  }
  get maxcontentwidth() {
    return this.$$.ctx[2];
  }
  set maxcontentwidth(maxcontentwidth) {
    this.$$set({ maxcontentwidth });
    flush();
  }
}
customElements.define("goa-three-column-layout", ThreeColumnLayout);
function get_each_context$2(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[14] = list[i];
  child_ctx[16] = i;
  return child_ctx;
}
function create_if_block_1$4(ctx) {
  let li2;
  let span;
  let t0_value = (
    /*item*/
    ctx[14].displayname + ""
  );
  let t0;
  let t1;
  let li_aria_selected_value;
  let li_aria_label_value;
  let mounted;
  let dispose;
  let if_block = (
    /*item*/
    ctx[14].items && /*item*/
    ctx[14].items.length > 0 && create_if_block_2$4(ctx)
  );
  function click_handler() {
    return (
      /*click_handler*/
      ctx[8](
        /*item*/
        ctx[14]
      )
    );
  }
  function keydown_handler(...args) {
    return (
      /*keydown_handler*/
      ctx[9](
        /*item*/
        ctx[14],
        ...args
      )
    );
  }
  return { c() {
    li2 = element("li");
    span = element("span");
    t0 = text(t0_value);
    t1 = space();
    if (if_block)
      if_block.c();
    attr(span, "class", "label");
    attr(li2, "role", "menuitem");
    attr(li2, "aria-selected", li_aria_selected_value = /*item*/
    ctx[14].active);
    attr(li2, "aria-label", li_aria_label_value = `${/*item*/
    ctx[14].displayname}${/*item*/
    ctx[14].items && /*item*/
    ctx[14].items.length > 0 ? (
      /*isExpanded*/
      ctx[5](
        /*item*/
        ctx[14]
      ) ? " Expanded" : " Collapsed"
    ) : ""}`);
    attr(li2, "tabindex", "0");
    toggle_class(
      li2,
      "active",
      /*item*/
      ctx[14].active
    );
    toggle_class(
      li2,
      "expanded",
      /*isExpanded*/
      ctx[5](
        /*item*/
        ctx[14]
      ) && hasSubItemSelected(
        /*item*/
        ctx[14]
      )
    );
    toggle_class(
      li2,
      "sub-level",
      /*level*/
      ctx[0] > 0
    );
  }, m(target, anchor) {
    insert(target, li2, anchor);
    append(li2, span);
    append(span, t0);
    append(li2, t1);
    if (if_block)
      if_block.m(li2, null);
    if (!mounted) {
      dispose = [listen(li2, "click", click_handler), listen(li2, "keydown", keydown_handler)];
      mounted = true;
    }
  }, p(new_ctx, dirty) {
    ctx = new_ctx;
    if (dirty & /*_items*/
    4 && t0_value !== (t0_value = /*item*/
    ctx[14].displayname + ""))
      set_data(t0, t0_value);
    if (
      /*item*/
      ctx[14].items && /*item*/
      ctx[14].items.length > 0
    ) {
      if (if_block) {
        if_block.p(ctx, dirty);
      } else {
        if_block = create_if_block_2$4(ctx);
        if_block.c();
        if_block.m(li2, null);
      }
    } else if (if_block) {
      if_block.d(1);
      if_block = null;
    }
    if (dirty & /*_items*/
    4 && li_aria_selected_value !== (li_aria_selected_value = /*item*/
    ctx[14].active)) {
      attr(li2, "aria-selected", li_aria_selected_value);
    }
    if (dirty & /*_items*/
    4 && li_aria_label_value !== (li_aria_label_value = `${/*item*/
    ctx[14].displayname}${/*item*/
    ctx[14].items && /*item*/
    ctx[14].items.length > 0 ? (
      /*isExpanded*/
      ctx[5](
        /*item*/
        ctx[14]
      ) ? " Expanded" : " Collapsed"
    ) : ""}`)) {
      attr(li2, "aria-label", li_aria_label_value);
    }
    if (dirty & /*_items*/
    4) {
      toggle_class(
        li2,
        "active",
        /*item*/
        ctx[14].active
      );
    }
    if (dirty & /*isExpanded, _items, hasSubItemSelected*/
    36) {
      toggle_class(
        li2,
        "expanded",
        /*isExpanded*/
        ctx[5](
          /*item*/
          ctx[14]
        ) && hasSubItemSelected(
          /*item*/
          ctx[14]
        )
      );
    }
    if (dirty & /*level*/
    1) {
      toggle_class(
        li2,
        "sub-level",
        /*level*/
        ctx[0] > 0
      );
    }
  }, d(detaching) {
    if (detaching)
      detach(li2);
    if (if_block)
      if_block.d();
    mounted = false;
    run_all(dispose);
  } };
}
function create_if_block_2$4(ctx) {
  let show_if;
  let if_block_anchor;
  function select_block_type(ctx2, dirty) {
    if (dirty & /*_items*/
    4)
      show_if = null;
    if (show_if == null)
      show_if = !!/*isExpanded*/
      ctx2[5](
        /*item*/
        ctx2[14]
      );
    if (show_if)
      return create_if_block_3$4;
    return create_else_block$4;
  }
  let current_block_type = select_block_type(ctx, -1);
  let if_block = current_block_type(ctx);
  return { c() {
    if_block.c();
    if_block_anchor = empty();
  }, m(target, anchor) {
    if_block.m(target, anchor);
    insert(target, if_block_anchor, anchor);
  }, p(ctx2, dirty) {
    if (current_block_type !== (current_block_type = select_block_type(ctx2, dirty))) {
      if_block.d(1);
      if_block = current_block_type(ctx2);
      if (if_block) {
        if_block.c();
        if_block.m(if_block_anchor.parentNode, if_block_anchor);
      }
    }
  }, d(detaching) {
    if_block.d(detaching);
    if (detaching)
      detach(if_block_anchor);
  } };
}
function create_else_block$4(ctx) {
  let goa_icon;
  return { c() {
    goa_icon = element("goa-icon");
    set_custom_element_data(goa_icon, "type", "chevron-forward");
    set_custom_element_data(goa_icon, "size", "medium");
  }, m(target, anchor) {
    insert(target, goa_icon, anchor);
  }, d(detaching) {
    if (detaching)
      detach(goa_icon);
  } };
}
function create_if_block_3$4(ctx) {
  let goa_icon;
  return { c() {
    goa_icon = element("goa-icon");
    set_custom_element_data(goa_icon, "type", "chevron-down");
    set_custom_element_data(goa_icon, "size", "medium");
  }, m(target, anchor) {
    insert(target, goa_icon, anchor);
  }, d(detaching) {
    if (detaching)
      detach(goa_icon);
  } };
}
function create_if_block$8(ctx) {
  let div;
  let sidebar;
  let t2;
  let current;
  sidebar = new Sidebar({ props: { navitems: (
    /*item*/
    ctx[14].items
  ), level: (
    /*level*/
    ctx[0] + 1
  ) } });
  return { c() {
    div = element("div");
    create_component(sidebar.$$.fragment);
    t2 = space();
    attr(
      div,
      "style",
      /*calculateMarginLeft*/
      ctx[4]()
    );
  }, m(target, anchor) {
    insert(target, div, anchor);
    mount_component(sidebar, div, null);
    append(div, t2);
    current = true;
  }, p(ctx2, dirty) {
    const sidebar_changes = {};
    if (dirty & /*_items*/
    4)
      sidebar_changes.navitems = /*item*/
      ctx2[14].items;
    if (dirty & /*level*/
    1)
      sidebar_changes.level = /*level*/
      ctx2[0] + 1;
    sidebar.$set(sidebar_changes);
  }, i(local) {
    if (current)
      return;
    transition_in(sidebar.$$.fragment, local);
    current = true;
  }, o(local) {
    transition_out(sidebar.$$.fragment, local);
    current = false;
  }, d(detaching) {
    if (detaching)
      detach(div);
    destroy_component(sidebar);
  } };
}
function create_each_block$2(key_1, ctx) {
  let first;
  let t2;
  let show_if = (
    /*item*/
    ctx[14].items && /*item*/
    ctx[14].items.length > 0 && /*isExpanded*/
    ctx[5](
      /*item*/
      ctx[14]
    )
  );
  let if_block1_anchor;
  let current;
  let if_block0 = create_if_block_1$4(ctx);
  let if_block1 = show_if && create_if_block$8(ctx);
  return { key: key_1, first: null, c() {
    first = empty();
    if (if_block0)
      if_block0.c();
    t2 = space();
    if (if_block1)
      if_block1.c();
    if_block1_anchor = empty();
    this.first = first;
  }, m(target, anchor) {
    insert(target, first, anchor);
    if (if_block0)
      if_block0.m(target, anchor);
    insert(target, t2, anchor);
    if (if_block1)
      if_block1.m(target, anchor);
    insert(target, if_block1_anchor, anchor);
    current = true;
  }, p(new_ctx, dirty) {
    ctx = new_ctx;
    if_block0.p(ctx, dirty);
    if (dirty & /*_items*/
    4)
      show_if = /*item*/
      ctx[14].items && /*item*/
      ctx[14].items.length > 0 && /*isExpanded*/
      ctx[5](
        /*item*/
        ctx[14]
      );
    if (show_if) {
      if (if_block1) {
        if_block1.p(ctx, dirty);
        if (dirty & /*_items*/
        4) {
          transition_in(if_block1, 1);
        }
      } else {
        if_block1 = create_if_block$8(ctx);
        if_block1.c();
        transition_in(if_block1, 1);
        if_block1.m(if_block1_anchor.parentNode, if_block1_anchor);
      }
    } else if (if_block1) {
      group_outros();
      transition_out(if_block1, 1, 1, () => {
        if_block1 = null;
      });
      check_outros();
    }
  }, i(local) {
    if (current)
      return;
    transition_in(if_block1);
    current = true;
  }, o(local) {
    transition_out(if_block1);
    current = false;
  }, d(detaching) {
    if (detaching)
      detach(first);
    if (if_block0)
      if_block0.d(detaching);
    if (detaching)
      detach(t2);
    if (if_block1)
      if_block1.d(detaching);
    if (detaching)
      detach(if_block1_anchor);
  } };
}
function create_fragment$e(ctx) {
  let div;
  let ul2;
  let slot;
  let t2;
  let each_blocks = [];
  let each_1_lookup = /* @__PURE__ */ new Map();
  let current;
  let each_value = (
    /*_items*/
    ctx[2]
  );
  const get_key = (ctx2) => (
    /*index*/
    ctx2[16]
  );
  for (let i = 0; i < each_value.length; i += 1) {
    let child_ctx = get_each_context$2(ctx, each_value, i);
    let key = get_key(child_ctx);
    each_1_lookup.set(key, each_blocks[i] = create_each_block$2(key, child_ctx));
  }
  return { c() {
    div = element("div");
    ul2 = element("ul");
    slot = element("slot");
    t2 = space();
    for (let i = 0; i < each_blocks.length; i += 1) {
      each_blocks[i].c();
    }
    this.c = noop;
    attr(ul2, "role", "menu");
    attr(ul2, "aria-label", "Side Menu");
    attr(ul2, "tabindex", "-1");
    toggle_class(
      div,
      "first-level",
      /*level*/
      ctx[0] === 0
    );
  }, m(target, anchor) {
    insert(target, div, anchor);
    append(div, ul2);
    append(ul2, slot);
    append(ul2, t2);
    for (let i = 0; i < each_blocks.length; i += 1) {
      if (each_blocks[i]) {
        each_blocks[i].m(ul2, null);
      }
    }
    ctx[10](div);
    current = true;
  }, p(ctx2, [dirty]) {
    if (dirty & /*calculateMarginLeft, _items, level, isExpanded, hasSubItemSelected, toggle, handleKeyDown*/
    125) {
      each_value = /*_items*/
      ctx2[2];
      group_outros();
      each_blocks = update_keyed_each(each_blocks, dirty, get_key, 1, ctx2, each_value, each_1_lookup, ul2, outro_and_destroy_block, create_each_block$2, null, get_each_context$2);
      check_outros();
    }
    if (!current || dirty & /*level*/
    1) {
      toggle_class(
        div,
        "first-level",
        /*level*/
        ctx2[0] === 0
      );
    }
  }, i(local) {
    if (current)
      return;
    for (let i = 0; i < each_value.length; i += 1) {
      transition_in(each_blocks[i]);
    }
    current = true;
  }, o(local) {
    for (let i = 0; i < each_blocks.length; i += 1) {
      transition_out(each_blocks[i]);
    }
    current = false;
  }, d(detaching) {
    if (detaching)
      detach(div);
    for (let i = 0; i < each_blocks.length; i += 1) {
      each_blocks[i].d();
    }
    ctx[10](null);
  } };
}
function hasSubItemSelected(item) {
  return item.items && item.items.length > 0 && item.items.some((_item) => _item.active);
}
function instance$d($$self, $$props, $$invalidate) {
  let { level = 0 } = $$props;
  let { navitems = [] } = $$props;
  let _rootElement;
  let _items = [];
  let _expandedNavItems = [];
  onMount(async () => {
    const slot = _rootElement.querySelector("slot");
    slot === null || slot === void 0 ? void 0 : slot.addEventListener("slotchange", (_e) => {
      $$invalidate(2, _items = level === 0 ? [...getItems()] : [...navitems]);
    });
  });
  function toggle(item) {
    if (!item.items || item.items.length === 0) {
      _rootElement.dispatchEvent(new CustomEvent("_change", { composed: true, detail: item }));
    }
    _expandedNavItems = item && !_expandedNavItems.includes(item) ? [..._expandedNavItems, item] : _expandedNavItems.filter((_item) => _item !== item);
    $$invalidate(2, _items = [..._items]);
  }
  function getItems(nodes = null) {
    const children2 = nodes || getChildren();
    return children2.filter((child) => child.tagName === "GOAX-SIDEBAR-ITEM").map((el2) => {
      return { displayname: el2.displayname, active: el2.active, url: el2.url, name: el2.name, items: el2.children.length > 0 ? getItems([...el2.children]) : [] };
    });
  }
  function getChildren() {
    const slot = _rootElement.querySelector("slot");
    if (slot) {
      return slot.assignedElements();
    }
    return [..._rootElement.children];
  }
  function calculateMarginLeft() {
    const marginLeft = 32;
    return `margin-left: ${marginLeft * (level + 1)}px`;
  }
  function isExpanded(item) {
    if (item.items && item.items.length > 0) {
      return _expandedNavItems.includes(item) || hasSubItemSelected(item);
    }
    return false;
  }
  function handleKeyDown(event, item) {
    if (event.key === "Enter") {
      toggle(item);
    }
  }
  const click_handler = (item) => toggle(item);
  const keydown_handler = (item, event) => handleKeyDown(event, item);
  function div_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      _rootElement = $$value;
      $$invalidate(1, _rootElement);
    });
  }
  $$self.$$set = ($$props2) => {
    if ("level" in $$props2)
      $$invalidate(0, level = $$props2.level);
    if ("navitems" in $$props2)
      $$invalidate(7, navitems = $$props2.navitems);
  };
  $$self.$$.update = () => {
    if ($$self.$$.dirty & /*_rootElement, level, navitems*/
    131) {
      {
        if (_rootElement) {
          $$invalidate(2, _items = level === 0 ? [...getItems()] : [...navitems]);
        }
      }
    }
  };
  return [level, _rootElement, _items, toggle, calculateMarginLeft, isExpanded, handleKeyDown, navitems, click_handler, keydown_handler, div_binding];
}
class Sidebar extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `div.first-level{margin-top:var(--goa-space-m)}:host{box-sizing:border-box;font-family:var(--goa-font-family-sans);color:var(--goa-color-text-default)}ul{list-style:none;padding:0;margin:0}li{display:flex;flex-direction:row;justify-content:space-between;align-items:center;padding:0.625rem var(--goa-space-s) 1vh var(--goa-space-xl);gap:var(--goa-line-height-05);overflow:hidden;text-overflow:ellipsis;white-space:nowrap;cursor:pointer}.label{font:var(--goa-typography-body-m);display:flex;align-items:center}li.active .label{font:var(--goa-typography-heading-s)}li:hover{background:#CEDFEE}li.expanded{background:#CEDFEE}li.active{background:var(--goa-color-info-background)}li:focus{outline:var(--goa-border-width-l) solid var(--goa-color-interactive-focus)}li.sub-level{padding:0.625rem var(--goa-space-s) 1vh var(--goa-space-m)}li.active.sub-level{border-left:4px solid var(--goa-color-interactive-disabled)}li.sub-level:not(.active):not(:hover){border-left:4px solid var(--goa-color-greyscale-100)}li.sub-level:hover{background:var(--goa-color-info-background);border-left:4px solid var(--goa-color-greyscale-200)}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$d, create_fragment$e, safe_not_equal, { level: 0, navitems: 7 }, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["level", "navitems"];
  }
  get level() {
    return this.$$.ctx[0];
  }
  set level(level) {
    this.$$set({ level });
    flush();
  }
  get navitems() {
    return this.$$.ctx[7];
  }
  set navitems(navitems) {
    this.$$set({ navitems });
    flush();
  }
}
customElements.define("goax-sidebar", Sidebar);
function create_fragment$d(ctx) {
  return { c() {
    this.c = noop;
  }, m: noop, p: noop, i: noop, o: noop, d: noop };
}
class SidebarItem extends SvelteElement {
  constructor(options) {
    super();
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, null, create_fragment$d, safe_not_equal, {}, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
    }
  }
}
customElements.define("goax-sidebar-item", SidebarItem);
const { window: window_1 } = globals;
function create_else_block$3(ctx) {
  let button;
  let t0;
  let span;
  let t1;
  let t2;
  let goa_spacer;
  let t3;
  let goa_icon;
  let goa_icon_type_value;
  let t4;
  let if_block1_anchor;
  let mounted;
  let dispose;
  let if_block0 = (
    /*leadingicon*/
    ctx[1] && create_if_block_3$3(ctx)
  );
  let if_block1 = (
    /*_open*/
    ctx[8] && create_if_block_2$3(ctx)
  );
  return { c() {
    button = element("button");
    if (if_block0)
      if_block0.c();
    t0 = space();
    span = element("span");
    t1 = text(
      /*heading*/
      ctx[0]
    );
    t2 = space();
    goa_spacer = element("goa-spacer");
    t3 = space();
    goa_icon = element("goa-icon");
    t4 = space();
    if (if_block1)
      if_block1.c();
    if_block1_anchor = empty();
    attr(span, "class", "heading");
    set_custom_element_data(goa_spacer, "hspacing", "fill");
    set_custom_element_data(goa_icon, "type", goa_icon_type_value = /*_open*/
    ctx[8] ? "chevron-up" : "chevron-down");
    set_custom_element_data(goa_icon, "mt", "1");
    attr(
      button,
      "class",
      /*type*/
      ctx[2]
    );
    toggle_class(
      button,
      "open",
      /*_open*/
      ctx[8]
    );
  }, m(target, anchor) {
    insert(target, button, anchor);
    if (if_block0)
      if_block0.m(button, null);
    append(button, t0);
    append(button, span);
    append(span, t1);
    append(button, t2);
    append(button, goa_spacer);
    append(button, t3);
    append(button, goa_icon);
    insert(target, t4, anchor);
    if (if_block1)
      if_block1.m(target, anchor);
    insert(target, if_block1_anchor, anchor);
    if (!mounted) {
      dispose = listen(
        button,
        "click",
        /*toggleMenu*/
        ctx[9]
      );
      mounted = true;
    }
  }, p(ctx2, dirty) {
    if (
      /*leadingicon*/
      ctx2[1]
    ) {
      if (if_block0) {
        if_block0.p(ctx2, dirty);
      } else {
        if_block0 = create_if_block_3$3(ctx2);
        if_block0.c();
        if_block0.m(button, t0);
      }
    } else if (if_block0) {
      if_block0.d(1);
      if_block0 = null;
    }
    if (dirty & /*heading*/
    1)
      set_data(
        t1,
        /*heading*/
        ctx2[0]
      );
    if (dirty & /*_open*/
    256 && goa_icon_type_value !== (goa_icon_type_value = /*_open*/
    ctx2[8] ? "chevron-up" : "chevron-down")) {
      set_custom_element_data(goa_icon, "type", goa_icon_type_value);
    }
    if (dirty & /*type*/
    4) {
      attr(
        button,
        "class",
        /*type*/
        ctx2[2]
      );
    }
    if (dirty & /*type, _open*/
    260) {
      toggle_class(
        button,
        "open",
        /*_open*/
        ctx2[8]
      );
    }
    if (
      /*_open*/
      ctx2[8]
    ) {
      if (if_block1) {
        if_block1.p(ctx2, dirty);
      } else {
        if_block1 = create_if_block_2$3(ctx2);
        if_block1.c();
        if_block1.m(if_block1_anchor.parentNode, if_block1_anchor);
      }
    } else if (if_block1) {
      if_block1.d(1);
      if_block1 = null;
    }
  }, d(detaching) {
    if (detaching)
      detach(button);
    if (if_block0)
      if_block0.d();
    if (detaching)
      detach(t4);
    if (if_block1)
      if_block1.d(detaching);
    if (detaching)
      detach(if_block1_anchor);
    mounted = false;
    dispose();
  } };
}
function create_if_block$7(ctx) {
  let goa_popover;
  let button;
  let t0;
  let t1;
  let t2;
  let goa_icon;
  let goa_icon_type_value;
  let t3;
  let div;
  let if_block = (
    /*leadingicon*/
    ctx[1] && create_if_block_1$3(ctx)
  );
  return { c() {
    goa_popover = element("goa-popover");
    button = element("button");
    if (if_block)
      if_block.c();
    t0 = space();
    t1 = text(
      /*heading*/
      ctx[0]
    );
    t2 = space();
    goa_icon = element("goa-icon");
    t3 = space();
    div = element("div");
    div.innerHTML = `<slot></slot>`;
    set_custom_element_data(goa_icon, "type", goa_icon_type_value = /*_open*/
    ctx[8] ? "chevron-up" : "chevron-down");
    set_custom_element_data(goa_icon, "mt", "1");
    attr(button, "slot", "target");
    set_style(button, "padding", "0 0.75rem");
    attr(
      button,
      "class",
      /*type*/
      ctx[2]
    );
    toggle_class(
      button,
      "current",
      /*_hasCurrentLink*/
      ctx[7]
    );
    attr(div, "class", "desktop");
    set_custom_element_data(goa_popover, "context", "app-header-menu");
    set_custom_element_data(goa_popover, "focusborderwidth", "0");
    set_custom_element_data(goa_popover, "borderradius", "0");
    set_custom_element_data(goa_popover, "padded", "false");
    set_custom_element_data(goa_popover, "tabindex", "-1");
    set_custom_element_data(goa_popover, "width", "16rem");
    set_custom_element_data(goa_popover, "position", "below");
  }, m(target, anchor) {
    insert(target, goa_popover, anchor);
    append(goa_popover, button);
    if (if_block)
      if_block.m(button, null);
    append(button, t0);
    append(button, t1);
    append(button, t2);
    append(button, goa_icon);
    append(goa_popover, t3);
    append(goa_popover, div);
    ctx[11](div);
    ctx[12](goa_popover);
  }, p(ctx2, dirty) {
    if (
      /*leadingicon*/
      ctx2[1]
    ) {
      if (if_block) {
        if_block.p(ctx2, dirty);
      } else {
        if_block = create_if_block_1$3(ctx2);
        if_block.c();
        if_block.m(button, t0);
      }
    } else if (if_block) {
      if_block.d(1);
      if_block = null;
    }
    if (dirty & /*heading*/
    1)
      set_data(
        t1,
        /*heading*/
        ctx2[0]
      );
    if (dirty & /*_open*/
    256 && goa_icon_type_value !== (goa_icon_type_value = /*_open*/
    ctx2[8] ? "chevron-up" : "chevron-down")) {
      set_custom_element_data(goa_icon, "type", goa_icon_type_value);
    }
    if (dirty & /*type*/
    4) {
      attr(
        button,
        "class",
        /*type*/
        ctx2[2]
      );
    }
    if (dirty & /*type, _hasCurrentLink*/
    132) {
      toggle_class(
        button,
        "current",
        /*_hasCurrentLink*/
        ctx2[7]
      );
    }
  }, d(detaching) {
    if (detaching)
      detach(goa_popover);
    if (if_block)
      if_block.d();
    ctx[11](null);
    ctx[12](null);
  } };
}
function create_if_block_3$3(ctx) {
  let goa_icon;
  return { c() {
    goa_icon = element("goa-icon");
    set_custom_element_data(
      goa_icon,
      "type",
      /*leadingicon*/
      ctx[1]
    );
    set_custom_element_data(goa_icon, "mt", "1");
  }, m(target, anchor) {
    insert(target, goa_icon, anchor);
  }, p(ctx2, dirty) {
    if (dirty & /*leadingicon*/
    2) {
      set_custom_element_data(
        goa_icon,
        "type",
        /*leadingicon*/
        ctx2[1]
      );
    }
  }, d(detaching) {
    if (detaching)
      detach(goa_icon);
  } };
}
function create_if_block_2$3(ctx) {
  let div;
  return { c() {
    div = element("div");
    div.innerHTML = `<slot></slot>`;
    attr(div, "class", "not-desktop");
  }, m(target, anchor) {
    insert(target, div, anchor);
    ctx[13](div);
  }, p: noop, d(detaching) {
    if (detaching)
      detach(div);
    ctx[13](null);
  } };
}
function create_if_block_1$3(ctx) {
  let goa_icon;
  return { c() {
    goa_icon = element("goa-icon");
    set_custom_element_data(
      goa_icon,
      "type",
      /*leadingicon*/
      ctx[1]
    );
    set_custom_element_data(goa_icon, "mt", "1");
  }, m(target, anchor) {
    insert(target, goa_icon, anchor);
  }, p(ctx2, dirty) {
    if (dirty & /*leadingicon*/
    2) {
      set_custom_element_data(
        goa_icon,
        "type",
        /*leadingicon*/
        ctx2[1]
      );
    }
  }, d(detaching) {
    if (detaching)
      detach(goa_icon);
  } };
}
function create_fragment$c(ctx) {
  let if_block_anchor;
  let mounted;
  let dispose;
  add_render_callback(
    /*onwindowresize*/
    ctx[10]
  );
  function select_block_type(ctx2, dirty) {
    if (
      /*_desktop*/
      ctx2[4]
    )
      return create_if_block$7;
    return create_else_block$3;
  }
  let current_block_type = select_block_type(ctx);
  let if_block = current_block_type(ctx);
  return { c() {
    if_block.c();
    if_block_anchor = empty();
    this.c = noop;
  }, m(target, anchor) {
    if_block.m(target, anchor);
    insert(target, if_block_anchor, anchor);
    if (!mounted) {
      dispose = listen(
        window_1,
        "resize",
        /*onwindowresize*/
        ctx[10]
      );
      mounted = true;
    }
  }, p(ctx2, [dirty]) {
    if (current_block_type === (current_block_type = select_block_type(ctx2)) && if_block) {
      if_block.p(ctx2, dirty);
    } else {
      if_block.d(1);
      if_block = current_block_type(ctx2);
      if (if_block) {
        if_block.c();
        if_block.m(if_block_anchor.parentNode, if_block_anchor);
      }
    }
  }, i: noop, o: noop, d(detaching) {
    if_block.d(detaching);
    if (detaching)
      detach(if_block_anchor);
    mounted = false;
    dispose();
  } };
}
function instance$c($$self, $$props, $$invalidate) {
  let _desktop;
  let { heading } = $$props;
  let { leadingicon } = $$props;
  let { type = "primary" } = $$props;
  let _innerWidth = window.innerWidth;
  let _popoverEl;
  let _slotParentEl;
  let _hasCurrentLink = false;
  let _open = false;
  onMount(async () => {
    await tick();
    validateRequired("GoaAppHeaderMenu", { heading });
    $$invalidate(7, _hasCurrentLink = hasCurrentLink());
    window.addEventListener("popstate", () => {
      $$invalidate(7, _hasCurrentLink = hasCurrentLink());
    }, true);
  });
  function hasCurrentLink() {
    if (!_slotParentEl)
      return;
    const slot = _slotParentEl.querySelector("slot");
    if (!slot)
      return;
    const link = slot.assignedElements().filter((el2) => el2.tagName === "A").find((el2) => {
      const href = el2.href;
      const url = `${window.location.pathname}${window.location.search}${window.location.hash}`;
      return href.endsWith(url);
    });
    return !!link;
  }
  async function bindToPopoverCloseEvent() {
    await tick();
    if (!_popoverEl)
      return;
    _popoverEl.removeEventListener("_close", closeMenu);
    _popoverEl.removeEventListener("_open", openMenu);
    _popoverEl.addEventListener("_close", closeMenu);
    _popoverEl.addEventListener("_open", openMenu);
  }
  function openMenu() {
    $$invalidate(8, _open = true);
  }
  function closeMenu() {
    setTimeout(() => {
      $$invalidate(8, _open = false);
    }, 1);
  }
  function toggleMenu() {
    _open ? closeMenu() : openMenu();
  }
  function onwindowresize() {
    $$invalidate(3, _innerWidth = window_1.innerWidth);
  }
  function div_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      _slotParentEl = $$value;
      $$invalidate(6, _slotParentEl);
    });
  }
  function goa_popover_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      _popoverEl = $$value;
      $$invalidate(5, _popoverEl);
    });
  }
  function div_binding_1($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      _slotParentEl = $$value;
      $$invalidate(6, _slotParentEl);
    });
  }
  $$self.$$set = ($$props2) => {
    if ("heading" in $$props2)
      $$invalidate(0, heading = $$props2.heading);
    if ("leadingicon" in $$props2)
      $$invalidate(1, leadingicon = $$props2.leadingicon);
    if ("type" in $$props2)
      $$invalidate(2, type = $$props2.type);
  };
  $$self.$$.update = () => {
    if ($$self.$$.dirty & /*_innerWidth*/
    8) {
      $$invalidate(4, _desktop = _innerWidth >= TABLET_BP);
    }
    if ($$self.$$.dirty & /*_desktop*/
    16) {
      _desktop && bindToPopoverCloseEvent();
    }
  };
  return [heading, leadingicon, type, _innerWidth, _desktop, _popoverEl, _slotParentEl, _hasCurrentLink, _open, toggleMenu, onwindowresize, div_binding, goa_popover_binding, div_binding_1];
}
class AppHeaderMenu extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `*{font:var(--goa-typography-body-m)}button{padding:0;border:none;background:transparent;outline:none;color:var(--goa-color-text-default);cursor:pointer;display:flex;align-items:center;gap:0.5rem}button:active,button:hover,button:focus-within,[slot="target"]:focus-within{background:var(--goa-color-greyscale-100);color:var(--goa-color-interactive-hover)}button.current{border-top:4px solid var(--goa-color-interactive-default);border-bottom:4px solid transparent}button.current:hover{border-top:4px solid var(--goa-color-interactive-hover)}button.open{border-bottom:1px solid var(--goa-color-greyscale-200)}::slotted(a),::slotted(a:visited){box-shadow:inset 0 1px 0 0 var(--goa-color-greyscale-200);color:var(--goa-color-text-default);display:block;padding:calc((3rem - var(--goa-line-height-3)) / 2) 1rem;text-decoration:none}.not-desktop ::slotted(a){padding:calc((3rem - var(--goa-line-height-3)) / 2) 2.75rem}::slotted(a:first-child){box-shadow:none}::slotted(a:hover){background:var(--goa-color-greyscale-100);color:var(--goa-color-interactive-hover)}::slotted(a:focus-visible){outline:var(--goa-border-width-l) solid var(--goa-color-interactive-focus);outline-offset:-3px;color:var(--goa-color-interactive-hover)}::slotted(a.interactive){text-decoration:underline;color:var(--goa-color-interactive-default)}@media screen and (min-width: 1024px){@media not (max-color:2147477350){button{box-shadow:inset 0 1px 0 0 var(--goa-color-greyscale-200);height:3rem;flex:1 1 auto;padding:0 1rem;width:100%}button:focus{outline:var(--goa-border-width-l) solid var(--goa-color-interactive-focus);outline-offset:-3px}.heading{flex:0 0 auto}}}@media not  screen and (min-width: 1024px){@media not (color:2147477350){button{box-shadow:inset 0 1px 0 0 var(--goa-color-greyscale-200);height:3rem;flex:1 1 auto;padding:0 1rem;width:100%}button:focus{outline:var(--goa-border-width-l) solid var(--goa-color-interactive-focus);outline-offset:-3px}.heading{flex:0 0 auto}}}@media screen and (min-width: 1024px){button[slot=target]{font-weight:var(--goa-font-weight-bold);height:4rem;white-space:nowrap}button.secondary{font-weight:var(--goa-font-weight-regular)}}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$c, create_fragment$c, safe_not_equal, { heading: 0, leadingicon: 1, type: 2 }, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["heading", "leadingicon", "type"];
  }
  get heading() {
    return this.$$.ctx[0];
  }
  set heading(heading) {
    this.$$set({ heading });
    flush();
  }
  get leadingicon() {
    return this.$$.ctx[1];
  }
  set leadingicon(leadingicon) {
    this.$$set({ leadingicon });
    flush();
  }
  get type() {
    return this.$$.ctx[2];
  }
  set type(type) {
    this.$$set({ type });
    flush();
  }
}
customElements.define("goa-app-header-menu", AppHeaderMenu);
function toInteger(dirtyNumber) {
  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {
    return NaN;
  }
  var number = Number(dirtyNumber);
  if (isNaN(number)) {
    return number;
  }
  return number < 0 ? Math.ceil(number) : Math.floor(number);
}
function requiredArgs(required, args) {
  if (args.length < required) {
    throw new TypeError(required + " argument" + (required > 1 ? "s" : "") + " required, but only " + args.length + " present");
  }
}
function toDate(argument) {
  requiredArgs(1, arguments);
  var argStr = Object.prototype.toString.call(argument);
  if (argument instanceof Date || typeof argument === "object" && argStr === "[object Date]") {
    return new Date(argument.getTime());
  } else if (typeof argument === "number" || argStr === "[object Number]") {
    return new Date(argument);
  } else {
    if ((typeof argument === "string" || argStr === "[object String]") && typeof console !== "undefined") {
      console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments");
      console.warn(new Error().stack);
    }
    return /* @__PURE__ */ new Date(NaN);
  }
}
function addDays(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var date = toDate(dirtyDate);
  var amount = toInteger(dirtyAmount);
  if (isNaN(amount)) {
    return /* @__PURE__ */ new Date(NaN);
  }
  if (!amount) {
    return date;
  }
  date.setDate(date.getDate() + amount);
  return date;
}
function addMonths(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var date = toDate(dirtyDate);
  var amount = toInteger(dirtyAmount);
  if (isNaN(amount)) {
    return /* @__PURE__ */ new Date(NaN);
  }
  if (!amount) {
    return date;
  }
  var dayOfMonth = date.getDate();
  var endOfDesiredMonth = new Date(date.getTime());
  endOfDesiredMonth.setMonth(date.getMonth() + amount + 1, 0);
  var daysInMonth = endOfDesiredMonth.getDate();
  if (dayOfMonth >= daysInMonth) {
    return endOfDesiredMonth;
  } else {
    date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);
    return date;
  }
}
function addMilliseconds(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var timestamp = toDate(dirtyDate).getTime();
  var amount = toInteger(dirtyAmount);
  return new Date(timestamp + amount);
}
var defaultOptions = {};
function getDefaultOptions() {
  return defaultOptions;
}
function getTimezoneOffsetInMilliseconds(date) {
  var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));
  utcDate.setUTCFullYear(date.getFullYear());
  return date.getTime() - utcDate.getTime();
}
function startOfDay(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  date.setHours(0, 0, 0, 0);
  return date;
}
function addYears(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var amount = toInteger(dirtyAmount);
  return addMonths(dirtyDate, amount * 12);
}
function isSameDay(dirtyDateLeft, dirtyDateRight) {
  requiredArgs(2, arguments);
  var dateLeftStartOfDay = startOfDay(dirtyDateLeft);
  var dateRightStartOfDay = startOfDay(dirtyDateRight);
  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();
}
function isDate(value) {
  requiredArgs(1, arguments);
  return value instanceof Date || typeof value === "object" && Object.prototype.toString.call(value) === "[object Date]";
}
function isValid(dirtyDate) {
  requiredArgs(1, arguments);
  if (!isDate(dirtyDate) && typeof dirtyDate !== "number") {
    return false;
  }
  var date = toDate(dirtyDate);
  return !isNaN(Number(date));
}
function subMilliseconds(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var amount = toInteger(dirtyAmount);
  return addMilliseconds(dirtyDate, -amount);
}
var MILLISECONDS_IN_DAY = 864e5;
function getUTCDayOfYear(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var timestamp = date.getTime();
  date.setUTCMonth(0, 1);
  date.setUTCHours(0, 0, 0, 0);
  var startOfYearTimestamp = date.getTime();
  var difference = timestamp - startOfYearTimestamp;
  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;
}
function startOfUTCISOWeek(dirtyDate) {
  requiredArgs(1, arguments);
  var weekStartsOn = 1;
  var date = toDate(dirtyDate);
  var day = date.getUTCDay();
  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
  date.setUTCDate(date.getUTCDate() - diff);
  date.setUTCHours(0, 0, 0, 0);
  return date;
}
function getUTCISOWeekYear(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var year = date.getUTCFullYear();
  var fourthOfJanuaryOfNextYear = /* @__PURE__ */ new Date(0);
  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);
  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);
  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);
  var fourthOfJanuaryOfThisYear = /* @__PURE__ */ new Date(0);
  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);
  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);
  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);
  if (date.getTime() >= startOfNextYear.getTime()) {
    return year + 1;
  } else if (date.getTime() >= startOfThisYear.getTime()) {
    return year;
  } else {
    return year - 1;
  }
}
function startOfUTCISOWeekYear(dirtyDate) {
  requiredArgs(1, arguments);
  var year = getUTCISOWeekYear(dirtyDate);
  var fourthOfJanuary = /* @__PURE__ */ new Date(0);
  fourthOfJanuary.setUTCFullYear(year, 0, 4);
  fourthOfJanuary.setUTCHours(0, 0, 0, 0);
  var date = startOfUTCISOWeek(fourthOfJanuary);
  return date;
}
var MILLISECONDS_IN_WEEK$1 = 6048e5;
function getUTCISOWeek(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime();
  return Math.round(diff / MILLISECONDS_IN_WEEK$1) + 1;
}
function startOfUTCWeek(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  requiredArgs(1, arguments);
  var defaultOptions2 = getDefaultOptions();
  var weekStartsOn = toInteger((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions2.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions2.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);
  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
  }
  var date = toDate(dirtyDate);
  var day = date.getUTCDay();
  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
  date.setUTCDate(date.getUTCDate() - diff);
  date.setUTCHours(0, 0, 0, 0);
  return date;
}
function getUTCWeekYear(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var year = date.getUTCFullYear();
  var defaultOptions2 = getDefaultOptions();
  var firstWeekContainsDate = toInteger((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions2.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions2.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);
  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
    throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");
  }
  var firstWeekOfNextYear = /* @__PURE__ */ new Date(0);
  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);
  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);
  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, options);
  var firstWeekOfThisYear = /* @__PURE__ */ new Date(0);
  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);
  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);
  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, options);
  if (date.getTime() >= startOfNextYear.getTime()) {
    return year + 1;
  } else if (date.getTime() >= startOfThisYear.getTime()) {
    return year;
  } else {
    return year - 1;
  }
}
function startOfUTCWeekYear(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  requiredArgs(1, arguments);
  var defaultOptions2 = getDefaultOptions();
  var firstWeekContainsDate = toInteger((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions2.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions2.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);
  var year = getUTCWeekYear(dirtyDate, options);
  var firstWeek = /* @__PURE__ */ new Date(0);
  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);
  firstWeek.setUTCHours(0, 0, 0, 0);
  var date = startOfUTCWeek(firstWeek, options);
  return date;
}
var MILLISECONDS_IN_WEEK = 6048e5;
function getUTCWeek(dirtyDate, options) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime();
  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
}
function addLeadingZeros(number, targetLength) {
  var sign = number < 0 ? "-" : "";
  var output = Math.abs(number).toString();
  while (output.length < targetLength) {
    output = "0" + output;
  }
  return sign + output;
}
var formatters$2 = {
  // Year
  y: function(date, token) {
    var signedYear = date.getUTCFullYear();
    var year = signedYear > 0 ? signedYear : 1 - signedYear;
    return addLeadingZeros(token === "yy" ? year % 100 : year, token.length);
  },
  // Month
  M: function(date, token) {
    var month = date.getUTCMonth();
    return token === "M" ? String(month + 1) : addLeadingZeros(month + 1, 2);
  },
  // Day of the month
  d: function(date, token) {
    return addLeadingZeros(date.getUTCDate(), token.length);
  },
  // AM or PM
  a: function(date, token) {
    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? "pm" : "am";
    switch (token) {
      case "a":
      case "aa":
        return dayPeriodEnumValue.toUpperCase();
      case "aaa":
        return dayPeriodEnumValue;
      case "aaaaa":
        return dayPeriodEnumValue[0];
      case "aaaa":
      default:
        return dayPeriodEnumValue === "am" ? "a.m." : "p.m.";
    }
  },
  // Hour [1-12]
  h: function(date, token) {
    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);
  },
  // Hour [0-23]
  H: function(date, token) {
    return addLeadingZeros(date.getUTCHours(), token.length);
  },
  // Minute
  m: function(date, token) {
    return addLeadingZeros(date.getUTCMinutes(), token.length);
  },
  // Second
  s: function(date, token) {
    return addLeadingZeros(date.getUTCSeconds(), token.length);
  },
  // Fraction of second
  S: function(date, token) {
    var numberOfDigits = token.length;
    var milliseconds = date.getUTCMilliseconds();
    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));
    return addLeadingZeros(fractionalSeconds, token.length);
  }
};
var formatters$3 = formatters$2;
var dayPeriodEnum = { am: "am", pm: "pm", midnight: "midnight", noon: "noon", morning: "morning", afternoon: "afternoon", evening: "evening", night: "night" };
var formatters = {
  // Era
  G: function(date, token, localize2) {
    var era = date.getUTCFullYear() > 0 ? 1 : 0;
    switch (token) {
      case "G":
      case "GG":
      case "GGG":
        return localize2.era(era, { width: "abbreviated" });
      case "GGGGG":
        return localize2.era(era, { width: "narrow" });
      case "GGGG":
      default:
        return localize2.era(era, { width: "wide" });
    }
  },
  // Year
  y: function(date, token, localize2) {
    if (token === "yo") {
      var signedYear = date.getUTCFullYear();
      var year = signedYear > 0 ? signedYear : 1 - signedYear;
      return localize2.ordinalNumber(year, { unit: "year" });
    }
    return formatters$3.y(date, token);
  },
  // Local week-numbering year
  Y: function(date, token, localize2, options) {
    var signedWeekYear = getUTCWeekYear(date, options);
    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;
    if (token === "YY") {
      var twoDigitYear = weekYear % 100;
      return addLeadingZeros(twoDigitYear, 2);
    }
    if (token === "Yo") {
      return localize2.ordinalNumber(weekYear, { unit: "year" });
    }
    return addLeadingZeros(weekYear, token.length);
  },
  // ISO week-numbering year
  R: function(date, token) {
    var isoWeekYear = getUTCISOWeekYear(date);
    return addLeadingZeros(isoWeekYear, token.length);
  },
  // Extended year. This is a single number designating the year of this calendar system.
  // The main difference between `y` and `u` localizers are B.C. years:
  // | Year | `y` | `u` |
  // |------|-----|-----|
  // | AC 1 |   1 |   1 |
  // | BC 1 |   1 |   0 |
  // | BC 2 |   2 |  -1 |
  // Also `yy` always returns the last two digits of a year,
  // while `uu` pads single digit years to 2 characters and returns other years unchanged.
  u: function(date, token) {
    var year = date.getUTCFullYear();
    return addLeadingZeros(year, token.length);
  },
  // Quarter
  Q: function(date, token, localize2) {
    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);
    switch (token) {
      case "Q":
        return String(quarter);
      case "QQ":
        return addLeadingZeros(quarter, 2);
      case "Qo":
        return localize2.ordinalNumber(quarter, { unit: "quarter" });
      case "QQQ":
        return localize2.quarter(quarter, { width: "abbreviated", context: "formatting" });
      case "QQQQQ":
        return localize2.quarter(quarter, { width: "narrow", context: "formatting" });
      case "QQQQ":
      default:
        return localize2.quarter(quarter, { width: "wide", context: "formatting" });
    }
  },
  // Stand-alone quarter
  q: function(date, token, localize2) {
    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);
    switch (token) {
      case "q":
        return String(quarter);
      case "qq":
        return addLeadingZeros(quarter, 2);
      case "qo":
        return localize2.ordinalNumber(quarter, { unit: "quarter" });
      case "qqq":
        return localize2.quarter(quarter, { width: "abbreviated", context: "standalone" });
      case "qqqqq":
        return localize2.quarter(quarter, { width: "narrow", context: "standalone" });
      case "qqqq":
      default:
        return localize2.quarter(quarter, { width: "wide", context: "standalone" });
    }
  },
  // Month
  M: function(date, token, localize2) {
    var month = date.getUTCMonth();
    switch (token) {
      case "M":
      case "MM":
        return formatters$3.M(date, token);
      case "Mo":
        return localize2.ordinalNumber(month + 1, { unit: "month" });
      case "MMM":
        return localize2.month(month, { width: "abbreviated", context: "formatting" });
      case "MMMMM":
        return localize2.month(month, { width: "narrow", context: "formatting" });
      case "MMMM":
      default:
        return localize2.month(month, { width: "wide", context: "formatting" });
    }
  },
  // Stand-alone month
  L: function(date, token, localize2) {
    var month = date.getUTCMonth();
    switch (token) {
      case "L":
        return String(month + 1);
      case "LL":
        return addLeadingZeros(month + 1, 2);
      case "Lo":
        return localize2.ordinalNumber(month + 1, { unit: "month" });
      case "LLL":
        return localize2.month(month, { width: "abbreviated", context: "standalone" });
      case "LLLLL":
        return localize2.month(month, { width: "narrow", context: "standalone" });
      case "LLLL":
      default:
        return localize2.month(month, { width: "wide", context: "standalone" });
    }
  },
  // Local week of year
  w: function(date, token, localize2, options) {
    var week = getUTCWeek(date, options);
    if (token === "wo") {
      return localize2.ordinalNumber(week, { unit: "week" });
    }
    return addLeadingZeros(week, token.length);
  },
  // ISO week of year
  I: function(date, token, localize2) {
    var isoWeek = getUTCISOWeek(date);
    if (token === "Io") {
      return localize2.ordinalNumber(isoWeek, { unit: "week" });
    }
    return addLeadingZeros(isoWeek, token.length);
  },
  // Day of the month
  d: function(date, token, localize2) {
    if (token === "do") {
      return localize2.ordinalNumber(date.getUTCDate(), { unit: "date" });
    }
    return formatters$3.d(date, token);
  },
  // Day of year
  D: function(date, token, localize2) {
    var dayOfYear = getUTCDayOfYear(date);
    if (token === "Do") {
      return localize2.ordinalNumber(dayOfYear, { unit: "dayOfYear" });
    }
    return addLeadingZeros(dayOfYear, token.length);
  },
  // Day of week
  E: function(date, token, localize2) {
    var dayOfWeek = date.getUTCDay();
    switch (token) {
      case "E":
      case "EE":
      case "EEE":
        return localize2.day(dayOfWeek, { width: "abbreviated", context: "formatting" });
      case "EEEEE":
        return localize2.day(dayOfWeek, { width: "narrow", context: "formatting" });
      case "EEEEEE":
        return localize2.day(dayOfWeek, { width: "short", context: "formatting" });
      case "EEEE":
      default:
        return localize2.day(dayOfWeek, { width: "wide", context: "formatting" });
    }
  },
  // Local day of week
  e: function(date, token, localize2, options) {
    var dayOfWeek = date.getUTCDay();
    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;
    switch (token) {
      case "e":
        return String(localDayOfWeek);
      case "ee":
        return addLeadingZeros(localDayOfWeek, 2);
      case "eo":
        return localize2.ordinalNumber(localDayOfWeek, { unit: "day" });
      case "eee":
        return localize2.day(dayOfWeek, { width: "abbreviated", context: "formatting" });
      case "eeeee":
        return localize2.day(dayOfWeek, { width: "narrow", context: "formatting" });
      case "eeeeee":
        return localize2.day(dayOfWeek, { width: "short", context: "formatting" });
      case "eeee":
      default:
        return localize2.day(dayOfWeek, { width: "wide", context: "formatting" });
    }
  },
  // Stand-alone local day of week
  c: function(date, token, localize2, options) {
    var dayOfWeek = date.getUTCDay();
    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;
    switch (token) {
      case "c":
        return String(localDayOfWeek);
      case "cc":
        return addLeadingZeros(localDayOfWeek, token.length);
      case "co":
        return localize2.ordinalNumber(localDayOfWeek, { unit: "day" });
      case "ccc":
        return localize2.day(dayOfWeek, { width: "abbreviated", context: "standalone" });
      case "ccccc":
        return localize2.day(dayOfWeek, { width: "narrow", context: "standalone" });
      case "cccccc":
        return localize2.day(dayOfWeek, { width: "short", context: "standalone" });
      case "cccc":
      default:
        return localize2.day(dayOfWeek, { width: "wide", context: "standalone" });
    }
  },
  // ISO day of week
  i: function(date, token, localize2) {
    var dayOfWeek = date.getUTCDay();
    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;
    switch (token) {
      case "i":
        return String(isoDayOfWeek);
      case "ii":
        return addLeadingZeros(isoDayOfWeek, token.length);
      case "io":
        return localize2.ordinalNumber(isoDayOfWeek, { unit: "day" });
      case "iii":
        return localize2.day(dayOfWeek, { width: "abbreviated", context: "formatting" });
      case "iiiii":
        return localize2.day(dayOfWeek, { width: "narrow", context: "formatting" });
      case "iiiiii":
        return localize2.day(dayOfWeek, { width: "short", context: "formatting" });
      case "iiii":
      default:
        return localize2.day(dayOfWeek, { width: "wide", context: "formatting" });
    }
  },
  // AM or PM
  a: function(date, token, localize2) {
    var hours = date.getUTCHours();
    var dayPeriodEnumValue = hours / 12 >= 1 ? "pm" : "am";
    switch (token) {
      case "a":
      case "aa":
        return localize2.dayPeriod(dayPeriodEnumValue, { width: "abbreviated", context: "formatting" });
      case "aaa":
        return localize2.dayPeriod(dayPeriodEnumValue, { width: "abbreviated", context: "formatting" }).toLowerCase();
      case "aaaaa":
        return localize2.dayPeriod(dayPeriodEnumValue, { width: "narrow", context: "formatting" });
      case "aaaa":
      default:
        return localize2.dayPeriod(dayPeriodEnumValue, { width: "wide", context: "formatting" });
    }
  },
  // AM, PM, midnight, noon
  b: function(date, token, localize2) {
    var hours = date.getUTCHours();
    var dayPeriodEnumValue;
    if (hours === 12) {
      dayPeriodEnumValue = dayPeriodEnum.noon;
    } else if (hours === 0) {
      dayPeriodEnumValue = dayPeriodEnum.midnight;
    } else {
      dayPeriodEnumValue = hours / 12 >= 1 ? "pm" : "am";
    }
    switch (token) {
      case "b":
      case "bb":
        return localize2.dayPeriod(dayPeriodEnumValue, { width: "abbreviated", context: "formatting" });
      case "bbb":
        return localize2.dayPeriod(dayPeriodEnumValue, { width: "abbreviated", context: "formatting" }).toLowerCase();
      case "bbbbb":
        return localize2.dayPeriod(dayPeriodEnumValue, { width: "narrow", context: "formatting" });
      case "bbbb":
      default:
        return localize2.dayPeriod(dayPeriodEnumValue, { width: "wide", context: "formatting" });
    }
  },
  // in the morning, in the afternoon, in the evening, at night
  B: function(date, token, localize2) {
    var hours = date.getUTCHours();
    var dayPeriodEnumValue;
    if (hours >= 17) {
      dayPeriodEnumValue = dayPeriodEnum.evening;
    } else if (hours >= 12) {
      dayPeriodEnumValue = dayPeriodEnum.afternoon;
    } else if (hours >= 4) {
      dayPeriodEnumValue = dayPeriodEnum.morning;
    } else {
      dayPeriodEnumValue = dayPeriodEnum.night;
    }
    switch (token) {
      case "B":
      case "BB":
      case "BBB":
        return localize2.dayPeriod(dayPeriodEnumValue, { width: "abbreviated", context: "formatting" });
      case "BBBBB":
        return localize2.dayPeriod(dayPeriodEnumValue, { width: "narrow", context: "formatting" });
      case "BBBB":
      default:
        return localize2.dayPeriod(dayPeriodEnumValue, { width: "wide", context: "formatting" });
    }
  },
  // Hour [1-12]
  h: function(date, token, localize2) {
    if (token === "ho") {
      var hours = date.getUTCHours() % 12;
      if (hours === 0)
        hours = 12;
      return localize2.ordinalNumber(hours, { unit: "hour" });
    }
    return formatters$3.h(date, token);
  },
  // Hour [0-23]
  H: function(date, token, localize2) {
    if (token === "Ho") {
      return localize2.ordinalNumber(date.getUTCHours(), { unit: "hour" });
    }
    return formatters$3.H(date, token);
  },
  // Hour [0-11]
  K: function(date, token, localize2) {
    var hours = date.getUTCHours() % 12;
    if (token === "Ko") {
      return localize2.ordinalNumber(hours, { unit: "hour" });
    }
    return addLeadingZeros(hours, token.length);
  },
  // Hour [1-24]
  k: function(date, token, localize2) {
    var hours = date.getUTCHours();
    if (hours === 0)
      hours = 24;
    if (token === "ko") {
      return localize2.ordinalNumber(hours, { unit: "hour" });
    }
    return addLeadingZeros(hours, token.length);
  },
  // Minute
  m: function(date, token, localize2) {
    if (token === "mo") {
      return localize2.ordinalNumber(date.getUTCMinutes(), { unit: "minute" });
    }
    return formatters$3.m(date, token);
  },
  // Second
  s: function(date, token, localize2) {
    if (token === "so") {
      return localize2.ordinalNumber(date.getUTCSeconds(), { unit: "second" });
    }
    return formatters$3.s(date, token);
  },
  // Fraction of second
  S: function(date, token) {
    return formatters$3.S(date, token);
  },
  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)
  X: function(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();
    if (timezoneOffset === 0) {
      return "Z";
    }
    switch (token) {
      case "X":
        return formatTimezoneWithOptionalMinutes(timezoneOffset);
      case "XXXX":
      case "XX":
        return formatTimezone(timezoneOffset);
      case "XXXXX":
      case "XXX":
      default:
        return formatTimezone(timezoneOffset, ":");
    }
  },
  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)
  x: function(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();
    switch (token) {
      case "x":
        return formatTimezoneWithOptionalMinutes(timezoneOffset);
      case "xxxx":
      case "xx":
        return formatTimezone(timezoneOffset);
      case "xxxxx":
      case "xxx":
      default:
        return formatTimezone(timezoneOffset, ":");
    }
  },
  // Timezone (GMT)
  O: function(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();
    switch (token) {
      case "O":
      case "OO":
      case "OOO":
        return "GMT" + formatTimezoneShort(timezoneOffset, ":");
      case "OOOO":
      default:
        return "GMT" + formatTimezone(timezoneOffset, ":");
    }
  },
  // Timezone (specific non-location)
  z: function(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();
    switch (token) {
      case "z":
      case "zz":
      case "zzz":
        return "GMT" + formatTimezoneShort(timezoneOffset, ":");
      case "zzzz":
      default:
        return "GMT" + formatTimezone(timezoneOffset, ":");
    }
  },
  // Seconds timestamp
  t: function(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timestamp = Math.floor(originalDate.getTime() / 1e3);
    return addLeadingZeros(timestamp, token.length);
  },
  // Milliseconds timestamp
  T: function(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timestamp = originalDate.getTime();
    return addLeadingZeros(timestamp, token.length);
  }
};
function formatTimezoneShort(offset, dirtyDelimiter) {
  var sign = offset > 0 ? "-" : "+";
  var absOffset = Math.abs(offset);
  var hours = Math.floor(absOffset / 60);
  var minutes = absOffset % 60;
  if (minutes === 0) {
    return sign + String(hours);
  }
  var delimiter = dirtyDelimiter || "";
  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);
}
function formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {
  if (offset % 60 === 0) {
    var sign = offset > 0 ? "-" : "+";
    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);
  }
  return formatTimezone(offset, dirtyDelimiter);
}
function formatTimezone(offset, dirtyDelimiter) {
  var delimiter = dirtyDelimiter || "";
  var sign = offset > 0 ? "-" : "+";
  var absOffset = Math.abs(offset);
  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);
  var minutes = addLeadingZeros(absOffset % 60, 2);
  return sign + hours + delimiter + minutes;
}
var formatters$1 = formatters;
var dateLongFormatter = function dateLongFormatter2(pattern, formatLong2) {
  switch (pattern) {
    case "P":
      return formatLong2.date({ width: "short" });
    case "PP":
      return formatLong2.date({ width: "medium" });
    case "PPP":
      return formatLong2.date({ width: "long" });
    case "PPPP":
    default:
      return formatLong2.date({ width: "full" });
  }
};
var timeLongFormatter = function timeLongFormatter2(pattern, formatLong2) {
  switch (pattern) {
    case "p":
      return formatLong2.time({ width: "short" });
    case "pp":
      return formatLong2.time({ width: "medium" });
    case "ppp":
      return formatLong2.time({ width: "long" });
    case "pppp":
    default:
      return formatLong2.time({ width: "full" });
  }
};
var dateTimeLongFormatter = function dateTimeLongFormatter2(pattern, formatLong2) {
  var matchResult = pattern.match(/(P+)(p+)?/) || [];
  var datePattern = matchResult[1];
  var timePattern = matchResult[2];
  if (!timePattern) {
    return dateLongFormatter(pattern, formatLong2);
  }
  var dateTimeFormat;
  switch (datePattern) {
    case "P":
      dateTimeFormat = formatLong2.dateTime({ width: "short" });
      break;
    case "PP":
      dateTimeFormat = formatLong2.dateTime({ width: "medium" });
      break;
    case "PPP":
      dateTimeFormat = formatLong2.dateTime({ width: "long" });
      break;
    case "PPPP":
    default:
      dateTimeFormat = formatLong2.dateTime({ width: "full" });
      break;
  }
  return dateTimeFormat.replace("{{date}}", dateLongFormatter(datePattern, formatLong2)).replace("{{time}}", timeLongFormatter(timePattern, formatLong2));
};
var longFormatters = { p: timeLongFormatter, P: dateTimeLongFormatter };
var longFormatters$1 = longFormatters;
var protectedDayOfYearTokens = ["D", "DD"];
var protectedWeekYearTokens = ["YY", "YYYY"];
function isProtectedDayOfYearToken(token) {
  return protectedDayOfYearTokens.indexOf(token) !== -1;
}
function isProtectedWeekYearToken(token) {
  return protectedWeekYearTokens.indexOf(token) !== -1;
}
function throwProtectedError(token, format2, input) {
  if (token === "YYYY") {
    throw new RangeError("Use `yyyy` instead of `YYYY` (in `".concat(format2, "`) for formatting years to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
  } else if (token === "YY") {
    throw new RangeError("Use `yy` instead of `YY` (in `".concat(format2, "`) for formatting years to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
  } else if (token === "D") {
    throw new RangeError("Use `d` instead of `D` (in `".concat(format2, "`) for formatting days of the month to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
  } else if (token === "DD") {
    throw new RangeError("Use `dd` instead of `DD` (in `".concat(format2, "`) for formatting days of the month to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
  }
}
var formatDistanceLocale = { lessThanXSeconds: { one: "less than a second", other: "less than {{count}} seconds" }, xSeconds: { one: "1 second", other: "{{count}} seconds" }, halfAMinute: "half a minute", lessThanXMinutes: { one: "less than a minute", other: "less than {{count}} minutes" }, xMinutes: { one: "1 minute", other: "{{count}} minutes" }, aboutXHours: { one: "about 1 hour", other: "about {{count}} hours" }, xHours: { one: "1 hour", other: "{{count}} hours" }, xDays: { one: "1 day", other: "{{count}} days" }, aboutXWeeks: { one: "about 1 week", other: "about {{count}} weeks" }, xWeeks: { one: "1 week", other: "{{count}} weeks" }, aboutXMonths: { one: "about 1 month", other: "about {{count}} months" }, xMonths: { one: "1 month", other: "{{count}} months" }, aboutXYears: { one: "about 1 year", other: "about {{count}} years" }, xYears: { one: "1 year", other: "{{count}} years" }, overXYears: { one: "over 1 year", other: "over {{count}} years" }, almostXYears: { one: "almost 1 year", other: "almost {{count}} years" } };
var formatDistance = function formatDistance2(token, count, options) {
  var result;
  var tokenValue = formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", count.toString());
  }
  if (options !== null && options !== void 0 && options.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "in " + result;
    } else {
      return result + " ago";
    }
  }
  return result;
};
var formatDistance$1 = formatDistance;
function buildFormatLongFn(args) {
  return function() {
    var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    var width = options.width ? String(options.width) : args.defaultWidth;
    var format2 = args.formats[width] || args.formats[args.defaultWidth];
    return format2;
  };
}
var dateFormats = { full: "EEEE, MMMM do, y", long: "MMMM do, y", medium: "MMM d, y", short: "MM/dd/yyyy" };
var timeFormats = { full: "h:mm:ss a zzzz", long: "h:mm:ss a z", medium: "h:mm:ss a", short: "h:mm a" };
var dateTimeFormats = { full: "{{date}} 'at' {{time}}", long: "{{date}} 'at' {{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" };
var formatLong = { date: buildFormatLongFn({ formats: dateFormats, defaultWidth: "full" }), time: buildFormatLongFn({ formats: timeFormats, defaultWidth: "full" }), dateTime: buildFormatLongFn({ formats: dateTimeFormats, defaultWidth: "full" }) };
var formatLong$1 = formatLong;
var formatRelativeLocale = { lastWeek: "'last' eeee 'at' p", yesterday: "'yesterday at' p", today: "'today at' p", tomorrow: "'tomorrow at' p", nextWeek: "eeee 'at' p", other: "P" };
var formatRelative = function formatRelative2(token, _date, _baseDate, _options) {
  return formatRelativeLocale[token];
};
var formatRelative$1 = formatRelative;
function buildLocalizeFn(args) {
  return function(dirtyIndex, options) {
    var context = options !== null && options !== void 0 && options.context ? String(options.context) : "standalone";
    var valuesArray;
    if (context === "formatting" && args.formattingValues) {
      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;
      var width = options !== null && options !== void 0 && options.width ? String(options.width) : defaultWidth;
      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];
    } else {
      var _defaultWidth = args.defaultWidth;
      var _width = options !== null && options !== void 0 && options.width ? String(options.width) : args.defaultWidth;
      valuesArray = args.values[_width] || args.values[_defaultWidth];
    }
    var index2 = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;
    return valuesArray[index2];
  };
}
var eraValues = { narrow: ["B", "A"], abbreviated: ["BC", "AD"], wide: ["Before Christ", "Anno Domini"] };
var quarterValues = { narrow: ["1", "2", "3", "4"], abbreviated: ["Q1", "Q2", "Q3", "Q4"], wide: ["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"] };
var monthValues = { narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], abbreviated: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], wide: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"] };
var dayValues = { narrow: ["S", "M", "T", "W", "T", "F", "S"], short: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"], abbreviated: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], wide: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"] };
var dayPeriodValues = { narrow: { am: "a", pm: "p", midnight: "mi", noon: "n", morning: "morning", afternoon: "afternoon", evening: "evening", night: "night" }, abbreviated: { am: "AM", pm: "PM", midnight: "midnight", noon: "noon", morning: "morning", afternoon: "afternoon", evening: "evening", night: "night" }, wide: { am: "a.m.", pm: "p.m.", midnight: "midnight", noon: "noon", morning: "morning", afternoon: "afternoon", evening: "evening", night: "night" } };
var formattingDayPeriodValues = { narrow: { am: "a", pm: "p", midnight: "mi", noon: "n", morning: "in the morning", afternoon: "in the afternoon", evening: "in the evening", night: "at night" }, abbreviated: { am: "AM", pm: "PM", midnight: "midnight", noon: "noon", morning: "in the morning", afternoon: "in the afternoon", evening: "in the evening", night: "at night" }, wide: { am: "a.m.", pm: "p.m.", midnight: "midnight", noon: "noon", morning: "in the morning", afternoon: "in the afternoon", evening: "in the evening", night: "at night" } };
var ordinalNumber = function ordinalNumber2(dirtyNumber, _options) {
  var number = Number(dirtyNumber);
  var rem100 = number % 100;
  if (rem100 > 20 || rem100 < 10) {
    switch (rem100 % 10) {
      case 1:
        return number + "st";
      case 2:
        return number + "nd";
      case 3:
        return number + "rd";
    }
  }
  return number + "th";
};
var localize = { ordinalNumber, era: buildLocalizeFn({ values: eraValues, defaultWidth: "wide" }), quarter: buildLocalizeFn({ values: quarterValues, defaultWidth: "wide", argumentCallback: function(quarter) {
  return quarter - 1;
} }), month: buildLocalizeFn({ values: monthValues, defaultWidth: "wide" }), day: buildLocalizeFn({ values: dayValues, defaultWidth: "wide" }), dayPeriod: buildLocalizeFn({ values: dayPeriodValues, defaultWidth: "wide", formattingValues: formattingDayPeriodValues, defaultFormattingWidth: "wide" }) };
var localize$1 = localize;
function buildMatchFn(args) {
  return function(string) {
    var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    var width = options.width;
    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];
    var matchResult = string.match(matchPattern);
    if (!matchResult) {
      return null;
    }
    var matchedString = matchResult[0];
    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];
    var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function(pattern) {
      return pattern.test(matchedString);
    }) : findKey(parsePatterns, function(pattern) {
      return pattern.test(matchedString);
    });
    var value;
    value = args.valueCallback ? args.valueCallback(key) : key;
    value = options.valueCallback ? options.valueCallback(value) : value;
    var rest = string.slice(matchedString.length);
    return { value, rest };
  };
}
function findKey(object, predicate) {
  for (var key in object) {
    if (object.hasOwnProperty(key) && predicate(object[key])) {
      return key;
    }
  }
  return void 0;
}
function findIndex(array, predicate) {
  for (var key = 0; key < array.length; key++) {
    if (predicate(array[key])) {
      return key;
    }
  }
  return void 0;
}
function buildMatchPatternFn(args) {
  return function(string) {
    var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    var matchResult = string.match(args.matchPattern);
    if (!matchResult)
      return null;
    var matchedString = matchResult[0];
    var parseResult = string.match(args.parsePattern);
    if (!parseResult)
      return null;
    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];
    value = options.valueCallback ? options.valueCallback(value) : value;
    var rest = string.slice(matchedString.length);
    return { value, rest };
  };
}
var matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i;
var parseOrdinalNumberPattern = /\d+/i;
var matchEraPatterns = { narrow: /^(b|a)/i, abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i, wide: /^(before christ|before common era|anno domini|common era)/i };
var parseEraPatterns = { any: [/^b/i, /^(a|c)/i] };
var matchQuarterPatterns = { narrow: /^[1234]/i, abbreviated: /^q[1234]/i, wide: /^[1234](th|st|nd|rd)? quarter/i };
var parseQuarterPatterns = { any: [/1/i, /2/i, /3/i, /4/i] };
var matchMonthPatterns = { narrow: /^[jfmasond]/i, abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i, wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i };
var parseMonthPatterns = { narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i], any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i] };
var matchDayPatterns = { narrow: /^[smtwf]/i, short: /^(su|mo|tu|we|th|fr|sa)/i, abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i, wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i };
var parseDayPatterns = { narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i], any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i] };
var matchDayPeriodPatterns = { narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i, any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i };
var parseDayPeriodPatterns = { any: { am: /^a/i, pm: /^p/i, midnight: /^mi/i, noon: /^no/i, morning: /morning/i, afternoon: /afternoon/i, evening: /evening/i, night: /night/i } };
var match = { ordinalNumber: buildMatchPatternFn({ matchPattern: matchOrdinalNumberPattern, parsePattern: parseOrdinalNumberPattern, valueCallback: function(value) {
  return parseInt(value, 10);
} }), era: buildMatchFn({ matchPatterns: matchEraPatterns, defaultMatchWidth: "wide", parsePatterns: parseEraPatterns, defaultParseWidth: "any" }), quarter: buildMatchFn({ matchPatterns: matchQuarterPatterns, defaultMatchWidth: "wide", parsePatterns: parseQuarterPatterns, defaultParseWidth: "any", valueCallback: function(index2) {
  return index2 + 1;
} }), month: buildMatchFn({ matchPatterns: matchMonthPatterns, defaultMatchWidth: "wide", parsePatterns: parseMonthPatterns, defaultParseWidth: "any" }), day: buildMatchFn({ matchPatterns: matchDayPatterns, defaultMatchWidth: "wide", parsePatterns: parseDayPatterns, defaultParseWidth: "any" }), dayPeriod: buildMatchFn({ matchPatterns: matchDayPeriodPatterns, defaultMatchWidth: "any", parsePatterns: parseDayPeriodPatterns, defaultParseWidth: "any" }) };
var match$1 = match;
var locale = { code: "en-US", formatDistance: formatDistance$1, formatLong: formatLong$1, formatRelative: formatRelative$1, localize: localize$1, match: match$1, options: { weekStartsOn: 0, firstWeekContainsDate: 1 } };
var defaultLocale = locale;
var formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g;
var longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;
var escapedStringRegExp = /^'([^]*?)'?$/;
var doubleQuoteRegExp = /''/g;
var unescapedLatinCharacterRegExp = /[a-zA-Z]/;
function format(dirtyDate, dirtyFormatStr, options) {
  var _ref, _options$locale, _ref2, _ref3, _ref4, _options$firstWeekCon, _options$locale2, _options$locale2$opti, _defaultOptions$local, _defaultOptions$local2, _ref5, _ref6, _ref7, _options$weekStartsOn, _options$locale3, _options$locale3$opti, _defaultOptions$local3, _defaultOptions$local4;
  requiredArgs(2, arguments);
  var formatStr = String(dirtyFormatStr);
  var defaultOptions2 = getDefaultOptions();
  var locale2 = (_ref = (_options$locale = options === null || options === void 0 ? void 0 : options.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions2.locale) !== null && _ref !== void 0 ? _ref : defaultLocale;
  var firstWeekContainsDate = toInteger((_ref2 = (_ref3 = (_ref4 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale2 = options.locale) === null || _options$locale2 === void 0 ? void 0 : (_options$locale2$opti = _options$locale2.options) === null || _options$locale2$opti === void 0 ? void 0 : _options$locale2$opti.firstWeekContainsDate) !== null && _ref4 !== void 0 ? _ref4 : defaultOptions2.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : (_defaultOptions$local = defaultOptions2.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : 1);
  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
    throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");
  }
  var weekStartsOn = toInteger((_ref5 = (_ref6 = (_ref7 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale3 = options.locale) === null || _options$locale3 === void 0 ? void 0 : (_options$locale3$opti = _options$locale3.options) === null || _options$locale3$opti === void 0 ? void 0 : _options$locale3$opti.weekStartsOn) !== null && _ref7 !== void 0 ? _ref7 : defaultOptions2.weekStartsOn) !== null && _ref6 !== void 0 ? _ref6 : (_defaultOptions$local3 = defaultOptions2.locale) === null || _defaultOptions$local3 === void 0 ? void 0 : (_defaultOptions$local4 = _defaultOptions$local3.options) === null || _defaultOptions$local4 === void 0 ? void 0 : _defaultOptions$local4.weekStartsOn) !== null && _ref5 !== void 0 ? _ref5 : 0);
  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
  }
  if (!locale2.localize) {
    throw new RangeError("locale must contain localize property");
  }
  if (!locale2.formatLong) {
    throw new RangeError("locale must contain formatLong property");
  }
  var originalDate = toDate(dirtyDate);
  if (!isValid(originalDate)) {
    throw new RangeError("Invalid time value");
  }
  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);
  var utcDate = subMilliseconds(originalDate, timezoneOffset);
  var formatterOptions = { firstWeekContainsDate, weekStartsOn, locale: locale2, _originalDate: originalDate };
  var result = formatStr.match(longFormattingTokensRegExp).map(function(substring) {
    var firstCharacter = substring[0];
    if (firstCharacter === "p" || firstCharacter === "P") {
      var longFormatter = longFormatters$1[firstCharacter];
      return longFormatter(substring, locale2.formatLong);
    }
    return substring;
  }).join("").match(formattingTokensRegExp).map(function(substring) {
    if (substring === "''") {
      return "'";
    }
    var firstCharacter = substring[0];
    if (firstCharacter === "'") {
      return cleanEscapedString(substring);
    }
    var formatter = formatters$1[firstCharacter];
    if (formatter) {
      if (!(options !== null && options !== void 0 && options.useAdditionalWeekYearTokens) && isProtectedWeekYearToken(substring)) {
        throwProtectedError(substring, dirtyFormatStr, String(dirtyDate));
      }
      if (!(options !== null && options !== void 0 && options.useAdditionalDayOfYearTokens) && isProtectedDayOfYearToken(substring)) {
        throwProtectedError(substring, dirtyFormatStr, String(dirtyDate));
      }
      return formatter(utcDate, substring, locale2.localize, formatterOptions);
    }
    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {
      throw new RangeError("Format string contains an unescaped latin alphabet character `" + firstCharacter + "`");
    }
    return substring;
  }).join("");
  return result;
}
function cleanEscapedString(input) {
  var matched = input.match(escapedStringRegExp);
  if (!matched) {
    return input;
  }
  return matched[1].replace(doubleQuoteRegExp, "'");
}
function getDaysInMonth(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var year = date.getFullYear();
  var monthIndex = date.getMonth();
  var lastDayOfMonth2 = /* @__PURE__ */ new Date(0);
  lastDayOfMonth2.setFullYear(year, monthIndex + 1, 0);
  lastDayOfMonth2.setHours(0, 0, 0, 0);
  return lastDayOfMonth2.getDate();
}
function lastDayOfMonth(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var month = date.getMonth();
  date.setFullYear(date.getFullYear(), month + 1, 0);
  date.setHours(0, 0, 0, 0);
  return date;
}
function isAfter(dirtyDate, dirtyDateToCompare) {
  requiredArgs(2, arguments);
  var date = toDate(dirtyDate);
  var dateToCompare = toDate(dirtyDateToCompare);
  return date.getTime() > dateToCompare.getTime();
}
function isBefore(dirtyDate, dirtyDateToCompare) {
  requiredArgs(2, arguments);
  var date = toDate(dirtyDate);
  var dateToCompare = toDate(dirtyDateToCompare);
  return date.getTime() < dateToCompare.getTime();
}
function isSameMonth(dirtyDateLeft, dirtyDateRight) {
  requiredArgs(2, arguments);
  var dateLeft = toDate(dirtyDateLeft);
  var dateRight = toDate(dirtyDateRight);
  return dateLeft.getFullYear() === dateRight.getFullYear() && dateLeft.getMonth() === dateRight.getMonth();
}
function setDate(dirtyDate, dirtyDayOfMonth) {
  requiredArgs(2, arguments);
  var date = toDate(dirtyDate);
  var dayOfMonth = toInteger(dirtyDayOfMonth);
  date.setDate(dayOfMonth);
  return date;
}
function get_each_context$1(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[27] = list[i];
  return child_ctx;
}
function get_each_context_1(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[27] = list[i];
  return child_ctx;
}
function get_each_context_2(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[27] = list[i];
  return child_ctx;
}
function get_each_context_3(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[34] = list[i];
  return child_ctx;
}
function get_each_context_4(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[37] = list[i];
  child_ctx[39] = i;
  return child_ctx;
}
function create_each_block_4(ctx) {
  let goa_dropdown_item;
  return { c() {
    goa_dropdown_item = element("goa-dropdown-item");
    set_custom_element_data(
      goa_dropdown_item,
      "value",
      /*i*/
      ctx[39]
    );
    set_custom_element_data(
      goa_dropdown_item,
      "label",
      /*month*/
      ctx[37]
    );
  }, m(target, anchor) {
    insert(target, goa_dropdown_item, anchor);
  }, p: noop, d(detaching) {
    if (detaching)
      detach(goa_dropdown_item);
  } };
}
function create_each_block_3(ctx) {
  let goa_dropdown_item;
  let goa_dropdown_item_value_value;
  return { c() {
    goa_dropdown_item = element("goa-dropdown-item");
    set_custom_element_data(goa_dropdown_item, "value", goa_dropdown_item_value_value = /*year*/
    ctx[34]);
  }, m(target, anchor) {
    insert(target, goa_dropdown_item, anchor);
  }, p(ctx2, dirty) {
    if (dirty[0] & /*_years*/
    16384 && goa_dropdown_item_value_value !== (goa_dropdown_item_value_value = /*year*/
    ctx2[34])) {
      set_custom_element_data(goa_dropdown_item, "value", goa_dropdown_item_value_value);
    }
  }, d(detaching) {
    if (detaching)
      detach(goa_dropdown_item);
  } };
}
function create_each_block_2(ctx) {
  let button;
  let div;
  let t_value = (
    /*d*/
    ctx[27].getDate() + ""
  );
  let t2;
  let button_aria_label_value;
  let button_data_date_value;
  let button_data_day_value;
  let button_tabindex_value;
  let mounted;
  let dispose;
  return { c() {
    button = element("button");
    div = element("div");
    t2 = text(t_value);
    attr(div, "class", "day-num");
    attr(div, "data-testid", "date");
    attr(button, "aria-label", button_aria_label_value = format(
      /*d*/
      ctx[27],
      "PPPP"
    ));
    attr(button, "data-date", button_data_date_value = format(
      /*d*/
      ctx[27],
      "T"
    ));
    attr(button, "data-day", button_data_day_value = format(
      /*d*/
      ctx[27],
      "eee"
    ));
    attr(button, "class", "day other-month");
    attr(button, "tabindex", button_tabindex_value = isSameDay(
      /*d*/
      ctx[27],
      /*_calendarDate*/
      ctx[8]
    ) ? 0 : -1);
    toggle_class(button, "disabled", isBefore(
      /*d*/
      ctx[27],
      /*_min*/
      ctx[9]
    ) || isAfter(
      /*d*/
      ctx[27],
      /*_max*/
      ctx[10]
    ));
  }, m(target, anchor) {
    insert(target, button, anchor);
    append(button, div);
    append(div, t2);
    if (!mounted) {
      dispose = listen(
        button,
        "click",
        /*onDateClick*/
        ctx[19]
      );
      mounted = true;
    }
  }, p(ctx2, dirty) {
    if (dirty[0] & /*_previousMonthDays*/
    4096 && t_value !== (t_value = /*d*/
    ctx2[27].getDate() + ""))
      set_data(t2, t_value);
    if (dirty[0] & /*_previousMonthDays*/
    4096 && button_aria_label_value !== (button_aria_label_value = format(
      /*d*/
      ctx2[27],
      "PPPP"
    ))) {
      attr(button, "aria-label", button_aria_label_value);
    }
    if (dirty[0] & /*_previousMonthDays*/
    4096 && button_data_date_value !== (button_data_date_value = format(
      /*d*/
      ctx2[27],
      "T"
    ))) {
      attr(button, "data-date", button_data_date_value);
    }
    if (dirty[0] & /*_previousMonthDays*/
    4096 && button_data_day_value !== (button_data_day_value = format(
      /*d*/
      ctx2[27],
      "eee"
    ))) {
      attr(button, "data-day", button_data_day_value);
    }
    if (dirty[0] & /*_previousMonthDays, _calendarDate*/
    4352 && button_tabindex_value !== (button_tabindex_value = isSameDay(
      /*d*/
      ctx2[27],
      /*_calendarDate*/
      ctx2[8]
    ) ? 0 : -1)) {
      attr(button, "tabindex", button_tabindex_value);
    }
    if (dirty[0] & /*_previousMonthDays, _min, _max*/
    5632) {
      toggle_class(button, "disabled", isBefore(
        /*d*/
        ctx2[27],
        /*_min*/
        ctx2[9]
      ) || isAfter(
        /*d*/
        ctx2[27],
        /*_max*/
        ctx2[10]
      ));
    }
  }, d(detaching) {
    if (detaching)
      detach(button);
    mounted = false;
    dispose();
  } };
}
function create_each_block_1(ctx) {
  let button;
  let div;
  let t_value = (
    /*d*/
    ctx[27].getDate() + ""
  );
  let t2;
  let button_aria_label_value;
  let button_data_date_value;
  let button_data_day_value;
  let button_tabindex_value;
  let mounted;
  let dispose;
  return { c() {
    button = element("button");
    div = element("div");
    t2 = text(t_value);
    attr(div, "class", "day-num");
    attr(div, "data-testid", "date");
    attr(button, "aria-label", button_aria_label_value = format(
      /*d*/
      ctx[27],
      "PPPP"
    ));
    attr(button, "data-date", button_data_date_value = format(
      /*d*/
      ctx[27],
      "T"
    ));
    attr(button, "data-day", button_data_day_value = format(
      /*d*/
      ctx[27],
      "eee"
    ));
    attr(button, "class", "day");
    attr(button, "tabindex", button_tabindex_value = isSameDay(
      /*d*/
      ctx[27],
      /*_calendarDate*/
      ctx[8]
    ) ? 0 : -1);
    toggle_class(button, "today", isSameDay(
      /*d*/
      ctx[27],
      /* @__PURE__ */ new Date()
    ));
    toggle_class(
      button,
      "selected",
      /*value*/
      ctx[0] && isSameDay(
        /*d*/
        ctx[27],
        /*_selectedDate*/
        ctx[7]
      )
    );
    toggle_class(button, "disabled", isBefore(
      /*d*/
      ctx[27],
      /*_min*/
      ctx[9]
    ) || isAfter(
      /*d*/
      ctx[27],
      /*_max*/
      ctx[10]
    ));
  }, m(target, anchor) {
    insert(target, button, anchor);
    append(button, div);
    append(div, t2);
    if (!mounted) {
      dispose = listen(
        button,
        "click",
        /*onDateClick*/
        ctx[19]
      );
      mounted = true;
    }
  }, p(ctx2, dirty) {
    if (dirty[0] & /*_monthDays*/
    2048 && t_value !== (t_value = /*d*/
    ctx2[27].getDate() + ""))
      set_data(t2, t_value);
    if (dirty[0] & /*_monthDays*/
    2048 && button_aria_label_value !== (button_aria_label_value = format(
      /*d*/
      ctx2[27],
      "PPPP"
    ))) {
      attr(button, "aria-label", button_aria_label_value);
    }
    if (dirty[0] & /*_monthDays*/
    2048 && button_data_date_value !== (button_data_date_value = format(
      /*d*/
      ctx2[27],
      "T"
    ))) {
      attr(button, "data-date", button_data_date_value);
    }
    if (dirty[0] & /*_monthDays*/
    2048 && button_data_day_value !== (button_data_day_value = format(
      /*d*/
      ctx2[27],
      "eee"
    ))) {
      attr(button, "data-day", button_data_day_value);
    }
    if (dirty[0] & /*_monthDays, _calendarDate*/
    2304 && button_tabindex_value !== (button_tabindex_value = isSameDay(
      /*d*/
      ctx2[27],
      /*_calendarDate*/
      ctx2[8]
    ) ? 0 : -1)) {
      attr(button, "tabindex", button_tabindex_value);
    }
    if (dirty[0] & /*_monthDays*/
    2048) {
      toggle_class(button, "today", isSameDay(
        /*d*/
        ctx2[27],
        /* @__PURE__ */ new Date()
      ));
    }
    if (dirty[0] & /*value, _monthDays, _selectedDate*/
    2177) {
      toggle_class(
        button,
        "selected",
        /*value*/
        ctx2[0] && isSameDay(
          /*d*/
          ctx2[27],
          /*_selectedDate*/
          ctx2[7]
        )
      );
    }
    if (dirty[0] & /*_monthDays, _min, _max*/
    3584) {
      toggle_class(button, "disabled", isBefore(
        /*d*/
        ctx2[27],
        /*_min*/
        ctx2[9]
      ) || isAfter(
        /*d*/
        ctx2[27],
        /*_max*/
        ctx2[10]
      ));
    }
  }, d(detaching) {
    if (detaching)
      detach(button);
    mounted = false;
    dispose();
  } };
}
function create_each_block$1(ctx) {
  let button;
  let div;
  let t0_value = (
    /*d*/
    ctx[27].getDate() + ""
  );
  let t0;
  let t1;
  let button_aria_label_value;
  let button_data_date_value;
  let button_data_day_value;
  let button_tabindex_value;
  let mounted;
  let dispose;
  return { c() {
    button = element("button");
    div = element("div");
    t0 = text(t0_value);
    t1 = space();
    attr(div, "class", "day-num");
    attr(div, "data-testid", "date");
    attr(button, "aria-label", button_aria_label_value = format(
      /*d*/
      ctx[27],
      "PPPP"
    ));
    attr(button, "data-date", button_data_date_value = format(
      /*d*/
      ctx[27],
      "T"
    ));
    attr(button, "data-day", button_data_day_value = format(
      /*d*/
      ctx[27],
      "eee"
    ));
    attr(button, "class", "day other-month");
    attr(button, "tabindex", button_tabindex_value = isSameDay(
      /*d*/
      ctx[27],
      /*_calendarDate*/
      ctx[8]
    ) ? 0 : -1);
    toggle_class(button, "disabled", isBefore(
      /*d*/
      ctx[27],
      /*_min*/
      ctx[9]
    ) || isAfter(
      /*d*/
      ctx[27],
      /*_max*/
      ctx[10]
    ));
  }, m(target, anchor) {
    insert(target, button, anchor);
    append(button, div);
    append(div, t0);
    append(button, t1);
    if (!mounted) {
      dispose = listen(
        button,
        "click",
        /*onDateClick*/
        ctx[19]
      );
      mounted = true;
    }
  }, p(ctx2, dirty) {
    if (dirty[0] & /*_nextMonthDays*/
    8192 && t0_value !== (t0_value = /*d*/
    ctx2[27].getDate() + ""))
      set_data(t0, t0_value);
    if (dirty[0] & /*_nextMonthDays*/
    8192 && button_aria_label_value !== (button_aria_label_value = format(
      /*d*/
      ctx2[27],
      "PPPP"
    ))) {
      attr(button, "aria-label", button_aria_label_value);
    }
    if (dirty[0] & /*_nextMonthDays*/
    8192 && button_data_date_value !== (button_data_date_value = format(
      /*d*/
      ctx2[27],
      "T"
    ))) {
      attr(button, "data-date", button_data_date_value);
    }
    if (dirty[0] & /*_nextMonthDays*/
    8192 && button_data_day_value !== (button_data_day_value = format(
      /*d*/
      ctx2[27],
      "eee"
    ))) {
      attr(button, "data-day", button_data_day_value);
    }
    if (dirty[0] & /*_nextMonthDays, _calendarDate*/
    8448 && button_tabindex_value !== (button_tabindex_value = isSameDay(
      /*d*/
      ctx2[27],
      /*_calendarDate*/
      ctx2[8]
    ) ? 0 : -1)) {
      attr(button, "tabindex", button_tabindex_value);
    }
    if (dirty[0] & /*_nextMonthDays, _min, _max*/
    9728) {
      toggle_class(button, "disabled", isBefore(
        /*d*/
        ctx2[27],
        /*_min*/
        ctx2[9]
      ) || isAfter(
        /*d*/
        ctx2[27],
        /*_max*/
        ctx2[10]
      ));
    }
  }, d(detaching) {
    if (detaching)
      detach(button);
    mounted = false;
    dispose();
  } };
}
function create_fragment$b(ctx) {
  let div1;
  let goa_block;
  let goa_form_item0;
  let goa_dropdown0;
  let goa_dropdown0_arialabel_value;
  let goa_dropdown0_value_value;
  let t0;
  let goa_form_item1;
  let goa_dropdown1;
  let goa_dropdown1_arialabel_value;
  let goa_dropdown1_value_value;
  let t1;
  let div0;
  let h50;
  let t3;
  let h51;
  let t5;
  let h52;
  let t7;
  let h53;
  let t9;
  let h54;
  let t11;
  let h55;
  let t13;
  let h56;
  let t15;
  let t16;
  let t17;
  let div1_style_value;
  let mounted;
  let dispose;
  let each_value_4 = (
    /*_months*/
    ctx[16]
  );
  let each_blocks_4 = [];
  for (let i = 0; i < each_value_4.length; i += 1) {
    each_blocks_4[i] = create_each_block_4(get_each_context_4(ctx, each_value_4, i));
  }
  let each_value_3 = (
    /*_years*/
    ctx[14]
  );
  let each_blocks_3 = [];
  for (let i = 0; i < each_value_3.length; i += 1) {
    each_blocks_3[i] = create_each_block_3(get_each_context_3(ctx, each_value_3, i));
  }
  let each_value_2 = (
    /*_previousMonthDays*/
    ctx[12]
  );
  let each_blocks_2 = [];
  for (let i = 0; i < each_value_2.length; i += 1) {
    each_blocks_2[i] = create_each_block_2(get_each_context_2(ctx, each_value_2, i));
  }
  let each_value_1 = (
    /*_monthDays*/
    ctx[11]
  );
  let each_blocks_1 = [];
  for (let i = 0; i < each_value_1.length; i += 1) {
    each_blocks_1[i] = create_each_block_1(get_each_context_1(ctx, each_value_1, i));
  }
  let each_value = (
    /*_nextMonthDays*/
    ctx[13]
  );
  let each_blocks = [];
  for (let i = 0; i < each_value.length; i += 1) {
    each_blocks[i] = create_each_block$1(get_each_context$1(ctx, each_value, i));
  }
  return { c() {
    var _ctx$2, _ctx$3;
    div1 = element("div");
    goa_block = element("goa-block");
    goa_form_item0 = element("goa-form-item");
    goa_dropdown0 = element("goa-dropdown");
    for (let i = 0; i < each_blocks_4.length; i += 1) {
      each_blocks_4[i].c();
    }
    t0 = space();
    goa_form_item1 = element("goa-form-item");
    goa_dropdown1 = element("goa-dropdown");
    for (let i = 0; i < each_blocks_3.length; i += 1) {
      each_blocks_3[i].c();
    }
    t1 = space();
    div0 = element("div");
    h50 = element("h5");
    h50.textContent = "Sun";
    t3 = space();
    h51 = element("h5");
    h51.textContent = "Mon";
    t5 = space();
    h52 = element("h5");
    h52.textContent = "Tue";
    t7 = space();
    h53 = element("h5");
    h53.textContent = "Wed";
    t9 = space();
    h54 = element("h5");
    h54.textContent = "Thu";
    t11 = space();
    h55 = element("h5");
    h55.textContent = "Fri";
    t13 = space();
    h56 = element("h5");
    h56.textContent = "Sat";
    t15 = space();
    for (let i = 0; i < each_blocks_2.length; i += 1) {
      each_blocks_2[i].c();
    }
    t16 = space();
    for (let i = 0; i < each_blocks_1.length; i += 1) {
      each_blocks_1[i].c();
    }
    t17 = space();
    for (let i = 0; i < each_blocks.length; i += 1) {
      each_blocks[i].c();
    }
    this.c = noop;
    set_custom_element_data(goa_dropdown0, "arialabel", goa_dropdown0_arialabel_value = `${/*name*/
    ctx[1]} month`);
    set_custom_element_data(goa_dropdown0, "data-testid", "months");
    set_custom_element_data(goa_dropdown0, "width", "calc(314px / 2 - 1.5rem)");
    set_custom_element_data(goa_dropdown0, "relative", "true");
    set_custom_element_data(goa_dropdown0, "value", goa_dropdown0_value_value = /*_calendarDate*/
    (_ctx$2 = ctx[8]) === null || _ctx$2 === void 0 ? void 0 : _ctx$2.getMonth());
    set_custom_element_data(goa_form_item0, "label", "Month");
    set_custom_element_data(goa_form_item0, "mt", "0");
    set_custom_element_data(goa_dropdown1, "arialabel", goa_dropdown1_arialabel_value = `${/*name*/
    ctx[1]} year`);
    set_custom_element_data(goa_dropdown1, "data-testid", "years");
    set_custom_element_data(goa_dropdown1, "width", "calc(314px / 2 - 1.5rem)");
    set_custom_element_data(goa_dropdown1, "relative", "true");
    set_custom_element_data(goa_dropdown1, "value", goa_dropdown1_value_value = /*_calendarDate*/
    (_ctx$3 = ctx[8]) === null || _ctx$3 === void 0 ? void 0 : _ctx$3.getFullYear());
    set_custom_element_data(goa_form_item1, "label", "Year");
    set_custom_element_data(goa_form_item1, "mt", "0");
    set_custom_element_data(goa_block, "mb", "m");
    attr(div0, "data-testid", "calendar");
    attr(div0, "class", "calendar");
    attr(div1, "style", div1_style_value = calculateMargin(
      /*mt*/
      ctx[2],
      /*mr*/
      ctx[3],
      /*mb*/
      ctx[4],
      /*ml*/
      ctx[5]
    ));
    toggle_class(
      div1,
      "bordered",
      /*bordered*/
      ctx[6] === "true"
    );
  }, m(target, anchor) {
    insert(target, div1, anchor);
    append(div1, goa_block);
    append(goa_block, goa_form_item0);
    append(goa_form_item0, goa_dropdown0);
    for (let i = 0; i < each_blocks_4.length; i += 1) {
      if (each_blocks_4[i]) {
        each_blocks_4[i].m(goa_dropdown0, null);
      }
    }
    append(goa_block, t0);
    append(goa_block, goa_form_item1);
    append(goa_form_item1, goa_dropdown1);
    for (let i = 0; i < each_blocks_3.length; i += 1) {
      if (each_blocks_3[i]) {
        each_blocks_3[i].m(goa_dropdown1, null);
      }
    }
    append(div1, t1);
    append(div1, div0);
    append(div0, h50);
    append(div0, t3);
    append(div0, h51);
    append(div0, t5);
    append(div0, h52);
    append(div0, t7);
    append(div0, h53);
    append(div0, t9);
    append(div0, h54);
    append(div0, t11);
    append(div0, h55);
    append(div0, t13);
    append(div0, h56);
    append(div0, t15);
    for (let i = 0; i < each_blocks_2.length; i += 1) {
      if (each_blocks_2[i]) {
        each_blocks_2[i].m(div0, null);
      }
    }
    append(div0, t16);
    for (let i = 0; i < each_blocks_1.length; i += 1) {
      if (each_blocks_1[i]) {
        each_blocks_1[i].m(div0, null);
      }
    }
    append(div0, t17);
    for (let i = 0; i < each_blocks.length; i += 1) {
      if (each_blocks[i]) {
        each_blocks[i].m(div0, null);
      }
    }
    ctx[22](div0);
    if (!mounted) {
      dispose = [listen(
        goa_dropdown0,
        "_change",
        /*setMonth*/
        ctx[17]
      ), listen(
        goa_dropdown1,
        "_change",
        /*setYear*/
        ctx[18]
      )];
      mounted = true;
    }
  }, p(ctx2, dirty) {
    var _ctx$4, _ctx$5;
    if (dirty[0] & /*_months*/
    65536) {
      each_value_4 = /*_months*/
      ctx2[16];
      let i;
      for (i = 0; i < each_value_4.length; i += 1) {
        const child_ctx = get_each_context_4(ctx2, each_value_4, i);
        if (each_blocks_4[i]) {
          each_blocks_4[i].p(child_ctx, dirty);
        } else {
          each_blocks_4[i] = create_each_block_4(child_ctx);
          each_blocks_4[i].c();
          each_blocks_4[i].m(goa_dropdown0, null);
        }
      }
      for (; i < each_blocks_4.length; i += 1) {
        each_blocks_4[i].d(1);
      }
      each_blocks_4.length = each_value_4.length;
    }
    if (dirty[0] & /*name*/
    2 && goa_dropdown0_arialabel_value !== (goa_dropdown0_arialabel_value = `${/*name*/
    ctx2[1]} month`)) {
      set_custom_element_data(goa_dropdown0, "arialabel", goa_dropdown0_arialabel_value);
    }
    if (dirty[0] & /*_calendarDate*/
    256 && goa_dropdown0_value_value !== (goa_dropdown0_value_value = /*_calendarDate*/
    (_ctx$4 = ctx2[8]) === null || _ctx$4 === void 0 ? void 0 : _ctx$4.getMonth())) {
      set_custom_element_data(goa_dropdown0, "value", goa_dropdown0_value_value);
    }
    if (dirty[0] & /*_years*/
    16384) {
      each_value_3 = /*_years*/
      ctx2[14];
      let i;
      for (i = 0; i < each_value_3.length; i += 1) {
        const child_ctx = get_each_context_3(ctx2, each_value_3, i);
        if (each_blocks_3[i]) {
          each_blocks_3[i].p(child_ctx, dirty);
        } else {
          each_blocks_3[i] = create_each_block_3(child_ctx);
          each_blocks_3[i].c();
          each_blocks_3[i].m(goa_dropdown1, null);
        }
      }
      for (; i < each_blocks_3.length; i += 1) {
        each_blocks_3[i].d(1);
      }
      each_blocks_3.length = each_value_3.length;
    }
    if (dirty[0] & /*name*/
    2 && goa_dropdown1_arialabel_value !== (goa_dropdown1_arialabel_value = `${/*name*/
    ctx2[1]} year`)) {
      set_custom_element_data(goa_dropdown1, "arialabel", goa_dropdown1_arialabel_value);
    }
    if (dirty[0] & /*_calendarDate*/
    256 && goa_dropdown1_value_value !== (goa_dropdown1_value_value = /*_calendarDate*/
    (_ctx$5 = ctx2[8]) === null || _ctx$5 === void 0 ? void 0 : _ctx$5.getFullYear())) {
      set_custom_element_data(goa_dropdown1, "value", goa_dropdown1_value_value);
    }
    if (dirty[0] & /*_previousMonthDays, _calendarDate, _min, _max, onDateClick*/
    530176) {
      each_value_2 = /*_previousMonthDays*/
      ctx2[12];
      let i;
      for (i = 0; i < each_value_2.length; i += 1) {
        const child_ctx = get_each_context_2(ctx2, each_value_2, i);
        if (each_blocks_2[i]) {
          each_blocks_2[i].p(child_ctx, dirty);
        } else {
          each_blocks_2[i] = create_each_block_2(child_ctx);
          each_blocks_2[i].c();
          each_blocks_2[i].m(div0, t16);
        }
      }
      for (; i < each_blocks_2.length; i += 1) {
        each_blocks_2[i].d(1);
      }
      each_blocks_2.length = each_value_2.length;
    }
    if (dirty[0] & /*_monthDays, _calendarDate, value, _selectedDate, _min, _max, onDateClick*/
    528257) {
      each_value_1 = /*_monthDays*/
      ctx2[11];
      let i;
      for (i = 0; i < each_value_1.length; i += 1) {
        const child_ctx = get_each_context_1(ctx2, each_value_1, i);
        if (each_blocks_1[i]) {
          each_blocks_1[i].p(child_ctx, dirty);
        } else {
          each_blocks_1[i] = create_each_block_1(child_ctx);
          each_blocks_1[i].c();
          each_blocks_1[i].m(div0, t17);
        }
      }
      for (; i < each_blocks_1.length; i += 1) {
        each_blocks_1[i].d(1);
      }
      each_blocks_1.length = each_value_1.length;
    }
    if (dirty[0] & /*_nextMonthDays, _calendarDate, _min, _max, onDateClick*/
    534272) {
      each_value = /*_nextMonthDays*/
      ctx2[13];
      let i;
      for (i = 0; i < each_value.length; i += 1) {
        const child_ctx = get_each_context$1(ctx2, each_value, i);
        if (each_blocks[i]) {
          each_blocks[i].p(child_ctx, dirty);
        } else {
          each_blocks[i] = create_each_block$1(child_ctx);
          each_blocks[i].c();
          each_blocks[i].m(div0, null);
        }
      }
      for (; i < each_blocks.length; i += 1) {
        each_blocks[i].d(1);
      }
      each_blocks.length = each_value.length;
    }
    if (dirty[0] & /*mt, mr, mb, ml*/
    60 && div1_style_value !== (div1_style_value = calculateMargin(
      /*mt*/
      ctx2[2],
      /*mr*/
      ctx2[3],
      /*mb*/
      ctx2[4],
      /*ml*/
      ctx2[5]
    ))) {
      attr(div1, "style", div1_style_value);
    }
    if (dirty[0] & /*bordered*/
    64) {
      toggle_class(
        div1,
        "bordered",
        /*bordered*/
        ctx2[6] === "true"
      );
    }
  }, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(div1);
    destroy_each(each_blocks_4, detaching);
    destroy_each(each_blocks_3, detaching);
    destroy_each(each_blocks_2, detaching);
    destroy_each(each_blocks_1, detaching);
    destroy_each(each_blocks, detaching);
    ctx[22](null);
    mounted = false;
    run_all(dispose);
  } };
}
function instance$b($$self, $$props, $$invalidate) {
  let { name = "" } = $$props;
  let { value = "" } = $$props;
  let { min = "" } = $$props;
  let { max = "" } = $$props;
  let { mt = null } = $$props;
  let { mr = null } = $$props;
  let { mb: mb2 = null } = $$props;
  let { ml: ml2 = null } = $$props;
  let { bordered = "true" } = $$props;
  let _selectedDate;
  let _calendarDate;
  let _min;
  let _max;
  let _monthDays = [];
  let _previousMonthDays = [];
  let _nextMonthDays = [];
  let _nextMonthDayCount;
  let _months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
  let _years = [];
  let _calendarEl;
  onMount(() => {
    $$invalidate(8, _calendarDate = $$invalidate(7, _selectedDate = value ? startOfDay(new Date(value)) : startOfDay(/* @__PURE__ */ new Date())));
    $$invalidate(9, _min = min && new Date(min) || addYears(_selectedDate, -5));
    $$invalidate(10, _max = max && new Date(max) || addYears(_selectedDate, 5));
    const yearCount = _max.getFullYear() - _min.getFullYear() + 1;
    let yearStart = _min.getFullYear();
    $$invalidate(14, _years = new Array(yearCount).fill(void 0).map((_, i) => yearStart + i).sort());
    renderCalendar({ type: "date", value: _selectedDate });
    initKeybindings();
  });
  function renderCalendar(change) {
    switch (change.type) {
      case "date":
        $$invalidate(8, _calendarDate = change.value);
        break;
      case "month":
        _calendarDate.setMonth(change.value);
        break;
      case "year":
        _calendarDate.setFullYear(change.value);
        break;
    }
    const dayCount = getDaysInMonth(_calendarDate);
    $$invalidate(11, _monthDays = new Array(dayCount).fill(void 0).map((_, i) => new Date(_calendarDate.getFullYear(), _calendarDate.getMonth(), i + 1)));
    const prevMonthEnd = lastDayOfMonth(addMonths(_calendarDate, -1));
    const selectedMonthStart = setDate(_calendarDate, 1);
    $$invalidate(12, _previousMonthDays = []);
    for (let i = 0; i < selectedMonthStart.getDay(); i++) {
      $$invalidate(12, _previousMonthDays = [..._previousMonthDays, addDays(prevMonthEnd, -i)]);
    }
    _previousMonthDays.reverse();
    $$invalidate(13, _nextMonthDays = []);
    _nextMonthDayCount = 7 - (_previousMonthDays.length + _monthDays.length) % 7;
    if (_nextMonthDayCount < 7) {
      const nextMonthStart = setDate(addMonths(_calendarDate, 1), 1);
      for (let i = 0; i < _nextMonthDayCount; i++) {
        $$invalidate(13, _nextMonthDays = [..._nextMonthDays, addDays(nextMonthStart, i)]);
      }
    }
  }
  function initKeybindings() {
    const handleKeyClick = async (e, newDate) => {
      e.stopPropagation();
      e.preventDefault();
      if (newDate < _min || newDate > _max) {
        return;
      }
      if (!isSameMonth(newDate, _calendarDate)) {
        renderCalendar({ type: "date", value: newDate });
      }
      $$invalidate(8, _calendarDate = newDate);
      await tick();
      const focusedDateEl = _calendarEl.querySelector(`[data-date="${newDate.getTime()}"]`);
      focusedDateEl === null || focusedDateEl === void 0 ? void 0 : focusedDateEl.focus();
    };
    _calendarEl.addEventListener("keydown", (e) => {
      switch (e.key) {
        case "ArrowUp":
          handleKeyClick(e, addDays(_calendarDate, -7));
          break;
        case "ArrowDown":
          handleKeyClick(e, addDays(_calendarDate, 7));
          break;
        case "ArrowLeft":
          handleKeyClick(e, addDays(_calendarDate, -1));
          break;
        case "ArrowRight":
          handleKeyClick(e, addDays(_calendarDate, 1));
          break;
        case "Delete":
        case "Backspace":
          $$invalidate(7, _selectedDate = null);
          break;
        case "Home": {
          let homeDate = new Date(_calendarDate);
          homeDate.setDate(1);
          handleKeyClick(e, homeDate);
          break;
        }
        case "End":
          handleKeyClick(e, lastDayOfMonth(_calendarDate));
          break;
        case "PageUp":
          if (e.shiftKey) {
            handleKeyClick(e, addYears(_calendarDate, -1));
          } else {
            handleKeyClick(e, addMonths(_calendarDate, -1));
          }
          break;
        case "PageDown":
          if (e.shiftKey) {
            handleKeyClick(e, addYears(_calendarDate, 1));
          } else {
            handleKeyClick(e, addMonths(_calendarDate, 1));
          }
          break;
        case "Enter":
          $$invalidate(7, _selectedDate = _calendarDate);
          dispatchValue();
          e.stopPropagation();
          e.preventDefault();
          break;
        case "Escape":
          e.stopPropagation();
          e.preventDefault();
          break;
      }
    });
  }
  function dispatchValue() {
    $$invalidate(0, value = _selectedDate.toISOString());
    _calendarEl.dispatchEvent(new CustomEvent("_change", { composed: true, detail: { type: "date", name, value: _selectedDate } }));
  }
  function setMonth(e) {
    renderCalendar({ type: "month", value: +e.detail.value });
    e.preventDefault();
    e.stopPropagation();
  }
  function setYear(e) {
    renderCalendar({ type: "year", value: +e.detail.value });
    e.preventDefault();
    e.stopPropagation();
  }
  function onDateClick(e) {
    const newDate = /* @__PURE__ */ new Date(+e.target.dataset.date);
    if (newDate < _min || newDate > _max) {
      return;
    }
    if (!isSameMonth(newDate, _calendarDate)) {
      renderCalendar({ type: "date", value: newDate });
    }
    $$invalidate(7, _selectedDate = $$invalidate(8, _calendarDate = newDate));
    dispatchValue();
  }
  function div0_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      _calendarEl = $$value;
      $$invalidate(15, _calendarEl);
    });
  }
  $$self.$$set = ($$props2) => {
    if ("name" in $$props2)
      $$invalidate(1, name = $$props2.name);
    if ("value" in $$props2)
      $$invalidate(0, value = $$props2.value);
    if ("min" in $$props2)
      $$invalidate(20, min = $$props2.min);
    if ("max" in $$props2)
      $$invalidate(21, max = $$props2.max);
    if ("mt" in $$props2)
      $$invalidate(2, mt = $$props2.mt);
    if ("mr" in $$props2)
      $$invalidate(3, mr = $$props2.mr);
    if ("mb" in $$props2)
      $$invalidate(4, mb2 = $$props2.mb);
    if ("ml" in $$props2)
      $$invalidate(5, ml2 = $$props2.ml);
    if ("bordered" in $$props2)
      $$invalidate(6, bordered = $$props2.bordered);
  };
  return [value, name, mt, mr, mb2, ml2, bordered, _selectedDate, _calendarDate, _min, _max, _monthDays, _previousMonthDays, _nextMonthDays, _years, _calendarEl, _months, setMonth, setYear, onDateClick, min, max, div0_binding];
}
class Calendar extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `:host{font:var(--goa-typography-body-s)}.bordered{display:inline-block;border:1px solid var(--goa-color-greyscale-700);border-radius:var(--goa-border-radius-m);padding:1rem}.calendar{display:grid;justify-items:center;grid-template-columns:repeat(7, 1fr);gap:2px 0;width:280px;font:var(--goa-typography-body-s)}h5{margin:0;font:var(--goa-typography-heading-xs)}.day{align-items:center;background:var(--goa-color-white);border:none;border-radius:var(--goa-border-radius-m);color:var(--goa-color-greyscale-black);display:inline-flex;font:var(--goa-typography-body-s);height:2.5rem;justify-content:center;margin:0;width:2.5rem}.day.other-month{color:var(--goa-color-greyscale-400)}.day.today{font-weight:var(--goa-font-weight-bold)}.day:focus-within{outline:var(--goa-border-width-l) solid var(--goa-color-interactive-focus)}.day.selected{background:var(--goa-color-interactive-default);color:var(--goa-color-greyscale-white)}.day:hover{background:var(--goa-color-greyscale-200);color:var(--goa-color-greyscale-black);cursor:pointer}.day.selected:hover{background:var(--goa-color-interactive-hover);text-decoration-color:var(--goa-color-white);color:var(--goa-color-greyscale-white)}.day.today.selected:hover{background:var(--goa-color-interactive-hover);text-decoration-color:var(--goa-color-white);color:var(--goa-color-greyscale-white)}.day.disabled{color:var(--goa-color-greyscale-400);cursor:default}.day.disabled:hover{background:var(--goa-color-white)}.day-num{width:100%;margin:0 6px;pointer-events:none;padding-bottom:2px}.selected .day-num{border-bottom:none;padding-bottom:0;width:1.5rem}.today .day-num{border-bottom:3px solid var(--goa-color-interactive-default)}.today.selected .day-num{border-bottom:3px solid var(--goa-color-greyscale-white)}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$b, create_fragment$b, safe_not_equal, { name: 1, value: 0, min: 20, max: 21, mt: 2, mr: 3, mb: 4, ml: 5, bordered: 6 }, null, [-1, -1]);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["name", "value", "min", "max", "mt", "mr", "mb", "ml", "bordered"];
  }
  get name() {
    return this.$$.ctx[1];
  }
  set name(name) {
    this.$$set({ name });
    flush();
  }
  get value() {
    return this.$$.ctx[0];
  }
  set value(value) {
    this.$$set({ value });
    flush();
  }
  get min() {
    return this.$$.ctx[20];
  }
  set min(min) {
    this.$$set({ min });
    flush();
  }
  get max() {
    return this.$$.ctx[21];
  }
  set max(max) {
    this.$$set({ max });
    flush();
  }
  get mt() {
    return this.$$.ctx[2];
  }
  set mt(mt) {
    this.$$set({ mt });
    flush();
  }
  get mr() {
    return this.$$.ctx[3];
  }
  set mr(mr) {
    this.$$set({ mr });
    flush();
  }
  get mb() {
    return this.$$.ctx[4];
  }
  set mb(mb2) {
    this.$$set({ mb: mb2 });
    flush();
  }
  get ml() {
    return this.$$.ctx[5];
  }
  set ml(ml2) {
    this.$$set({ ml: ml2 });
    flush();
  }
  get bordered() {
    return this.$$.ctx[6];
  }
  set bordered(bordered) {
    this.$$set({ bordered });
    flush();
  }
}
customElements.define("goa-calendar", Calendar);
function create_fragment$a(ctx) {
  let goa_popover;
  let goa_input;
  let goa_input_value_value;
  let t2;
  let goa_calendar;
  let mounted;
  let dispose;
  return { c() {
    goa_popover = element("goa-popover");
    goa_input = element("goa-input");
    t2 = space();
    goa_calendar = element("goa-calendar");
    this.c = noop;
    set_custom_element_data(goa_input, "slot", "target");
    set_custom_element_data(goa_input, "readonly", "true");
    set_custom_element_data(goa_input, "trailingicon", "calendar");
    set_custom_element_data(goa_input, "value", goa_input_value_value = /*formatDate*/
    ctx[13](
      /*_date*/
      ctx[9]
    ));
    set_custom_element_data(
      goa_calendar,
      "value",
      /*value*/
      ctx[0]
    );
    set_custom_element_data(
      goa_calendar,
      "min",
      /*min*/
      ctx[1]
    );
    set_custom_element_data(
      goa_calendar,
      "max",
      /*max*/
      ctx[2]
    );
    set_custom_element_data(goa_calendar, "bordered", "false");
    set_custom_element_data(goa_popover, "tabindex", "-1");
    set_custom_element_data(
      goa_popover,
      "relative",
      /*relative*/
      ctx[3]
    );
    set_custom_element_data(
      goa_popover,
      "mt",
      /*mt*/
      ctx[4]
    );
    set_custom_element_data(
      goa_popover,
      "mb",
      /*mb*/
      ctx[6]
    );
    set_custom_element_data(
      goa_popover,
      "ml",
      /*ml*/
      ctx[7]
    );
    set_custom_element_data(
      goa_popover,
      "mr",
      /*mr*/
      ctx[5]
    );
    set_custom_element_data(
      goa_popover,
      "open",
      /*_showPopover*/
      ctx[10]
    );
  }, m(target, anchor) {
    insert(target, goa_popover, anchor);
    append(goa_popover, goa_input);
    append(goa_popover, t2);
    append(goa_popover, goa_calendar);
    ctx[16](goa_popover);
    if (!mounted) {
      dispose = [listen(
        goa_input,
        "click",
        /*showCalendar*/
        ctx[14]
      ), listen(
        goa_input,
        "keydown",
        /*handleKeyDown*/
        ctx[15]
      ), listen(
        goa_calendar,
        "_change",
        /*onCalendarChange*/
        ctx[11]
      ), listen(
        goa_popover,
        "_close",
        /*close_handler*/
        ctx[17]
      )];
      mounted = true;
    }
  }, p(ctx2, [dirty]) {
    if (dirty & /*_date*/
    512 && goa_input_value_value !== (goa_input_value_value = /*formatDate*/
    ctx2[13](
      /*_date*/
      ctx2[9]
    ))) {
      set_custom_element_data(goa_input, "value", goa_input_value_value);
    }
    if (dirty & /*value*/
    1) {
      set_custom_element_data(
        goa_calendar,
        "value",
        /*value*/
        ctx2[0]
      );
    }
    if (dirty & /*min*/
    2) {
      set_custom_element_data(
        goa_calendar,
        "min",
        /*min*/
        ctx2[1]
      );
    }
    if (dirty & /*max*/
    4) {
      set_custom_element_data(
        goa_calendar,
        "max",
        /*max*/
        ctx2[2]
      );
    }
    if (dirty & /*relative*/
    8) {
      set_custom_element_data(
        goa_popover,
        "relative",
        /*relative*/
        ctx2[3]
      );
    }
    if (dirty & /*mt*/
    16) {
      set_custom_element_data(
        goa_popover,
        "mt",
        /*mt*/
        ctx2[4]
      );
    }
    if (dirty & /*mb*/
    64) {
      set_custom_element_data(
        goa_popover,
        "mb",
        /*mb*/
        ctx2[6]
      );
    }
    if (dirty & /*ml*/
    128) {
      set_custom_element_data(
        goa_popover,
        "ml",
        /*ml*/
        ctx2[7]
      );
    }
    if (dirty & /*mr*/
    32) {
      set_custom_element_data(
        goa_popover,
        "mr",
        /*mr*/
        ctx2[5]
      );
    }
    if (dirty & /*_showPopover*/
    1024) {
      set_custom_element_data(
        goa_popover,
        "open",
        /*_showPopover*/
        ctx2[10]
      );
    }
  }, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(goa_popover);
    ctx[16](null);
    mounted = false;
    run_all(dispose);
  } };
}
function instance$a($$self, $$props, $$invalidate) {
  let { value = "" } = $$props;
  let { min = "" } = $$props;
  let { max = "" } = $$props;
  let { relative = "false" } = $$props;
  let { mt = null } = $$props;
  let { mr = null } = $$props;
  let { mb: mb2 = null } = $$props;
  let { ml: ml2 = null } = $$props;
  let _rootEl;
  let _date;
  let _showPopover = false;
  onMount(async () => {
    $$invalidate(9, _date = value && startOfDay(new Date(value)));
    if (value && !isValid(_date)) {
      console.error(`${value} is not a valid date`);
    }
  });
  function onCalendarChange(e) {
    $$invalidate(9, _date = e.detail.value);
    hideCalendar();
    e.stopPropagation();
    e.preventDefault();
  }
  function dispatchValue(date) {
    if (!date)
      return;
    _rootEl.dispatchEvent(new CustomEvent("_change", { composed: true, bubbles: true, detail: { type: "date", value: date } }));
  }
  function formatDate(d) {
    if (!d)
      return "";
    if (typeof d === "string") {
      return format(new Date(d), "PPP");
    }
    return format(d, "PPP");
  }
  function hideCalendar() {
    $$invalidate(10, _showPopover = false);
  }
  function showCalendar() {
    $$invalidate(10, _showPopover = true);
  }
  function handleKeyDown(e) {
    if (["Space", "Enter"].includes(e.key)) {
      showCalendar();
      return;
    }
    switch (e.key) {
      case "ArrowLeft":
        _date || $$invalidate(9, _date = addDays(/* @__PURE__ */ new Date(), 1));
        $$invalidate(9, _date = addDays(_date, -1));
        break;
      case "ArrowRight":
        _date || $$invalidate(9, _date = addDays(/* @__PURE__ */ new Date(), -1));
        $$invalidate(9, _date = addDays(_date, 1));
        break;
      case "ArrowDown":
        _date || $$invalidate(9, _date = addDays(/* @__PURE__ */ new Date(), -7));
        $$invalidate(9, _date = addDays(_date, 7));
        break;
      case "ArrowUp":
        _date || $$invalidate(9, _date = addDays(/* @__PURE__ */ new Date(), 7));
        $$invalidate(9, _date = addDays(_date, -7));
        break;
      case "PageUp":
        _date || $$invalidate(9, _date = e.shiftKey ? addYears(/* @__PURE__ */ new Date(), 1) : addMonths(/* @__PURE__ */ new Date(), 1));
        $$invalidate(9, _date = e.shiftKey ? addYears(_date, -1) : addMonths(_date, -1));
        break;
      case "PageDown":
        _date || $$invalidate(9, _date = e.shiftKey ? addYears(/* @__PURE__ */ new Date(), -1) : addMonths(/* @__PURE__ */ new Date(), -1));
        $$invalidate(9, _date = e.shiftKey ? addYears(_date, 1) : addMonths(_date, 1));
        break;
      default:
        return;
    }
    dispatchValue(_date);
    e.preventDefault();
    e.stopPropagation();
  }
  function goa_popover_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      _rootEl = $$value;
      $$invalidate(8, _rootEl);
    });
  }
  const close_handler = () => dispatchValue(_date);
  $$self.$$set = ($$props2) => {
    if ("value" in $$props2)
      $$invalidate(0, value = $$props2.value);
    if ("min" in $$props2)
      $$invalidate(1, min = $$props2.min);
    if ("max" in $$props2)
      $$invalidate(2, max = $$props2.max);
    if ("relative" in $$props2)
      $$invalidate(3, relative = $$props2.relative);
    if ("mt" in $$props2)
      $$invalidate(4, mt = $$props2.mt);
    if ("mr" in $$props2)
      $$invalidate(5, mr = $$props2.mr);
    if ("mb" in $$props2)
      $$invalidate(6, mb2 = $$props2.mb);
    if ("ml" in $$props2)
      $$invalidate(7, ml2 = $$props2.ml);
  };
  return [value, min, max, relative, mt, mr, mb2, ml2, _rootEl, _date, _showPopover, onCalendarChange, dispatchValue, formatDate, showCalendar, handleKeyDown, goa_popover_binding, close_handler];
}
class DatePicker extends SvelteElement {
  constructor(options) {
    super();
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$a, create_fragment$a, safe_not_equal, { value: 0, min: 1, max: 2, relative: 3, mt: 4, mr: 5, mb: 6, ml: 7 }, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["value", "min", "max", "relative", "mt", "mr", "mb", "ml"];
  }
  get value() {
    return this.$$.ctx[0];
  }
  set value(value) {
    this.$$set({ value });
    flush();
  }
  get min() {
    return this.$$.ctx[1];
  }
  set min(min) {
    this.$$set({ min });
    flush();
  }
  get max() {
    return this.$$.ctx[2];
  }
  set max(max) {
    this.$$set({ max });
    flush();
  }
  get relative() {
    return this.$$.ctx[3];
  }
  set relative(relative) {
    this.$$set({ relative });
    flush();
  }
  get mt() {
    return this.$$.ctx[4];
  }
  set mt(mt) {
    this.$$set({ mt });
    flush();
  }
  get mr() {
    return this.$$.ctx[5];
  }
  set mr(mr) {
    this.$$set({ mr });
    flush();
  }
  get mb() {
    return this.$$.ctx[6];
  }
  set mb(mb2) {
    this.$$set({ mb: mb2 });
    flush();
  }
  get ml() {
    return this.$$.ctx[7];
  }
  set ml(ml2) {
    this.$$set({ ml: ml2 });
    flush();
  }
}
customElements.define("goa-date-picker", DatePicker);
function create_else_block$2(ctx) {
  let goa_icon;
  return { c() {
    goa_icon = element("goa-icon");
    set_custom_element_data(goa_icon, "class", "fileicon");
    set_custom_element_data(goa_icon, "data-testid", "icon");
    set_custom_element_data(goa_icon, "type", "goa-file");
    set_custom_element_data(goa_icon, "fillcolor", "#dcdcdc");
    set_custom_element_data(goa_icon, "size", "xlarge");
  }, m(target, anchor) {
    insert(target, goa_icon, anchor);
  }, p: noop, d(detaching) {
    if (detaching)
      detach(goa_icon);
  } };
}
function create_if_block_7(ctx) {
  let goa_icon;
  return { c() {
    goa_icon = element("goa-icon");
    set_custom_element_data(goa_icon, "class", "fileicon");
    set_custom_element_data(goa_icon, "data-testid", "icon");
    set_custom_element_data(
      goa_icon,
      "type",
      /*_fileIcon*/
      ctx[6]
    );
    set_custom_element_data(goa_icon, "fillcolor", "#0070c4");
    set_custom_element_data(goa_icon, "size", "xlarge");
  }, m(target, anchor) {
    insert(target, goa_icon, anchor);
  }, p(ctx2, dirty) {
    if (dirty & /*_fileIcon*/
    64) {
      set_custom_element_data(
        goa_icon,
        "type",
        /*_fileIcon*/
        ctx2[6]
      );
    }
  }, d(detaching) {
    if (detaching)
      detach(goa_icon);
  } };
}
function create_if_block_6(ctx) {
  let div;
  let t_value = formatFileSize(
    /*size*/
    ctx[1]
  ) + "";
  let t2;
  return { c() {
    div = element("div");
    t2 = text(t_value);
    attr(div, "class", "filesize");
    attr(div, "data-testid", "filesize");
  }, m(target, anchor) {
    insert(target, div, anchor);
    append(div, t2);
  }, p(ctx2, dirty) {
    if (dirty & /*size*/
    2 && t_value !== (t_value = formatFileSize(
      /*size*/
      ctx2[1]
    ) + ""))
      set_data(t2, t_value);
  }, d(detaching) {
    if (detaching)
      detach(div);
  } };
}
function create_if_block_5(ctx) {
  let div;
  let goa_icon;
  let t0;
  let t1;
  return { c() {
    div = element("div");
    goa_icon = element("goa-icon");
    t0 = space();
    t1 = text(
      /*error*/
      ctx[3]
    );
    set_custom_element_data(goa_icon, "type", "warning");
    set_custom_element_data(goa_icon, "size", "small");
    set_custom_element_data(goa_icon, "theme", "filled");
    attr(div, "class", "error-msg");
    attr(div, "data-testid", "error");
  }, m(target, anchor) {
    insert(target, div, anchor);
    append(div, goa_icon);
    append(div, t0);
    append(div, t1);
  }, p(ctx2, dirty) {
    if (dirty & /*error*/
    8)
      set_data(
        t1,
        /*error*/
        ctx2[3]
      );
  }, d(detaching) {
    if (detaching)
      detach(div);
  } };
}
function create_if_block_4$1(ctx) {
  let div;
  return { c() {
    div = element("div");
    div.textContent = `Uploaded on ${getTimestamp()}`;
    attr(div, "class", "timestamp");
    attr(div, "data-testid", "timestamp");
  }, m(target, anchor) {
    insert(target, div, anchor);
  }, p: noop, d(detaching) {
    if (detaching)
      detach(div);
  } };
}
function create_if_block_3$2(ctx) {
  let div;
  let progress_1;
  let t0;
  let t1_value = Math.ceil(
    /*progress*/
    ctx[2]
  ) + "";
  let t1;
  let t2;
  return { c() {
    div = element("div");
    progress_1 = element("progress");
    t0 = space();
    t1 = text(t1_value);
    t2 = text("%");
    progress_1.value = /*progress*/
    ctx[2];
    attr(progress_1, "max", "100");
    attr(div, "class", "progress");
    attr(div, "data-testid", "progress");
  }, m(target, anchor) {
    insert(target, div, anchor);
    append(div, progress_1);
    append(div, t0);
    append(div, t1);
    append(div, t2);
  }, p(ctx2, dirty) {
    if (dirty & /*progress*/
    4) {
      progress_1.value = /*progress*/
      ctx2[2];
    }
    if (dirty & /*progress*/
    4 && t1_value !== (t1_value = Math.ceil(
      /*progress*/
      ctx2[2]
    ) + ""))
      set_data(t1, t1_value);
  }, d(detaching) {
    if (detaching)
      detach(div);
  } };
}
function create_if_block_2$2(ctx) {
  let goa_button;
  let mounted;
  let dispose;
  return { c() {
    goa_button = element("goa-button");
    goa_button.textContent = "Cancel";
    set_custom_element_data(goa_button, "type", "tertiary");
    set_custom_element_data(goa_button, "size", "compact");
    set_custom_element_data(goa_button, "variant", "destructive");
  }, m(target, anchor) {
    insert(target, goa_button, anchor);
    if (!mounted) {
      dispose = listen(
        goa_button,
        "click",
        /*click_handler_2*/
        ctx[11]
      );
      mounted = true;
    }
  }, p: noop, d(detaching) {
    if (detaching)
      detach(goa_button);
    mounted = false;
    dispose();
  } };
}
function create_if_block_1$2(ctx) {
  let goa_button;
  let mounted;
  let dispose;
  return { c() {
    goa_button = element("goa-button");
    goa_button.textContent = "Remove";
    set_custom_element_data(goa_button, "type", "tertiary");
    set_custom_element_data(goa_button, "size", "compact");
    set_custom_element_data(goa_button, "leadingicon", "trash");
  }, m(target, anchor) {
    insert(target, goa_button, anchor);
    if (!mounted) {
      dispose = listen(
        goa_button,
        "click",
        /*click_handler_1*/
        ctx[10]
      );
      mounted = true;
    }
  }, p: noop, d(detaching) {
    if (detaching)
      detach(goa_button);
    mounted = false;
    dispose();
  } };
}
function create_if_block$6(ctx) {
  let goa_button;
  let mounted;
  let dispose;
  return { c() {
    goa_button = element("goa-button");
    goa_button.textContent = "Cancel";
    set_custom_element_data(goa_button, "type", "tertiary");
    set_custom_element_data(goa_button, "size", "compact");
  }, m(target, anchor) {
    insert(target, goa_button, anchor);
    if (!mounted) {
      dispose = listen(
        goa_button,
        "click",
        /*click_handler*/
        ctx[9]
      );
      mounted = true;
    }
  }, p: noop, d(detaching) {
    if (detaching)
      detach(goa_button);
    mounted = false;
    dispose();
  } };
}
function create_fragment$9(ctx) {
  let div3;
  let t0;
  let div1;
  let div0;
  let t1;
  let t2;
  let t3;
  let t4;
  let div2;
  let div3_class_value;
  function select_block_type(ctx2, dirty) {
    if (
      /*_status*/
      ctx2[4] === "uploaded"
    )
      return create_if_block_7;
    return create_else_block$2;
  }
  let current_block_type = select_block_type(ctx);
  let if_block0 = current_block_type(ctx);
  let if_block1 = (
    /*_status*/
    ctx[4] !== "error" && create_if_block_6(ctx)
  );
  function select_block_type_1(ctx2, dirty) {
    if (
      /*_status*/
      ctx2[4] === "uploading"
    )
      return create_if_block_3$2;
    if (
      /*_status*/
      ctx2[4] === "uploaded"
    )
      return create_if_block_4$1;
    if (
      /*_status*/
      ctx2[4] === "error"
    )
      return create_if_block_5;
  }
  let current_block_type_1 = select_block_type_1(ctx);
  let if_block2 = current_block_type_1 && current_block_type_1(ctx);
  function select_block_type_2(ctx2, dirty) {
    if (
      /*_status*/
      ctx2[4] === "uploading"
    )
      return create_if_block$6;
    if (
      /*_status*/
      ctx2[4] === "uploaded"
    )
      return create_if_block_1$2;
    if (
      /*_status*/
      ctx2[4] === "error"
    )
      return create_if_block_2$2;
  }
  let current_block_type_2 = select_block_type_2(ctx);
  let if_block3 = current_block_type_2 && current_block_type_2(ctx);
  return { c() {
    div3 = element("div");
    if_block0.c();
    t0 = space();
    div1 = element("div");
    div0 = element("div");
    t1 = text(
      /*filename*/
      ctx[0]
    );
    t2 = space();
    if (if_block1)
      if_block1.c();
    t3 = space();
    if (if_block2)
      if_block2.c();
    t4 = space();
    div2 = element("div");
    if (if_block3)
      if_block3.c();
    this.c = noop;
    attr(div0, "class", "filename");
    attr(div0, "data-testid", "filename");
    attr(div1, "class", "details");
    attr(div2, "class", "actions");
    attr(div2, "data-testid", "actions");
    attr(div3, "data-testid", "root");
    attr(div3, "class", div3_class_value = `root ${/*_status*/
    ctx[4]}`);
    toggle_class(
      div3,
      "error",
      /*error*/
      ctx[3]
    );
  }, m(target, anchor) {
    insert(target, div3, anchor);
    if_block0.m(div3, null);
    append(div3, t0);
    append(div3, div1);
    append(div1, div0);
    append(div0, t1);
    append(div1, t2);
    if (if_block1)
      if_block1.m(div1, null);
    append(div1, t3);
    if (if_block2)
      if_block2.m(div1, null);
    append(div3, t4);
    append(div3, div2);
    if (if_block3)
      if_block3.m(div2, null);
    ctx[12](div3);
  }, p(ctx2, [dirty]) {
    if (current_block_type === (current_block_type = select_block_type(ctx2)) && if_block0) {
      if_block0.p(ctx2, dirty);
    } else {
      if_block0.d(1);
      if_block0 = current_block_type(ctx2);
      if (if_block0) {
        if_block0.c();
        if_block0.m(div3, t0);
      }
    }
    if (dirty & /*filename*/
    1)
      set_data(
        t1,
        /*filename*/
        ctx2[0]
      );
    if (
      /*_status*/
      ctx2[4] !== "error"
    ) {
      if (if_block1) {
        if_block1.p(ctx2, dirty);
      } else {
        if_block1 = create_if_block_6(ctx2);
        if_block1.c();
        if_block1.m(div1, t3);
      }
    } else if (if_block1) {
      if_block1.d(1);
      if_block1 = null;
    }
    if (current_block_type_1 === (current_block_type_1 = select_block_type_1(ctx2)) && if_block2) {
      if_block2.p(ctx2, dirty);
    } else {
      if (if_block2)
        if_block2.d(1);
      if_block2 = current_block_type_1 && current_block_type_1(ctx2);
      if (if_block2) {
        if_block2.c();
        if_block2.m(div1, null);
      }
    }
    if (current_block_type_2 === (current_block_type_2 = select_block_type_2(ctx2)) && if_block3) {
      if_block3.p(ctx2, dirty);
    } else {
      if (if_block3)
        if_block3.d(1);
      if_block3 = current_block_type_2 && current_block_type_2(ctx2);
      if (if_block3) {
        if_block3.c();
        if_block3.m(div2, null);
      }
    }
    if (dirty & /*_status*/
    16 && div3_class_value !== (div3_class_value = `root ${/*_status*/
    ctx2[4]}`)) {
      attr(div3, "class", div3_class_value);
    }
    if (dirty & /*_status, error*/
    24) {
      toggle_class(
        div3,
        "error",
        /*error*/
        ctx2[3]
      );
    }
  }, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(div3);
    if_block0.d();
    if (if_block1)
      if_block1.d();
    if (if_block2) {
      if_block2.d();
    }
    if (if_block3) {
      if_block3.d();
    }
    ctx[12](null);
  } };
}
function getFiletypeIcon(filename, type) {
  const parts = filename.split(".");
  const ext = parts[parts.length - 1];
  const extTypeIcon = ext === "xlxs" && "goa-xls" || ext === "xls" && "goa-xls" || ext === "zip" && "goa-zip" || ext === "docx" && "goa-doc" || ext === "doc" && "goa-doc" || ext === "pptx" && "goa-ppt" || ext === "ppt" && "goa-ppt" || ext === "pdf" && "goa-pdf" || ext === "html" && "goa-html";
  if (extTypeIcon)
    return extTypeIcon;
  const mimeTypeIcon = type === "application/vnd.ms-powerpoint" && "goa-ppt" || type.includes("presentationml") && "goa-ppt" || type.includes("wordprocessingml") && "goa-doc" || type.includes("spreadsheet") && "goa-xls" || type.startsWith("video") && "goa-video" || type.startsWith("audio") && "goa-audio" || type.startsWith("image") && "goa-image" || type === "application/msword" && "goa-doc" || "goa-file";
  return mimeTypeIcon;
}
function formatFileSize(bytes) {
  switch (true) {
    case bytes < 1024:
      return bytes + "B";
    case bytes < 1024 * 1024:
      return Math.round(bytes / 1024) + "KB";
    case bytes < Math.pow(1024, 3):
      return Math.round(bytes / Math.pow(1024, 2)) + "MB";
  }
}
function instance$9($$self, $$props, $$invalidate) {
  let { filename } = $$props;
  let { size } = $$props;
  let { type = "" } = $$props;
  let { progress = -1 } = $$props;
  let { error: error2 = "" } = $$props;
  let _status = "uploading";
  let _rootEl;
  let _fileIcon = "goa-file";
  function dispatch2(action) {
    _rootEl.dispatchEvent(new CustomEvent(action, { composed: true }));
  }
  const click_handler = () => dispatch2("_cancel");
  const click_handler_1 = () => dispatch2("_delete");
  const click_handler_2 = () => dispatch2("_delete");
  function div3_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      _rootEl = $$value;
      $$invalidate(5, _rootEl);
    });
  }
  $$self.$$set = ($$props2) => {
    if ("filename" in $$props2)
      $$invalidate(0, filename = $$props2.filename);
    if ("size" in $$props2)
      $$invalidate(1, size = $$props2.size);
    if ("type" in $$props2)
      $$invalidate(8, type = $$props2.type);
    if ("progress" in $$props2)
      $$invalidate(2, progress = $$props2.progress);
    if ("error" in $$props2)
      $$invalidate(3, error2 = $$props2.error);
  };
  $$self.$$.update = () => {
    if ($$self.$$.dirty & /*error, progress*/
    12) {
      $$invalidate(4, _status = error2 && "error" || progress >= 0 && progress < 100 && "uploading" || "uploaded");
    }
    if ($$self.$$.dirty & /*filename, type*/
    257) {
      $$invalidate(6, _fileIcon = filename && type && getFiletypeIcon(filename, type));
    }
  };
  return [filename, size, progress, error2, _status, _rootEl, _fileIcon, dispatch2, type, click_handler, click_handler_1, click_handler_2, div3_binding];
}
class FileUploadCard extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `.root{padding:var(--goa-space-l);border:var(--goa-border-width-s) solid var(--goa-color-greyscale-200);border-radius:var(--goa-border-radius-m);margin:0.5rem 0;display:grid;grid-template-columns:38px auto;grid-template-rows:repeat(2, auto);grid-template-areas:"icon details"
      "action action";gap:1rem;align-items:center}.root.error{border:var(--goa-border-width-m) solid var(--goa-color-interactive-error)}@media screen and (max-width: 623px){@media not (max-color:2147477350){.root{grid-template-columns:38px 1fr auto;grid-template-rows:auto;grid-template-areas:"icon details action"}.details{margin-left:0.5rem}}}@media not  screen and (max-width: 623px){@media not (color:2147477350){.root{grid-template-columns:38px 1fr auto;grid-template-rows:auto;grid-template-areas:"icon details action"}.details{margin-left:0.5rem}}}.fileicon{grid-area:icon;align-self:center}.actions{grid-area:action}.details{grid-area:details;display:flex;flex-direction:column;overflow-x:hidden}.filename{grid-area:filename;font-size:var(--goa-font-size-4);overflow-wrap:anywhere}.error-msg{display:flex;align-items:flex-start;margin-top:0.5rem;gap:var(--goa-space-2xs);color:var(--goa-color-interactive-error);font:var(--goa-typography-body-xs)}.timestamp,.filesize{color:var(--goa-color-greyscale-700);font:var(--goa-typography-body-s)}.progress{display:flex;align-items:center;font:var(--goa-typography-body-xs);gap:0.5rem}progress{flex:1 1 auto;-webkit-appearance:none;-moz-appearance:none;appearance:none;height:4px;border:none;border-radius:var(--goa-border-radius-m);background:var(--goa-color-greyscale-200);color:var(--goa-color-greyscale-700)}progress::-webkit-progress-value{background:var(--goa-color-interactive-default)}progress::-webkit-progress-bar{background:var(--goa-color-greyscale-200)}progress::-moz-progress-bar{background:var(--goa-color-interactive-default)}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$9, create_fragment$9, safe_not_equal, { filename: 0, size: 1, type: 8, progress: 2, error: 3 }, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["filename", "size", "type", "progress", "error"];
  }
  get filename() {
    return this.$$.ctx[0];
  }
  set filename(filename) {
    this.$$set({ filename });
    flush();
  }
  get size() {
    return this.$$.ctx[1];
  }
  set size(size) {
    this.$$set({ size });
    flush();
  }
  get type() {
    return this.$$.ctx[8];
  }
  set type(type) {
    this.$$set({ type });
    flush();
  }
  get progress() {
    return this.$$.ctx[2];
  }
  set progress(progress) {
    this.$$set({ progress });
    flush();
  }
  get error() {
    return this.$$.ctx[3];
  }
  set error(error2) {
    this.$$set({ error: error2 });
    flush();
  }
}
customElements.define("goa-file-upload-card", FileUploadCard);
function get_each_context(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[21] = list[i];
  return child_ctx;
}
function create_if_block_3$1(ctx) {
  let div3;
  let div2;
  let t6;
  let t7;
  let input;
  let div3_class_value;
  let mounted;
  let dispose;
  let if_block = (
    /*maxfilesize*/
    ctx[2] && create_if_block_4(ctx)
  );
  return { c() {
    div3 = element("div");
    div2 = element("div");
    div2.innerHTML = `<goa-icon type="cloud-upload" size="large"></goa-icon> 
      <div>Drag and drop files here</div> 
      <em>or</em> 
      <div class="browse-files">Browse files</div>`;
    t6 = space();
    if (if_block)
      if_block.c();
    t7 = space();
    input = element("input");
    attr(div2, "class", "instructions");
    attr(input, "data-testid", "input");
    attr(input, "tabindex", "0");
    attr(input, "type", "file");
    attr(
      input,
      "accept",
      /*accept*/
      ctx[1]
    );
    input.multiple = true;
    attr(div3, "data-testid", "dragdrop");
    attr(div3, "class", div3_class_value = `dragdrop state-${/*_state*/
    ctx[5]}`);
  }, m(target, anchor) {
    insert(target, div3, anchor);
    append(div3, div2);
    append(div3, t6);
    if (if_block)
      if_block.m(div3, null);
    append(div3, t7);
    append(div3, input);
    ctx[13](input);
    ctx[14](div3);
    if (!mounted) {
      dispose = [listen(
        div3,
        "click",
        /*openFilePicker*/
        ctx[7]
      ), listen(
        div3,
        "drop",
        /*onDrop*/
        ctx[8]
      ), listen(
        div3,
        "mouseover",
        /*onMouseOver*/
        ctx[11]
      ), listen(
        div3,
        "mouseout",
        /*onMouseOut*/
        ctx[12]
      ), listen(
        div3,
        "dragenter",
        /*onDragEnter*/
        ctx[9]
      ), listen(
        div3,
        "dragleave",
        /*onDragLeave*/
        ctx[10]
      ), listen(div3, "dragover", onDrag)];
      mounted = true;
    }
  }, p(ctx2, dirty) {
    if (
      /*maxfilesize*/
      ctx2[2]
    ) {
      if (if_block) {
        if_block.p(ctx2, dirty);
      } else {
        if_block = create_if_block_4(ctx2);
        if_block.c();
        if_block.m(div3, t7);
      }
    } else if (if_block) {
      if_block.d(1);
      if_block = null;
    }
    if (dirty & /*accept*/
    2) {
      attr(
        input,
        "accept",
        /*accept*/
        ctx2[1]
      );
    }
    if (dirty & /*_state*/
    32 && div3_class_value !== (div3_class_value = `dragdrop state-${/*_state*/
    ctx2[5]}`)) {
      attr(div3, "class", div3_class_value);
    }
  }, d(detaching) {
    if (detaching)
      detach(div3);
    if (if_block)
      if_block.d();
    ctx[13](null);
    ctx[14](null);
    mounted = false;
    run_all(dispose);
  } };
}
function create_if_block_4(ctx) {
  let em;
  let t0;
  let t1;
  let t2;
  return { c() {
    em = element("em");
    t0 = text("Maximum file size is ");
    t1 = text(
      /*maxfilesize*/
      ctx[2]
    );
    t2 = text(".");
    attr(em, "class", "max-file-size");
    attr(em, "data-testid", "max-file-size");
  }, m(target, anchor) {
    insert(target, em, anchor);
    append(em, t0);
    append(em, t1);
    append(em, t2);
  }, p(ctx2, dirty) {
    if (dirty & /*maxfilesize*/
    4)
      set_data(
        t1,
        /*maxfilesize*/
        ctx2[2]
      );
  }, d(detaching) {
    if (detaching)
      detach(em);
  } };
}
function create_if_block_1$1(ctx) {
  let div;
  let goa_button;
  let t1;
  let t2;
  let input;
  let mounted;
  let dispose;
  let if_block = (
    /*maxfilesize*/
    ctx[2] && create_if_block_2$1(ctx)
  );
  return { c() {
    div = element("div");
    goa_button = element("goa-button");
    goa_button.textContent = "Choose file";
    t1 = space();
    if (if_block)
      if_block.c();
    t2 = space();
    input = element("input");
    set_custom_element_data(goa_button, "type", "secondary");
    attr(div, "class", "button");
    attr(input, "data-testid", "input");
    attr(input, "tabindex", "-1");
    attr(input, "type", "file");
    attr(
      input,
      "accept",
      /*accept*/
      ctx[1]
    );
    input.multiple = true;
  }, m(target, anchor) {
    insert(target, div, anchor);
    append(div, goa_button);
    append(div, t1);
    if (if_block)
      if_block.m(div, null);
    ctx[15](div);
    insert(target, t2, anchor);
    insert(target, input, anchor);
    ctx[16](input);
    if (!mounted) {
      dispose = listen(
        goa_button,
        "click",
        /*openFilePicker*/
        ctx[7]
      );
      mounted = true;
    }
  }, p(ctx2, dirty) {
    if (
      /*maxfilesize*/
      ctx2[2]
    ) {
      if (if_block) {
        if_block.p(ctx2, dirty);
      } else {
        if_block = create_if_block_2$1(ctx2);
        if_block.c();
        if_block.m(div, null);
      }
    } else if (if_block) {
      if_block.d(1);
      if_block = null;
    }
    if (dirty & /*accept*/
    2) {
      attr(
        input,
        "accept",
        /*accept*/
        ctx2[1]
      );
    }
  }, d(detaching) {
    if (detaching)
      detach(div);
    if (if_block)
      if_block.d();
    ctx[15](null);
    if (detaching)
      detach(t2);
    if (detaching)
      detach(input);
    ctx[16](null);
    mounted = false;
    dispose();
  } };
}
function create_if_block_2$1(ctx) {
  let em;
  let t0;
  let t1;
  let t2;
  return { c() {
    em = element("em");
    t0 = text("Maximum file size is ");
    t1 = text(
      /*maxfilesize*/
      ctx[2]
    );
    t2 = text(".");
    attr(em, "class", "max-file-size");
    attr(em, "data-testid", "max-file-size");
  }, m(target, anchor) {
    insert(target, em, anchor);
    append(em, t0);
    append(em, t1);
    append(em, t2);
  }, p(ctx2, dirty) {
    if (dirty & /*maxfilesize*/
    4)
      set_data(
        t1,
        /*maxfilesize*/
        ctx2[2]
      );
  }, d(detaching) {
    if (detaching)
      detach(em);
  } };
}
function create_if_block$5(ctx) {
  let div;
  let each_value = (
    /*issues*/
    ctx[6]
  );
  let each_blocks = [];
  for (let i = 0; i < each_value.length; i += 1) {
    each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
  }
  return { c() {
    div = element("div");
    for (let i = 0; i < each_blocks.length; i += 1) {
      each_blocks[i].c();
    }
    attr(div, "class", "issues");
  }, m(target, anchor) {
    insert(target, div, anchor);
    for (let i = 0; i < each_blocks.length; i += 1) {
      if (each_blocks[i]) {
        each_blocks[i].m(div, null);
      }
    }
  }, p(ctx2, dirty) {
    if (dirty & /*issues*/
    64) {
      each_value = /*issues*/
      ctx2[6];
      let i;
      for (i = 0; i < each_value.length; i += 1) {
        const child_ctx = get_each_context(ctx2, each_value, i);
        if (each_blocks[i]) {
          each_blocks[i].p(child_ctx, dirty);
        } else {
          each_blocks[i] = create_each_block(child_ctx);
          each_blocks[i].c();
          each_blocks[i].m(div, null);
        }
      }
      for (; i < each_blocks.length; i += 1) {
        each_blocks[i].d(1);
      }
      each_blocks.length = each_value.length;
    }
  }, d(detaching) {
    if (detaching)
      detach(div);
    destroy_each(each_blocks, detaching);
  } };
}
function create_each_block(ctx) {
  let div1;
  let t0_value = (
    /*issue*/
    ctx[21].filename + ""
  );
  let t0;
  let t1;
  let div0;
  let goa_icon;
  let t2;
  let t3_value = (
    /*issue*/
    ctx[21].error + ""
  );
  let t3;
  let t4;
  return { c() {
    div1 = element("div");
    t0 = text(t0_value);
    t1 = space();
    div0 = element("div");
    goa_icon = element("goa-icon");
    t2 = space();
    t3 = text(t3_value);
    t4 = space();
    set_custom_element_data(goa_icon, "type", "warning");
    set_custom_element_data(goa_icon, "size", "small");
    set_custom_element_data(goa_icon, "theme", "filled");
    attr(div0, "class", "error");
    attr(div0, "data-testid", "error");
    attr(div1, "class", "issue");
  }, m(target, anchor) {
    insert(target, div1, anchor);
    append(div1, t0);
    append(div1, t1);
    append(div1, div0);
    append(div0, goa_icon);
    append(div0, t2);
    append(div0, t3);
    append(div1, t4);
  }, p(ctx2, dirty) {
    if (dirty & /*issues*/
    64 && t0_value !== (t0_value = /*issue*/
    ctx2[21].filename + ""))
      set_data(t0, t0_value);
    if (dirty & /*issues*/
    64 && t3_value !== (t3_value = /*issue*/
    ctx2[21].error + ""))
      set_data(t3, t3_value);
  }, d(detaching) {
    if (detaching)
      detach(div1);
  } };
}
function create_fragment$8(ctx) {
  let t0;
  let t1;
  let if_block2_anchor;
  let if_block0 = (
    /*variant*/
    ctx[0] === "dragdrop" && create_if_block_3$1(ctx)
  );
  let if_block1 = (
    /*variant*/
    ctx[0] === "button" && create_if_block_1$1(ctx)
  );
  let if_block2 = (
    /*issues*/
    ctx[6].length && create_if_block$5(ctx)
  );
  return { c() {
    if (if_block0)
      if_block0.c();
    t0 = space();
    if (if_block1)
      if_block1.c();
    t1 = space();
    if (if_block2)
      if_block2.c();
    if_block2_anchor = empty();
    this.c = noop;
  }, m(target, anchor) {
    if (if_block0)
      if_block0.m(target, anchor);
    insert(target, t0, anchor);
    if (if_block1)
      if_block1.m(target, anchor);
    insert(target, t1, anchor);
    if (if_block2)
      if_block2.m(target, anchor);
    insert(target, if_block2_anchor, anchor);
  }, p(ctx2, [dirty]) {
    if (
      /*variant*/
      ctx2[0] === "dragdrop"
    ) {
      if (if_block0) {
        if_block0.p(ctx2, dirty);
      } else {
        if_block0 = create_if_block_3$1(ctx2);
        if_block0.c();
        if_block0.m(t0.parentNode, t0);
      }
    } else if (if_block0) {
      if_block0.d(1);
      if_block0 = null;
    }
    if (
      /*variant*/
      ctx2[0] === "button"
    ) {
      if (if_block1) {
        if_block1.p(ctx2, dirty);
      } else {
        if_block1 = create_if_block_1$1(ctx2);
        if_block1.c();
        if_block1.m(t1.parentNode, t1);
      }
    } else if (if_block1) {
      if_block1.d(1);
      if_block1 = null;
    }
    if (
      /*issues*/
      ctx2[6].length
    ) {
      if (if_block2) {
        if_block2.p(ctx2, dirty);
      } else {
        if_block2 = create_if_block$5(ctx2);
        if_block2.c();
        if_block2.m(if_block2_anchor.parentNode, if_block2_anchor);
      }
    } else if (if_block2) {
      if_block2.d(1);
      if_block2 = null;
    }
  }, i: noop, o: noop, d(detaching) {
    if (if_block0)
      if_block0.d(detaching);
    if (detaching)
      detach(t0);
    if (if_block1)
      if_block1.d(detaching);
    if (detaching)
      detach(t1);
    if (if_block2)
      if_block2.d(detaching);
    if (detaching)
      detach(if_block2_anchor);
  } };
}
function onDrag(e) {
  e.preventDefault();
  return false;
}
function instance$8($$self, $$props, $$invalidate) {
  let { variant = "dragdrop" } = $$props;
  let { accept = "*" } = $$props;
  let { maxfilesize = "5MB" } = $$props;
  let _el;
  let _fileInput;
  let _state = "default";
  let issues = [];
  onMount(() => {
    _fileInput.addEventListener("change", () => {
      $$invalidate(6, issues = []);
      [..._fileInput.files].forEach((file) => {
        const error2 = validate(file);
        if (error2) {
          $$invalidate(6, issues = [{ filename: file.name, error: error2 }, ...issues]);
          return;
        }
        dispatch2(file);
      });
      $$invalidate(4, _fileInput.value = null, _fileInput);
    }, true);
  });
  function validate(file) {
    if (!isValidFileType(file)) {
      return "Invalid file type";
    }
    if (!isValidFileSize(file)) {
      return `The file must be less than ${maxfilesize}`;
    }
  }
  function isValidFileType(file) {
    const typeMatchers = accept.split(",");
    for (const matcher of typeMatchers) {
      const matches = file.type.match(matcher.replace("*", ".*").replace("/", "/")) || file.name.endsWith(accept);
      if (matches) {
        return true;
      }
    }
    return false;
  }
  function isValidFileSize(file) {
    const [_, size, units] = maxfilesize.match(/(\d*)(\w*$)/);
    const factor = { "B": 1, "KB": 1024, "MB": Math.pow(1024, 2), "GB": Math.pow(1024, 3) };
    if (file.size / factor[units] > parseInt(size)) {
      return false;
    }
    return true;
  }
  function dispatch2(file) {
    _el.dispatchEvent(new CustomEvent("_selectFile", { composed: true, detail: { file } }));
  }
  function openFilePicker() {
    _fileInput.click();
  }
  function onDrop(e) {
    e.preventDefault();
    $$invalidate(6, issues = []);
    if (e.dataTransfer.items) {
      [...e.dataTransfer.items].forEach((item) => {
        if (item.kind === "file") {
          const file = item.getAsFile();
          const error2 = validate(file);
          if (error2) {
            $$invalidate(6, issues = [{ filename: file.name, error: error2 }, ...issues]);
            return;
          }
          dispatch2(item.getAsFile());
        }
      });
    } else {
      [...e.dataTransfer.files].forEach((file) => {
        const error2 = validate(file);
        if (error2) {
          $$invalidate(6, issues = [{ filename: file.name, error: error2 }, ...issues]);
          return;
        }
        dispatch2(file);
      });
    }
    $$invalidate(4, _fileInput.value = null, _fileInput);
  }
  function onDragEnter() {
    $$invalidate(5, _state = "dragenter");
  }
  function onDragLeave(e) {
    const rect = _el.getBoundingClientRect();
    const withinBounds = e.clientX > rect.x && e.clientX <= rect.x + rect.width && e.clientY > rect.y && e.clientY <= rect.y + rect.height;
    if (!withinBounds) {
      $$invalidate(5, _state = "default");
    }
  }
  function onMouseOver() {
    $$invalidate(5, _state = "hover");
  }
  function onMouseOut() {
    $$invalidate(5, _state = "default");
  }
  function input_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      _fileInput = $$value;
      $$invalidate(4, _fileInput);
    });
  }
  function div3_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      _el = $$value;
      $$invalidate(3, _el);
    });
  }
  function div_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      _el = $$value;
      $$invalidate(3, _el);
    });
  }
  function input_binding_1($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      _fileInput = $$value;
      $$invalidate(4, _fileInput);
    });
  }
  $$self.$$set = ($$props2) => {
    if ("variant" in $$props2)
      $$invalidate(0, variant = $$props2.variant);
    if ("accept" in $$props2)
      $$invalidate(1, accept = $$props2.accept);
    if ("maxfilesize" in $$props2)
      $$invalidate(2, maxfilesize = $$props2.maxfilesize);
  };
  return [variant, accept, maxfilesize, _el, _fileInput, _state, issues, openFilePicker, onDrop, onDragEnter, onDragLeave, onMouseOver, onMouseOut, input_binding, div3_binding, div_binding, input_binding_1];
}
class FileUploadInput extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `.dragdrop{border-radius:var(--goa-border-radius-m);border:var(--goa-border-width-m) dashed var(--goa-color-interactive-default);display:flex;font:var(--goa-typography-body-m);flex-direction:column;align-items:center;justify-content:center;gap:0.25rem;padding:var(--goa-space-xl);color:var(--goa-color-interactive-default);text-align:center;cursor:pointer}@media screen and (max-width: 623px){.dragdrop{padding-top:1.75rem}}.dragdrop:active,.dragdrop:focus-within{border-style:solid;outline:none}.dragdrop:hover div{color:var(--goa-color-interactive-hover)}.state-default{background:var(--goa-color-info-background)}.state-hover{background:var(--goa-color-greyscale-100);border-style:dashed}.state-dragenter{background:var(--goa-color-info-background);border-style:solid}.instructions{display:flex;align-items:center;gap:0.5rem}@media screen and (max-width: 623px){.instructions{flex-direction:column}}goa-icon{margin-top:4px;margin-right:4px}.browse-files{text-decoration:underline}em{font-style:normal;font:var(--goa-typography-body-s);color:var(--goa-color-greyscale-700)}.max-file-size{display:block;margin-top:0.5rem}input[type="file"]{position:absolute;left:-9999px}.issues{border-bottom:1px solid var(--goa-color-greyscale-200);margin:1rem 0}.issue{margin-bottom:1rem}.error{color:var(--goa-color-interactive-error);font-size:0.9em;display:flex;align-items:center;gap:0.5rem}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$8, create_fragment$8, safe_not_equal, { variant: 0, accept: 1, maxfilesize: 2 }, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["variant", "accept", "maxfilesize"];
  }
  get variant() {
    return this.$$.ctx[0];
  }
  set variant(variant) {
    this.$$set({ variant });
    flush();
  }
  get accept() {
    return this.$$.ctx[1];
  }
  set accept(accept) {
    this.$$set({ accept });
    flush();
  }
  get maxfilesize() {
    return this.$$.ctx[2];
  }
  set maxfilesize(maxfilesize) {
    this.$$set({ maxfilesize });
    flush();
  }
}
customElements.define("goa-file-upload-input", FileUploadInput);
function create_else_block$1(ctx) {
  let div;
  let t2;
  return { c() {
    div = element("div");
    t2 = text(
      /*childindex*/
      ctx[1]
    );
    attr(div, "data-testid", "child-index");
    attr(div, "class", "step-number");
  }, m(target, anchor) {
    insert(target, div, anchor);
    append(div, t2);
  }, p(ctx2, dirty) {
    if (dirty & /*childindex*/
    2)
      set_data(
        t2,
        /*childindex*/
        ctx2[1]
      );
  }, d(detaching) {
    if (detaching)
      detach(div);
  } };
}
function create_if_block_3(ctx) {
  let goa_icon;
  return { c() {
    goa_icon = element("goa-icon");
    set_custom_element_data(goa_icon, "type", "remove");
  }, m(target, anchor) {
    insert(target, goa_icon, anchor);
  }, p: noop, d(detaching) {
    if (detaching)
      detach(goa_icon);
  } };
}
function create_if_block_2(ctx) {
  let goa_icon;
  return { c() {
    goa_icon = element("goa-icon");
    set_custom_element_data(goa_icon, "type", "checkmark");
    set_custom_element_data(goa_icon, "inverted", "");
  }, m(target, anchor) {
    insert(target, goa_icon, anchor);
  }, p: noop, d(detaching) {
    if (detaching)
      detach(goa_icon);
  } };
}
function create_if_block_1(ctx) {
  let goa_icon;
  return { c() {
    goa_icon = element("goa-icon");
    set_custom_element_data(goa_icon, "type", "pencil");
  }, m(target, anchor) {
    insert(target, goa_icon, anchor);
  }, p: noop, d(detaching) {
    if (detaching)
      detach(goa_icon);
  } };
}
function create_if_block$4(ctx) {
  let div;
  return { c() {
    div = element("div");
    div.textContent = "Partially complete";
    attr(div, "class", "subtext");
    attr(div, "data-testid", "subtext");
  }, m(target, anchor) {
    insert(target, div, anchor);
  }, d(detaching) {
    if (detaching)
      detach(div);
  } };
}
function create_fragment$7(ctx) {
  let label;
  let input;
  let input_aria_disabled_value;
  let t0;
  let div0;
  let t1;
  let div2;
  let div1;
  let t2;
  let t3;
  let label_aria_disabled_value;
  let label_aria_current_value;
  let label_aria_label_value;
  function select_block_type(ctx2, dirty) {
    if (
      /*_isCurrent*/
      ctx2[7]
    )
      return create_if_block_1;
    if (
      /*status*/
      ctx2[3] === "complete"
    )
      return create_if_block_2;
    if (
      /*status*/
      ctx2[3] === "incomplete"
    )
      return create_if_block_3;
    return create_else_block$1;
  }
  let current_block_type = select_block_type(ctx);
  let if_block0 = current_block_type(ctx);
  let if_block1 = (
    /*status*/
    ctx[3] === "incomplete" && create_if_block$4()
  );
  return { c() {
    label = element("label");
    input = element("input");
    t0 = space();
    div0 = element("div");
    if_block0.c();
    t1 = space();
    div2 = element("div");
    div1 = element("div");
    t2 = text(
      /*text*/
      ctx[0]
    );
    t3 = space();
    if (if_block1)
      if_block1.c();
    this.c = noop;
    attr(
      input,
      "id",
      /*text*/
      ctx[0]
    );
    attr(input, "type", "checkbox");
    input.checked = /*_isCurrent*/
    ctx[7];
    attr(input, "aria-disabled", input_aria_disabled_value = !/*_isEnabled*/
    ctx[6]);
    attr(div0, "data-testid", "status");
    attr(div0, "class", "status");
    attr(div1, "class", "text");
    attr(div1, "data-testid", "text");
    attr(div2, "class", "details");
    attr(
      label,
      "id",
      /*arialabel*/
      ctx[2]
    );
    attr(label, "role", "listitem");
    attr(label, "tabindex", "-1");
    attr(
      label,
      "for",
      /*text*/
      ctx[0]
    );
    attr(
      label,
      "data-status",
      /*status*/
      ctx[3]
    );
    attr(label, "aria-disabled", label_aria_disabled_value = !/*_isEnabled*/
    ctx[6] ? "true" : "false");
    attr(label, "aria-current", label_aria_current_value = /*_isCurrent*/
    ctx[7] ? "step" : "false");
    attr(label, "aria-label", label_aria_label_value = `${/*arialabel*/
    ctx[2]} ${/*text*/
    ctx[0]} ${/*status*/
    ctx[3] || ""}`);
  }, m(target, anchor) {
    insert(target, label, anchor);
    append(label, input);
    ctx[10](input);
    append(label, t0);
    append(label, div0);
    if_block0.m(div0, null);
    append(label, t1);
    append(label, div2);
    append(div2, div1);
    append(div1, t2);
    append(div2, t3);
    if (if_block1)
      if_block1.m(div2, null);
    ctx[11](label);
  }, p(ctx2, [dirty]) {
    if (dirty & /*text*/
    1) {
      attr(
        input,
        "id",
        /*text*/
        ctx2[0]
      );
    }
    if (dirty & /*_isCurrent*/
    128) {
      input.checked = /*_isCurrent*/
      ctx2[7];
    }
    if (dirty & /*_isEnabled*/
    64 && input_aria_disabled_value !== (input_aria_disabled_value = !/*_isEnabled*/
    ctx2[6])) {
      attr(input, "aria-disabled", input_aria_disabled_value);
    }
    if (current_block_type === (current_block_type = select_block_type(ctx2)) && if_block0) {
      if_block0.p(ctx2, dirty);
    } else {
      if_block0.d(1);
      if_block0 = current_block_type(ctx2);
      if (if_block0) {
        if_block0.c();
        if_block0.m(div0, null);
      }
    }
    if (dirty & /*text*/
    1)
      set_data(
        t2,
        /*text*/
        ctx2[0]
      );
    if (
      /*status*/
      ctx2[3] === "incomplete"
    ) {
      if (if_block1)
        ;
      else {
        if_block1 = create_if_block$4();
        if_block1.c();
        if_block1.m(div2, null);
      }
    } else if (if_block1) {
      if_block1.d(1);
      if_block1 = null;
    }
    if (dirty & /*arialabel*/
    4) {
      attr(
        label,
        "id",
        /*arialabel*/
        ctx2[2]
      );
    }
    if (dirty & /*text*/
    1) {
      attr(
        label,
        "for",
        /*text*/
        ctx2[0]
      );
    }
    if (dirty & /*status*/
    8) {
      attr(
        label,
        "data-status",
        /*status*/
        ctx2[3]
      );
    }
    if (dirty & /*_isEnabled*/
    64 && label_aria_disabled_value !== (label_aria_disabled_value = !/*_isEnabled*/
    ctx2[6] ? "true" : "false")) {
      attr(label, "aria-disabled", label_aria_disabled_value);
    }
    if (dirty & /*_isCurrent*/
    128 && label_aria_current_value !== (label_aria_current_value = /*_isCurrent*/
    ctx2[7] ? "step" : "false")) {
      attr(label, "aria-current", label_aria_current_value);
    }
    if (dirty & /*arialabel, text, status*/
    13 && label_aria_label_value !== (label_aria_label_value = `${/*arialabel*/
    ctx2[2]} ${/*text*/
    ctx2[0]} ${/*status*/
    ctx2[3] || ""}`)) {
      attr(label, "aria-label", label_aria_label_value);
    }
  }, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(label);
    ctx[10](null);
    if_block0.d();
    if (if_block1)
      if_block1.d();
    ctx[11](null);
  } };
}
function instance$7($$self, $$props, $$invalidate) {
  let _isCurrent;
  let _isEnabled;
  const [StatusTypes, validateStatus] = typeValidator("Form Step status", ["incomplete", "complete"], true);
  let { text: text2 } = $$props;
  let { current = "false" } = $$props;
  let { enabled = "false" } = $$props;
  let { childindex = "" } = $$props;
  let { arialabel = "" } = $$props;
  let { status } = $$props;
  let _stepEl;
  let _checkbox;
  onMount(() => {
    validateStatus(status);
    _stepEl.addEventListener("click", () => {
      if (!_isEnabled)
        return;
      $$invalidate(5, _checkbox.checked = !_checkbox.checked, _checkbox);
      _stepEl.dispatchEvent(new CustomEvent("_click", { composed: true, bubbles: true, detail: +childindex }));
    });
  });
  function input_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      _checkbox = $$value;
      $$invalidate(5, _checkbox);
    });
  }
  function label_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      _stepEl = $$value;
      $$invalidate(4, _stepEl);
    });
  }
  $$self.$$set = ($$props2) => {
    if ("text" in $$props2)
      $$invalidate(0, text2 = $$props2.text);
    if ("current" in $$props2)
      $$invalidate(8, current = $$props2.current);
    if ("enabled" in $$props2)
      $$invalidate(9, enabled = $$props2.enabled);
    if ("childindex" in $$props2)
      $$invalidate(1, childindex = $$props2.childindex);
    if ("arialabel" in $$props2)
      $$invalidate(2, arialabel = $$props2.arialabel);
    if ("status" in $$props2)
      $$invalidate(3, status = $$props2.status);
  };
  $$self.$$.update = () => {
    if ($$self.$$.dirty & /*current*/
    256) {
      $$invalidate(7, _isCurrent = toBoolean(current));
    }
    if ($$self.$$.dirty & /*enabled, status*/
    520) {
      $$invalidate(6, _isEnabled = toBoolean(enabled) || status === "complete");
    }
  };
  return [text2, childindex, arialabel, status, _stepEl, _checkbox, _isEnabled, _isCurrent, current, enabled, input_binding, label_binding];
}
class FormStep extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `input[type=checkbox]{position:absolute;left:-9999px}[role="listitem"]{display:flex;box-sizing:border-box;height:100%;text-align:center;flex-direction:column;align-items:center;padding:var(--goa-space-l)}[role="listitem"]:not([aria-disabled="true"]):not([aria-current="step"]):focus-within,[role="listitem"]:not([aria-disabled="true"]):not([aria-current="step"]):focus,[role="listitem"]:not([aria-disabled="true"]):not([aria-current="step"]):active{outline:var(--goa-color-interactive-focus) solid var(--goa-border-width-l)}[role="listitem"]:not([aria-disabled="true"]):not([aria-current="step"]):hover{background-color:rgba(0,0,0,0.05);cursor:pointer}.status{flex:0 0 auto;display:flex;align-items:center;justify-content:center;box-sizing:border-box;border-radius:999px;border:4px solid var(--goa-color-interactive-default);background:var(--goa-color-greyscale-white);height:2.5rem;width:2.5rem}.status>*{fill:var(--fill-color, var(--goa-color-interactive-default));color:var(--fill-color, var(--goa-color-interactive-default))}[aria-current="step"] .text{font-weight:var(--goa-font-weight-bold)
  }[data-status=complete] .status{background:var(--goa-color-interactive-default)}[aria-current="step"][data-status=complete] .status{background:var(--goa-color-greyscale-white)}.step-number{margin-bottom:var(--font-valign-fix);font-weight:var(--goa-font-weight-bold);color:var(--goa-color-text-secondary)}[role="listitem"]:not(
    [data-status=complete],
    [data-status=incomplete],
    [aria-current="step"]
  ) .status{border-color:var(--goa-color-greyscale-500)}.text{font:var(--goa-typography-body-s)}.subtext{margin-top:0.25rem;font:var(--goa-typography-body-xs);color:var(--goa-color-text-secondary)}.details{margin-top:0.75rem}@media screen and (max-width: 623px){[role="listitem"]{flex-direction:row;align-items:center;text-align:start}.details{margin-left:1rem;margin-top:0}}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$7, create_fragment$7, safe_not_equal, { text: 0, current: 8, enabled: 9, childindex: 1, arialabel: 2, status: 3 }, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["text", "current", "enabled", "childindex", "arialabel", "status"];
  }
  get text() {
    return this.$$.ctx[0];
  }
  set text(text2) {
    this.$$set({ text: text2 });
    flush();
  }
  get current() {
    return this.$$.ctx[8];
  }
  set current(current) {
    this.$$set({ current });
    flush();
  }
  get enabled() {
    return this.$$.ctx[9];
  }
  set enabled(enabled) {
    this.$$set({ enabled });
    flush();
  }
  get childindex() {
    return this.$$.ctx[1];
  }
  set childindex(childindex) {
    this.$$set({ childindex });
    flush();
  }
  get arialabel() {
    return this.$$.ctx[2];
  }
  set arialabel(arialabel) {
    this.$$set({ arialabel });
    flush();
  }
  get status() {
    return this.$$.ctx[3];
  }
  set status(status) {
    this.$$set({ status });
    flush();
  }
}
customElements.define("goa-form-step", FormStep);
function create_if_block$3(ctx) {
  let progress0;
  let t2;
  let progress1;
  return { c() {
    progress0 = element("progress");
    t2 = space();
    progress1 = element("progress");
    attr(progress0, "class", "horizontal");
    progress0.value = /*_progress*/
    ctx[11];
    attr(progress0, "max", "100");
    attr(progress1, "class", "vertical");
    progress1.value = /*_progress*/
    ctx[11];
    attr(progress1, "max", "100");
  }, m(target, anchor) {
    insert(target, progress0, anchor);
    insert(target, t2, anchor);
    insert(target, progress1, anchor);
  }, p(ctx2, dirty) {
    if (dirty & /*_progress*/
    2048) {
      progress0.value = /*_progress*/
      ctx2[11];
    }
    if (dirty & /*_progress*/
    2048) {
      progress1.value = /*_progress*/
      ctx2[11];
    }
  }, d(detaching) {
    if (detaching)
      detach(progress0);
    if (detaching)
      detach(t2);
    if (detaching)
      detach(progress1);
  } };
}
function create_fragment$6(ctx) {
  let section;
  let div1;
  let t2;
  let div0;
  let div1_style_value;
  let if_block = (
    /*_steps*/
    ctx[4].length > 0 && /*_showProgressBars*/
    ctx[10] && create_if_block$3(ctx)
  );
  return { c() {
    section = element("section");
    div1 = element("div");
    if (if_block)
      if_block.c();
    t2 = space();
    div0 = element("div");
    div0.innerHTML = `<goa-grid minchildwidth="1px"><slot></slot></goa-grid>`;
    this.c = noop;
    attr(div0, "class", "slots");
    attr(div1, "class", "form-stepper");
    attr(div1, "style", div1_style_value = `
      ${calculateMargin(
      /*mt*/
      ctx[0],
      /*mr*/
      ctx[1],
      /*mb*/
      ctx[2],
      /*ml*/
      ctx[3]
    )};
      --progress: ${/*_progress*/
    ctx[11]}%;
      --step-width: ${/*_stepWidth*/
    ctx[7]}px;
      --step-height: ${/*_stepHeight*/
    ctx[8]}px;
      --height: ${/*_progressHeight*/
    ctx[9]}px;
    `);
    attr(section, "role", "list");
  }, m(target, anchor) {
    insert(target, section, anchor);
    append(section, div1);
    if (if_block)
      if_block.m(div1, null);
    append(div1, t2);
    append(div1, div0);
    ctx[15](div0);
    ctx[16](div1);
  }, p(ctx2, [dirty]) {
    if (
      /*_steps*/
      ctx2[4].length > 0 && /*_showProgressBars*/
      ctx2[10]
    ) {
      if (if_block) {
        if_block.p(ctx2, dirty);
      } else {
        if_block = create_if_block$3(ctx2);
        if_block.c();
        if_block.m(div1, t2);
      }
    } else if (if_block) {
      if_block.d(1);
      if_block = null;
    }
    if (dirty & /*mt, mr, mb, ml, _progress, _stepWidth, _stepHeight, _progressHeight*/
    2959 && div1_style_value !== (div1_style_value = `
      ${calculateMargin(
      /*mt*/
      ctx2[0],
      /*mr*/
      ctx2[1],
      /*mb*/
      ctx2[2],
      /*ml*/
      ctx2[3]
    )};
      --progress: ${/*_progress*/
    ctx2[11]}%;
      --step-width: ${/*_stepWidth*/
    ctx2[7]}px;
      --step-height: ${/*_stepHeight*/
    ctx2[8]}px;
      --height: ${/*_progressHeight*/
    ctx2[9]}px;
    `)) {
      attr(div1, "style", div1_style_value);
    }
  }, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(section);
    if (if_block)
      if_block.d();
    ctx[15](null);
    ctx[16](null);
  } };
}
function instance$6($$self, $$props, $$invalidate) {
  let _progress;
  let { step = -1 } = $$props;
  let { mt = null } = $$props;
  let { mr = null } = $$props;
  let { mb: mb2 = null } = $$props;
  let { ml: ml2 = null } = $$props;
  let _rootEl;
  let _gridEl;
  let _steps = [];
  let _stepWidth;
  let _stepHeight;
  let _progressHeight;
  let _maxAllowedStep = 1;
  let _maxProgressStep = 1;
  let _showProgressBars = false;
  onMount(async () => {
    await tick();
    const slot = _rootEl.querySelector("slot");
    if (slot) {
      $$invalidate(4, _steps = slot.assignedElements());
    } else {
      $$invalidate(4, _steps = [..._rootEl.querySelector("goa-grid").children]);
    }
    _steps.forEach((_step, index2) => {
      const s2 = _step;
      s2.setAttribute("arialabel", `Step ${index2 + 1} of ${_steps.length}`);
      s2.setAttribute("childindex", `${index2 + 1}`);
    });
    _rootEl.addEventListener("_click", (e) => {
      $$invalidate(12, step = e.detail);
      dispatch2(step);
    });
    setCurrentStepStatus(step);
    calcStepDims();
    setTimeout(() => {
      $$invalidate(10, _showProgressBars = true);
    }, 10);
    window.addEventListener("resize", calcStepDims);
    window.addEventListener("orientationchange", calcStepDims);
    return () => {
      window.removeEventListener("resize", calcStepDims);
      window.removeEventListener("orientationchange", calcStepDims);
    };
  });
  function dispatch2(step2) {
    _rootEl.dispatchEvent(new CustomEvent("_change", { composed: true, bubbles: true, detail: { step: step2 } }));
  }
  function setCurrentStepStatus(step2) {
    _steps.forEach((stepEl, index2) => {
      stepEl.setAttribute("current", index2 === step2 - 1 ? "true" : "false");
    });
  }
  function calcStepDims() {
    setTimeout(() => {
      $$invalidate(7, _stepWidth = _steps.length > 0 && _steps[0].offsetWidth);
      $$invalidate(8, _stepHeight = _steps.length > 0 && _steps[0].offsetHeight);
      $$invalidate(9, _progressHeight = _gridEl === null || _gridEl === void 0 ? void 0 : _gridEl.offsetHeight);
    }, 1);
  }
  function div0_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      _gridEl = $$value;
      $$invalidate(6, _gridEl);
    });
  }
  function div1_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      _rootEl = $$value;
      $$invalidate(5, _rootEl);
    });
  }
  $$self.$$set = ($$props2) => {
    if ("step" in $$props2)
      $$invalidate(12, step = $$props2.step);
    if ("mt" in $$props2)
      $$invalidate(0, mt = $$props2.mt);
    if ("mr" in $$props2)
      $$invalidate(1, mr = $$props2.mr);
    if ("mb" in $$props2)
      $$invalidate(2, mb2 = $$props2.mb);
    if ("ml" in $$props2)
      $$invalidate(3, ml2 = $$props2.ml);
  };
  $$self.$$.update = () => {
    if ($$self.$$.dirty & /*_steps, step, _maxProgressStep, _maxAllowedStep*/
    28688) {
      {
        if (_steps.length) {
          if (step <= 0) {
            $$invalidate(12, step = 1);
            setTimeout(() => {
              dispatch2(step);
            }, 1);
            $$invalidate(13, _maxAllowedStep = _steps.length);
          }
          if (step > _maxProgressStep)
            $$invalidate(14, _maxProgressStep = step);
          if (step > _maxAllowedStep)
            $$invalidate(13, _maxAllowedStep = step);
          _steps.forEach((stepEl, index2) => {
            stepEl.setAttribute("enabled", index2 > _maxAllowedStep - 1 ? "false" : "true");
          });
        }
      }
    }
    if ($$self.$$.dirty & /*_maxProgressStep, _steps*/
    16400) {
      $$invalidate(11, _progress = (_maxProgressStep - 1) / (_steps.length - 1) * 100);
    }
    if ($$self.$$.dirty & /*step*/
    4096) {
      setCurrentStepStatus(step);
    }
  };
  return [mt, mr, mb2, ml2, _steps, _rootEl, _gridEl, _stepWidth, _stepHeight, _progressHeight, _showProgressBars, _progress, step, _maxAllowedStep, _maxProgressStep, div0_binding, div1_binding];
}
class FormStepper extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `.form-stepper{position:relative}.slots{position:relative;inset:0;z-index:2}progress{position:absolute;z-index:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;height:4px;border:none;background:var(--goa-color-greyscale-200);pointer-events:none}progress.horizontal{display:block;top:calc(1.5rem + (2.5rem / 2) - 2px);left:calc(var(--step-width) / 2);width:calc(100% - var(--step-width))}progress.vertical{display:none;width:calc(var(--height) - var(--step-height));transform:rotate(90deg)
      translate(
        calc(50% + 1.25rem + 1.75rem),
        calc((var(--height) - var(--step-height)) / 2 - 1.25rem - 1.5rem)
      )}progress::-webkit-progress-value{background:var(--goa-color-interactive-default)}progress::-webkit-progress-bar{background:var(--goa-color-greyscale-200)}progress::-moz-progress-bar{background:var(--goa-color-interactive-default)}@media screen and (max-width: 623px){progress.horizontal{display:none}progress.vertical{display:inline-block}.form-stepper{display:inline-block}}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$6, create_fragment$6, safe_not_equal, { step: 12, mt: 0, mr: 1, mb: 2, ml: 3 }, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["step", "mt", "mr", "mb", "ml"];
  }
  get step() {
    return this.$$.ctx[12];
  }
  set step(step) {
    this.$$set({ step });
    flush();
  }
  get mt() {
    return this.$$.ctx[0];
  }
  set mt(mt) {
    this.$$set({ mt });
    flush();
  }
  get mr() {
    return this.$$.ctx[1];
  }
  set mr(mr) {
    this.$$set({ mr });
    flush();
  }
  get mb() {
    return this.$$.ctx[2];
  }
  set mb(mb2) {
    this.$$set({ mb: mb2 });
    flush();
  }
  get ml() {
    return this.$$.ctx[3];
  }
  set ml(ml2) {
    this.$$set({ ml: ml2 });
    flush();
  }
}
customElements.define("goa-form-stepper", FormStepper);
function create_fragment$5(ctx) {
  let div;
  let slot;
  let div_style_value;
  return { c() {
    div = element("div");
    slot = element("slot");
    this.c = noop;
    attr(div, "style", div_style_value = calculateMargin(
      /*mt*/
      ctx[0],
      /*mr*/
      ctx[1],
      /*mb*/
      ctx[2],
      /*ml*/
      ctx[3]
    ));
    attr(div, "class", "pages");
  }, m(target, anchor) {
    insert(target, div, anchor);
    append(div, slot);
    ctx[6](div);
  }, p(ctx2, [dirty]) {
    if (dirty & /*mt, mr, mb, ml*/
    15 && div_style_value !== (div_style_value = calculateMargin(
      /*mt*/
      ctx2[0],
      /*mr*/
      ctx2[1],
      /*mb*/
      ctx2[2],
      /*ml*/
      ctx2[3]
    ))) {
      attr(div, "style", div_style_value);
    }
  }, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(div);
    ctx[6](null);
  } };
}
function instance$5($$self, $$props, $$invalidate) {
  let { current = 1 } = $$props;
  let { mt = null } = $$props;
  let { mr = null } = $$props;
  let { mb: mb2 = null } = $$props;
  let { ml: ml2 = null } = $$props;
  let _rootEl;
  onMount(async () => {
    await tick();
    setCurrentPage(current);
  });
  function setCurrentPage(current2) {
    if (!_rootEl)
      return;
    const children2 = getChildren();
    children2.forEach((child, index2) => {
      const _child = child;
      _child.style.display = index2 + 1 === +current2 ? "block" : "none";
    });
  }
  function getChildren() {
    const slot = _rootEl.querySelector("slot");
    if (slot) {
      return [...slot.assignedElements()];
    } else {
      return [..._rootEl.children];
    }
  }
  function div_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      _rootEl = $$value;
      $$invalidate(4, _rootEl);
    });
  }
  $$self.$$set = ($$props2) => {
    if ("current" in $$props2)
      $$invalidate(5, current = $$props2.current);
    if ("mt" in $$props2)
      $$invalidate(0, mt = $$props2.mt);
    if ("mr" in $$props2)
      $$invalidate(1, mr = $$props2.mr);
    if ("mb" in $$props2)
      $$invalidate(2, mb2 = $$props2.mb);
    if ("ml" in $$props2)
      $$invalidate(3, ml2 = $$props2.ml);
  };
  $$self.$$.update = () => {
    if ($$self.$$.dirty & /*current*/
    32) {
      setCurrentPage(current);
    }
  };
  return [mt, mr, mb2, ml2, _rootEl, current, div_binding];
}
class Pages extends SvelteElement {
  constructor(options) {
    super();
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$5, create_fragment$5, safe_not_equal, { current: 5, mt: 0, mr: 1, mb: 2, ml: 3 }, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["current", "mt", "mr", "mb", "ml"];
  }
  get current() {
    return this.$$.ctx[5];
  }
  set current(current) {
    this.$$set({ current });
    flush();
  }
  get mt() {
    return this.$$.ctx[0];
  }
  set mt(mt) {
    this.$$set({ mt });
    flush();
  }
  get mr() {
    return this.$$.ctx[1];
  }
  set mr(mr) {
    this.$$set({ mr });
    flush();
  }
  get mb() {
    return this.$$.ctx[2];
  }
  set mb(mb2) {
    this.$$set({ mb: mb2 });
    flush();
  }
  get ml() {
    return this.$$.ctx[3];
  }
  set ml(ml2) {
    this.$$set({ ml: ml2 });
    flush();
  }
}
customElements.define("goa-pages", Pages);
function isUrlMatch(windowUrl, testUrl) {
  if (testUrl === void 0)
    return -1;
  const windowUrlParts = windowUrl.pathname.replace(/^\//, "").split("/");
  const urlParts = testUrl.replace(/^\//, "").split("/");
  if (windowUrlParts.length < urlParts.length) {
    return -1;
  }
  if (windowUrl.hash.length > 0 && windowUrl.hash === testUrl) {
    return 1;
  }
  if (urlParts.length === 1 && urlParts[0] === "") {
    return 0;
  }
  let weight = -1;
  let index2 = 0;
  for (const part of windowUrlParts) {
    if (urlParts[index2] !== part) {
      break;
    }
    weight += 1;
    index2++;
  }
  return weight >= 0 ? weight + 1 : weight;
}
function create_fragment$4(ctx) {
  let div;
  return { c() {
    div = element("div");
    div.innerHTML = `<slot></slot>`;
    this.c = noop;
    attr(div, "class", "side-menu");
  }, m(target, anchor) {
    insert(target, div, anchor);
    ctx[1](div);
  }, p: noop, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(div);
    ctx[1](null);
  } };
}
function instance$4($$self, $$props, $$invalidate) {
  let _rootEl;
  onMount(async () => {
    await tick();
    setCurrentUrl();
    addEventListeners();
  });
  function setCurrentUrl() {
    const slot = _rootEl.querySelector("slot");
    if (!slot) {
      return false;
    }
    const links = slot.assignedElements().filter((el2) => el2.tagName === "A");
    let currentEl;
    let maxWeight = 0;
    links.forEach((child) => {
      const weight = isUrlMatch(document.location, child.getAttribute("href"));
      if (weight > maxWeight) {
        maxWeight = weight;
        currentEl = child;
      }
      child.classList.remove("current");
    });
    if (currentEl) {
      currentEl.classList.add("current");
    }
  }
  function addEventListeners() {
    let currentLocation = document.location.href;
    const observer = new MutationObserver((_mutationList) => {
      if (isUrlMatch(document.location, currentLocation)) {
        currentLocation = document.location.href;
        setCurrentUrl();
      }
    });
    observer.observe(document.body, { childList: true, subtree: true });
    window.addEventListener("popstate", () => {
      setCurrentUrl();
    });
  }
  function div_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      _rootEl = $$value;
      $$invalidate(0, _rootEl);
    });
  }
  return [_rootEl, div_binding];
}
class SideMenu extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `::slotted(a),::slotted(a:visited){color:var(--goa-color-text-default) !important;display:block;font:var(--goa-typography-body-m);padding:0.5rem 1rem 0.5rem 2rem;text-decoration:none}::slotted(a.current){font:var(--goa-typography-heading-s);background:#CEDFEE}::slotted(a:hover:not(.current)){background:#CEDFEE}::slotted(a:focus-visible){outline:var(--goa-border-width-l) solid var(--goa-color-interactive-focus)}.side-menu{display:block}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$4, create_fragment$4, safe_not_equal, {}, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
    }
  }
}
customElements.define("goa-side-menu", SideMenu);
function create_else_block(ctx) {
  let goa_icon;
  return { c() {
    goa_icon = element("goa-icon");
    set_custom_element_data(goa_icon, "type", "chevron-forward");
  }, m(target, anchor) {
    insert(target, goa_icon, anchor);
  }, d(detaching) {
    if (detaching)
      detach(goa_icon);
  } };
}
function create_if_block$2(ctx) {
  let goa_icon;
  return { c() {
    goa_icon = element("goa-icon");
    set_custom_element_data(goa_icon, "type", "chevron-down");
  }, m(target, anchor) {
    insert(target, goa_icon, anchor);
  }, d(detaching) {
    if (detaching)
      detach(goa_icon);
  } };
}
function create_fragment$3(ctx) {
  let div1;
  let a;
  let t0;
  let t1;
  let a_href_value;
  let t2;
  let div0;
  let mounted;
  let dispose;
  function select_block_type(ctx2, dirty) {
    if (
      /*_open*/
      ctx2[1]
    )
      return create_if_block$2;
    return create_else_block;
  }
  let current_block_type = select_block_type(ctx);
  let if_block = current_block_type(ctx);
  return { c() {
    div1 = element("div");
    a = element("a");
    t0 = text(
      /*heading*/
      ctx[0]
    );
    t1 = space();
    if_block.c();
    t2 = space();
    div0 = element("div");
    div0.innerHTML = `<slot></slot>`;
    this.c = noop;
    attr(a, "href", a_href_value = `#${/*_slug*/
    ctx[4]}`);
    attr(a, "class", "heading");
    attr(div0, "class", "group");
    attr(div0, "data-testid", "group");
    toggle_class(div0, "hidden", !/*_open*/
    ctx[1]);
    attr(div1, "class", "side-menu-group");
    toggle_class(
      div1,
      "current",
      /*_current*/
      ctx[2]
    );
  }, m(target, anchor) {
    insert(target, div1, anchor);
    append(div1, a);
    append(a, t0);
    append(a, t1);
    if_block.m(a, null);
    append(div1, t2);
    append(div1, div0);
    ctx[6](div1);
    if (!mounted) {
      dispose = listen(
        a,
        "click",
        /*handleClick*/
        ctx[5]
      );
      mounted = true;
    }
  }, p(ctx2, [dirty]) {
    if (dirty & /*heading*/
    1)
      set_data(
        t0,
        /*heading*/
        ctx2[0]
      );
    if (current_block_type !== (current_block_type = select_block_type(ctx2))) {
      if_block.d(1);
      if_block = current_block_type(ctx2);
      if (if_block) {
        if_block.c();
        if_block.m(a, null);
      }
    }
    if (dirty & /*_slug*/
    16 && a_href_value !== (a_href_value = `#${/*_slug*/
    ctx2[4]}`)) {
      attr(a, "href", a_href_value);
    }
    if (dirty & /*_open*/
    2) {
      toggle_class(div0, "hidden", !/*_open*/
      ctx2[1]);
    }
    if (dirty & /*_current*/
    4) {
      toggle_class(
        div1,
        "current",
        /*_current*/
        ctx2[2]
      );
    }
  }, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(div1);
    if_block.d();
    ctx[6](null);
    mounted = false;
    dispose();
  } };
}
function toSlug(path) {
  return path === null || path === void 0 ? void 0 : path.toLowerCase().replace(/ /g, "-");
}
function instance$3($$self, $$props, $$invalidate) {
  let _slug;
  let { heading } = $$props;
  let _open = false;
  let _current = false;
  let _rootEl;
  onMount(async () => {
    await tick();
    checkUrlMatches();
    setCurrent();
    addEventListeners();
  });
  function checkUrlMatches() {
    $$invalidate(1, _open = matchesMenu() || matchesChild(_rootEl));
    if (_open) {
      notifyParent(true);
    }
  }
  function addEventListeners() {
    _rootEl.addEventListener("_open", () => {
      $$invalidate(1, _open = true);
      $$invalidate(2, _current = true);
    });
    let currentLocation = document.location.href;
    const observer = new MutationObserver((_mutationList) => {
      if (currentLocation !== document.location.href) {
        currentLocation = document.location.href;
        setCurrent();
      }
    });
    observer.observe(document.body, { childList: true, subtree: true });
    window.addEventListener("popstate", () => {
      setCurrent();
    });
  }
  function matchesMenu() {
    return isUrlMatch(document.location, _slug) >= 0;
  }
  function matchesChild(el2) {
    if (isUrlMatch(document.location, toSlug(el2.heading)) >= 0) {
      return true;
    }
    const slot = el2.querySelector("slot");
    if (!slot) {
      return false;
    }
    const children2 = slot.assignedElements();
    return !!children2.find((child) => {
      return isUrlMatch(document.location, child.getAttribute("href")) >= 0;
    });
  }
  function setCurrent() {
    const slot = _rootEl.querySelector("slot");
    if (!slot) {
      return false;
    }
    const children2 = slot.assignedElements();
    let maxMatchWeight = -1;
    let matchedChild = null;
    $$invalidate(2, _current = false);
    children2.forEach((child) => {
      const url = child.getAttribute("href");
      const weight = isUrlMatch(document.location, url);
      if (weight > maxMatchWeight) {
        maxMatchWeight = weight;
        matchedChild = child;
      }
      child.classList.remove("current");
      if (child.tagName === "GOA-SIDE-MENU-GROUP") {
        child.setAttribute("child", "true");
      }
    });
    if (matchedChild) {
      $$invalidate(2, _current = true);
      matchedChild.classList.add("current");
      notifyParent(true);
    }
  }
  function handleClick2(e) {
    $$invalidate(1, _open = !_open);
    e.preventDefault();
  }
  function notifyParent(current) {
    _rootEl.dispatchEvent(new CustomEvent("_open", { bubbles: true, composed: true, detail: { current } }));
  }
  function div1_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      _rootEl = $$value;
      $$invalidate(3, _rootEl);
    });
  }
  $$self.$$set = ($$props2) => {
    if ("heading" in $$props2)
      $$invalidate(0, heading = $$props2.heading);
  };
  $$self.$$.update = () => {
    if ($$self.$$.dirty & /*heading*/
    1) {
      $$invalidate(4, _slug = toSlug(heading));
    }
  };
  return [heading, _open, _current, _rootEl, _slug, handleClick2, div1_binding];
}
class SideMenuGroup extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `::slotted(a),::slotted(goa-side-menu-heading),::slotted(a:visited){color:var(--goa-color-text-default) !important;display:block;font:var(--goa-typography-body-m);margin-left:1rem}::slotted(a),::slotted(a:visited){padding:0.5rem 1rem;text-decoration:none;border-left:4px solid var(--goa-color-greyscale-100)}::slotted(a.current){font:var(--goa-typography-heading-s);border-left:4px solid var(--goa-color-interactive-disabled);background:var(--goa-color-info-background)}::slotted(a:hover:not(.current)){background:var(--goa-color-info-background);border-color:var(--goa-color-greyscale-200)}::slotted(a:focus-visible),.heading:focus-visible{outline:var(--goa-border-width-l) solid var(--goa-color-interactive-focus)}:host([child=true]) a.heading,.heading{color:var(--goa-color-text-default);display:flex;align-items:center;justify-content:space-between;line-height:2rem;padding:0.5rem 1rem 0.5rem 2rem;text-decoration:none}:host([child=true]) a.heading{margin-left:1rem;border-left:4px solid var(--goa-color-greyscale-100);padding:0.5rem 1rem 0.5rem 1rem}:host([child=true]) a.heading:hover{border-color:var(--goa-color-greyscale-200);background:var(--goa-color-info-background)}:host([child=true]) .side-menu-group.current a.heading{background:var(--goa-color-info-background);border-left:4px solid var(--goa-color-interactive-disabled)}.side-menu-group.current .heading{background:#CEDFEE}.heading:hover{background:#CEDFEE}.hidden{display:none}.group{padding-left:1rem}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$3, create_fragment$3, safe_not_equal, { heading: 0 }, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["heading"];
  }
  get heading() {
    return this.$$.ctx[0];
  }
  set heading(heading) {
    this.$$set({ heading });
    flush();
  }
}
customElements.define("goa-side-menu-group", SideMenuGroup);
function create_if_block$1(ctx) {
  let goa_icon;
  return { c() {
    goa_icon = element("goa-icon");
    set_custom_element_data(goa_icon, "id", "heading-icon");
    set_custom_element_data(
      goa_icon,
      "type",
      /*icon*/
      ctx[0]
    );
    set_custom_element_data(goa_icon, "theme", "filled");
  }, m(target, anchor) {
    insert(target, goa_icon, anchor);
  }, p(ctx2, dirty) {
    if (dirty & /*icon*/
    1) {
      set_custom_element_data(
        goa_icon,
        "type",
        /*icon*/
        ctx2[0]
      );
    }
  }, d(detaching) {
    if (detaching)
      detach(goa_icon);
  } };
}
function create_fragment$2(ctx) {
  let h2;
  let t0;
  let slot0;
  let t1;
  let slot1;
  let if_block = (
    /*icon*/
    ctx[0] && create_if_block$1(ctx)
  );
  return { c() {
    h2 = element("h2");
    if (if_block)
      if_block.c();
    t0 = space();
    slot0 = element("slot");
    t1 = space();
    slot1 = element("slot");
    this.c = noop;
    attr(slot1, "name", "meta");
    attr(h2, "data-testid", "section-heading");
    toggle_class(
      h2,
      "icon",
      /*icon*/
      ctx[0]
    );
  }, m(target, anchor) {
    insert(target, h2, anchor);
    if (if_block)
      if_block.m(h2, null);
    append(h2, t0);
    append(h2, slot0);
    append(h2, t1);
    append(h2, slot1);
  }, p(ctx2, [dirty]) {
    if (
      /*icon*/
      ctx2[0]
    ) {
      if (if_block) {
        if_block.p(ctx2, dirty);
      } else {
        if_block = create_if_block$1(ctx2);
        if_block.c();
        if_block.m(h2, t0);
      }
    } else if (if_block) {
      if_block.d(1);
      if_block = null;
    }
    if (dirty & /*icon*/
    1) {
      toggle_class(
        h2,
        "icon",
        /*icon*/
        ctx2[0]
      );
    }
  }, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(h2);
    if (if_block)
      if_block.d();
  } };
}
function instance$2($$self, $$props, $$invalidate) {
  let { icon = null } = $$props;
  $$self.$$set = ($$props2) => {
    if ("icon" in $$props2)
      $$invalidate(0, icon = $$props2.icon);
  };
  return [icon];
}
class SideMenuHeading extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `h2{border-top:var(--goa-border-width-m) solid var(--goa-color-greyscale-200, #DCDCDC);background:var(--goa-color-greyscale-100, #F1F1F1);padding:0.75rem 0.75rem 0.5rem 1.5rem;margin:0;color:var(--goa-color-text-secondary, #666);font:var(--goa-typography-heading-s);display:flex;align-items:flex-start;gap:0.5rem}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$2, create_fragment$2, safe_not_equal, { icon: 0 }, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["icon"];
  }
  get icon() {
    return this.$$.ctx[0];
  }
  set icon(icon) {
    this.$$set({ icon });
    flush();
  }
}
customElements.define("goa-side-menu-heading", SideMenuHeading);
function create_if_block(ctx) {
  let div;
  return { c() {
    div = element("div");
    div.innerHTML = `<slot></slot>`;
    attr(div, "role", "tabpanel");
  }, m(target, anchor) {
    insert(target, div, anchor);
  }, d(detaching) {
    if (detaching)
      detach(div);
  } };
}
function create_fragment$1(ctx) {
  let slot;
  let t0;
  let t1;
  let if_block_anchor;
  let if_block = (
    /*_isOpen*/
    ctx[1] && create_if_block()
  );
  return { c() {
    slot = element("slot");
    t0 = text(
      /*heading*/
      ctx[0]
    );
    t1 = space();
    if (if_block)
      if_block.c();
    if_block_anchor = empty();
    this.c = noop;
    set_style(slot, "display", "none");
    attr(slot, "name", "heading");
  }, m(target, anchor) {
    insert(target, slot, anchor);
    append(slot, t0);
    insert(target, t1, anchor);
    if (if_block)
      if_block.m(target, anchor);
    insert(target, if_block_anchor, anchor);
  }, p(ctx2, [dirty]) {
    if (dirty & /*heading*/
    1)
      set_data(
        t0,
        /*heading*/
        ctx2[0]
      );
    if (
      /*_isOpen*/
      ctx2[1]
    ) {
      if (if_block)
        ;
      else {
        if_block = create_if_block();
        if_block.c();
        if_block.m(if_block_anchor.parentNode, if_block_anchor);
      }
    } else if (if_block) {
      if_block.d(1);
      if_block = null;
    }
  }, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(slot);
    if (detaching)
      detach(t1);
    if (if_block)
      if_block.d(detaching);
    if (detaching)
      detach(if_block_anchor);
  } };
}
function instance$1($$self, $$props, $$invalidate) {
  let { heading = "" } = $$props;
  let { open = "false" } = $$props;
  let _isOpen;
  $$self.$$set = ($$props2) => {
    if ("heading" in $$props2)
      $$invalidate(0, heading = $$props2.heading);
    if ("open" in $$props2)
      $$invalidate(2, open = $$props2.open);
  };
  $$self.$$.update = () => {
    if ($$self.$$.dirty & /*open*/
    4) {
      $$invalidate(1, _isOpen = toBoolean(open));
    }
  };
  return [heading, _isOpen, open];
}
class Tab extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `[role=tabpanel]{padding-top:2rem}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance$1, create_fragment$1, safe_not_equal, { heading: 0, open: 2 }, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["heading", "open"];
  }
  get heading() {
    return this.$$.ctx[0];
  }
  set heading(heading) {
    this.$$set({ heading });
    flush();
  }
  get open() {
    return this.$$.ctx[2];
  }
  set open(open) {
    this.$$set({ open });
    flush();
  }
}
customElements.define("goa-tab", Tab);
function create_fragment(ctx) {
  let div2;
  let div0;
  let t0;
  let div1;
  let t1;
  let button0;
  let t2;
  let button1;
  return { c() {
    div2 = element("div");
    div0 = element("div");
    t0 = space();
    div1 = element("div");
    div1.innerHTML = `<slot></slot>`;
    t1 = space();
    button0 = element("button");
    button0.innerHTML = `<div class="tab"></div>`;
    t2 = space();
    button1 = element("button");
    this.c = noop;
    attr(div0, "class", "tabs");
    attr(div1, "class", "tabpanel");
    attr(div1, "tabindex", "0");
    attr(div1, "role", "tabpanel");
    attr(div2, "role", "tablist");
    attr(button0, "role", "tab");
    attr(button0, "aria-selected", "false");
    set_style(button0, "display", "none");
    attr(button1, "role", "tab");
    attr(button1, "aria-selected", "true");
    set_style(button1, "display", "none");
  }, m(target, anchor) {
    insert(target, div2, anchor);
    append(div2, div0);
    ctx[4](div0);
    append(div2, t0);
    append(div2, div1);
    ctx[5](div1);
    ctx[6](div2);
    insert(target, t1, anchor);
    insert(target, button0, anchor);
    insert(target, t2, anchor);
    insert(target, button1, anchor);
  }, p: noop, i: noop, o: noop, d(detaching) {
    if (detaching)
      detach(div2);
    ctx[4](null);
    ctx[5](null);
    ctx[6](null);
    if (detaching)
      detach(t1);
    if (detaching)
      detach(button0);
    if (detaching)
      detach(t2);
    if (detaching)
      detach(button1);
  } };
}
function instance($$self, $$props, $$invalidate) {
  let { initialtab = 1 } = $$props;
  let _rootEl;
  let _tabItems = [];
  let _tabs;
  let _panelEl;
  let _currentTab = 1;
  onMount(async () => {
    await tick();
    addKeyboardEventListeners();
    const slot = _rootEl.querySelector("slot");
    if (slot) {
      _tabItems = slot.assignedElements();
    } else {
      _tabItems = [..._rootEl.querySelectorAll("goa-tab")];
    }
    _tabItems.map((el2, index2) => {
      let tab = [...el2.children].find((child) => child.getAttribute("slot") === "heading");
      if (!tab && el2.getAttribute("heading")) {
        tab = document.createElement("div");
        tab.textContent = el2.getAttribute("heading");
      }
      const button = document.createElement("button");
      tab.classList.add("tab");
      button.appendChild(tab);
      button.setAttribute("id", `tab-${index2 + 1}`);
      button.setAttribute("role", "tab");
      button.addEventListener("click", () => setCurrentTab(index2 + 1));
      button.setAttribute("aria-controls", `tabpanel-${index2 + 1}`);
      _tabs.appendChild(button);
    });
    setCurrentTab(initialtab);
  });
  onDestroy(() => {
    removeKeyboardEventListeners();
  });
  function addKeyboardEventListeners() {
    _rootEl.addEventListener("focus", handleKeydownEvents, true);
  }
  function removeKeyboardEventListeners() {
    _rootEl.removeEventListener("focus", handleKeydownEvents, true);
  }
  function setCurrentTab(tab) {
    if (tab > _tabItems.length) {
      tab = _tabItems.length;
    }
    if (tab < 1) {
      tab = 1;
    }
    _currentTab = +tab;
    [..._tabs.querySelectorAll("[role=tab]")].map((el2, index2) => {
      _tabItems[index2].setAttribute("open", "false");
      el2.setAttribute("aria-selected", index2 + 1 === _currentTab ? "true" : "false");
      el2.setAttribute("tabindex", index2 + 1 === _currentTab ? "0" : "-1");
      if (index2 + 1 === _currentTab) {
        el2.focus();
        el2.removeAttribute("tabindex");
        _tabItems[index2].setAttribute("open", "true");
      }
    });
    _panelEl.setAttribute("aria-labelledby", `tab-${_currentTab}`);
    _panelEl.setAttribute("id", `tabpanel-${_currentTab}`);
  }
  function handleKeydownEvents() {
    _rootEl.addEventListener("keydown", onKeyDown);
  }
  function onKeyDown(e) {
    let isHandled = false;
    switch (e.key) {
      case "ArrowUp":
      case "ArrowLeft":
        if (_currentTab === 1) {
          setCurrentTab(_tabItems.length);
        } else {
          setCurrentTab(_currentTab - 1);
        }
        isHandled = true;
        break;
      case "ArrowDown":
      case "ArrowRight":
        if (_currentTab === _tabItems.length) {
          setCurrentTab(1);
        } else {
          setCurrentTab(_currentTab + 1);
        }
        isHandled = true;
        break;
      case "Home":
        setCurrentTab(1);
        isHandled = true;
        break;
      case "End":
        setCurrentTab(_tabItems.length);
        isHandled = true;
        break;
    }
    if (isHandled) {
      e.stopPropagation();
      e.preventDefault();
    }
  }
  function div0_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      _tabs = $$value;
      $$invalidate(1, _tabs);
    });
  }
  function div1_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      _panelEl = $$value;
      $$invalidate(2, _panelEl);
    });
  }
  function div2_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      _rootEl = $$value;
      $$invalidate(0, _rootEl);
    });
  }
  $$self.$$set = ($$props2) => {
    if ("initialtab" in $$props2)
      $$invalidate(3, initialtab = $$props2.initialtab);
  };
  return [_rootEl, _tabs, _panelEl, initialtab, div0_binding, div1_binding, div2_binding];
}
class Tabs extends SvelteElement {
  constructor(options) {
    super();
    const style = document.createElement("style");
    style.textContent = `:host{box-sizing:border-box;font:var(--goa-typography-body-m)}.tab{display:flex;gap:var(--goa-space-xs)}[role="tab"]{background:none;overflow:hidden;white-space:nowrap;cursor:pointer;border:none;font:var(--goa-typography-body-m);color:var(--goa-color-text-default);letter-spacing:0.03125rem}[role="tab"][aria-selected="true"]{font:var(--goa-typography-heading-s)}[role="tab"]:focus-visible{outline:var(--goa-border-width-l) solid var(--goa-color-interactive-focus)}[role="tab"]:hover:not([aria-selected="true"]),[role="tab"]:focus:not([aria-selected="true"]),[role="tab"]:focus-visible:not([aria-selected="true"]){border-color:var(--goa-color-greyscale-200)}@media screen and (max-width: 623px){@media not (max-color:2147477350){[role="tablist"]{border-bottom:none}.tabs{border-bottom:var(--goa-border-width-s) solid var(--goa-color-greyscale-200);display:flex;gap:var(--goa-space-xl)}[role="tab"]{padding:var(--goa-space-s) var(--goa-space-m);border-bottom:4px solid transparent}[role="tab"][aria-selected="true"]{border-color:var(--goa-color-interactive-default)}}}@media not  screen and (max-width: 623px){@media not (color:2147477350){[role="tablist"]{border-bottom:none}.tabs{border-bottom:var(--goa-border-width-s) solid var(--goa-color-greyscale-200);display:flex;gap:var(--goa-space-xl)}[role="tab"]{padding:var(--goa-space-s) var(--goa-space-m);border-bottom:4px solid transparent}[role="tab"][aria-selected="true"]{border-color:var(--goa-color-interactive-default)}}}@media screen and (max-width: 623px){[role="tab"]{width:100%;padding:var(--goa-space-xs) 0;padding-left:12px;border-left:4px solid transparent}[role="tab"][aria-selected="true"]{border-color:var(--goa-color-interactive-default);background:var(--goa-color-info-background)}}`;
    this.shadowRoot.appendChild(style);
    init(this, { target: this.shadowRoot, props: attribute_to_object(this.attributes), customElement: true }, instance, create_fragment, safe_not_equal, { initialtab: 3 }, null);
    if (options) {
      if (options.target) {
        insert(options.target, this, options.anchor);
      }
      if (options.props) {
        this.$set(options.props);
        flush();
      }
    }
  }
  static get observedAttributes() {
    return ["initialtab"];
  }
  get initialtab() {
    return this.$$.ctx[3];
  }
  set initialtab(initialtab) {
    this.$$set({ initialtab });
    flush();
  }
}
customElements.define("goa-tabs", Tabs);
function GoASideMenuGroup(props) {
  return jsxRuntimeExports.jsx("goa-side-menu-group", Object.assign({
    heading: props.heading
  }, {
    children: props.children
  }), void 0);
}
function GoASideMenuHeading(props) {
  return jsxRuntimeExports.jsxs("goa-side-menu-heading", Object.assign({
    icon: props.icon
  }, {
    children: [props.children, props.meta && jsxRuntimeExports.jsx("span", Object.assign({
      slot: "meta"
    }, {
      children: props.meta
    }), void 0)]
  }), void 0);
}
function GoASideMenu(props) {
  return jsxRuntimeExports.jsx("goa-side-menu", {
    children: props.children
  }, void 0);
}
function GoAPages(props) {
  return jsxRuntimeExports.jsx("goa-pages", Object.assign({
    current: props.current,
    ml: props.ml,
    mr: props.mr,
    mt: props.mt,
    mb: props.mb
  }, {
    children: props.children
  }), void 0);
}
function GoAAccordion({
  open,
  heading,
  headingSize,
  secondaryText,
  headingContent,
  testid,
  children: children2,
  mt,
  mr,
  mb: mb2,
  ml: ml2
}) {
  return jsxRuntimeExports.jsxs("goa-accordion", Object.assign({
    open,
    headingSize,
    heading,
    secondaryText,
    "data-testid": testid,
    mt,
    mr,
    mb: mb2,
    ml: ml2
  }, {
    children: [headingContent && jsxRuntimeExports.jsx("div", Object.assign({
      slot: "headingcontent"
    }, {
      children: headingContent
    }), void 0), children2]
  }), void 0);
}
function GoAFormStep(props) {
  return jsxRuntimeExports.jsx("goa-form-step", {
    text: props.text,
    status: props.status
  }, void 0);
}
function GoAFormStepper({
  testId,
  step,
  mt,
  mb: mb2,
  ml: ml2,
  mr,
  onChange,
  children: children2
}) {
  const ref = reactExports.useRef(null);
  reactExports.useEffect(() => {
    if (!ref.current) {
      return;
    }
    const current = ref.current;
    const changeListener = (e) => {
      const {
        step: step2
      } = e.detail;
      onChange === null || onChange === void 0 ? void 0 : onChange(+step2);
    };
    current.addEventListener("_change", changeListener);
    return () => {
      current.removeEventListener("_change", changeListener);
    };
  }, [ref, onChange]);
  return jsxRuntimeExports.jsx("goa-form-stepper", Object.assign({
    ref,
    "data-testid": testId,
    step,
    mt,
    mr,
    mb: mb2,
    ml: ml2
  }, {
    children: children2
  }), void 0);
}
function GoAAppHeader({
  heading,
  url,
  maxContentWidth,
  testId,
  children: children2
}) {
  return jsxRuntimeExports.jsx("goa-app-header", Object.assign({
    heading,
    url,
    maxcontentwidth: maxContentWidth,
    "data-testid": testId
  }, {
    children: children2
  }), void 0);
}
function GoABadge({
  type,
  content,
  icon,
  testId,
  mt,
  mr,
  mb: mb2,
  ml: ml2,
  ariaLabel
}) {
  return jsxRuntimeExports.jsx("goa-badge", {
    type,
    content,
    icon,
    "data-testid": testId,
    arialabel: ariaLabel,
    mt,
    mr,
    mb: mb2,
    ml: ml2
  }, void 0);
}
function GoABlock(props) {
  return jsxRuntimeExports.jsx("goa-block", Object.assign({
    gap: props.gap,
    direction: props.direction,
    alignment: props.alignment,
    mt: props.mt,
    mr: props.mr,
    mb: props.mb,
    ml: props.ml,
    "data-testid": props.testId
  }, {
    children: props.children
  }), void 0);
}
function GoAButtonGroup({
  alignment,
  gap,
  testId,
  children: children2,
  mt,
  mr,
  mb: mb2,
  ml: ml2
}) {
  return jsxRuntimeExports.jsx("goa-button-group", Object.assign({
    alignment,
    gap,
    mt,
    mr,
    mb: mb2,
    ml: ml2,
    "data-testid": testId
  }, {
    children: children2
  }), void 0);
}
function GoAButton({
  disabled = false,
  type = "primary",
  size,
  variant,
  leadingIcon,
  trailingIcon,
  testId,
  children: children2,
  onClick,
  mt,
  mr,
  mb: mb2,
  ml: ml2
}) {
  const el2 = reactExports.useRef(null);
  reactExports.useEffect(() => {
    if (!el2.current) {
      return;
    }
    if (!onClick) {
      return;
    }
    const current = el2.current;
    const listener = () => {
      onClick();
    };
    current.addEventListener("_click", listener);
    return () => {
      current.removeEventListener("_click", listener);
    };
  }, [el2, onClick]);
  return jsxRuntimeExports.jsx("goa-button", Object.assign({
    ref: el2,
    type,
    size,
    variant,
    disabled,
    leadingicon: leadingIcon,
    trailingicon: trailingIcon,
    "data-testid": testId,
    mt,
    mr,
    mb: mb2,
    ml: ml2
  }, {
    children: children2
  }), void 0);
}
const GoACallout = ({
  heading,
  type: _type = "information",
  size: _size = "large",
  testId,
  children: children2,
  mt,
  mr,
  mb: mb2,
  ml: ml2
}) => {
  return jsxRuntimeExports.jsx("goa-callout", Object.assign({
    heading,
    type: _type,
    size: _size,
    mt,
    mr,
    mb: mb2,
    ml: ml2,
    "data-testid": testId
  }, {
    children: children2
  }), void 0);
};
function GoACheckbox({
  id: id2,
  name,
  testId,
  error: error2,
  disabled,
  checked,
  value,
  text: text2,
  description,
  children: children2,
  onChange,
  ariaLabel,
  mt,
  mr,
  mb: mb2,
  ml: ml2
}) {
  const el2 = reactExports.useRef(null);
  reactExports.useEffect(() => {
    if (!el2.current) {
      return;
    }
    const current = el2.current;
    const listener = (e) => {
      const ce2 = e;
      onChange === null || onChange === void 0 ? void 0 : onChange(name, ce2.detail.checked, ce2.detail.value);
    };
    current.addEventListener("_change", listener);
    return () => {
      current.removeEventListener("_change", listener);
    };
  }, [name, onChange]);
  return jsxRuntimeExports.jsx("goa-checkbox", Object.assign({
    "data-testid": testId,
    ref: el2,
    id: id2,
    name,
    error: error2,
    checked,
    disabled,
    text: text2,
    value,
    arialabel: ariaLabel,
    description,
    mt,
    mr,
    mb: mb2,
    ml: ml2
  }, {
    children: children2
  }), void 0);
}
function GoAContainer({
  accent,
  heading,
  title,
  padding,
  children: children2,
  actions,
  type,
  mt,
  mr,
  mb: mb2,
  ml: ml2,
  testId
}) {
  const headingContent = heading || title;
  return jsxRuntimeExports.jsxs("goa-container", Object.assign({
    type,
    padding,
    accent,
    mt,
    mr,
    mb: mb2,
    ml: ml2,
    "data-testid": testId
  }, {
    children: [headingContent && jsxRuntimeExports.jsx("div", Object.assign({
      slot: "title"
    }, {
      children: headingContent
    }), void 0), children2, actions && jsxRuntimeExports.jsx("div", Object.assign({
      slot: "actions"
    }, {
      children: actions
    }), void 0)]
  }), void 0);
}
function GoADivider(props) {
  return jsxRuntimeExports.jsx("goa-divider", {
    mt: props.mt,
    mr: props.mr,
    mb: props.mb,
    ml: props.ml,
    "data-testid": props.testId
  }, void 0);
}
function stringify(value) {
  if (typeof value === "undefined") {
    return "";
  }
  if (typeof value === "string") {
    return value;
  }
  return JSON.stringify(value);
}
function GoADropdown(props) {
  const el2 = reactExports.useRef(null);
  reactExports.useEffect(() => {
    if (!el2.current) {
      return;
    }
    const current = el2.current;
    const handler = (e) => {
      const {
        name,
        value,
        values
      } = e.detail;
      props.onChange(name, props.multiselect ? values : value);
    };
    current.addEventListener("_change", handler);
    return () => {
      current.removeEventListener("_change", handler);
    };
  }, [el2, props]);
  return jsxRuntimeExports.jsx("goa-dropdown", Object.assign({
    ref: el2,
    name: props.name,
    value: stringify(props.value),
    arialabel: props.ariaLabel,
    arialabelledby: props.ariaLabelledBy,
    disabled: props.disabled,
    error: props.error,
    filterable: props.filterable,
    leadingicon: props.leadingIcon,
    maxheight: props.maxHeight,
    mb: props.mb,
    ml: props.ml,
    mr: props.mr,
    mt: props.mt,
    multiselect: props.multiselect,
    native: props.native,
    placeholder: props.placeholder,
    "data-testid": props.testId,
    width: props.width,
    relative: props.relative,
    id: props.id
  }, {
    children: props.children
  }), void 0);
}
function GoADropdownItem({
  value,
  label,
  filter,
  name,
  testId
}) {
  return jsxRuntimeExports.jsx("goa-dropdown-item", {
    "data-testid": testId,
    value,
    label,
    filter,
    name
  }, void 0);
}
function GoAAppFooterMetaSection({
  children: children2
}) {
  return jsxRuntimeExports.jsx("goa-app-footer-meta-section", Object.assign({
    slot: "meta"
  }, {
    children: children2
  }), void 0);
}
function GoAAppFooterNavSection({
  heading,
  maxColumnCount = 1,
  testId,
  children: children2
}) {
  return jsxRuntimeExports.jsx("goa-app-footer-nav-section", Object.assign({
    slot: "nav",
    heading,
    maxcolumncount: maxColumnCount,
    "data-testid": testId
  }, {
    children: children2
  }), void 0);
}
function GoAAppFooter({
  maxContentWidth,
  children: children2,
  testId
}) {
  return jsxRuntimeExports.jsx("goa-app-footer", Object.assign({
    maxcontentwidth: maxContentWidth,
    "data-testid": testId
  }, {
    children: children2
  }), void 0);
}
function GoAFormItem({
  children: children2,
  helpText,
  error: error2,
  requirement,
  label,
  labelSize,
  mt,
  mr,
  mb: mb2,
  ml: ml2,
  testId,
  id: id2
}) {
  return jsxRuntimeExports.jsx("goa-form-item", Object.assign({
    label,
    labelsize: labelSize,
    error: error2,
    requirement,
    helptext: helpText,
    mt,
    mr,
    mb: mb2,
    ml: ml2,
    "data-testid": testId,
    id: id2
  }, {
    children: children2
  }), void 0);
}
function GoAGrid({
  gap,
  minChildWidth,
  mt,
  mr,
  mb: mb2,
  ml: ml2,
  testId,
  children: children2
}) {
  return jsxRuntimeExports.jsx("goa-grid", Object.assign({
    gap,
    mt,
    minchildwidth: minChildWidth,
    mr,
    mb: mb2,
    ml: ml2,
    "data-testid": testId
  }, {
    children: children2
  }), void 0);
}
function GoAIcon({
  type,
  theme,
  size,
  mt,
  mr,
  mb: mb2,
  ml: ml2,
  testId
}) {
  return jsxRuntimeExports.jsx("goa-icon", {
    type,
    theme,
    size,
    mt,
    mr,
    mb: mb2,
    ml: ml2,
    "data-testid": testId
  }, void 0);
}
function GoAInput({
  id: id2,
  debounce,
  name,
  type,
  autoCapitalize,
  leadingIcon,
  trailingIcon,
  variant = "goa",
  focused,
  disabled,
  readonly,
  value,
  placeholder,
  error: error2,
  width,
  testId,
  min,
  max,
  step,
  prefix,
  suffix,
  ariaLabel,
  mt,
  mr,
  mb: mb2,
  ml: ml2,
  leadingContent,
  trailingContent,
  maxLength,
  onTrailingIconClick,
  onChange,
  onFocus,
  onBlur
}) {
  const ref = reactExports.useRef(null);
  reactExports.useEffect(() => {
    if (!ref.current) {
      return;
    }
    const current = ref.current;
    const changeListener = (e) => {
      const {
        name: name2,
        value: value2
      } = e.detail;
      onChange(name2, value2);
    };
    const clickListener = () => {
      onTrailingIconClick === null || onTrailingIconClick === void 0 ? void 0 : onTrailingIconClick();
    };
    const focusListener = (e) => {
      const {
        name: name2,
        value: value2
      } = e.detail;
      onFocus === null || onFocus === void 0 ? void 0 : onFocus(name2, value2);
    };
    const blurListener = (e) => {
      const {
        name: name2,
        value: value2
      } = e.detail;
      onBlur === null || onBlur === void 0 ? void 0 : onBlur(name2, value2);
    };
    current.addEventListener("_change", changeListener);
    current.addEventListener("_trailingIconClick", clickListener);
    current.addEventListener("_focus", focusListener);
    current.addEventListener("_blur", blurListener);
    return () => {
      current.removeEventListener("_change", changeListener);
      current.removeEventListener("_trailingIconClick", clickListener);
      current.removeEventListener("_focus", focusListener);
      current.removeEventListener("_blur", blurListener);
    };
  }, [ref, onChange, onTrailingIconClick, onFocus, onBlur]);
  return jsxRuntimeExports.jsxs("goa-input", Object.assign({
    ref,
    debounce,
    focused,
    type,
    name,
    autocapitalize: autoCapitalize,
    id: id2,
    leadingicon: leadingIcon,
    trailingicon: trailingIcon,
    variant,
    disabled,
    readonly,
    placeholder,
    error: error2,
    "data-testid": testId,
    value,
    width,
    min,
    max,
    step,
    maxlength: maxLength,
    prefix,
    suffix,
    arialabel: ariaLabel,
    mt,
    mr,
    mb: mb2,
    ml: ml2,
    handletrailingiconclick: !!onTrailingIconClick
  }, {
    children: [leadingContent && jsxRuntimeExports.jsx("div", Object.assign({
      slot: "leadingContent"
    }, {
      children: leadingContent
    }), void 0), trailingContent && jsxRuntimeExports.jsx("div", Object.assign({
      slot: "trailingContent"
    }, {
      children: trailingContent
    }), void 0)]
  }), void 0);
}
function GoAMicrositeHeader({
  type,
  version: version2,
  feedbackUrl,
  maxContentWidth,
  feedbackUrlTarget,
  headerUrlTarget,
  testId
}) {
  return jsxRuntimeExports.jsx("goa-microsite-header", {
    type,
    version: version2,
    feedbackurl: feedbackUrl,
    "data-testid": testId,
    maxcontentwidth: maxContentWidth,
    feedbackurltarget: feedbackUrlTarget,
    headerurltarget: headerUrlTarget
  }, void 0);
}
function GoAOneColumnLayout(props) {
  return jsxRuntimeExports.jsx("goa-one-column-layout", {
    children: props.children
  }, void 0);
}
function GoATable(props) {
  const ref = reactExports.useRef(null);
  reactExports.useEffect(() => {
    if (!ref.current) {
      return;
    }
    const current = ref.current;
    const sortListener = (e) => {
      var _a;
      const {
        sortBy,
        sortDir
      } = e.detail;
      (_a = props.onSort) === null || _a === void 0 ? void 0 : _a.call(props, sortBy, sortDir);
    };
    current.addEventListener("_sort", sortListener);
    return () => {
      current.removeEventListener("_sort", sortListener);
    };
  }, [ref, props.onSort]);
  return jsxRuntimeExports.jsx("goa-table", Object.assign({
    ref,
    width: props.width,
    stickyheader: false,
    variant: props.variant,
    "data-testid": props.testId,
    mt: props.mt,
    mb: props.mb,
    ml: props.ml,
    mr: props.mr
  }, {
    children: jsxRuntimeExports.jsx("table", Object.assign({
      style: {
        width: "100%"
      }
    }, {
      children: props.children
    }), void 0)
  }), void 0);
}
function GoATooltip(props) {
  return jsxRuntimeExports.jsx("goa-tooltip", Object.assign({
    position: props.position,
    content: props.content,
    halign: props.hAlign,
    "data-testid": props.testId,
    mt: props.mt,
    mr: props.mr,
    mb: props.mb,
    ml: props.ml
  }, {
    children: props.children
  }), void 0);
}
function GoATabs({
  initialTab,
  children: children2
}) {
  return jsxRuntimeExports.jsx("goa-tabs", Object.assign({
    initialtab: initialTab
  }, {
    children: children2
  }), void 0);
}
function GoATab({
  heading,
  children: children2
}) {
  return jsxRuntimeExports.jsxs("goa-tab", {
    children: [heading && jsxRuntimeExports.jsx("span", Object.assign({
      slot: "heading"
    }, {
      children: heading
    }), void 0), children2]
  }, void 0);
}
class BaseSerializer {
  constructor(properties) {
    __publicField(this, "isRoot", false);
    __publicField(this, "state", { element: "", props: { name: "" } });
    this.properties = properties;
  }
  getProperty(name) {
    return this.properties.find((p2) => p2.name === name);
  }
  setIsRoot(value) {
    this.isRoot = value;
  }
  setState(state) {
    this.state = state;
  }
  // converts React camelcase props to dasherized
  dasherize(name) {
    const out = [];
    name.split("").forEach((c, i) => {
      const code = c.charCodeAt(0);
      if (code >= 65 && code <= 90 && i > 0) {
        out.push("-");
      }
      out.push(c.toLowerCase());
    });
    return out.join("");
  }
  capitalize(value) {
    return `${value[0].toUpperCase()}${value.substring(1)}`;
  }
  isDynamic(name) {
    var _a;
    return ((_a = this.getProperty(name)) == null ? void 0 : _a.dynamic) || false;
  }
}
class AngularSerializer extends BaseSerializer {
  constructor(properties) {
    super(properties);
    __privateAdd(this, _dynamicProp);
    __privateAdd(this, _toFunc);
    __publicField(this, "isRoot", false);
    __publicField(this, "nativeEls", "div span p br header footer blockquote input textarea a button h2 h2 h3 h4 img label ul li ol hr section".split(" "));
  }
  setIsRoot(isRoot) {
    this.isRoot = isRoot;
  }
  setState(state) {
    super.setState(state);
  }
  stringToProp(name, item) {
    if (this.isDynamic(name)) {
      return __privateMethod(this, _dynamicProp, dynamicProp_fn).call(this, name);
    }
    if (item === "")
      return "";
    return `${name.toLowerCase()}="${item}"`;
  }
  numberToProp(name, item) {
    if (this.isDynamic(name)) {
      return __privateMethod(this, _dynamicProp, dynamicProp_fn).call(this, name);
    }
    return `${name.toLowerCase()}="${item}"`;
  }
  booleanToProp(name, item) {
    if (this.isDynamic(name)) {
      return __privateMethod(this, _dynamicProp, dynamicProp_fn).call(this, name);
    }
    if (!item)
      return "";
    return `${name.toLowerCase()}=${item}`;
  }
  funcToProp(name, _item) {
    return __privateMethod(this, _toFunc, toFunc_fn).call(this, name);
  }
  arrayToProp(name, items, delimit) {
    if (this.isDynamic(name)) {
      return __privateMethod(this, _dynamicProp, dynamicProp_fn).call(this, name);
    }
    return delimit ? `${name.toLowerCase()}=[${items}]` : `${name.toLowerCase()}=${items}`;
  }
  componentNameToString(name) {
    if (this.nativeEls.includes(name)) {
      return name;
    }
    const prefix = "GoA";
    const tail = name.replace(prefix, "");
    return `${prefix.toLowerCase()}-${this.dasherize(tail)}`;
  }
  componentToString(name) {
    name = this.dasherize(name);
    return `<${name} />`;
  }
}
_dynamicProp = new WeakSet();
dynamicProp_fn = function(name) {
  return `[${name.toLowerCase()}]="some${this.capitalize(name)}Value"`;
};
_toFunc = new WeakSet();
toFunc_fn = function(name) {
  let _name = name.replace(/^on/, "");
  _name = _name.substring(0, 1).toLowerCase() + _name.substring(1);
  return `(_${_name})="${name}($event)"`;
};
class ReactSerializer extends BaseSerializer {
  constructor(properties) {
    super(properties);
    __publicField(this, "isRoot", false);
  }
  setIsRoot(isRoot) {
    this.isRoot = isRoot;
  }
  getProperty(name) {
    return this.properties.find((p2) => p2.name === name);
  }
  dynamicProp(name) {
    return `${name.toLowerCase()}={some${this.capitalize(name)}Value}`;
  }
  stringToProp(name, value) {
    if (this.isDynamic(name)) {
      return this.dynamicProp(name);
    }
    if (value === "")
      return "";
    return `${name}="${value}"`;
  }
  numberToProp(name, value) {
    if (this.isDynamic(name)) {
      return this.dynamicProp(name);
    }
    return `${name}={${value}}`;
  }
  booleanToProp(name, value) {
    if (this.isDynamic(name)) {
      return this.dynamicProp(name);
    }
    if (!value)
      return "";
    return `${name}={${value}}`;
  }
  funcToProp(name, _callback) {
    return `${name}={${name}}`;
  }
  arrayToProp(name, values, delimit) {
    if (this.isDynamic(name)) {
      return this.dynamicProp(name);
    }
    return delimit ? `${name}=[${values}]` : `${name}=${values}`;
  }
  componentNameToString(name) {
    return name;
  }
  componentToString(name) {
    return `<${name} />`;
  }
}
class ComponentSerializer {
  constructor(serializer) {
    __privateAdd(this, _serializeComponent);
    __privateAdd(this, _serializeProp);
    __privateAdd(this, _componentToString);
    this.serializer = serializer;
  }
  // Public
  componentsToString(components, spacing = 0) {
    return components.map((c) => __privateMethod(this, _componentToString, componentToString_fn).call(this, c, true, spacing)).join("\n");
  }
}
_serializeComponent = new WeakSet();
serializeComponent_fn = function(item, isRoot, spacing) {
  if (reactExports$1.isValidElement(item)) {
    return __privateMethod(this, _componentToString, componentToString_fn).call(this, item, isRoot, spacing);
  }
  if (typeof item === "string") {
    return item;
  }
  return "";
};
_serializeProp = new WeakSet();
serializeProp_fn = function(elementName, name, item, delimit = true) {
  if (typeof item === "string") {
    return this.serializer.stringToProp(name, item);
  }
  if (typeof item === "number") {
    return this.serializer.numberToProp(name, item);
  }
  if (typeof item === "boolean") {
    return this.serializer.booleanToProp(name, item);
  }
  if (typeof item === "function") {
    return this.serializer.funcToProp(name, item);
  }
  if (Array.isArray(item)) {
    const delimiter = delimit ? ", " : `
  `;
    const items = item.map((i) => __privateMethod(this, _serializeProp, serializeProp_fn).call(this, elementName, name, i)).join(delimiter);
    return this.serializer.arrayToProp(name, items, delimit);
  }
  return "";
};
_componentToString = new WeakSet();
componentToString_fn = function(component, isRoot, spacing = 0) {
  let elementType = this.serializer.componentNameToString(component.type.name || component.type);
  this.serializer.setIsRoot(isRoot);
  this.serializer.setState({ element: elementType, props: { name: component.props.name } });
  if (!component.props) {
    return this.serializer.componentToString(elementType);
  }
  let props = Object.keys(component.props).filter((prop) => prop !== "children").map((prop) => __privateMethod(this, _serializeProp, serializeProp_fn).call(this, elementType, prop, component.props[prop], isRoot)).filter((item) => !!item).join(" ");
  if (component.key) {
    props += ` key="${component.key}"`;
  }
  if (props.length > 0) {
    props = " " + props;
  }
  let children2 = "";
  if (component.props.children) {
    spacing += 2;
    const indentation = new Array(spacing + 1).join(" ");
    if (Array.isArray(component.props.children)) {
      children2 = component.props.children.reduce((a, b) => a.concat(b), []).filter((child) => child && reactExports$1.isValidElement(child)).map((child) => __privateMethod(this, _serializeComponent, serializeComponent_fn).call(this, child, false, spacing)).join(`
${indentation}`);
    } else {
      children2 = __privateMethod(this, _serializeComponent, serializeComponent_fn).call(this, component.props.children, false, spacing);
    }
    return `<${elementType}${props}>
${indentation}${children2}
${indentation.slice(0, -2)}</${elementType}>`;
  }
  return `<${elementType}${props} />`;
};
const LanguageContext = reactExports$1.createContext("");
const DesignTokensLanguageContext = reactExports$1.createContext("");
function SandboxProperties({ properties = [], onChange }) {
  function onListChange(name, value) {
    const prop = properties.find((p2) => p2.type === "list" && p2.name === name);
    if (!prop || prop.type !== "list")
      return;
    prop.value = !value ? "" : typeof value === "string" ? value : value[0];
    onChange([...properties]);
  }
  function onTextChange(name, value) {
    const prop = properties.find((p2) => p2.type === "string" && p2.name === name);
    if (!prop || prop.type !== "string")
      return;
    prop.value = value;
    onChange([...properties]);
  }
  function onNumberChange(name, value) {
    const prop = properties.find((p2) => p2.type === "number" && p2.name === name);
    if (!prop || prop.type !== "number")
      return;
    prop.value = parseFloat(value);
    onChange([...properties]);
  }
  function onCheckboxChange(name, checked, _value) {
    const prop = properties.find((p2) => p2.type === "boolean" && p2.name === name);
    if (!prop || prop.type !== "boolean")
      return;
    prop.value = checked;
    onChange([...properties]);
  }
  function toUpperCase(label) {
    return label.charAt(0).toUpperCase() + label.slice(1);
  }
  function renderProps(p2) {
    switch (p2.type) {
      case "list":
        return /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoADropdown, { name: p2.name, value: p2.value, onChange: onListChange, children: p2.options.map((option) => /* @__PURE__ */ jsxRuntimeExports$1.jsx(
          GoADropdownItem,
          {
            value: option || "",
            label: toUpperCase(option) || "-"
          },
          option
        )) }, p2.name);
      case "boolean":
        return /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoACheckbox, { name: p2.name, checked: p2.value, onChange: onCheckboxChange, text: p2.label });
      case "string":
        return /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAInput, { name: p2.name, value: p2.value, onChange: onTextChange });
      case "number":
        return /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAInput, { type: "number", name: p2.name, value: `${p2.value}`, onChange: onNumberChange });
    }
  }
  return /* @__PURE__ */ jsxRuntimeExports$1.jsx(jsxRuntimeExports$1.Fragment, { children: ["list", "string", "boolean", "number"].map((t2) => {
    const propertiesOfTypeT = properties.filter((p2) => p2.type === t2 && !p2.hidden);
    if (propertiesOfTypeT.length === 0) {
      return null;
    }
    return /* @__PURE__ */ jsxRuntimeExports$1.jsx("div", { className: "sandbox-container", children: propertiesOfTypeT.map((p2) => /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAFormItem, { label: p2.type === "boolean" ? "" : p2.label || "", children: renderProps(p2) }, p2.name)) }, t2);
  }) });
}
const CodeSnippet$1 = "";
var reactDomServerLegacy_browser_production_min = {};
/**
 * @license React
 * react-dom-server-legacy.browser.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var aa$1 = reactExports$1;
function l$2(a) {
  for (var b = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, c = 1; c < arguments.length; c++)
    b += "&args[]=" + encodeURIComponent(arguments[c]);
  return "Minified React error #" + a + "; visit " + b + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
}
var p$1 = Object.prototype.hasOwnProperty, fa$1 = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/, ha$1 = {}, ia$1 = {};
function ja$1(a) {
  if (p$1.call(ia$1, a))
    return true;
  if (p$1.call(ha$1, a))
    return false;
  if (fa$1.test(a))
    return ia$1[a] = true;
  ha$1[a] = true;
  return false;
}
function r(a, b, c, d, f2, e, g2) {
  this.acceptsBooleans = 2 === b || 3 === b || 4 === b;
  this.attributeName = d;
  this.attributeNamespace = f2;
  this.mustUseProperty = c;
  this.propertyName = a;
  this.type = b;
  this.sanitizeURL = e;
  this.removeEmptyString = g2;
}
var t$1 = {};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a) {
  t$1[a] = new r(a, 0, false, a, null, false, false);
});
[["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(a) {
  var b = a[0];
  t$1[b] = new r(b, 1, false, a[1], null, false, false);
});
["contentEditable", "draggable", "spellCheck", "value"].forEach(function(a) {
  t$1[a] = new r(a, 2, false, a.toLowerCase(), null, false, false);
});
["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(a) {
  t$1[a] = new r(a, 2, false, a, null, false, false);
});
"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a) {
  t$1[a] = new r(a, 3, false, a.toLowerCase(), null, false, false);
});
["checked", "multiple", "muted", "selected"].forEach(function(a) {
  t$1[a] = new r(a, 3, true, a, null, false, false);
});
["capture", "download"].forEach(function(a) {
  t$1[a] = new r(a, 4, false, a, null, false, false);
});
["cols", "rows", "size", "span"].forEach(function(a) {
  t$1[a] = new r(a, 6, false, a, null, false, false);
});
["rowSpan", "start"].forEach(function(a) {
  t$1[a] = new r(a, 5, false, a.toLowerCase(), null, false, false);
});
var ka$1 = /[\-:]([a-z])/g;
function la$1(a) {
  return a[1].toUpperCase();
}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a) {
  var b = a.replace(
    ka$1,
    la$1
  );
  t$1[b] = new r(b, 1, false, a, null, false, false);
});
"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a) {
  var b = a.replace(ka$1, la$1);
  t$1[b] = new r(b, 1, false, a, "http://www.w3.org/1999/xlink", false, false);
});
["xml:base", "xml:lang", "xml:space"].forEach(function(a) {
  var b = a.replace(ka$1, la$1);
  t$1[b] = new r(b, 1, false, a, "http://www.w3.org/XML/1998/namespace", false, false);
});
["tabIndex", "crossOrigin"].forEach(function(a) {
  t$1[a] = new r(a, 1, false, a.toLowerCase(), null, false, false);
});
t$1.xlinkHref = new r("xlinkHref", 1, false, "xlink:href", "http://www.w3.org/1999/xlink", true, false);
["src", "href", "action", "formAction"].forEach(function(a) {
  t$1[a] = new r(a, 1, false, a.toLowerCase(), null, true, true);
});
var u$1 = {
  animationIterationCount: true,
  aspectRatio: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  columns: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridArea: true,
  gridRow: true,
  gridRowEnd: true,
  gridRowSpan: true,
  gridRowStart: true,
  gridColumn: true,
  gridColumnEnd: true,
  gridColumnSpan: true,
  gridColumnStart: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
}, ma = ["Webkit", "ms", "Moz", "O"];
Object.keys(u$1).forEach(function(a) {
  ma.forEach(function(b) {
    b = b + a.charAt(0).toUpperCase() + a.substring(1);
    u$1[b] = u$1[a];
  });
});
var na = /["'&<>]/;
function v(a) {
  if ("boolean" === typeof a || "number" === typeof a)
    return "" + a;
  a = "" + a;
  var b = na.exec(a);
  if (b) {
    var c = "", d, f2 = 0;
    for (d = b.index; d < a.length; d++) {
      switch (a.charCodeAt(d)) {
        case 34:
          b = "&quot;";
          break;
        case 38:
          b = "&amp;";
          break;
        case 39:
          b = "&#x27;";
          break;
        case 60:
          b = "&lt;";
          break;
        case 62:
          b = "&gt;";
          break;
        default:
          continue;
      }
      f2 !== d && (c += a.substring(f2, d));
      f2 = d + 1;
      c += b;
    }
    a = f2 !== d ? c + a.substring(f2, d) : c;
  }
  return a;
}
var oa$1 = /([A-Z])/g, pa$1 = /^ms-/, qa$1 = Array.isArray;
function w$1(a, b) {
  return { insertionMode: a, selectedValue: b };
}
function ra$1(a, b, c) {
  switch (b) {
    case "select":
      return w$1(1, null != c.value ? c.value : c.defaultValue);
    case "svg":
      return w$1(2, null);
    case "math":
      return w$1(3, null);
    case "foreignObject":
      return w$1(1, null);
    case "table":
      return w$1(4, null);
    case "thead":
    case "tbody":
    case "tfoot":
      return w$1(5, null);
    case "colgroup":
      return w$1(7, null);
    case "tr":
      return w$1(6, null);
  }
  return 4 <= a.insertionMode || 0 === a.insertionMode ? w$1(1, null) : a;
}
var sa$1 = /* @__PURE__ */ new Map();
function ta$1(a, b, c) {
  if ("object" !== typeof c)
    throw Error(l$2(62));
  b = true;
  for (var d in c)
    if (p$1.call(c, d)) {
      var f2 = c[d];
      if (null != f2 && "boolean" !== typeof f2 && "" !== f2) {
        if (0 === d.indexOf("--")) {
          var e = v(d);
          f2 = v(("" + f2).trim());
        } else {
          e = d;
          var g2 = sa$1.get(e);
          void 0 !== g2 ? e = g2 : (g2 = v(e.replace(oa$1, "-$1").toLowerCase().replace(pa$1, "-ms-")), sa$1.set(e, g2), e = g2);
          f2 = "number" === typeof f2 ? 0 === f2 || p$1.call(u$1, d) ? "" + f2 : f2 + "px" : v(("" + f2).trim());
        }
        b ? (b = false, a.push(' style="', e, ":", f2)) : a.push(";", e, ":", f2);
      }
    }
  b || a.push('"');
}
function x$1(a, b, c, d) {
  switch (c) {
    case "style":
      ta$1(a, b, d);
      return;
    case "defaultValue":
    case "defaultChecked":
    case "innerHTML":
    case "suppressContentEditableWarning":
    case "suppressHydrationWarning":
      return;
  }
  if (!(2 < c.length) || "o" !== c[0] && "O" !== c[0] || "n" !== c[1] && "N" !== c[1]) {
    if (b = t$1.hasOwnProperty(c) ? t$1[c] : null, null !== b) {
      switch (typeof d) {
        case "function":
        case "symbol":
          return;
        case "boolean":
          if (!b.acceptsBooleans)
            return;
      }
      c = b.attributeName;
      switch (b.type) {
        case 3:
          d && a.push(" ", c, '=""');
          break;
        case 4:
          true === d ? a.push(" ", c, '=""') : false !== d && a.push(" ", c, '="', v(d), '"');
          break;
        case 5:
          isNaN(d) || a.push(" ", c, '="', v(d), '"');
          break;
        case 6:
          !isNaN(d) && 1 <= d && a.push(" ", c, '="', v(d), '"');
          break;
        default:
          b.sanitizeURL && (d = "" + d), a.push(" ", c, '="', v(d), '"');
      }
    } else if (ja$1(c)) {
      switch (typeof d) {
        case "function":
        case "symbol":
          return;
        case "boolean":
          if (b = c.toLowerCase().slice(0, 5), "data-" !== b && "aria-" !== b)
            return;
      }
      a.push(" ", c, '="', v(d), '"');
    }
  }
}
function y$1(a, b, c) {
  if (null != b) {
    if (null != c)
      throw Error(l$2(60));
    if ("object" !== typeof b || !("__html" in b))
      throw Error(l$2(61));
    b = b.__html;
    null !== b && void 0 !== b && a.push("" + b);
  }
}
function ua$1(a) {
  var b = "";
  aa$1.Children.forEach(a, function(a2) {
    null != a2 && (b += a2);
  });
  return b;
}
function va$1(a, b, c, d) {
  a.push(A(c));
  var f2 = c = null, e;
  for (e in b)
    if (p$1.call(b, e)) {
      var g2 = b[e];
      if (null != g2)
        switch (e) {
          case "children":
            c = g2;
            break;
          case "dangerouslySetInnerHTML":
            f2 = g2;
            break;
          default:
            x$1(a, d, e, g2);
        }
    }
  a.push(">");
  y$1(a, f2, c);
  return "string" === typeof c ? (a.push(v(c)), null) : c;
}
var wa$1 = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/, xa$1 = /* @__PURE__ */ new Map();
function A(a) {
  var b = xa$1.get(a);
  if (void 0 === b) {
    if (!wa$1.test(a))
      throw Error(l$2(65, a));
    b = "<" + a;
    xa$1.set(a, b);
  }
  return b;
}
function ya$1(a, b, c, d, f2) {
  switch (b) {
    case "select":
      a.push(A("select"));
      var e = null, g2 = null;
      for (n2 in c)
        if (p$1.call(c, n2)) {
          var h = c[n2];
          if (null != h)
            switch (n2) {
              case "children":
                e = h;
                break;
              case "dangerouslySetInnerHTML":
                g2 = h;
                break;
              case "defaultValue":
              case "value":
                break;
              default:
                x$1(a, d, n2, h);
            }
        }
      a.push(">");
      y$1(a, g2, e);
      return e;
    case "option":
      g2 = f2.selectedValue;
      a.push(A("option"));
      var k2 = h = null, m2 = null;
      var n2 = null;
      for (e in c)
        if (p$1.call(c, e)) {
          var q2 = c[e];
          if (null != q2)
            switch (e) {
              case "children":
                h = q2;
                break;
              case "selected":
                m2 = q2;
                break;
              case "dangerouslySetInnerHTML":
                n2 = q2;
                break;
              case "value":
                k2 = q2;
              default:
                x$1(a, d, e, q2);
            }
        }
      if (null != g2)
        if (c = null !== k2 ? "" + k2 : ua$1(h), qa$1(g2))
          for (d = 0; d < g2.length; d++) {
            if ("" + g2[d] === c) {
              a.push(' selected=""');
              break;
            }
          }
        else
          "" + g2 === c && a.push(' selected=""');
      else
        m2 && a.push(' selected=""');
      a.push(">");
      y$1(a, n2, h);
      return h;
    case "textarea":
      a.push(A("textarea"));
      n2 = g2 = e = null;
      for (h in c)
        if (p$1.call(c, h) && (k2 = c[h], null != k2))
          switch (h) {
            case "children":
              n2 = k2;
              break;
            case "value":
              e = k2;
              break;
            case "defaultValue":
              g2 = k2;
              break;
            case "dangerouslySetInnerHTML":
              throw Error(l$2(91));
            default:
              x$1(
                a,
                d,
                h,
                k2
              );
          }
      null === e && null !== g2 && (e = g2);
      a.push(">");
      if (null != n2) {
        if (null != e)
          throw Error(l$2(92));
        if (qa$1(n2) && 1 < n2.length)
          throw Error(l$2(93));
        e = "" + n2;
      }
      "string" === typeof e && "\n" === e[0] && a.push("\n");
      null !== e && a.push(v("" + e));
      return null;
    case "input":
      a.push(A("input"));
      k2 = n2 = h = e = null;
      for (g2 in c)
        if (p$1.call(c, g2) && (m2 = c[g2], null != m2))
          switch (g2) {
            case "children":
            case "dangerouslySetInnerHTML":
              throw Error(l$2(399, "input"));
            case "defaultChecked":
              k2 = m2;
              break;
            case "defaultValue":
              h = m2;
              break;
            case "checked":
              n2 = m2;
              break;
            case "value":
              e = m2;
              break;
            default:
              x$1(a, d, g2, m2);
          }
      null !== n2 ? x$1(a, d, "checked", n2) : null !== k2 && x$1(a, d, "checked", k2);
      null !== e ? x$1(a, d, "value", e) : null !== h && x$1(a, d, "value", h);
      a.push("/>");
      return null;
    case "menuitem":
      a.push(A("menuitem"));
      for (var C2 in c)
        if (p$1.call(c, C2) && (e = c[C2], null != e))
          switch (C2) {
            case "children":
            case "dangerouslySetInnerHTML":
              throw Error(l$2(400));
            default:
              x$1(a, d, C2, e);
          }
      a.push(">");
      return null;
    case "title":
      a.push(A("title"));
      e = null;
      for (q2 in c)
        if (p$1.call(c, q2) && (g2 = c[q2], null != g2))
          switch (q2) {
            case "children":
              e = g2;
              break;
            case "dangerouslySetInnerHTML":
              throw Error(l$2(434));
            default:
              x$1(a, d, q2, g2);
          }
      a.push(">");
      return e;
    case "listing":
    case "pre":
      a.push(A(b));
      g2 = e = null;
      for (k2 in c)
        if (p$1.call(c, k2) && (h = c[k2], null != h))
          switch (k2) {
            case "children":
              e = h;
              break;
            case "dangerouslySetInnerHTML":
              g2 = h;
              break;
            default:
              x$1(a, d, k2, h);
          }
      a.push(">");
      if (null != g2) {
        if (null != e)
          throw Error(l$2(60));
        if ("object" !== typeof g2 || !("__html" in g2))
          throw Error(l$2(61));
        c = g2.__html;
        null !== c && void 0 !== c && ("string" === typeof c && 0 < c.length && "\n" === c[0] ? a.push("\n", c) : a.push("" + c));
      }
      "string" === typeof e && "\n" === e[0] && a.push("\n");
      return e;
    case "area":
    case "base":
    case "br":
    case "col":
    case "embed":
    case "hr":
    case "img":
    case "keygen":
    case "link":
    case "meta":
    case "param":
    case "source":
    case "track":
    case "wbr":
      a.push(A(b));
      for (var D2 in c)
        if (p$1.call(c, D2) && (e = c[D2], null != e))
          switch (D2) {
            case "children":
            case "dangerouslySetInnerHTML":
              throw Error(l$2(399, b));
            default:
              x$1(a, d, D2, e);
          }
      a.push("/>");
      return null;
    case "annotation-xml":
    case "color-profile":
    case "font-face":
    case "font-face-src":
    case "font-face-uri":
    case "font-face-format":
    case "font-face-name":
    case "missing-glyph":
      return va$1(
        a,
        c,
        b,
        d
      );
    case "html":
      return 0 === f2.insertionMode && a.push("<!DOCTYPE html>"), va$1(a, c, b, d);
    default:
      if (-1 === b.indexOf("-") && "string" !== typeof c.is)
        return va$1(a, c, b, d);
      a.push(A(b));
      g2 = e = null;
      for (m2 in c)
        if (p$1.call(c, m2) && (h = c[m2], null != h))
          switch (m2) {
            case "children":
              e = h;
              break;
            case "dangerouslySetInnerHTML":
              g2 = h;
              break;
            case "style":
              ta$1(a, d, h);
              break;
            case "suppressContentEditableWarning":
            case "suppressHydrationWarning":
              break;
            default:
              ja$1(m2) && "function" !== typeof h && "symbol" !== typeof h && a.push(" ", m2, '="', v(h), '"');
          }
      a.push(">");
      y$1(a, g2, e);
      return e;
  }
}
function za$1(a, b, c) {
  a.push('<!--$?--><template id="');
  if (null === c)
    throw Error(l$2(395));
  a.push(c);
  return a.push('"></template>');
}
function Aa$1(a, b, c, d) {
  switch (c.insertionMode) {
    case 0:
    case 1:
      return a.push('<div hidden id="'), a.push(b.segmentPrefix), b = d.toString(16), a.push(b), a.push('">');
    case 2:
      return a.push('<svg aria-hidden="true" style="display:none" id="'), a.push(b.segmentPrefix), b = d.toString(16), a.push(b), a.push('">');
    case 3:
      return a.push('<math aria-hidden="true" style="display:none" id="'), a.push(b.segmentPrefix), b = d.toString(16), a.push(b), a.push('">');
    case 4:
      return a.push('<table hidden id="'), a.push(b.segmentPrefix), b = d.toString(16), a.push(b), a.push('">');
    case 5:
      return a.push('<table hidden><tbody id="'), a.push(b.segmentPrefix), b = d.toString(16), a.push(b), a.push('">');
    case 6:
      return a.push('<table hidden><tr id="'), a.push(b.segmentPrefix), b = d.toString(16), a.push(b), a.push('">');
    case 7:
      return a.push('<table hidden><colgroup id="'), a.push(b.segmentPrefix), b = d.toString(16), a.push(b), a.push('">');
    default:
      throw Error(l$2(397));
  }
}
function Ba$1(a, b) {
  switch (b.insertionMode) {
    case 0:
    case 1:
      return a.push("</div>");
    case 2:
      return a.push("</svg>");
    case 3:
      return a.push("</math>");
    case 4:
      return a.push("</table>");
    case 5:
      return a.push("</tbody></table>");
    case 6:
      return a.push("</tr></table>");
    case 7:
      return a.push("</colgroup></table>");
    default:
      throw Error(l$2(397));
  }
}
var Ca$1 = /[<\u2028\u2029]/g;
function Da$1(a) {
  return JSON.stringify(a).replace(Ca$1, function(a2) {
    switch (a2) {
      case "<":
        return "\\u003c";
      case "\u2028":
        return "\\u2028";
      case "\u2029":
        return "\\u2029";
      default:
        throw Error("escapeJSStringsForInstructionScripts encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React");
    }
  });
}
function Ea$1(a, b) {
  b = void 0 === b ? "" : b;
  return { bootstrapChunks: [], startInlineScript: "<script>", placeholderPrefix: b + "P:", segmentPrefix: b + "S:", boundaryPrefix: b + "B:", idPrefix: b, nextSuspenseID: 0, sentCompleteSegmentFunction: false, sentCompleteBoundaryFunction: false, sentClientRenderFunction: false, generateStaticMarkup: a };
}
function Fa$1(a, b, c, d) {
  if (c.generateStaticMarkup)
    return a.push(v(b)), false;
  "" === b ? a = d : (d && a.push("<!-- -->"), a.push(v(b)), a = true);
  return a;
}
var B$1 = Object.assign, Ga$1 = Symbol.for("react.element"), Ha$1 = Symbol.for("react.portal"), Ia$1 = Symbol.for("react.fragment"), Ja$1 = Symbol.for("react.strict_mode"), Ka$1 = Symbol.for("react.profiler"), La$1 = Symbol.for("react.provider"), Ma$1 = Symbol.for("react.context"), Na$1 = Symbol.for("react.forward_ref"), Oa$1 = Symbol.for("react.suspense"), Pa$1 = Symbol.for("react.suspense_list"), Qa$1 = Symbol.for("react.memo"), Ra$1 = Symbol.for("react.lazy"), Sa$1 = Symbol.for("react.scope"), Ta$1 = Symbol.for("react.debug_trace_mode"), Ua$1 = Symbol.for("react.legacy_hidden"), Va$1 = Symbol.for("react.default_value"), Wa$1 = Symbol.iterator;
function Xa$1(a) {
  if (null == a)
    return null;
  if ("function" === typeof a)
    return a.displayName || a.name || null;
  if ("string" === typeof a)
    return a;
  switch (a) {
    case Ia$1:
      return "Fragment";
    case Ha$1:
      return "Portal";
    case Ka$1:
      return "Profiler";
    case Ja$1:
      return "StrictMode";
    case Oa$1:
      return "Suspense";
    case Pa$1:
      return "SuspenseList";
  }
  if ("object" === typeof a)
    switch (a.$$typeof) {
      case Ma$1:
        return (a.displayName || "Context") + ".Consumer";
      case La$1:
        return (a._context.displayName || "Context") + ".Provider";
      case Na$1:
        var b = a.render;
        a = a.displayName;
        a || (a = b.displayName || b.name || "", a = "" !== a ? "ForwardRef(" + a + ")" : "ForwardRef");
        return a;
      case Qa$1:
        return b = a.displayName || null, null !== b ? b : Xa$1(a.type) || "Memo";
      case Ra$1:
        b = a._payload;
        a = a._init;
        try {
          return Xa$1(a(b));
        } catch (c) {
        }
    }
  return null;
}
var Ya$1 = {};
function Za$1(a, b) {
  a = a.contextTypes;
  if (!a)
    return Ya$1;
  var c = {}, d;
  for (d in a)
    c[d] = b[d];
  return c;
}
var E$1 = null;
function F(a, b) {
  if (a !== b) {
    a.context._currentValue2 = a.parentValue;
    a = a.parent;
    var c = b.parent;
    if (null === a) {
      if (null !== c)
        throw Error(l$2(401));
    } else {
      if (null === c)
        throw Error(l$2(401));
      F(a, c);
    }
    b.context._currentValue2 = b.value;
  }
}
function $a$1(a) {
  a.context._currentValue2 = a.parentValue;
  a = a.parent;
  null !== a && $a$1(a);
}
function ab$1(a) {
  var b = a.parent;
  null !== b && ab$1(b);
  a.context._currentValue2 = a.value;
}
function bb$1(a, b) {
  a.context._currentValue2 = a.parentValue;
  a = a.parent;
  if (null === a)
    throw Error(l$2(402));
  a.depth === b.depth ? F(a, b) : bb$1(a, b);
}
function cb$1(a, b) {
  var c = b.parent;
  if (null === c)
    throw Error(l$2(402));
  a.depth === c.depth ? F(a, c) : cb$1(a, c);
  b.context._currentValue2 = b.value;
}
function G(a) {
  var b = E$1;
  b !== a && (null === b ? ab$1(a) : null === a ? $a$1(b) : b.depth === a.depth ? F(b, a) : b.depth > a.depth ? bb$1(b, a) : cb$1(b, a), E$1 = a);
}
var db$1 = { isMounted: function() {
  return false;
}, enqueueSetState: function(a, b) {
  a = a._reactInternals;
  null !== a.queue && a.queue.push(b);
}, enqueueReplaceState: function(a, b) {
  a = a._reactInternals;
  a.replace = true;
  a.queue = [b];
}, enqueueForceUpdate: function() {
} };
function eb$1(a, b, c, d) {
  var f2 = void 0 !== a.state ? a.state : null;
  a.updater = db$1;
  a.props = c;
  a.state = f2;
  var e = { queue: [], replace: false };
  a._reactInternals = e;
  var g2 = b.contextType;
  a.context = "object" === typeof g2 && null !== g2 ? g2._currentValue2 : d;
  g2 = b.getDerivedStateFromProps;
  "function" === typeof g2 && (g2 = g2(c, f2), f2 = null === g2 || void 0 === g2 ? f2 : B$1({}, f2, g2), a.state = f2);
  if ("function" !== typeof b.getDerivedStateFromProps && "function" !== typeof a.getSnapshotBeforeUpdate && ("function" === typeof a.UNSAFE_componentWillMount || "function" === typeof a.componentWillMount))
    if (b = a.state, "function" === typeof a.componentWillMount && a.componentWillMount(), "function" === typeof a.UNSAFE_componentWillMount && a.UNSAFE_componentWillMount(), b !== a.state && db$1.enqueueReplaceState(a, a.state, null), null !== e.queue && 0 < e.queue.length)
      if (b = e.queue, g2 = e.replace, e.queue = null, e.replace = false, g2 && 1 === b.length)
        a.state = b[0];
      else {
        e = g2 ? b[0] : a.state;
        f2 = true;
        for (g2 = g2 ? 1 : 0; g2 < b.length; g2++) {
          var h = b[g2];
          h = "function" === typeof h ? h.call(a, e, c, d) : h;
          null != h && (f2 ? (f2 = false, e = B$1({}, e, h)) : B$1(e, h));
        }
        a.state = e;
      }
    else
      e.queue = null;
}
var fb$1 = { id: 1, overflow: "" };
function gb$1(a, b, c) {
  var d = a.id;
  a = a.overflow;
  var f2 = 32 - H$1(d) - 1;
  d &= ~(1 << f2);
  c += 1;
  var e = 32 - H$1(b) + f2;
  if (30 < e) {
    var g2 = f2 - f2 % 5;
    e = (d & (1 << g2) - 1).toString(32);
    d >>= g2;
    f2 -= g2;
    return { id: 1 << 32 - H$1(b) + f2 | c << f2 | d, overflow: e + a };
  }
  return { id: 1 << e | c << f2 | d, overflow: a };
}
var H$1 = Math.clz32 ? Math.clz32 : hb$1, ib$1 = Math.log, jb$1 = Math.LN2;
function hb$1(a) {
  a >>>= 0;
  return 0 === a ? 32 : 31 - (ib$1(a) / jb$1 | 0) | 0;
}
function kb$1(a, b) {
  return a === b && (0 !== a || 1 / a === 1 / b) || a !== a && b !== b;
}
var lb$1 = "function" === typeof Object.is ? Object.is : kb$1, I$1 = null, ob$1 = null, J$1 = null, K$1 = null, L$1 = false, M$1 = false, N$1 = 0, O$1 = null, P$1 = 0;
function Q$1() {
  if (null === I$1)
    throw Error(l$2(321));
  return I$1;
}
function pb$1() {
  if (0 < P$1)
    throw Error(l$2(312));
  return { memoizedState: null, queue: null, next: null };
}
function qb$1() {
  null === K$1 ? null === J$1 ? (L$1 = false, J$1 = K$1 = pb$1()) : (L$1 = true, K$1 = J$1) : null === K$1.next ? (L$1 = false, K$1 = K$1.next = pb$1()) : (L$1 = true, K$1 = K$1.next);
  return K$1;
}
function rb$1() {
  ob$1 = I$1 = null;
  M$1 = false;
  J$1 = null;
  P$1 = 0;
  K$1 = O$1 = null;
}
function sb$1(a, b) {
  return "function" === typeof b ? b(a) : b;
}
function tb$1(a, b, c) {
  I$1 = Q$1();
  K$1 = qb$1();
  if (L$1) {
    var d = K$1.queue;
    b = d.dispatch;
    if (null !== O$1 && (c = O$1.get(d), void 0 !== c)) {
      O$1.delete(d);
      d = K$1.memoizedState;
      do
        d = a(d, c.action), c = c.next;
      while (null !== c);
      K$1.memoizedState = d;
      return [d, b];
    }
    return [K$1.memoizedState, b];
  }
  a = a === sb$1 ? "function" === typeof b ? b() : b : void 0 !== c ? c(b) : b;
  K$1.memoizedState = a;
  a = K$1.queue = { last: null, dispatch: null };
  a = a.dispatch = ub$1.bind(null, I$1, a);
  return [K$1.memoizedState, a];
}
function vb$1(a, b) {
  I$1 = Q$1();
  K$1 = qb$1();
  b = void 0 === b ? null : b;
  if (null !== K$1) {
    var c = K$1.memoizedState;
    if (null !== c && null !== b) {
      var d = c[1];
      a:
        if (null === d)
          d = false;
        else {
          for (var f2 = 0; f2 < d.length && f2 < b.length; f2++)
            if (!lb$1(b[f2], d[f2])) {
              d = false;
              break a;
            }
          d = true;
        }
      if (d)
        return c[0];
    }
  }
  a = a();
  K$1.memoizedState = [a, b];
  return a;
}
function ub$1(a, b, c) {
  if (25 <= P$1)
    throw Error(l$2(301));
  if (a === I$1)
    if (M$1 = true, a = { action: c, next: null }, null === O$1 && (O$1 = /* @__PURE__ */ new Map()), c = O$1.get(b), void 0 === c)
      O$1.set(b, a);
    else {
      for (b = c; null !== b.next; )
        b = b.next;
      b.next = a;
    }
}
function wb$1() {
  throw Error(l$2(394));
}
function R$1() {
}
var xb$1 = { readContext: function(a) {
  return a._currentValue2;
}, useContext: function(a) {
  Q$1();
  return a._currentValue2;
}, useMemo: vb$1, useReducer: tb$1, useRef: function(a) {
  I$1 = Q$1();
  K$1 = qb$1();
  var b = K$1.memoizedState;
  return null === b ? (a = { current: a }, K$1.memoizedState = a) : b;
}, useState: function(a) {
  return tb$1(sb$1, a);
}, useInsertionEffect: R$1, useLayoutEffect: function() {
}, useCallback: function(a, b) {
  return vb$1(function() {
    return a;
  }, b);
}, useImperativeHandle: R$1, useEffect: R$1, useDebugValue: R$1, useDeferredValue: function(a) {
  Q$1();
  return a;
}, useTransition: function() {
  Q$1();
  return [
    false,
    wb$1
  ];
}, useId: function() {
  var a = ob$1.treeContext;
  var b = a.overflow;
  a = a.id;
  a = (a & ~(1 << 32 - H$1(a) - 1)).toString(32) + b;
  var c = S$1;
  if (null === c)
    throw Error(l$2(404));
  b = N$1++;
  a = ":" + c.idPrefix + "R" + a;
  0 < b && (a += "H" + b.toString(32));
  return a + ":";
}, useMutableSource: function(a, b) {
  Q$1();
  return b(a._source);
}, useSyncExternalStore: function(a, b, c) {
  if (void 0 === c)
    throw Error(l$2(407));
  return c();
} }, S$1 = null, yb$1 = aa$1.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentDispatcher;
function zb$1(a) {
  console.error(a);
  return null;
}
function T$1() {
}
function Ab$1(a, b, c, d, f2, e, g2, h, k2) {
  var m2 = [], n2 = /* @__PURE__ */ new Set();
  b = { destination: null, responseState: b, progressiveChunkSize: void 0 === d ? 12800 : d, status: 0, fatalError: null, nextSegmentId: 0, allPendingTasks: 0, pendingRootTasks: 0, completedRootSegment: null, abortableTasks: n2, pingedTasks: m2, clientRenderedBoundaries: [], completedBoundaries: [], partialBoundaries: [], onError: void 0 === f2 ? zb$1 : f2, onAllReady: void 0 === e ? T$1 : e, onShellReady: void 0 === g2 ? T$1 : g2, onShellError: void 0 === h ? T$1 : h, onFatalError: void 0 === k2 ? T$1 : k2 };
  c = U$1(b, 0, null, c, false, false);
  c.parentFlushed = true;
  a = Bb$1(b, a, null, c, n2, Ya$1, null, fb$1);
  m2.push(a);
  return b;
}
function Bb$1(a, b, c, d, f2, e, g2, h) {
  a.allPendingTasks++;
  null === c ? a.pendingRootTasks++ : c.pendingTasks++;
  var k2 = { node: b, ping: function() {
    var b2 = a.pingedTasks;
    b2.push(k2);
    1 === b2.length && Cb$1(a);
  }, blockedBoundary: c, blockedSegment: d, abortSet: f2, legacyContext: e, context: g2, treeContext: h };
  f2.add(k2);
  return k2;
}
function U$1(a, b, c, d, f2, e) {
  return { status: 0, id: -1, index: b, parentFlushed: false, chunks: [], children: [], formatContext: d, boundary: c, lastPushedText: f2, textEmbedded: e };
}
function V$1(a, b) {
  a = a.onError(b);
  if (null != a && "string" !== typeof a)
    throw Error('onError returned something with a type other than "string". onError should return a string and may return null or undefined but must not return anything else. It received something of type "' + typeof a + '" instead');
  return a;
}
function W$1(a, b) {
  var c = a.onShellError;
  c(b);
  c = a.onFatalError;
  c(b);
  null !== a.destination ? (a.status = 2, a.destination.destroy(b)) : (a.status = 1, a.fatalError = b);
}
function Db$1(a, b, c, d, f2) {
  I$1 = {};
  ob$1 = b;
  N$1 = 0;
  for (a = c(d, f2); M$1; )
    M$1 = false, N$1 = 0, P$1 += 1, K$1 = null, a = c(d, f2);
  rb$1();
  return a;
}
function Eb$1(a, b, c, d) {
  var f2 = c.render(), e = d.childContextTypes;
  if (null !== e && void 0 !== e) {
    var g2 = b.legacyContext;
    if ("function" !== typeof c.getChildContext)
      d = g2;
    else {
      c = c.getChildContext();
      for (var h in c)
        if (!(h in e))
          throw Error(l$2(108, Xa$1(d) || "Unknown", h));
      d = B$1({}, g2, c);
    }
    b.legacyContext = d;
    X$1(a, b, f2);
    b.legacyContext = g2;
  } else
    X$1(a, b, f2);
}
function Fb(a, b) {
  if (a && a.defaultProps) {
    b = B$1({}, b);
    a = a.defaultProps;
    for (var c in a)
      void 0 === b[c] && (b[c] = a[c]);
    return b;
  }
  return b;
}
function Gb$1(a, b, c, d, f2) {
  if ("function" === typeof c)
    if (c.prototype && c.prototype.isReactComponent) {
      f2 = Za$1(c, b.legacyContext);
      var e = c.contextType;
      e = new c(d, "object" === typeof e && null !== e ? e._currentValue2 : f2);
      eb$1(e, c, d, f2);
      Eb$1(a, b, e, c);
    } else {
      e = Za$1(c, b.legacyContext);
      f2 = Db$1(a, b, c, d, e);
      var g2 = 0 !== N$1;
      if ("object" === typeof f2 && null !== f2 && "function" === typeof f2.render && void 0 === f2.$$typeof)
        eb$1(f2, c, d, e), Eb$1(a, b, f2, c);
      else if (g2) {
        d = b.treeContext;
        b.treeContext = gb$1(d, 1, 0);
        try {
          X$1(a, b, f2);
        } finally {
          b.treeContext = d;
        }
      } else
        X$1(a, b, f2);
    }
  else if ("string" === typeof c) {
    f2 = b.blockedSegment;
    e = ya$1(f2.chunks, c, d, a.responseState, f2.formatContext);
    f2.lastPushedText = false;
    g2 = f2.formatContext;
    f2.formatContext = ra$1(g2, c, d);
    Hb$1(a, b, e);
    f2.formatContext = g2;
    switch (c) {
      case "area":
      case "base":
      case "br":
      case "col":
      case "embed":
      case "hr":
      case "img":
      case "input":
      case "keygen":
      case "link":
      case "meta":
      case "param":
      case "source":
      case "track":
      case "wbr":
        break;
      default:
        f2.chunks.push("</", c, ">");
    }
    f2.lastPushedText = false;
  } else {
    switch (c) {
      case Ua$1:
      case Ta$1:
      case Ja$1:
      case Ka$1:
      case Ia$1:
        X$1(a, b, d.children);
        return;
      case Pa$1:
        X$1(a, b, d.children);
        return;
      case Sa$1:
        throw Error(l$2(343));
      case Oa$1:
        a: {
          c = b.blockedBoundary;
          f2 = b.blockedSegment;
          e = d.fallback;
          d = d.children;
          g2 = /* @__PURE__ */ new Set();
          var h = { id: null, rootSegmentID: -1, parentFlushed: false, pendingTasks: 0, forceClientRender: false, completedSegments: [], byteSize: 0, fallbackAbortableTasks: g2, errorDigest: null }, k2 = U$1(a, f2.chunks.length, h, f2.formatContext, false, false);
          f2.children.push(k2);
          f2.lastPushedText = false;
          var m2 = U$1(a, 0, null, f2.formatContext, false, false);
          m2.parentFlushed = true;
          b.blockedBoundary = h;
          b.blockedSegment = m2;
          try {
            if (Hb$1(
              a,
              b,
              d
            ), a.responseState.generateStaticMarkup || m2.lastPushedText && m2.textEmbedded && m2.chunks.push("<!-- -->"), m2.status = 1, Y$1(h, m2), 0 === h.pendingTasks)
              break a;
          } catch (n2) {
            m2.status = 4, h.forceClientRender = true, h.errorDigest = V$1(a, n2);
          } finally {
            b.blockedBoundary = c, b.blockedSegment = f2;
          }
          b = Bb$1(a, e, c, k2, g2, b.legacyContext, b.context, b.treeContext);
          a.pingedTasks.push(b);
        }
        return;
    }
    if ("object" === typeof c && null !== c)
      switch (c.$$typeof) {
        case Na$1:
          d = Db$1(a, b, c.render, d, f2);
          if (0 !== N$1) {
            c = b.treeContext;
            b.treeContext = gb$1(c, 1, 0);
            try {
              X$1(a, b, d);
            } finally {
              b.treeContext = c;
            }
          } else
            X$1(a, b, d);
          return;
        case Qa$1:
          c = c.type;
          d = Fb(c, d);
          Gb$1(a, b, c, d, f2);
          return;
        case La$1:
          f2 = d.children;
          c = c._context;
          d = d.value;
          e = c._currentValue2;
          c._currentValue2 = d;
          g2 = E$1;
          E$1 = d = { parent: g2, depth: null === g2 ? 0 : g2.depth + 1, context: c, parentValue: e, value: d };
          b.context = d;
          X$1(a, b, f2);
          a = E$1;
          if (null === a)
            throw Error(l$2(403));
          d = a.parentValue;
          a.context._currentValue2 = d === Va$1 ? a.context._defaultValue : d;
          a = E$1 = a.parent;
          b.context = a;
          return;
        case Ma$1:
          d = d.children;
          d = d(c._currentValue2);
          X$1(a, b, d);
          return;
        case Ra$1:
          f2 = c._init;
          c = f2(c._payload);
          d = Fb(c, d);
          Gb$1(
            a,
            b,
            c,
            d,
            void 0
          );
          return;
      }
    throw Error(l$2(130, null == c ? c : typeof c, ""));
  }
}
function X$1(a, b, c) {
  b.node = c;
  if ("object" === typeof c && null !== c) {
    switch (c.$$typeof) {
      case Ga$1:
        Gb$1(a, b, c.type, c.props, c.ref);
        return;
      case Ha$1:
        throw Error(l$2(257));
      case Ra$1:
        var d = c._init;
        c = d(c._payload);
        X$1(a, b, c);
        return;
    }
    if (qa$1(c)) {
      Ib$1(a, b, c);
      return;
    }
    null === c || "object" !== typeof c ? d = null : (d = Wa$1 && c[Wa$1] || c["@@iterator"], d = "function" === typeof d ? d : null);
    if (d && (d = d.call(c))) {
      c = d.next();
      if (!c.done) {
        var f2 = [];
        do
          f2.push(c.value), c = d.next();
        while (!c.done);
        Ib$1(a, b, f2);
      }
      return;
    }
    a = Object.prototype.toString.call(c);
    throw Error(l$2(31, "[object Object]" === a ? "object with keys {" + Object.keys(c).join(", ") + "}" : a));
  }
  "string" === typeof c ? (d = b.blockedSegment, d.lastPushedText = Fa$1(b.blockedSegment.chunks, c, a.responseState, d.lastPushedText)) : "number" === typeof c && (d = b.blockedSegment, d.lastPushedText = Fa$1(b.blockedSegment.chunks, "" + c, a.responseState, d.lastPushedText));
}
function Ib$1(a, b, c) {
  for (var d = c.length, f2 = 0; f2 < d; f2++) {
    var e = b.treeContext;
    b.treeContext = gb$1(e, d, f2);
    try {
      Hb$1(a, b, c[f2]);
    } finally {
      b.treeContext = e;
    }
  }
}
function Hb$1(a, b, c) {
  var d = b.blockedSegment.formatContext, f2 = b.legacyContext, e = b.context;
  try {
    return X$1(a, b, c);
  } catch (k2) {
    if (rb$1(), "object" === typeof k2 && null !== k2 && "function" === typeof k2.then) {
      c = k2;
      var g2 = b.blockedSegment, h = U$1(a, g2.chunks.length, null, g2.formatContext, g2.lastPushedText, true);
      g2.children.push(h);
      g2.lastPushedText = false;
      a = Bb$1(a, b.node, b.blockedBoundary, h, b.abortSet, b.legacyContext, b.context, b.treeContext).ping;
      c.then(a, a);
      b.blockedSegment.formatContext = d;
      b.legacyContext = f2;
      b.context = e;
      G(e);
    } else
      throw b.blockedSegment.formatContext = d, b.legacyContext = f2, b.context = e, G(e), k2;
  }
}
function Jb$1(a) {
  var b = a.blockedBoundary;
  a = a.blockedSegment;
  a.status = 3;
  Kb$1(this, b, a);
}
function Lb$1(a, b, c) {
  var d = a.blockedBoundary;
  a.blockedSegment.status = 3;
  null === d ? (b.allPendingTasks--, 2 !== b.status && (b.status = 2, null !== b.destination && b.destination.push(null))) : (d.pendingTasks--, d.forceClientRender || (d.forceClientRender = true, a = void 0 === c ? Error(l$2(432)) : c, d.errorDigest = b.onError(a), d.parentFlushed && b.clientRenderedBoundaries.push(d)), d.fallbackAbortableTasks.forEach(function(a2) {
    return Lb$1(a2, b, c);
  }), d.fallbackAbortableTasks.clear(), b.allPendingTasks--, 0 === b.allPendingTasks && (d = b.onAllReady, d()));
}
function Y$1(a, b) {
  if (0 === b.chunks.length && 1 === b.children.length && null === b.children[0].boundary) {
    var c = b.children[0];
    c.id = b.id;
    c.parentFlushed = true;
    1 === c.status && Y$1(a, c);
  } else
    a.completedSegments.push(b);
}
function Kb$1(a, b, c) {
  if (null === b) {
    if (c.parentFlushed) {
      if (null !== a.completedRootSegment)
        throw Error(l$2(389));
      a.completedRootSegment = c;
    }
    a.pendingRootTasks--;
    0 === a.pendingRootTasks && (a.onShellError = T$1, b = a.onShellReady, b());
  } else
    b.pendingTasks--, b.forceClientRender || (0 === b.pendingTasks ? (c.parentFlushed && 1 === c.status && Y$1(b, c), b.parentFlushed && a.completedBoundaries.push(b), b.fallbackAbortableTasks.forEach(Jb$1, a), b.fallbackAbortableTasks.clear()) : c.parentFlushed && 1 === c.status && (Y$1(b, c), 1 === b.completedSegments.length && b.parentFlushed && a.partialBoundaries.push(b)));
  a.allPendingTasks--;
  0 === a.allPendingTasks && (a = a.onAllReady, a());
}
function Cb$1(a) {
  if (2 !== a.status) {
    var b = E$1, c = yb$1.current;
    yb$1.current = xb$1;
    var d = S$1;
    S$1 = a.responseState;
    try {
      var f2 = a.pingedTasks, e;
      for (e = 0; e < f2.length; e++) {
        var g2 = f2[e];
        var h = a, k2 = g2.blockedSegment;
        if (0 === k2.status) {
          G(g2.context);
          try {
            X$1(h, g2, g2.node), h.responseState.generateStaticMarkup || k2.lastPushedText && k2.textEmbedded && k2.chunks.push("<!-- -->"), g2.abortSet.delete(g2), k2.status = 1, Kb$1(h, g2.blockedBoundary, k2);
          } catch (z2) {
            if (rb$1(), "object" === typeof z2 && null !== z2 && "function" === typeof z2.then) {
              var m2 = g2.ping;
              z2.then(m2, m2);
            } else {
              g2.abortSet.delete(g2);
              k2.status = 4;
              var n2 = g2.blockedBoundary, q2 = z2, C2 = V$1(h, q2);
              null === n2 ? W$1(h, q2) : (n2.pendingTasks--, n2.forceClientRender || (n2.forceClientRender = true, n2.errorDigest = C2, n2.parentFlushed && h.clientRenderedBoundaries.push(n2)));
              h.allPendingTasks--;
              if (0 === h.allPendingTasks) {
                var D2 = h.onAllReady;
                D2();
              }
            }
          } finally {
          }
        }
      }
      f2.splice(0, e);
      null !== a.destination && Mb$1(a, a.destination);
    } catch (z2) {
      V$1(a, z2), W$1(a, z2);
    } finally {
      S$1 = d, yb$1.current = c, c === xb$1 && G(b);
    }
  }
}
function Z$1(a, b, c) {
  c.parentFlushed = true;
  switch (c.status) {
    case 0:
      var d = c.id = a.nextSegmentId++;
      c.lastPushedText = false;
      c.textEmbedded = false;
      a = a.responseState;
      b.push('<template id="');
      b.push(a.placeholderPrefix);
      a = d.toString(16);
      b.push(a);
      return b.push('"></template>');
    case 1:
      c.status = 2;
      var f2 = true;
      d = c.chunks;
      var e = 0;
      c = c.children;
      for (var g2 = 0; g2 < c.length; g2++) {
        for (f2 = c[g2]; e < f2.index; e++)
          b.push(d[e]);
        f2 = Nb$1(a, b, f2);
      }
      for (; e < d.length - 1; e++)
        b.push(d[e]);
      e < d.length && (f2 = b.push(d[e]));
      return f2;
    default:
      throw Error(l$2(390));
  }
}
function Nb$1(a, b, c) {
  var d = c.boundary;
  if (null === d)
    return Z$1(a, b, c);
  d.parentFlushed = true;
  if (d.forceClientRender)
    return a.responseState.generateStaticMarkup || (d = d.errorDigest, b.push("<!--$!-->"), b.push("<template"), d && (b.push(' data-dgst="'), d = v(d), b.push(d), b.push('"')), b.push("></template>")), Z$1(a, b, c), a = a.responseState.generateStaticMarkup ? true : b.push("<!--/$-->"), a;
  if (0 < d.pendingTasks) {
    d.rootSegmentID = a.nextSegmentId++;
    0 < d.completedSegments.length && a.partialBoundaries.push(d);
    var f2 = a.responseState;
    var e = f2.nextSuspenseID++;
    f2 = f2.boundaryPrefix + e.toString(16);
    d = d.id = f2;
    za$1(b, a.responseState, d);
    Z$1(a, b, c);
    return b.push("<!--/$-->");
  }
  if (d.byteSize > a.progressiveChunkSize)
    return d.rootSegmentID = a.nextSegmentId++, a.completedBoundaries.push(d), za$1(b, a.responseState, d.id), Z$1(a, b, c), b.push("<!--/$-->");
  a.responseState.generateStaticMarkup || b.push("<!--$-->");
  c = d.completedSegments;
  if (1 !== c.length)
    throw Error(l$2(391));
  Nb$1(a, b, c[0]);
  a = a.responseState.generateStaticMarkup ? true : b.push("<!--/$-->");
  return a;
}
function Ob$1(a, b, c) {
  Aa$1(b, a.responseState, c.formatContext, c.id);
  Nb$1(a, b, c);
  return Ba$1(b, c.formatContext);
}
function Pb$1(a, b, c) {
  for (var d = c.completedSegments, f2 = 0; f2 < d.length; f2++)
    Qb$1(a, b, c, d[f2]);
  d.length = 0;
  a = a.responseState;
  d = c.id;
  c = c.rootSegmentID;
  b.push(a.startInlineScript);
  a.sentCompleteBoundaryFunction ? b.push('$RC("') : (a.sentCompleteBoundaryFunction = true, b.push('function $RC(a,b){a=document.getElementById(a);b=document.getElementById(b);b.parentNode.removeChild(b);if(a){a=a.previousSibling;var f=a.parentNode,c=a.nextSibling,e=0;do{if(c&&8===c.nodeType){var d=c.data;if("/$"===d)if(0===e)break;else e--;else"$"!==d&&"$?"!==d&&"$!"!==d||e++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;b.firstChild;)f.insertBefore(b.firstChild,c);a.data="$";a._reactRetry&&a._reactRetry()}};$RC("'));
  if (null === d)
    throw Error(l$2(395));
  c = c.toString(16);
  b.push(d);
  b.push('","');
  b.push(a.segmentPrefix);
  b.push(c);
  return b.push('")<\/script>');
}
function Qb$1(a, b, c, d) {
  if (2 === d.status)
    return true;
  var f2 = d.id;
  if (-1 === f2) {
    if (-1 === (d.id = c.rootSegmentID))
      throw Error(l$2(392));
    return Ob$1(a, b, d);
  }
  Ob$1(a, b, d);
  a = a.responseState;
  b.push(a.startInlineScript);
  a.sentCompleteSegmentFunction ? b.push('$RS("') : (a.sentCompleteSegmentFunction = true, b.push('function $RS(a,b){a=document.getElementById(a);b=document.getElementById(b);for(a.parentNode.removeChild(a);a.firstChild;)b.parentNode.insertBefore(a.firstChild,b);b.parentNode.removeChild(b)};$RS("'));
  b.push(a.segmentPrefix);
  f2 = f2.toString(16);
  b.push(f2);
  b.push('","');
  b.push(a.placeholderPrefix);
  b.push(f2);
  return b.push('")<\/script>');
}
function Mb$1(a, b) {
  try {
    var c = a.completedRootSegment;
    if (null !== c && 0 === a.pendingRootTasks) {
      Nb$1(a, b, c);
      a.completedRootSegment = null;
      var d = a.responseState.bootstrapChunks;
      for (c = 0; c < d.length - 1; c++)
        b.push(d[c]);
      c < d.length && b.push(d[c]);
    }
    var f2 = a.clientRenderedBoundaries, e;
    for (e = 0; e < f2.length; e++) {
      var g2 = f2[e];
      d = b;
      var h = a.responseState, k2 = g2.id, m2 = g2.errorDigest, n2 = g2.errorMessage, q2 = g2.errorComponentStack;
      d.push(h.startInlineScript);
      h.sentClientRenderFunction ? d.push('$RX("') : (h.sentClientRenderFunction = true, d.push('function $RX(b,c,d,e){var a=document.getElementById(b);a&&(b=a.previousSibling,b.data="$!",a=a.dataset,c&&(a.dgst=c),d&&(a.msg=d),e&&(a.stck=e),b._reactRetry&&b._reactRetry())};$RX("'));
      if (null === k2)
        throw Error(l$2(395));
      d.push(k2);
      d.push('"');
      if (m2 || n2 || q2) {
        d.push(",");
        var C2 = Da$1(m2 || "");
        d.push(C2);
      }
      if (n2 || q2) {
        d.push(",");
        var D2 = Da$1(n2 || "");
        d.push(D2);
      }
      if (q2) {
        d.push(",");
        var z2 = Da$1(q2);
        d.push(z2);
      }
      if (!d.push(")<\/script>")) {
        a.destination = null;
        e++;
        f2.splice(0, e);
        return;
      }
    }
    f2.splice(0, e);
    var ba2 = a.completedBoundaries;
    for (e = 0; e < ba2.length; e++)
      if (!Pb$1(a, b, ba2[e])) {
        a.destination = null;
        e++;
        ba2.splice(0, e);
        return;
      }
    ba2.splice(0, e);
    var ca2 = a.partialBoundaries;
    for (e = 0; e < ca2.length; e++) {
      var mb2 = ca2[e];
      a: {
        f2 = a;
        g2 = b;
        var da2 = mb2.completedSegments;
        for (h = 0; h < da2.length; h++)
          if (!Qb$1(f2, g2, mb2, da2[h])) {
            h++;
            da2.splice(0, h);
            var nb2 = false;
            break a;
          }
        da2.splice(0, h);
        nb2 = true;
      }
      if (!nb2) {
        a.destination = null;
        e++;
        ca2.splice(0, e);
        return;
      }
    }
    ca2.splice(0, e);
    var ea2 = a.completedBoundaries;
    for (e = 0; e < ea2.length; e++)
      if (!Pb$1(a, b, ea2[e])) {
        a.destination = null;
        e++;
        ea2.splice(0, e);
        return;
      }
    ea2.splice(0, e);
  } finally {
    0 === a.allPendingTasks && 0 === a.pingedTasks.length && 0 === a.clientRenderedBoundaries.length && 0 === a.completedBoundaries.length && b.push(null);
  }
}
function Rb$1(a, b) {
  try {
    var c = a.abortableTasks;
    c.forEach(function(c2) {
      return Lb$1(c2, a, b);
    });
    c.clear();
    null !== a.destination && Mb$1(a, a.destination);
  } catch (d) {
    V$1(a, d), W$1(a, d);
  }
}
function Sb$1() {
}
function Tb$1(a, b, c, d) {
  var f2 = false, e = null, g2 = "", h = { push: function(a2) {
    null !== a2 && (g2 += a2);
    return true;
  }, destroy: function(a2) {
    f2 = true;
    e = a2;
  } }, k2 = false;
  a = Ab$1(a, Ea$1(c, b ? b.identifierPrefix : void 0), { insertionMode: 1, selectedValue: null }, Infinity, Sb$1, void 0, function() {
    k2 = true;
  }, void 0, void 0);
  Cb$1(a);
  Rb$1(a, d);
  if (1 === a.status)
    a.status = 2, h.destroy(a.fatalError);
  else if (2 !== a.status && null === a.destination) {
    a.destination = h;
    try {
      Mb$1(a, h);
    } catch (m2) {
      V$1(a, m2), W$1(a, m2);
    }
  }
  if (f2)
    throw e;
  if (!k2)
    throw Error(l$2(426));
  return g2;
}
reactDomServerLegacy_browser_production_min.renderToNodeStream = function() {
  throw Error(l$2(207));
};
reactDomServerLegacy_browser_production_min.renderToStaticMarkup = function(a, b) {
  return Tb$1(a, b, true, 'The server used "renderToStaticMarkup" which does not support Suspense. If you intended to have the server wait for the suspended component please switch to "renderToReadableStream" which supports Suspense on the server');
};
reactDomServerLegacy_browser_production_min.renderToStaticNodeStream = function() {
  throw Error(l$2(208));
};
reactDomServerLegacy_browser_production_min.renderToString = function(a, b) {
  return Tb$1(a, b, false, 'The server used "renderToString" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to "renderToReadableStream" which supports Suspense on the server');
};
reactDomServerLegacy_browser_production_min.version = "18.2.0";
var reactDomServer_browser_production_min = {};
/**
 * @license React
 * react-dom-server.browser.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var aa = reactExports$1;
function k(a) {
  for (var b = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, c = 1; c < arguments.length; c++)
    b += "&args[]=" + encodeURIComponent(arguments[c]);
  return "Minified React error #" + a + "; visit " + b + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
}
var l$1 = null, n = 0;
function p(a, b) {
  if (0 !== b.length)
    if (512 < b.length)
      0 < n && (a.enqueue(new Uint8Array(l$1.buffer, 0, n)), l$1 = new Uint8Array(512), n = 0), a.enqueue(b);
    else {
      var c = l$1.length - n;
      c < b.length && (0 === c ? a.enqueue(l$1) : (l$1.set(b.subarray(0, c), n), a.enqueue(l$1), b = b.subarray(c)), l$1 = new Uint8Array(512), n = 0);
      l$1.set(b, n);
      n += b.length;
    }
}
function t(a, b) {
  p(a, b);
  return true;
}
function ba(a) {
  l$1 && 0 < n && (a.enqueue(new Uint8Array(l$1.buffer, 0, n)), l$1 = null, n = 0);
}
var ca = new TextEncoder();
function u(a) {
  return ca.encode(a);
}
function w(a) {
  return ca.encode(a);
}
function da(a, b) {
  "function" === typeof a.error ? a.error(b) : a.close();
}
var x = Object.prototype.hasOwnProperty, ea = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/, fa = {}, ha = {};
function ia(a) {
  if (x.call(ha, a))
    return true;
  if (x.call(fa, a))
    return false;
  if (ea.test(a))
    return ha[a] = true;
  fa[a] = true;
  return false;
}
function y(a, b, c, d, f2, e, g2) {
  this.acceptsBooleans = 2 === b || 3 === b || 4 === b;
  this.attributeName = d;
  this.attributeNamespace = f2;
  this.mustUseProperty = c;
  this.propertyName = a;
  this.type = b;
  this.sanitizeURL = e;
  this.removeEmptyString = g2;
}
var z = {};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a) {
  z[a] = new y(a, 0, false, a, null, false, false);
});
[["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(a) {
  var b = a[0];
  z[b] = new y(b, 1, false, a[1], null, false, false);
});
["contentEditable", "draggable", "spellCheck", "value"].forEach(function(a) {
  z[a] = new y(a, 2, false, a.toLowerCase(), null, false, false);
});
["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(a) {
  z[a] = new y(a, 2, false, a, null, false, false);
});
"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a) {
  z[a] = new y(a, 3, false, a.toLowerCase(), null, false, false);
});
["checked", "multiple", "muted", "selected"].forEach(function(a) {
  z[a] = new y(a, 3, true, a, null, false, false);
});
["capture", "download"].forEach(function(a) {
  z[a] = new y(a, 4, false, a, null, false, false);
});
["cols", "rows", "size", "span"].forEach(function(a) {
  z[a] = new y(a, 6, false, a, null, false, false);
});
["rowSpan", "start"].forEach(function(a) {
  z[a] = new y(a, 5, false, a.toLowerCase(), null, false, false);
});
var ja = /[\-:]([a-z])/g;
function ka(a) {
  return a[1].toUpperCase();
}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a) {
  var b = a.replace(
    ja,
    ka
  );
  z[b] = new y(b, 1, false, a, null, false, false);
});
"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a) {
  var b = a.replace(ja, ka);
  z[b] = new y(b, 1, false, a, "http://www.w3.org/1999/xlink", false, false);
});
["xml:base", "xml:lang", "xml:space"].forEach(function(a) {
  var b = a.replace(ja, ka);
  z[b] = new y(b, 1, false, a, "http://www.w3.org/XML/1998/namespace", false, false);
});
["tabIndex", "crossOrigin"].forEach(function(a) {
  z[a] = new y(a, 1, false, a.toLowerCase(), null, false, false);
});
z.xlinkHref = new y("xlinkHref", 1, false, "xlink:href", "http://www.w3.org/1999/xlink", true, false);
["src", "href", "action", "formAction"].forEach(function(a) {
  z[a] = new y(a, 1, false, a.toLowerCase(), null, true, true);
});
var B = {
  animationIterationCount: true,
  aspectRatio: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  columns: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridArea: true,
  gridRow: true,
  gridRowEnd: true,
  gridRowSpan: true,
  gridRowStart: true,
  gridColumn: true,
  gridColumnEnd: true,
  gridColumnSpan: true,
  gridColumnStart: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
}, la = ["Webkit", "ms", "Moz", "O"];
Object.keys(B).forEach(function(a) {
  la.forEach(function(b) {
    b = b + a.charAt(0).toUpperCase() + a.substring(1);
    B[b] = B[a];
  });
});
var oa = /["'&<>]/;
function C(a) {
  if ("boolean" === typeof a || "number" === typeof a)
    return "" + a;
  a = "" + a;
  var b = oa.exec(a);
  if (b) {
    var c = "", d, f2 = 0;
    for (d = b.index; d < a.length; d++) {
      switch (a.charCodeAt(d)) {
        case 34:
          b = "&quot;";
          break;
        case 38:
          b = "&amp;";
          break;
        case 39:
          b = "&#x27;";
          break;
        case 60:
          b = "&lt;";
          break;
        case 62:
          b = "&gt;";
          break;
        default:
          continue;
      }
      f2 !== d && (c += a.substring(f2, d));
      f2 = d + 1;
      c += b;
    }
    a = f2 !== d ? c + a.substring(f2, d) : c;
  }
  return a;
}
var pa = /([A-Z])/g, qa = /^ms-/, ra = Array.isArray, sa = w("<script>"), ta = w("<\/script>"), ua = w('<script src="'), va = w('<script type="module" src="'), wa = w('" async=""><\/script>'), xa = /(<\/|<)(s)(cript)/gi;
function ya(a, b, c, d) {
  return "" + b + ("s" === c ? "\\u0073" : "\\u0053") + d;
}
function za(a, b, c, d, f2) {
  a = void 0 === a ? "" : a;
  b = void 0 === b ? sa : w('<script nonce="' + C(b) + '">');
  var e = [];
  void 0 !== c && e.push(b, u(("" + c).replace(xa, ya)), ta);
  if (void 0 !== d)
    for (c = 0; c < d.length; c++)
      e.push(ua, u(C(d[c])), wa);
  if (void 0 !== f2)
    for (d = 0; d < f2.length; d++)
      e.push(va, u(C(f2[d])), wa);
  return { bootstrapChunks: e, startInlineScript: b, placeholderPrefix: w(a + "P:"), segmentPrefix: w(a + "S:"), boundaryPrefix: a + "B:", idPrefix: a, nextSuspenseID: 0, sentCompleteSegmentFunction: false, sentCompleteBoundaryFunction: false, sentClientRenderFunction: false };
}
function D(a, b) {
  return { insertionMode: a, selectedValue: b };
}
function Aa(a) {
  return D("http://www.w3.org/2000/svg" === a ? 2 : "http://www.w3.org/1998/Math/MathML" === a ? 3 : 0, null);
}
function Ba(a, b, c) {
  switch (b) {
    case "select":
      return D(1, null != c.value ? c.value : c.defaultValue);
    case "svg":
      return D(2, null);
    case "math":
      return D(3, null);
    case "foreignObject":
      return D(1, null);
    case "table":
      return D(4, null);
    case "thead":
    case "tbody":
    case "tfoot":
      return D(5, null);
    case "colgroup":
      return D(7, null);
    case "tr":
      return D(6, null);
  }
  return 4 <= a.insertionMode || 0 === a.insertionMode ? D(1, null) : a;
}
var Ca = w("<!-- -->");
function Da(a, b, c, d) {
  if ("" === b)
    return d;
  d && a.push(Ca);
  a.push(u(C(b)));
  return true;
}
var Ea = /* @__PURE__ */ new Map(), Fa = w(' style="'), Ga = w(":"), Ha = w(";");
function Ia(a, b, c) {
  if ("object" !== typeof c)
    throw Error(k(62));
  b = true;
  for (var d in c)
    if (x.call(c, d)) {
      var f2 = c[d];
      if (null != f2 && "boolean" !== typeof f2 && "" !== f2) {
        if (0 === d.indexOf("--")) {
          var e = u(C(d));
          f2 = u(C(("" + f2).trim()));
        } else {
          e = d;
          var g2 = Ea.get(e);
          void 0 !== g2 ? e = g2 : (g2 = w(C(e.replace(pa, "-$1").toLowerCase().replace(qa, "-ms-"))), Ea.set(e, g2), e = g2);
          f2 = "number" === typeof f2 ? 0 === f2 || x.call(B, d) ? u("" + f2) : u(f2 + "px") : u(C(("" + f2).trim()));
        }
        b ? (b = false, a.push(Fa, e, Ga, f2)) : a.push(Ha, e, Ga, f2);
      }
    }
  b || a.push(E);
}
var H = w(" "), I = w('="'), E = w('"'), Ja = w('=""');
function J(a, b, c, d) {
  switch (c) {
    case "style":
      Ia(a, b, d);
      return;
    case "defaultValue":
    case "defaultChecked":
    case "innerHTML":
    case "suppressContentEditableWarning":
    case "suppressHydrationWarning":
      return;
  }
  if (!(2 < c.length) || "o" !== c[0] && "O" !== c[0] || "n" !== c[1] && "N" !== c[1]) {
    if (b = z.hasOwnProperty(c) ? z[c] : null, null !== b) {
      switch (typeof d) {
        case "function":
        case "symbol":
          return;
        case "boolean":
          if (!b.acceptsBooleans)
            return;
      }
      c = u(b.attributeName);
      switch (b.type) {
        case 3:
          d && a.push(H, c, Ja);
          break;
        case 4:
          true === d ? a.push(H, c, Ja) : false !== d && a.push(H, c, I, u(C(d)), E);
          break;
        case 5:
          isNaN(d) || a.push(H, c, I, u(C(d)), E);
          break;
        case 6:
          !isNaN(d) && 1 <= d && a.push(H, c, I, u(C(d)), E);
          break;
        default:
          b.sanitizeURL && (d = "" + d), a.push(H, c, I, u(C(d)), E);
      }
    } else if (ia(c)) {
      switch (typeof d) {
        case "function":
        case "symbol":
          return;
        case "boolean":
          if (b = c.toLowerCase().slice(0, 5), "data-" !== b && "aria-" !== b)
            return;
      }
      a.push(H, u(c), I, u(C(d)), E);
    }
  }
}
var K = w(">"), Ka = w("/>");
function L(a, b, c) {
  if (null != b) {
    if (null != c)
      throw Error(k(60));
    if ("object" !== typeof b || !("__html" in b))
      throw Error(k(61));
    b = b.__html;
    null !== b && void 0 !== b && a.push(u("" + b));
  }
}
function La(a) {
  var b = "";
  aa.Children.forEach(a, function(a2) {
    null != a2 && (b += a2);
  });
  return b;
}
var Ma = w(' selected=""');
function Na(a, b, c, d) {
  a.push(M(c));
  var f2 = c = null, e;
  for (e in b)
    if (x.call(b, e)) {
      var g2 = b[e];
      if (null != g2)
        switch (e) {
          case "children":
            c = g2;
            break;
          case "dangerouslySetInnerHTML":
            f2 = g2;
            break;
          default:
            J(a, d, e, g2);
        }
    }
  a.push(K);
  L(a, f2, c);
  return "string" === typeof c ? (a.push(u(C(c))), null) : c;
}
var Oa = w("\n"), Pa = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/, Qa = /* @__PURE__ */ new Map();
function M(a) {
  var b = Qa.get(a);
  if (void 0 === b) {
    if (!Pa.test(a))
      throw Error(k(65, a));
    b = w("<" + a);
    Qa.set(a, b);
  }
  return b;
}
var Ra = w("<!DOCTYPE html>");
function Sa(a, b, c, d, f2) {
  switch (b) {
    case "select":
      a.push(M("select"));
      var e = null, g2 = null;
      for (r2 in c)
        if (x.call(c, r2)) {
          var h = c[r2];
          if (null != h)
            switch (r2) {
              case "children":
                e = h;
                break;
              case "dangerouslySetInnerHTML":
                g2 = h;
                break;
              case "defaultValue":
              case "value":
                break;
              default:
                J(a, d, r2, h);
            }
        }
      a.push(K);
      L(a, g2, e);
      return e;
    case "option":
      g2 = f2.selectedValue;
      a.push(M("option"));
      var m2 = h = null, q2 = null;
      var r2 = null;
      for (e in c)
        if (x.call(c, e)) {
          var v2 = c[e];
          if (null != v2)
            switch (e) {
              case "children":
                h = v2;
                break;
              case "selected":
                q2 = v2;
                break;
              case "dangerouslySetInnerHTML":
                r2 = v2;
                break;
              case "value":
                m2 = v2;
              default:
                J(a, d, e, v2);
            }
        }
      if (null != g2)
        if (c = null !== m2 ? "" + m2 : La(h), ra(g2))
          for (d = 0; d < g2.length; d++) {
            if ("" + g2[d] === c) {
              a.push(Ma);
              break;
            }
          }
        else
          "" + g2 === c && a.push(Ma);
      else
        q2 && a.push(Ma);
      a.push(K);
      L(a, r2, h);
      return h;
    case "textarea":
      a.push(M("textarea"));
      r2 = g2 = e = null;
      for (h in c)
        if (x.call(c, h) && (m2 = c[h], null != m2))
          switch (h) {
            case "children":
              r2 = m2;
              break;
            case "value":
              e = m2;
              break;
            case "defaultValue":
              g2 = m2;
              break;
            case "dangerouslySetInnerHTML":
              throw Error(k(91));
            default:
              J(a, d, h, m2);
          }
      null === e && null !== g2 && (e = g2);
      a.push(K);
      if (null != r2) {
        if (null != e)
          throw Error(k(92));
        if (ra(r2) && 1 < r2.length)
          throw Error(k(93));
        e = "" + r2;
      }
      "string" === typeof e && "\n" === e[0] && a.push(Oa);
      null !== e && a.push(u(C("" + e)));
      return null;
    case "input":
      a.push(M("input"));
      m2 = r2 = h = e = null;
      for (g2 in c)
        if (x.call(c, g2) && (q2 = c[g2], null != q2))
          switch (g2) {
            case "children":
            case "dangerouslySetInnerHTML":
              throw Error(k(399, "input"));
            case "defaultChecked":
              m2 = q2;
              break;
            case "defaultValue":
              h = q2;
              break;
            case "checked":
              r2 = q2;
              break;
            case "value":
              e = q2;
              break;
            default:
              J(a, d, g2, q2);
          }
      null !== r2 ? J(
        a,
        d,
        "checked",
        r2
      ) : null !== m2 && J(a, d, "checked", m2);
      null !== e ? J(a, d, "value", e) : null !== h && J(a, d, "value", h);
      a.push(Ka);
      return null;
    case "menuitem":
      a.push(M("menuitem"));
      for (var A2 in c)
        if (x.call(c, A2) && (e = c[A2], null != e))
          switch (A2) {
            case "children":
            case "dangerouslySetInnerHTML":
              throw Error(k(400));
            default:
              J(a, d, A2, e);
          }
      a.push(K);
      return null;
    case "title":
      a.push(M("title"));
      e = null;
      for (v2 in c)
        if (x.call(c, v2) && (g2 = c[v2], null != g2))
          switch (v2) {
            case "children":
              e = g2;
              break;
            case "dangerouslySetInnerHTML":
              throw Error(k(434));
            default:
              J(a, d, v2, g2);
          }
      a.push(K);
      return e;
    case "listing":
    case "pre":
      a.push(M(b));
      g2 = e = null;
      for (m2 in c)
        if (x.call(c, m2) && (h = c[m2], null != h))
          switch (m2) {
            case "children":
              e = h;
              break;
            case "dangerouslySetInnerHTML":
              g2 = h;
              break;
            default:
              J(a, d, m2, h);
          }
      a.push(K);
      if (null != g2) {
        if (null != e)
          throw Error(k(60));
        if ("object" !== typeof g2 || !("__html" in g2))
          throw Error(k(61));
        c = g2.__html;
        null !== c && void 0 !== c && ("string" === typeof c && 0 < c.length && "\n" === c[0] ? a.push(Oa, u(c)) : a.push(u("" + c)));
      }
      "string" === typeof e && "\n" === e[0] && a.push(Oa);
      return e;
    case "area":
    case "base":
    case "br":
    case "col":
    case "embed":
    case "hr":
    case "img":
    case "keygen":
    case "link":
    case "meta":
    case "param":
    case "source":
    case "track":
    case "wbr":
      a.push(M(b));
      for (var F2 in c)
        if (x.call(c, F2) && (e = c[F2], null != e))
          switch (F2) {
            case "children":
            case "dangerouslySetInnerHTML":
              throw Error(k(399, b));
            default:
              J(a, d, F2, e);
          }
      a.push(Ka);
      return null;
    case "annotation-xml":
    case "color-profile":
    case "font-face":
    case "font-face-src":
    case "font-face-uri":
    case "font-face-format":
    case "font-face-name":
    case "missing-glyph":
      return Na(a, c, b, d);
    case "html":
      return 0 === f2.insertionMode && a.push(Ra), Na(a, c, b, d);
    default:
      if (-1 === b.indexOf("-") && "string" !== typeof c.is)
        return Na(a, c, b, d);
      a.push(M(b));
      g2 = e = null;
      for (q2 in c)
        if (x.call(c, q2) && (h = c[q2], null != h))
          switch (q2) {
            case "children":
              e = h;
              break;
            case "dangerouslySetInnerHTML":
              g2 = h;
              break;
            case "style":
              Ia(a, d, h);
              break;
            case "suppressContentEditableWarning":
            case "suppressHydrationWarning":
              break;
            default:
              ia(q2) && "function" !== typeof h && "symbol" !== typeof h && a.push(H, u(q2), I, u(C(h)), E);
          }
      a.push(K);
      L(a, g2, e);
      return e;
  }
}
var Ta = w("</"), Ua = w(">"), Va = w('<template id="'), Wa = w('"></template>'), Xa = w("<!--$-->"), Ya = w('<!--$?--><template id="'), Za = w('"></template>'), $a = w("<!--$!-->"), ab = w("<!--/$-->"), bb = w("<template"), cb = w('"'), db = w(' data-dgst="');
w(' data-msg="');
w(' data-stck="');
var eb = w("></template>");
function fb(a, b, c) {
  p(a, Ya);
  if (null === c)
    throw Error(k(395));
  p(a, c);
  return t(a, Za);
}
var gb = w('<div hidden id="'), hb = w('">'), ib = w("</div>"), jb = w('<svg aria-hidden="true" style="display:none" id="'), kb = w('">'), lb = w("</svg>"), mb = w('<math aria-hidden="true" style="display:none" id="'), nb = w('">'), ob = w("</math>"), pb = w('<table hidden id="'), qb = w('">'), rb = w("</table>"), sb = w('<table hidden><tbody id="'), tb = w('">'), ub = w("</tbody></table>"), vb = w('<table hidden><tr id="'), wb = w('">'), xb = w("</tr></table>"), yb = w('<table hidden><colgroup id="'), zb = w('">'), Ab = w("</colgroup></table>");
function Bb(a, b, c, d) {
  switch (c.insertionMode) {
    case 0:
    case 1:
      return p(a, gb), p(a, b.segmentPrefix), p(a, u(d.toString(16))), t(a, hb);
    case 2:
      return p(a, jb), p(a, b.segmentPrefix), p(a, u(d.toString(16))), t(a, kb);
    case 3:
      return p(a, mb), p(a, b.segmentPrefix), p(a, u(d.toString(16))), t(a, nb);
    case 4:
      return p(a, pb), p(a, b.segmentPrefix), p(a, u(d.toString(16))), t(a, qb);
    case 5:
      return p(a, sb), p(a, b.segmentPrefix), p(a, u(d.toString(16))), t(a, tb);
    case 6:
      return p(a, vb), p(a, b.segmentPrefix), p(a, u(d.toString(16))), t(a, wb);
    case 7:
      return p(
        a,
        yb
      ), p(a, b.segmentPrefix), p(a, u(d.toString(16))), t(a, zb);
    default:
      throw Error(k(397));
  }
}
function Cb(a, b) {
  switch (b.insertionMode) {
    case 0:
    case 1:
      return t(a, ib);
    case 2:
      return t(a, lb);
    case 3:
      return t(a, ob);
    case 4:
      return t(a, rb);
    case 5:
      return t(a, ub);
    case 6:
      return t(a, xb);
    case 7:
      return t(a, Ab);
    default:
      throw Error(k(397));
  }
}
var Db = w('function $RS(a,b){a=document.getElementById(a);b=document.getElementById(b);for(a.parentNode.removeChild(a);a.firstChild;)b.parentNode.insertBefore(a.firstChild,b);b.parentNode.removeChild(b)};$RS("'), Eb = w('$RS("'), Gb = w('","'), Hb = w('")<\/script>'), Ib = w('function $RC(a,b){a=document.getElementById(a);b=document.getElementById(b);b.parentNode.removeChild(b);if(a){a=a.previousSibling;var f=a.parentNode,c=a.nextSibling,e=0;do{if(c&&8===c.nodeType){var d=c.data;if("/$"===d)if(0===e)break;else e--;else"$"!==d&&"$?"!==d&&"$!"!==d||e++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;b.firstChild;)f.insertBefore(b.firstChild,c);a.data="$";a._reactRetry&&a._reactRetry()}};$RC("'), Jb = w('$RC("'), Kb = w('","'), Lb = w('")<\/script>'), Mb = w('function $RX(b,c,d,e){var a=document.getElementById(b);a&&(b=a.previousSibling,b.data="$!",a=a.dataset,c&&(a.dgst=c),d&&(a.msg=d),e&&(a.stck=e),b._reactRetry&&b._reactRetry())};$RX("'), Nb = w('$RX("'), Ob = w('"'), Pb = w(")<\/script>"), Qb = w(","), Rb = /[<\u2028\u2029]/g;
function Sb(a) {
  return JSON.stringify(a).replace(Rb, function(a2) {
    switch (a2) {
      case "<":
        return "\\u003c";
      case "\u2028":
        return "\\u2028";
      case "\u2029":
        return "\\u2029";
      default:
        throw Error("escapeJSStringsForInstructionScripts encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React");
    }
  });
}
var N = Object.assign, Tb = Symbol.for("react.element"), Ub = Symbol.for("react.portal"), Vb = Symbol.for("react.fragment"), Wb = Symbol.for("react.strict_mode"), Xb = Symbol.for("react.profiler"), Yb = Symbol.for("react.provider"), Zb = Symbol.for("react.context"), $b = Symbol.for("react.forward_ref"), ac = Symbol.for("react.suspense"), bc = Symbol.for("react.suspense_list"), cc = Symbol.for("react.memo"), dc = Symbol.for("react.lazy"), ec = Symbol.for("react.scope"), fc = Symbol.for("react.debug_trace_mode"), gc = Symbol.for("react.legacy_hidden"), hc = Symbol.for("react.default_value"), ic = Symbol.iterator;
function jc(a) {
  if (null == a)
    return null;
  if ("function" === typeof a)
    return a.displayName || a.name || null;
  if ("string" === typeof a)
    return a;
  switch (a) {
    case Vb:
      return "Fragment";
    case Ub:
      return "Portal";
    case Xb:
      return "Profiler";
    case Wb:
      return "StrictMode";
    case ac:
      return "Suspense";
    case bc:
      return "SuspenseList";
  }
  if ("object" === typeof a)
    switch (a.$$typeof) {
      case Zb:
        return (a.displayName || "Context") + ".Consumer";
      case Yb:
        return (a._context.displayName || "Context") + ".Provider";
      case $b:
        var b = a.render;
        a = a.displayName;
        a || (a = b.displayName || b.name || "", a = "" !== a ? "ForwardRef(" + a + ")" : "ForwardRef");
        return a;
      case cc:
        return b = a.displayName || null, null !== b ? b : jc(a.type) || "Memo";
      case dc:
        b = a._payload;
        a = a._init;
        try {
          return jc(a(b));
        } catch (c) {
        }
    }
  return null;
}
var kc = {};
function lc(a, b) {
  a = a.contextTypes;
  if (!a)
    return kc;
  var c = {}, d;
  for (d in a)
    c[d] = b[d];
  return c;
}
var O = null;
function P(a, b) {
  if (a !== b) {
    a.context._currentValue = a.parentValue;
    a = a.parent;
    var c = b.parent;
    if (null === a) {
      if (null !== c)
        throw Error(k(401));
    } else {
      if (null === c)
        throw Error(k(401));
      P(a, c);
    }
    b.context._currentValue = b.value;
  }
}
function mc(a) {
  a.context._currentValue = a.parentValue;
  a = a.parent;
  null !== a && mc(a);
}
function nc(a) {
  var b = a.parent;
  null !== b && nc(b);
  a.context._currentValue = a.value;
}
function oc(a, b) {
  a.context._currentValue = a.parentValue;
  a = a.parent;
  if (null === a)
    throw Error(k(402));
  a.depth === b.depth ? P(a, b) : oc(a, b);
}
function pc(a, b) {
  var c = b.parent;
  if (null === c)
    throw Error(k(402));
  a.depth === c.depth ? P(a, c) : pc(a, c);
  b.context._currentValue = b.value;
}
function Q(a) {
  var b = O;
  b !== a && (null === b ? nc(a) : null === a ? mc(b) : b.depth === a.depth ? P(b, a) : b.depth > a.depth ? oc(b, a) : pc(b, a), O = a);
}
var qc = { isMounted: function() {
  return false;
}, enqueueSetState: function(a, b) {
  a = a._reactInternals;
  null !== a.queue && a.queue.push(b);
}, enqueueReplaceState: function(a, b) {
  a = a._reactInternals;
  a.replace = true;
  a.queue = [b];
}, enqueueForceUpdate: function() {
} };
function rc(a, b, c, d) {
  var f2 = void 0 !== a.state ? a.state : null;
  a.updater = qc;
  a.props = c;
  a.state = f2;
  var e = { queue: [], replace: false };
  a._reactInternals = e;
  var g2 = b.contextType;
  a.context = "object" === typeof g2 && null !== g2 ? g2._currentValue : d;
  g2 = b.getDerivedStateFromProps;
  "function" === typeof g2 && (g2 = g2(c, f2), f2 = null === g2 || void 0 === g2 ? f2 : N({}, f2, g2), a.state = f2);
  if ("function" !== typeof b.getDerivedStateFromProps && "function" !== typeof a.getSnapshotBeforeUpdate && ("function" === typeof a.UNSAFE_componentWillMount || "function" === typeof a.componentWillMount))
    if (b = a.state, "function" === typeof a.componentWillMount && a.componentWillMount(), "function" === typeof a.UNSAFE_componentWillMount && a.UNSAFE_componentWillMount(), b !== a.state && qc.enqueueReplaceState(a, a.state, null), null !== e.queue && 0 < e.queue.length)
      if (b = e.queue, g2 = e.replace, e.queue = null, e.replace = false, g2 && 1 === b.length)
        a.state = b[0];
      else {
        e = g2 ? b[0] : a.state;
        f2 = true;
        for (g2 = g2 ? 1 : 0; g2 < b.length; g2++) {
          var h = b[g2];
          h = "function" === typeof h ? h.call(a, e, c, d) : h;
          null != h && (f2 ? (f2 = false, e = N({}, e, h)) : N(e, h));
        }
        a.state = e;
      }
    else
      e.queue = null;
}
var sc = { id: 1, overflow: "" };
function tc(a, b, c) {
  var d = a.id;
  a = a.overflow;
  var f2 = 32 - uc(d) - 1;
  d &= ~(1 << f2);
  c += 1;
  var e = 32 - uc(b) + f2;
  if (30 < e) {
    var g2 = f2 - f2 % 5;
    e = (d & (1 << g2) - 1).toString(32);
    d >>= g2;
    f2 -= g2;
    return { id: 1 << 32 - uc(b) + f2 | c << f2 | d, overflow: e + a };
  }
  return { id: 1 << e | c << f2 | d, overflow: a };
}
var uc = Math.clz32 ? Math.clz32 : vc, wc = Math.log, xc = Math.LN2;
function vc(a) {
  a >>>= 0;
  return 0 === a ? 32 : 31 - (wc(a) / xc | 0) | 0;
}
function yc(a, b) {
  return a === b && (0 !== a || 1 / a === 1 / b) || a !== a && b !== b;
}
var zc = "function" === typeof Object.is ? Object.is : yc, R = null, Ac = null, Bc = null, S = null, T = false, Cc = false, U = 0, V = null, Dc = 0;
function W() {
  if (null === R)
    throw Error(k(321));
  return R;
}
function Ec() {
  if (0 < Dc)
    throw Error(k(312));
  return { memoizedState: null, queue: null, next: null };
}
function Fc() {
  null === S ? null === Bc ? (T = false, Bc = S = Ec()) : (T = true, S = Bc) : null === S.next ? (T = false, S = S.next = Ec()) : (T = true, S = S.next);
  return S;
}
function Gc() {
  Ac = R = null;
  Cc = false;
  Bc = null;
  Dc = 0;
  S = V = null;
}
function Hc(a, b) {
  return "function" === typeof b ? b(a) : b;
}
function Ic(a, b, c) {
  R = W();
  S = Fc();
  if (T) {
    var d = S.queue;
    b = d.dispatch;
    if (null !== V && (c = V.get(d), void 0 !== c)) {
      V.delete(d);
      d = S.memoizedState;
      do
        d = a(d, c.action), c = c.next;
      while (null !== c);
      S.memoizedState = d;
      return [d, b];
    }
    return [S.memoizedState, b];
  }
  a = a === Hc ? "function" === typeof b ? b() : b : void 0 !== c ? c(b) : b;
  S.memoizedState = a;
  a = S.queue = { last: null, dispatch: null };
  a = a.dispatch = Jc.bind(null, R, a);
  return [S.memoizedState, a];
}
function Kc(a, b) {
  R = W();
  S = Fc();
  b = void 0 === b ? null : b;
  if (null !== S) {
    var c = S.memoizedState;
    if (null !== c && null !== b) {
      var d = c[1];
      a:
        if (null === d)
          d = false;
        else {
          for (var f2 = 0; f2 < d.length && f2 < b.length; f2++)
            if (!zc(b[f2], d[f2])) {
              d = false;
              break a;
            }
          d = true;
        }
      if (d)
        return c[0];
    }
  }
  a = a();
  S.memoizedState = [a, b];
  return a;
}
function Jc(a, b, c) {
  if (25 <= Dc)
    throw Error(k(301));
  if (a === R)
    if (Cc = true, a = { action: c, next: null }, null === V && (V = /* @__PURE__ */ new Map()), c = V.get(b), void 0 === c)
      V.set(b, a);
    else {
      for (b = c; null !== b.next; )
        b = b.next;
      b.next = a;
    }
}
function Lc() {
  throw Error(k(394));
}
function Mc() {
}
var Oc = { readContext: function(a) {
  return a._currentValue;
}, useContext: function(a) {
  W();
  return a._currentValue;
}, useMemo: Kc, useReducer: Ic, useRef: function(a) {
  R = W();
  S = Fc();
  var b = S.memoizedState;
  return null === b ? (a = { current: a }, S.memoizedState = a) : b;
}, useState: function(a) {
  return Ic(Hc, a);
}, useInsertionEffect: Mc, useLayoutEffect: function() {
}, useCallback: function(a, b) {
  return Kc(function() {
    return a;
  }, b);
}, useImperativeHandle: Mc, useEffect: Mc, useDebugValue: Mc, useDeferredValue: function(a) {
  W();
  return a;
}, useTransition: function() {
  W();
  return [false, Lc];
}, useId: function() {
  var a = Ac.treeContext;
  var b = a.overflow;
  a = a.id;
  a = (a & ~(1 << 32 - uc(a) - 1)).toString(32) + b;
  var c = Nc;
  if (null === c)
    throw Error(k(404));
  b = U++;
  a = ":" + c.idPrefix + "R" + a;
  0 < b && (a += "H" + b.toString(32));
  return a + ":";
}, useMutableSource: function(a, b) {
  W();
  return b(a._source);
}, useSyncExternalStore: function(a, b, c) {
  if (void 0 === c)
    throw Error(k(407));
  return c();
} }, Nc = null, Pc = aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentDispatcher;
function Qc(a) {
  console.error(a);
  return null;
}
function X() {
}
function Rc(a, b, c, d, f2, e, g2, h, m2) {
  var q2 = [], r2 = /* @__PURE__ */ new Set();
  b = { destination: null, responseState: b, progressiveChunkSize: void 0 === d ? 12800 : d, status: 0, fatalError: null, nextSegmentId: 0, allPendingTasks: 0, pendingRootTasks: 0, completedRootSegment: null, abortableTasks: r2, pingedTasks: q2, clientRenderedBoundaries: [], completedBoundaries: [], partialBoundaries: [], onError: void 0 === f2 ? Qc : f2, onAllReady: void 0 === e ? X : e, onShellReady: void 0 === g2 ? X : g2, onShellError: void 0 === h ? X : h, onFatalError: void 0 === m2 ? X : m2 };
  c = Sc(b, 0, null, c, false, false);
  c.parentFlushed = true;
  a = Tc(b, a, null, c, r2, kc, null, sc);
  q2.push(a);
  return b;
}
function Tc(a, b, c, d, f2, e, g2, h) {
  a.allPendingTasks++;
  null === c ? a.pendingRootTasks++ : c.pendingTasks++;
  var m2 = { node: b, ping: function() {
    var b2 = a.pingedTasks;
    b2.push(m2);
    1 === b2.length && Uc(a);
  }, blockedBoundary: c, blockedSegment: d, abortSet: f2, legacyContext: e, context: g2, treeContext: h };
  f2.add(m2);
  return m2;
}
function Sc(a, b, c, d, f2, e) {
  return { status: 0, id: -1, index: b, parentFlushed: false, chunks: [], children: [], formatContext: d, boundary: c, lastPushedText: f2, textEmbedded: e };
}
function Y(a, b) {
  a = a.onError(b);
  if (null != a && "string" !== typeof a)
    throw Error('onError returned something with a type other than "string". onError should return a string and may return null or undefined but must not return anything else. It received something of type "' + typeof a + '" instead');
  return a;
}
function Vc(a, b) {
  var c = a.onShellError;
  c(b);
  c = a.onFatalError;
  c(b);
  null !== a.destination ? (a.status = 2, da(a.destination, b)) : (a.status = 1, a.fatalError = b);
}
function Wc(a, b, c, d, f2) {
  R = {};
  Ac = b;
  U = 0;
  for (a = c(d, f2); Cc; )
    Cc = false, U = 0, Dc += 1, S = null, a = c(d, f2);
  Gc();
  return a;
}
function Xc(a, b, c, d) {
  var f2 = c.render(), e = d.childContextTypes;
  if (null !== e && void 0 !== e) {
    var g2 = b.legacyContext;
    if ("function" !== typeof c.getChildContext)
      d = g2;
    else {
      c = c.getChildContext();
      for (var h in c)
        if (!(h in e))
          throw Error(k(108, jc(d) || "Unknown", h));
      d = N({}, g2, c);
    }
    b.legacyContext = d;
    Z(a, b, f2);
    b.legacyContext = g2;
  } else
    Z(a, b, f2);
}
function Yc(a, b) {
  if (a && a.defaultProps) {
    b = N({}, b);
    a = a.defaultProps;
    for (var c in a)
      void 0 === b[c] && (b[c] = a[c]);
    return b;
  }
  return b;
}
function Zc(a, b, c, d, f2) {
  if ("function" === typeof c)
    if (c.prototype && c.prototype.isReactComponent) {
      f2 = lc(c, b.legacyContext);
      var e = c.contextType;
      e = new c(d, "object" === typeof e && null !== e ? e._currentValue : f2);
      rc(e, c, d, f2);
      Xc(a, b, e, c);
    } else {
      e = lc(c, b.legacyContext);
      f2 = Wc(a, b, c, d, e);
      var g2 = 0 !== U;
      if ("object" === typeof f2 && null !== f2 && "function" === typeof f2.render && void 0 === f2.$$typeof)
        rc(f2, c, d, e), Xc(a, b, f2, c);
      else if (g2) {
        d = b.treeContext;
        b.treeContext = tc(d, 1, 0);
        try {
          Z(a, b, f2);
        } finally {
          b.treeContext = d;
        }
      } else
        Z(a, b, f2);
    }
  else if ("string" === typeof c) {
    f2 = b.blockedSegment;
    e = Sa(f2.chunks, c, d, a.responseState, f2.formatContext);
    f2.lastPushedText = false;
    g2 = f2.formatContext;
    f2.formatContext = Ba(g2, c, d);
    $c(a, b, e);
    f2.formatContext = g2;
    switch (c) {
      case "area":
      case "base":
      case "br":
      case "col":
      case "embed":
      case "hr":
      case "img":
      case "input":
      case "keygen":
      case "link":
      case "meta":
      case "param":
      case "source":
      case "track":
      case "wbr":
        break;
      default:
        f2.chunks.push(Ta, u(c), Ua);
    }
    f2.lastPushedText = false;
  } else {
    switch (c) {
      case gc:
      case fc:
      case Wb:
      case Xb:
      case Vb:
        Z(a, b, d.children);
        return;
      case bc:
        Z(a, b, d.children);
        return;
      case ec:
        throw Error(k(343));
      case ac:
        a: {
          c = b.blockedBoundary;
          f2 = b.blockedSegment;
          e = d.fallback;
          d = d.children;
          g2 = /* @__PURE__ */ new Set();
          var h = { id: null, rootSegmentID: -1, parentFlushed: false, pendingTasks: 0, forceClientRender: false, completedSegments: [], byteSize: 0, fallbackAbortableTasks: g2, errorDigest: null }, m2 = Sc(a, f2.chunks.length, h, f2.formatContext, false, false);
          f2.children.push(m2);
          f2.lastPushedText = false;
          var q2 = Sc(a, 0, null, f2.formatContext, false, false);
          q2.parentFlushed = true;
          b.blockedBoundary = h;
          b.blockedSegment = q2;
          try {
            if ($c(
              a,
              b,
              d
            ), q2.lastPushedText && q2.textEmbedded && q2.chunks.push(Ca), q2.status = 1, ad(h, q2), 0 === h.pendingTasks)
              break a;
          } catch (r2) {
            q2.status = 4, h.forceClientRender = true, h.errorDigest = Y(a, r2);
          } finally {
            b.blockedBoundary = c, b.blockedSegment = f2;
          }
          b = Tc(a, e, c, m2, g2, b.legacyContext, b.context, b.treeContext);
          a.pingedTasks.push(b);
        }
        return;
    }
    if ("object" === typeof c && null !== c)
      switch (c.$$typeof) {
        case $b:
          d = Wc(a, b, c.render, d, f2);
          if (0 !== U) {
            c = b.treeContext;
            b.treeContext = tc(c, 1, 0);
            try {
              Z(a, b, d);
            } finally {
              b.treeContext = c;
            }
          } else
            Z(a, b, d);
          return;
        case cc:
          c = c.type;
          d = Yc(c, d);
          Zc(a, b, c, d, f2);
          return;
        case Yb:
          f2 = d.children;
          c = c._context;
          d = d.value;
          e = c._currentValue;
          c._currentValue = d;
          g2 = O;
          O = d = { parent: g2, depth: null === g2 ? 0 : g2.depth + 1, context: c, parentValue: e, value: d };
          b.context = d;
          Z(a, b, f2);
          a = O;
          if (null === a)
            throw Error(k(403));
          d = a.parentValue;
          a.context._currentValue = d === hc ? a.context._defaultValue : d;
          a = O = a.parent;
          b.context = a;
          return;
        case Zb:
          d = d.children;
          d = d(c._currentValue);
          Z(a, b, d);
          return;
        case dc:
          f2 = c._init;
          c = f2(c._payload);
          d = Yc(c, d);
          Zc(a, b, c, d, void 0);
          return;
      }
    throw Error(k(
      130,
      null == c ? c : typeof c,
      ""
    ));
  }
}
function Z(a, b, c) {
  b.node = c;
  if ("object" === typeof c && null !== c) {
    switch (c.$$typeof) {
      case Tb:
        Zc(a, b, c.type, c.props, c.ref);
        return;
      case Ub:
        throw Error(k(257));
      case dc:
        var d = c._init;
        c = d(c._payload);
        Z(a, b, c);
        return;
    }
    if (ra(c)) {
      bd(a, b, c);
      return;
    }
    null === c || "object" !== typeof c ? d = null : (d = ic && c[ic] || c["@@iterator"], d = "function" === typeof d ? d : null);
    if (d && (d = d.call(c))) {
      c = d.next();
      if (!c.done) {
        var f2 = [];
        do
          f2.push(c.value), c = d.next();
        while (!c.done);
        bd(a, b, f2);
      }
      return;
    }
    a = Object.prototype.toString.call(c);
    throw Error(k(31, "[object Object]" === a ? "object with keys {" + Object.keys(c).join(", ") + "}" : a));
  }
  "string" === typeof c ? (d = b.blockedSegment, d.lastPushedText = Da(b.blockedSegment.chunks, c, a.responseState, d.lastPushedText)) : "number" === typeof c && (d = b.blockedSegment, d.lastPushedText = Da(b.blockedSegment.chunks, "" + c, a.responseState, d.lastPushedText));
}
function bd(a, b, c) {
  for (var d = c.length, f2 = 0; f2 < d; f2++) {
    var e = b.treeContext;
    b.treeContext = tc(e, d, f2);
    try {
      $c(a, b, c[f2]);
    } finally {
      b.treeContext = e;
    }
  }
}
function $c(a, b, c) {
  var d = b.blockedSegment.formatContext, f2 = b.legacyContext, e = b.context;
  try {
    return Z(a, b, c);
  } catch (m2) {
    if (Gc(), "object" === typeof m2 && null !== m2 && "function" === typeof m2.then) {
      c = m2;
      var g2 = b.blockedSegment, h = Sc(a, g2.chunks.length, null, g2.formatContext, g2.lastPushedText, true);
      g2.children.push(h);
      g2.lastPushedText = false;
      a = Tc(a, b.node, b.blockedBoundary, h, b.abortSet, b.legacyContext, b.context, b.treeContext).ping;
      c.then(a, a);
      b.blockedSegment.formatContext = d;
      b.legacyContext = f2;
      b.context = e;
      Q(e);
    } else
      throw b.blockedSegment.formatContext = d, b.legacyContext = f2, b.context = e, Q(e), m2;
  }
}
function cd(a) {
  var b = a.blockedBoundary;
  a = a.blockedSegment;
  a.status = 3;
  dd(this, b, a);
}
function ed(a, b, c) {
  var d = a.blockedBoundary;
  a.blockedSegment.status = 3;
  null === d ? (b.allPendingTasks--, 2 !== b.status && (b.status = 2, null !== b.destination && b.destination.close())) : (d.pendingTasks--, d.forceClientRender || (d.forceClientRender = true, a = void 0 === c ? Error(k(432)) : c, d.errorDigest = b.onError(a), d.parentFlushed && b.clientRenderedBoundaries.push(d)), d.fallbackAbortableTasks.forEach(function(a2) {
    return ed(a2, b, c);
  }), d.fallbackAbortableTasks.clear(), b.allPendingTasks--, 0 === b.allPendingTasks && (d = b.onAllReady, d()));
}
function ad(a, b) {
  if (0 === b.chunks.length && 1 === b.children.length && null === b.children[0].boundary) {
    var c = b.children[0];
    c.id = b.id;
    c.parentFlushed = true;
    1 === c.status && ad(a, c);
  } else
    a.completedSegments.push(b);
}
function dd(a, b, c) {
  if (null === b) {
    if (c.parentFlushed) {
      if (null !== a.completedRootSegment)
        throw Error(k(389));
      a.completedRootSegment = c;
    }
    a.pendingRootTasks--;
    0 === a.pendingRootTasks && (a.onShellError = X, b = a.onShellReady, b());
  } else
    b.pendingTasks--, b.forceClientRender || (0 === b.pendingTasks ? (c.parentFlushed && 1 === c.status && ad(b, c), b.parentFlushed && a.completedBoundaries.push(b), b.fallbackAbortableTasks.forEach(cd, a), b.fallbackAbortableTasks.clear()) : c.parentFlushed && 1 === c.status && (ad(b, c), 1 === b.completedSegments.length && b.parentFlushed && a.partialBoundaries.push(b)));
  a.allPendingTasks--;
  0 === a.allPendingTasks && (a = a.onAllReady, a());
}
function Uc(a) {
  if (2 !== a.status) {
    var b = O, c = Pc.current;
    Pc.current = Oc;
    var d = Nc;
    Nc = a.responseState;
    try {
      var f2 = a.pingedTasks, e;
      for (e = 0; e < f2.length; e++) {
        var g2 = f2[e];
        var h = a, m2 = g2.blockedSegment;
        if (0 === m2.status) {
          Q(g2.context);
          try {
            Z(h, g2, g2.node), m2.lastPushedText && m2.textEmbedded && m2.chunks.push(Ca), g2.abortSet.delete(g2), m2.status = 1, dd(h, g2.blockedBoundary, m2);
          } catch (G2) {
            if (Gc(), "object" === typeof G2 && null !== G2 && "function" === typeof G2.then) {
              var q2 = g2.ping;
              G2.then(q2, q2);
            } else {
              g2.abortSet.delete(g2);
              m2.status = 4;
              var r2 = g2.blockedBoundary, v2 = G2, A2 = Y(h, v2);
              null === r2 ? Vc(h, v2) : (r2.pendingTasks--, r2.forceClientRender || (r2.forceClientRender = true, r2.errorDigest = A2, r2.parentFlushed && h.clientRenderedBoundaries.push(r2)));
              h.allPendingTasks--;
              if (0 === h.allPendingTasks) {
                var F2 = h.onAllReady;
                F2();
              }
            }
          } finally {
          }
        }
      }
      f2.splice(0, e);
      null !== a.destination && fd(a, a.destination);
    } catch (G2) {
      Y(a, G2), Vc(a, G2);
    } finally {
      Nc = d, Pc.current = c, c === Oc && Q(b);
    }
  }
}
function gd(a, b, c) {
  c.parentFlushed = true;
  switch (c.status) {
    case 0:
      var d = c.id = a.nextSegmentId++;
      c.lastPushedText = false;
      c.textEmbedded = false;
      a = a.responseState;
      p(b, Va);
      p(b, a.placeholderPrefix);
      a = u(d.toString(16));
      p(b, a);
      return t(b, Wa);
    case 1:
      c.status = 2;
      var f2 = true;
      d = c.chunks;
      var e = 0;
      c = c.children;
      for (var g2 = 0; g2 < c.length; g2++) {
        for (f2 = c[g2]; e < f2.index; e++)
          p(b, d[e]);
        f2 = hd(a, b, f2);
      }
      for (; e < d.length - 1; e++)
        p(b, d[e]);
      e < d.length && (f2 = t(b, d[e]));
      return f2;
    default:
      throw Error(k(390));
  }
}
function hd(a, b, c) {
  var d = c.boundary;
  if (null === d)
    return gd(a, b, c);
  d.parentFlushed = true;
  if (d.forceClientRender)
    d = d.errorDigest, t(b, $a), p(b, bb), d && (p(b, db), p(b, u(C(d))), p(b, cb)), t(b, eb), gd(a, b, c);
  else if (0 < d.pendingTasks) {
    d.rootSegmentID = a.nextSegmentId++;
    0 < d.completedSegments.length && a.partialBoundaries.push(d);
    var f2 = a.responseState;
    var e = f2.nextSuspenseID++;
    f2 = w(f2.boundaryPrefix + e.toString(16));
    d = d.id = f2;
    fb(b, a.responseState, d);
    gd(a, b, c);
  } else if (d.byteSize > a.progressiveChunkSize)
    d.rootSegmentID = a.nextSegmentId++, a.completedBoundaries.push(d), fb(b, a.responseState, d.id), gd(a, b, c);
  else {
    t(b, Xa);
    c = d.completedSegments;
    if (1 !== c.length)
      throw Error(k(391));
    hd(a, b, c[0]);
  }
  return t(b, ab);
}
function id(a, b, c) {
  Bb(b, a.responseState, c.formatContext, c.id);
  hd(a, b, c);
  return Cb(b, c.formatContext);
}
function jd(a, b, c) {
  for (var d = c.completedSegments, f2 = 0; f2 < d.length; f2++)
    kd(a, b, c, d[f2]);
  d.length = 0;
  a = a.responseState;
  d = c.id;
  c = c.rootSegmentID;
  p(b, a.startInlineScript);
  a.sentCompleteBoundaryFunction ? p(b, Jb) : (a.sentCompleteBoundaryFunction = true, p(b, Ib));
  if (null === d)
    throw Error(k(395));
  c = u(c.toString(16));
  p(b, d);
  p(b, Kb);
  p(b, a.segmentPrefix);
  p(b, c);
  return t(b, Lb);
}
function kd(a, b, c, d) {
  if (2 === d.status)
    return true;
  var f2 = d.id;
  if (-1 === f2) {
    if (-1 === (d.id = c.rootSegmentID))
      throw Error(k(392));
    return id(a, b, d);
  }
  id(a, b, d);
  a = a.responseState;
  p(b, a.startInlineScript);
  a.sentCompleteSegmentFunction ? p(b, Eb) : (a.sentCompleteSegmentFunction = true, p(b, Db));
  p(b, a.segmentPrefix);
  f2 = u(f2.toString(16));
  p(b, f2);
  p(b, Gb);
  p(b, a.placeholderPrefix);
  p(b, f2);
  return t(b, Hb);
}
function fd(a, b) {
  l$1 = new Uint8Array(512);
  n = 0;
  try {
    var c = a.completedRootSegment;
    if (null !== c && 0 === a.pendingRootTasks) {
      hd(a, b, c);
      a.completedRootSegment = null;
      var d = a.responseState.bootstrapChunks;
      for (c = 0; c < d.length - 1; c++)
        p(b, d[c]);
      c < d.length && t(b, d[c]);
    }
    var f2 = a.clientRenderedBoundaries, e;
    for (e = 0; e < f2.length; e++) {
      var g2 = f2[e];
      d = b;
      var h = a.responseState, m2 = g2.id, q2 = g2.errorDigest, r2 = g2.errorMessage, v2 = g2.errorComponentStack;
      p(d, h.startInlineScript);
      h.sentClientRenderFunction ? p(d, Nb) : (h.sentClientRenderFunction = true, p(
        d,
        Mb
      ));
      if (null === m2)
        throw Error(k(395));
      p(d, m2);
      p(d, Ob);
      if (q2 || r2 || v2)
        p(d, Qb), p(d, u(Sb(q2 || "")));
      if (r2 || v2)
        p(d, Qb), p(d, u(Sb(r2 || "")));
      v2 && (p(d, Qb), p(d, u(Sb(v2))));
      if (!t(d, Pb))
        ;
    }
    f2.splice(0, e);
    var A2 = a.completedBoundaries;
    for (e = 0; e < A2.length; e++)
      if (!jd(a, b, A2[e]))
        ;
    A2.splice(0, e);
    ba(b);
    l$1 = new Uint8Array(512);
    n = 0;
    var F2 = a.partialBoundaries;
    for (e = 0; e < F2.length; e++) {
      var G2 = F2[e];
      a: {
        f2 = a;
        g2 = b;
        var ma2 = G2.completedSegments;
        for (h = 0; h < ma2.length; h++)
          if (!kd(
            f2,
            g2,
            G2,
            ma2[h]
          )) {
            h++;
            ma2.splice(0, h);
            var Fb2 = false;
            break a;
          }
        ma2.splice(0, h);
        Fb2 = true;
      }
      if (!Fb2) {
        a.destination = null;
        e++;
        F2.splice(0, e);
        return;
      }
    }
    F2.splice(0, e);
    var na2 = a.completedBoundaries;
    for (e = 0; e < na2.length; e++)
      if (!jd(a, b, na2[e]))
        ;
    na2.splice(0, e);
  } finally {
    ba(b), 0 === a.allPendingTasks && 0 === a.pingedTasks.length && 0 === a.clientRenderedBoundaries.length && 0 === a.completedBoundaries.length && b.close();
  }
}
function ld(a, b) {
  try {
    var c = a.abortableTasks;
    c.forEach(function(c2) {
      return ed(c2, a, b);
    });
    c.clear();
    null !== a.destination && fd(a, a.destination);
  } catch (d) {
    Y(a, d), Vc(a, d);
  }
}
reactDomServer_browser_production_min.renderToReadableStream = function(a, b) {
  return new Promise(function(c, d) {
    var f2, e, g2 = new Promise(function(a2, b2) {
      e = a2;
      f2 = b2;
    }), h = Rc(a, za(b ? b.identifierPrefix : void 0, b ? b.nonce : void 0, b ? b.bootstrapScriptContent : void 0, b ? b.bootstrapScripts : void 0, b ? b.bootstrapModules : void 0), Aa(b ? b.namespaceURI : void 0), b ? b.progressiveChunkSize : void 0, b ? b.onError : void 0, e, function() {
      var a2 = new ReadableStream({ type: "bytes", pull: function(a3) {
        if (1 === h.status)
          h.status = 2, da(a3, h.fatalError);
        else if (2 !== h.status && null === h.destination) {
          h.destination = a3;
          try {
            fd(h, a3);
          } catch (A2) {
            Y(h, A2), Vc(h, A2);
          }
        }
      }, cancel: function() {
        ld(h);
      } }, { highWaterMark: 0 });
      a2.allReady = g2;
      c(a2);
    }, function(a2) {
      g2.catch(function() {
      });
      d(a2);
    }, f2);
    if (b && b.signal) {
      var m2 = b.signal, q2 = function() {
        ld(h, m2.reason);
        m2.removeEventListener("abort", q2);
      };
      m2.addEventListener("abort", q2);
    }
    Uc(h);
  });
};
reactDomServer_browser_production_min.version = "18.2.0";
var l, s;
{
  l = reactDomServerLegacy_browser_production_min;
  s = reactDomServer_browser_production_min;
}
l.version;
var renderToString = l.renderToString;
l.renderToStaticMarkup;
l.renderToNodeStream;
l.renderToStaticNodeStream;
s.renderToReadableStream;
function deepFreeze(obj) {
  if (obj instanceof Map) {
    obj.clear = obj.delete = obj.set = function() {
      throw new Error("map is read-only");
    };
  } else if (obj instanceof Set) {
    obj.add = obj.clear = obj.delete = function() {
      throw new Error("set is read-only");
    };
  }
  Object.freeze(obj);
  Object.getOwnPropertyNames(obj).forEach((name) => {
    const prop = obj[name];
    const type = typeof prop;
    if ((type === "object" || type === "function") && !Object.isFrozen(prop)) {
      deepFreeze(prop);
    }
  });
  return obj;
}
class Response {
  /**
   * @param {CompiledMode} mode
   */
  constructor(mode) {
    if (mode.data === void 0)
      mode.data = {};
    this.data = mode.data;
    this.isMatchIgnored = false;
  }
  ignoreMatch() {
    this.isMatchIgnored = true;
  }
}
function escapeHTML(value) {
  return value.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#x27;");
}
function inherit$1(original, ...objects) {
  const result = /* @__PURE__ */ Object.create(null);
  for (const key in original) {
    result[key] = original[key];
  }
  objects.forEach(function(obj) {
    for (const key in obj) {
      result[key] = obj[key];
    }
  });
  return (
    /** @type {T} */
    result
  );
}
const SPAN_CLOSE = "</span>";
const emitsWrappingTags = (node) => {
  return !!node.scope;
};
const scopeToCSSClass = (name, { prefix }) => {
  if (name.startsWith("language:")) {
    return name.replace("language:", "language-");
  }
  if (name.includes(".")) {
    const pieces = name.split(".");
    return [
      `${prefix}${pieces.shift()}`,
      ...pieces.map((x2, i) => `${x2}${"_".repeat(i + 1)}`)
    ].join(" ");
  }
  return `${prefix}${name}`;
};
class HTMLRenderer {
  /**
   * Creates a new HTMLRenderer
   *
   * @param {Tree} parseTree - the parse tree (must support `walk` API)
   * @param {{classPrefix: string}} options
   */
  constructor(parseTree, options) {
    this.buffer = "";
    this.classPrefix = options.classPrefix;
    parseTree.walk(this);
  }
  /**
   * Adds texts to the output stream
   *
   * @param {string} text */
  addText(text2) {
    this.buffer += escapeHTML(text2);
  }
  /**
   * Adds a node open to the output stream (if needed)
   *
   * @param {Node} node */
  openNode(node) {
    if (!emitsWrappingTags(node))
      return;
    const className = scopeToCSSClass(
      node.scope,
      { prefix: this.classPrefix }
    );
    this.span(className);
  }
  /**
   * Adds a node close to the output stream (if needed)
   *
   * @param {Node} node */
  closeNode(node) {
    if (!emitsWrappingTags(node))
      return;
    this.buffer += SPAN_CLOSE;
  }
  /**
   * returns the accumulated buffer
  */
  value() {
    return this.buffer;
  }
  // helpers
  /**
   * Builds a span element
   *
   * @param {string} className */
  span(className) {
    this.buffer += `<span class="${className}">`;
  }
}
const newNode = (opts = {}) => {
  const result = { children: [] };
  Object.assign(result, opts);
  return result;
};
class TokenTree {
  constructor() {
    this.rootNode = newNode();
    this.stack = [this.rootNode];
  }
  get top() {
    return this.stack[this.stack.length - 1];
  }
  get root() {
    return this.rootNode;
  }
  /** @param {Node} node */
  add(node) {
    this.top.children.push(node);
  }
  /** @param {string} scope */
  openNode(scope) {
    const node = newNode({ scope });
    this.add(node);
    this.stack.push(node);
  }
  closeNode() {
    if (this.stack.length > 1) {
      return this.stack.pop();
    }
    return void 0;
  }
  closeAllNodes() {
    while (this.closeNode())
      ;
  }
  toJSON() {
    return JSON.stringify(this.rootNode, null, 4);
  }
  /**
   * @typedef { import("./html_renderer").Renderer } Renderer
   * @param {Renderer} builder
   */
  walk(builder) {
    return this.constructor._walk(builder, this.rootNode);
  }
  /**
   * @param {Renderer} builder
   * @param {Node} node
   */
  static _walk(builder, node) {
    if (typeof node === "string") {
      builder.addText(node);
    } else if (node.children) {
      builder.openNode(node);
      node.children.forEach((child) => this._walk(builder, child));
      builder.closeNode(node);
    }
    return builder;
  }
  /**
   * @param {Node} node
   */
  static _collapse(node) {
    if (typeof node === "string")
      return;
    if (!node.children)
      return;
    if (node.children.every((el2) => typeof el2 === "string")) {
      node.children = [node.children.join("")];
    } else {
      node.children.forEach((child) => {
        TokenTree._collapse(child);
      });
    }
  }
}
class TokenTreeEmitter extends TokenTree {
  /**
   * @param {*} options
   */
  constructor(options) {
    super();
    this.options = options;
  }
  /**
   * @param {string} text
   */
  addText(text2) {
    if (text2 === "") {
      return;
    }
    this.add(text2);
  }
  /** @param {string} scope */
  startScope(scope) {
    this.openNode(scope);
  }
  endScope() {
    this.closeNode();
  }
  /**
   * @param {Emitter & {root: DataNode}} emitter
   * @param {string} name
   */
  __addSublanguage(emitter, name) {
    const node = emitter.root;
    if (name)
      node.scope = `language:${name}`;
    this.add(node);
  }
  toHTML() {
    const renderer = new HTMLRenderer(this, this.options);
    return renderer.value();
  }
  finalize() {
    this.closeAllNodes();
    return true;
  }
}
function source(re2) {
  if (!re2)
    return null;
  if (typeof re2 === "string")
    return re2;
  return re2.source;
}
function lookahead(re2) {
  return concat("(?=", re2, ")");
}
function anyNumberOfTimes(re2) {
  return concat("(?:", re2, ")*");
}
function optional(re2) {
  return concat("(?:", re2, ")?");
}
function concat(...args) {
  const joined = args.map((x2) => source(x2)).join("");
  return joined;
}
function stripOptionsFromArgs(args) {
  const opts = args[args.length - 1];
  if (typeof opts === "object" && opts.constructor === Object) {
    args.splice(args.length - 1, 1);
    return opts;
  } else {
    return {};
  }
}
function either(...args) {
  const opts = stripOptionsFromArgs(args);
  const joined = "(" + (opts.capture ? "" : "?:") + args.map((x2) => source(x2)).join("|") + ")";
  return joined;
}
function countMatchGroups(re2) {
  return new RegExp(re2.toString() + "|").exec("").length - 1;
}
function startsWith(re2, lexeme) {
  const match2 = re2 && re2.exec(lexeme);
  return match2 && match2.index === 0;
}
const BACKREF_RE = /\[(?:[^\\\]]|\\.)*\]|\(\??|\\([1-9][0-9]*)|\\./;
function _rewriteBackreferences(regexps, { joinWith }) {
  let numCaptures = 0;
  return regexps.map((regex) => {
    numCaptures += 1;
    const offset = numCaptures;
    let re2 = source(regex);
    let out = "";
    while (re2.length > 0) {
      const match2 = BACKREF_RE.exec(re2);
      if (!match2) {
        out += re2;
        break;
      }
      out += re2.substring(0, match2.index);
      re2 = re2.substring(match2.index + match2[0].length);
      if (match2[0][0] === "\\" && match2[1]) {
        out += "\\" + String(Number(match2[1]) + offset);
      } else {
        out += match2[0];
        if (match2[0] === "(") {
          numCaptures++;
        }
      }
    }
    return out;
  }).map((re2) => `(${re2})`).join(joinWith);
}
const MATCH_NOTHING_RE = /\b\B/;
const IDENT_RE$1 = "[a-zA-Z]\\w*";
const UNDERSCORE_IDENT_RE = "[a-zA-Z_]\\w*";
const NUMBER_RE = "\\b\\d+(\\.\\d+)?";
const C_NUMBER_RE = "(-?)(\\b0[xX][a-fA-F0-9]+|(\\b\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)";
const BINARY_NUMBER_RE = "\\b(0b[01]+)";
const RE_STARTERS_RE = "!|!=|!==|%|%=|&|&&|&=|\\*|\\*=|\\+|\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\?|\\[|\\{|\\(|\\^|\\^=|\\||\\|=|\\|\\||~";
const SHEBANG = (opts = {}) => {
  const beginShebang = /^#![ ]*\//;
  if (opts.binary) {
    opts.begin = concat(
      beginShebang,
      /.*\b/,
      opts.binary,
      /\b.*/
    );
  }
  return inherit$1({
    scope: "meta",
    begin: beginShebang,
    end: /$/,
    relevance: 0,
    /** @type {ModeCallback} */
    "on:begin": (m2, resp) => {
      if (m2.index !== 0)
        resp.ignoreMatch();
    }
  }, opts);
};
const BACKSLASH_ESCAPE = {
  begin: "\\\\[\\s\\S]",
  relevance: 0
};
const APOS_STRING_MODE = {
  scope: "string",
  begin: "'",
  end: "'",
  illegal: "\\n",
  contains: [BACKSLASH_ESCAPE]
};
const QUOTE_STRING_MODE = {
  scope: "string",
  begin: '"',
  end: '"',
  illegal: "\\n",
  contains: [BACKSLASH_ESCAPE]
};
const PHRASAL_WORDS_MODE = {
  begin: /\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\b/
};
const COMMENT = function(begin, end, modeOptions = {}) {
  const mode = inherit$1(
    {
      scope: "comment",
      begin,
      end,
      contains: []
    },
    modeOptions
  );
  mode.contains.push({
    scope: "doctag",
    // hack to avoid the space from being included. the space is necessary to
    // match here to prevent the plain text rule below from gobbling up doctags
    begin: "[ ]*(?=(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):)",
    end: /(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):/,
    excludeBegin: true,
    relevance: 0
  });
  const ENGLISH_WORD = either(
    // list of common 1 and 2 letter words in English
    "I",
    "a",
    "is",
    "so",
    "us",
    "to",
    "at",
    "if",
    "in",
    "it",
    "on",
    // note: this is not an exhaustive list of contractions, just popular ones
    /[A-Za-z]+['](d|ve|re|ll|t|s|n)/,
    // contractions - can't we'd they're let's, etc
    /[A-Za-z]+[-][a-z]+/,
    // `no-way`, etc.
    /[A-Za-z][a-z]{2,}/
    // allow capitalized words at beginning of sentences
  );
  mode.contains.push(
    {
      // TODO: how to include ", (, ) without breaking grammars that use these for
      // comment delimiters?
      // begin: /[ ]+([()"]?([A-Za-z'-]{3,}|is|a|I|so|us|[tT][oO]|at|if|in|it|on)[.]?[()":]?([.][ ]|[ ]|\))){3}/
      // ---
      // this tries to find sequences of 3 english words in a row (without any
      // "programming" type syntax) this gives us a strong signal that we've
      // TRULY found a comment - vs perhaps scanning with the wrong language.
      // It's possible to find something that LOOKS like the start of the
      // comment - but then if there is no readable text - good chance it is a
      // false match and not a comment.
      //
      // for a visual example please see:
      // https://github.com/highlightjs/highlight.js/issues/2827
      begin: concat(
        /[ ]+/,
        // necessary to prevent us gobbling up doctags like /* @author Bob Mcgill */
        "(",
        ENGLISH_WORD,
        /[.]?[:]?([.][ ]|[ ])/,
        "){3}"
      )
      // look for 3 words in a row
    }
  );
  return mode;
};
const C_LINE_COMMENT_MODE = COMMENT("//", "$");
const C_BLOCK_COMMENT_MODE = COMMENT("/\\*", "\\*/");
const HASH_COMMENT_MODE = COMMENT("#", "$");
const NUMBER_MODE = {
  scope: "number",
  begin: NUMBER_RE,
  relevance: 0
};
const C_NUMBER_MODE = {
  scope: "number",
  begin: C_NUMBER_RE,
  relevance: 0
};
const BINARY_NUMBER_MODE = {
  scope: "number",
  begin: BINARY_NUMBER_RE,
  relevance: 0
};
const REGEXP_MODE = {
  // this outer rule makes sure we actually have a WHOLE regex and not simply
  // an expression such as:
  //
  //     3 / something
  //
  // (which will then blow up when regex's `illegal` sees the newline)
  begin: /(?=\/[^/\n]*\/)/,
  contains: [{
    scope: "regexp",
    begin: /\//,
    end: /\/[gimuy]*/,
    illegal: /\n/,
    contains: [
      BACKSLASH_ESCAPE,
      {
        begin: /\[/,
        end: /\]/,
        relevance: 0,
        contains: [BACKSLASH_ESCAPE]
      }
    ]
  }]
};
const TITLE_MODE = {
  scope: "title",
  begin: IDENT_RE$1,
  relevance: 0
};
const UNDERSCORE_TITLE_MODE = {
  scope: "title",
  begin: UNDERSCORE_IDENT_RE,
  relevance: 0
};
const METHOD_GUARD = {
  // excludes method names from keyword processing
  begin: "\\.\\s*" + UNDERSCORE_IDENT_RE,
  relevance: 0
};
const END_SAME_AS_BEGIN = function(mode) {
  return Object.assign(
    mode,
    {
      /** @type {ModeCallback} */
      "on:begin": (m2, resp) => {
        resp.data._beginMatch = m2[1];
      },
      /** @type {ModeCallback} */
      "on:end": (m2, resp) => {
        if (resp.data._beginMatch !== m2[1])
          resp.ignoreMatch();
      }
    }
  );
};
var MODES = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  MATCH_NOTHING_RE,
  IDENT_RE: IDENT_RE$1,
  UNDERSCORE_IDENT_RE,
  NUMBER_RE,
  C_NUMBER_RE,
  BINARY_NUMBER_RE,
  RE_STARTERS_RE,
  SHEBANG,
  BACKSLASH_ESCAPE,
  APOS_STRING_MODE,
  QUOTE_STRING_MODE,
  PHRASAL_WORDS_MODE,
  COMMENT,
  C_LINE_COMMENT_MODE,
  C_BLOCK_COMMENT_MODE,
  HASH_COMMENT_MODE,
  NUMBER_MODE,
  C_NUMBER_MODE,
  BINARY_NUMBER_MODE,
  REGEXP_MODE,
  TITLE_MODE,
  UNDERSCORE_TITLE_MODE,
  METHOD_GUARD,
  END_SAME_AS_BEGIN
});
function skipIfHasPrecedingDot(match2, response) {
  const before = match2.input[match2.index - 1];
  if (before === ".") {
    response.ignoreMatch();
  }
}
function scopeClassName(mode, _parent) {
  if (mode.className !== void 0) {
    mode.scope = mode.className;
    delete mode.className;
  }
}
function beginKeywords(mode, parent) {
  if (!parent)
    return;
  if (!mode.beginKeywords)
    return;
  mode.begin = "\\b(" + mode.beginKeywords.split(" ").join("|") + ")(?!\\.)(?=\\b|\\s)";
  mode.__beforeBegin = skipIfHasPrecedingDot;
  mode.keywords = mode.keywords || mode.beginKeywords;
  delete mode.beginKeywords;
  if (mode.relevance === void 0)
    mode.relevance = 0;
}
function compileIllegal(mode, _parent) {
  if (!Array.isArray(mode.illegal))
    return;
  mode.illegal = either(...mode.illegal);
}
function compileMatch(mode, _parent) {
  if (!mode.match)
    return;
  if (mode.begin || mode.end)
    throw new Error("begin & end are not supported with match");
  mode.begin = mode.match;
  delete mode.match;
}
function compileRelevance(mode, _parent) {
  if (mode.relevance === void 0)
    mode.relevance = 1;
}
const beforeMatchExt = (mode, parent) => {
  if (!mode.beforeMatch)
    return;
  if (mode.starts)
    throw new Error("beforeMatch cannot be used with starts");
  const originalMode = Object.assign({}, mode);
  Object.keys(mode).forEach((key) => {
    delete mode[key];
  });
  mode.keywords = originalMode.keywords;
  mode.begin = concat(originalMode.beforeMatch, lookahead(originalMode.begin));
  mode.starts = {
    relevance: 0,
    contains: [
      Object.assign(originalMode, { endsParent: true })
    ]
  };
  mode.relevance = 0;
  delete originalMode.beforeMatch;
};
const COMMON_KEYWORDS = [
  "of",
  "and",
  "for",
  "in",
  "not",
  "or",
  "if",
  "then",
  "parent",
  // common variable name
  "list",
  // common variable name
  "value"
  // common variable name
];
const DEFAULT_KEYWORD_SCOPE = "keyword";
function compileKeywords(rawKeywords, caseInsensitive, scopeName = DEFAULT_KEYWORD_SCOPE) {
  const compiledKeywords = /* @__PURE__ */ Object.create(null);
  if (typeof rawKeywords === "string") {
    compileList(scopeName, rawKeywords.split(" "));
  } else if (Array.isArray(rawKeywords)) {
    compileList(scopeName, rawKeywords);
  } else {
    Object.keys(rawKeywords).forEach(function(scopeName2) {
      Object.assign(
        compiledKeywords,
        compileKeywords(rawKeywords[scopeName2], caseInsensitive, scopeName2)
      );
    });
  }
  return compiledKeywords;
  function compileList(scopeName2, keywordList) {
    if (caseInsensitive) {
      keywordList = keywordList.map((x2) => x2.toLowerCase());
    }
    keywordList.forEach(function(keyword) {
      const pair = keyword.split("|");
      compiledKeywords[pair[0]] = [scopeName2, scoreForKeyword(pair[0], pair[1])];
    });
  }
}
function scoreForKeyword(keyword, providedScore) {
  if (providedScore) {
    return Number(providedScore);
  }
  return commonKeyword(keyword) ? 0 : 1;
}
function commonKeyword(keyword) {
  return COMMON_KEYWORDS.includes(keyword.toLowerCase());
}
const seenDeprecations = {};
const error = (message) => {
  console.error(message);
};
const warn = (message, ...args) => {
  console.log(`WARN: ${message}`, ...args);
};
const deprecated = (version2, message) => {
  if (seenDeprecations[`${version2}/${message}`])
    return;
  console.log(`Deprecated as of ${version2}. ${message}`);
  seenDeprecations[`${version2}/${message}`] = true;
};
const MultiClassError = new Error();
function remapScopeNames(mode, regexes, { key }) {
  let offset = 0;
  const scopeNames = mode[key];
  const emit = {};
  const positions = {};
  for (let i = 1; i <= regexes.length; i++) {
    positions[i + offset] = scopeNames[i];
    emit[i + offset] = true;
    offset += countMatchGroups(regexes[i - 1]);
  }
  mode[key] = positions;
  mode[key]._emit = emit;
  mode[key]._multi = true;
}
function beginMultiClass(mode) {
  if (!Array.isArray(mode.begin))
    return;
  if (mode.skip || mode.excludeBegin || mode.returnBegin) {
    error("skip, excludeBegin, returnBegin not compatible with beginScope: {}");
    throw MultiClassError;
  }
  if (typeof mode.beginScope !== "object" || mode.beginScope === null) {
    error("beginScope must be object");
    throw MultiClassError;
  }
  remapScopeNames(mode, mode.begin, { key: "beginScope" });
  mode.begin = _rewriteBackreferences(mode.begin, { joinWith: "" });
}
function endMultiClass(mode) {
  if (!Array.isArray(mode.end))
    return;
  if (mode.skip || mode.excludeEnd || mode.returnEnd) {
    error("skip, excludeEnd, returnEnd not compatible with endScope: {}");
    throw MultiClassError;
  }
  if (typeof mode.endScope !== "object" || mode.endScope === null) {
    error("endScope must be object");
    throw MultiClassError;
  }
  remapScopeNames(mode, mode.end, { key: "endScope" });
  mode.end = _rewriteBackreferences(mode.end, { joinWith: "" });
}
function scopeSugar(mode) {
  if (mode.scope && typeof mode.scope === "object" && mode.scope !== null) {
    mode.beginScope = mode.scope;
    delete mode.scope;
  }
}
function MultiClass(mode) {
  scopeSugar(mode);
  if (typeof mode.beginScope === "string") {
    mode.beginScope = { _wrap: mode.beginScope };
  }
  if (typeof mode.endScope === "string") {
    mode.endScope = { _wrap: mode.endScope };
  }
  beginMultiClass(mode);
  endMultiClass(mode);
}
function compileLanguage(language) {
  function langRe(value, global2) {
    return new RegExp(
      source(value),
      "m" + (language.case_insensitive ? "i" : "") + (language.unicodeRegex ? "u" : "") + (global2 ? "g" : "")
    );
  }
  class MultiRegex {
    constructor() {
      this.matchIndexes = {};
      this.regexes = [];
      this.matchAt = 1;
      this.position = 0;
    }
    // @ts-ignore
    addRule(re2, opts) {
      opts.position = this.position++;
      this.matchIndexes[this.matchAt] = opts;
      this.regexes.push([opts, re2]);
      this.matchAt += countMatchGroups(re2) + 1;
    }
    compile() {
      if (this.regexes.length === 0) {
        this.exec = () => null;
      }
      const terminators = this.regexes.map((el2) => el2[1]);
      this.matcherRe = langRe(_rewriteBackreferences(terminators, { joinWith: "|" }), true);
      this.lastIndex = 0;
    }
    /** @param {string} s */
    exec(s2) {
      this.matcherRe.lastIndex = this.lastIndex;
      const match2 = this.matcherRe.exec(s2);
      if (!match2) {
        return null;
      }
      const i = match2.findIndex((el2, i2) => i2 > 0 && el2 !== void 0);
      const matchData = this.matchIndexes[i];
      match2.splice(0, i);
      return Object.assign(match2, matchData);
    }
  }
  class ResumableMultiRegex {
    constructor() {
      this.rules = [];
      this.multiRegexes = [];
      this.count = 0;
      this.lastIndex = 0;
      this.regexIndex = 0;
    }
    // @ts-ignore
    getMatcher(index2) {
      if (this.multiRegexes[index2])
        return this.multiRegexes[index2];
      const matcher = new MultiRegex();
      this.rules.slice(index2).forEach(([re2, opts]) => matcher.addRule(re2, opts));
      matcher.compile();
      this.multiRegexes[index2] = matcher;
      return matcher;
    }
    resumingScanAtSamePosition() {
      return this.regexIndex !== 0;
    }
    considerAll() {
      this.regexIndex = 0;
    }
    // @ts-ignore
    addRule(re2, opts) {
      this.rules.push([re2, opts]);
      if (opts.type === "begin")
        this.count++;
    }
    /** @param {string} s */
    exec(s2) {
      const m2 = this.getMatcher(this.regexIndex);
      m2.lastIndex = this.lastIndex;
      let result = m2.exec(s2);
      if (this.resumingScanAtSamePosition()) {
        if (result && result.index === this.lastIndex)
          ;
        else {
          const m22 = this.getMatcher(0);
          m22.lastIndex = this.lastIndex + 1;
          result = m22.exec(s2);
        }
      }
      if (result) {
        this.regexIndex += result.position + 1;
        if (this.regexIndex === this.count) {
          this.considerAll();
        }
      }
      return result;
    }
  }
  function buildModeRegex(mode) {
    const mm = new ResumableMultiRegex();
    mode.contains.forEach((term) => mm.addRule(term.begin, { rule: term, type: "begin" }));
    if (mode.terminatorEnd) {
      mm.addRule(mode.terminatorEnd, { type: "end" });
    }
    if (mode.illegal) {
      mm.addRule(mode.illegal, { type: "illegal" });
    }
    return mm;
  }
  function compileMode(mode, parent) {
    const cmode = (
      /** @type CompiledMode */
      mode
    );
    if (mode.isCompiled)
      return cmode;
    [
      scopeClassName,
      // do this early so compiler extensions generally don't have to worry about
      // the distinction between match/begin
      compileMatch,
      MultiClass,
      beforeMatchExt
    ].forEach((ext) => ext(mode, parent));
    language.compilerExtensions.forEach((ext) => ext(mode, parent));
    mode.__beforeBegin = null;
    [
      beginKeywords,
      // do this later so compiler extensions that come earlier have access to the
      // raw array if they wanted to perhaps manipulate it, etc.
      compileIllegal,
      // default to 1 relevance if not specified
      compileRelevance
    ].forEach((ext) => ext(mode, parent));
    mode.isCompiled = true;
    let keywordPattern = null;
    if (typeof mode.keywords === "object" && mode.keywords.$pattern) {
      mode.keywords = Object.assign({}, mode.keywords);
      keywordPattern = mode.keywords.$pattern;
      delete mode.keywords.$pattern;
    }
    keywordPattern = keywordPattern || /\w+/;
    if (mode.keywords) {
      mode.keywords = compileKeywords(mode.keywords, language.case_insensitive);
    }
    cmode.keywordPatternRe = langRe(keywordPattern, true);
    if (parent) {
      if (!mode.begin)
        mode.begin = /\B|\b/;
      cmode.beginRe = langRe(cmode.begin);
      if (!mode.end && !mode.endsWithParent)
        mode.end = /\B|\b/;
      if (mode.end)
        cmode.endRe = langRe(cmode.end);
      cmode.terminatorEnd = source(cmode.end) || "";
      if (mode.endsWithParent && parent.terminatorEnd) {
        cmode.terminatorEnd += (mode.end ? "|" : "") + parent.terminatorEnd;
      }
    }
    if (mode.illegal)
      cmode.illegalRe = langRe(
        /** @type {RegExp | string} */
        mode.illegal
      );
    if (!mode.contains)
      mode.contains = [];
    mode.contains = [].concat(...mode.contains.map(function(c) {
      return expandOrCloneMode(c === "self" ? mode : c);
    }));
    mode.contains.forEach(function(c) {
      compileMode(
        /** @type Mode */
        c,
        cmode
      );
    });
    if (mode.starts) {
      compileMode(mode.starts, parent);
    }
    cmode.matcher = buildModeRegex(cmode);
    return cmode;
  }
  if (!language.compilerExtensions)
    language.compilerExtensions = [];
  if (language.contains && language.contains.includes("self")) {
    throw new Error("ERR: contains `self` is not supported at the top-level of a language.  See documentation.");
  }
  language.classNameAliases = inherit$1(language.classNameAliases || {});
  return compileMode(
    /** @type Mode */
    language
  );
}
function dependencyOnParent(mode) {
  if (!mode)
    return false;
  return mode.endsWithParent || dependencyOnParent(mode.starts);
}
function expandOrCloneMode(mode) {
  if (mode.variants && !mode.cachedVariants) {
    mode.cachedVariants = mode.variants.map(function(variant) {
      return inherit$1(mode, { variants: null }, variant);
    });
  }
  if (mode.cachedVariants) {
    return mode.cachedVariants;
  }
  if (dependencyOnParent(mode)) {
    return inherit$1(mode, { starts: mode.starts ? inherit$1(mode.starts) : null });
  }
  if (Object.isFrozen(mode)) {
    return inherit$1(mode);
  }
  return mode;
}
var version = "11.8.0";
class HTMLInjectionError extends Error {
  constructor(reason, html) {
    super(reason);
    this.name = "HTMLInjectionError";
    this.html = html;
  }
}
const escape = escapeHTML;
const inherit = inherit$1;
const NO_MATCH = Symbol("nomatch");
const MAX_KEYWORD_HITS = 7;
const HLJS = function(hljs) {
  const languages = /* @__PURE__ */ Object.create(null);
  const aliases = /* @__PURE__ */ Object.create(null);
  const plugins = [];
  let SAFE_MODE = true;
  const LANGUAGE_NOT_FOUND = "Could not find the language '{}', did you forget to load/include a language module?";
  const PLAINTEXT_LANGUAGE = { disableAutodetect: true, name: "Plain text", contains: [] };
  let options = {
    ignoreUnescapedHTML: false,
    throwUnescapedHTML: false,
    noHighlightRe: /^(no-?highlight)$/i,
    languageDetectRe: /\blang(?:uage)?-([\w-]+)\b/i,
    classPrefix: "hljs-",
    cssSelector: "pre code",
    languages: null,
    // beta configuration options, subject to change, welcome to discuss
    // https://github.com/highlightjs/highlight.js/issues/1086
    __emitter: TokenTreeEmitter
  };
  function shouldNotHighlight(languageName) {
    return options.noHighlightRe.test(languageName);
  }
  function blockLanguage(block) {
    let classes = block.className + " ";
    classes += block.parentNode ? block.parentNode.className : "";
    const match2 = options.languageDetectRe.exec(classes);
    if (match2) {
      const language = getLanguage(match2[1]);
      if (!language) {
        warn(LANGUAGE_NOT_FOUND.replace("{}", match2[1]));
        warn("Falling back to no-highlight mode for this block.", block);
      }
      return language ? match2[1] : "no-highlight";
    }
    return classes.split(/\s+/).find((_class) => shouldNotHighlight(_class) || getLanguage(_class));
  }
  function highlight2(codeOrLanguageName, optionsOrCode, ignoreIllegals) {
    let code = "";
    let languageName = "";
    if (typeof optionsOrCode === "object") {
      code = codeOrLanguageName;
      ignoreIllegals = optionsOrCode.ignoreIllegals;
      languageName = optionsOrCode.language;
    } else {
      deprecated("10.7.0", "highlight(lang, code, ...args) has been deprecated.");
      deprecated("10.7.0", "Please use highlight(code, options) instead.\nhttps://github.com/highlightjs/highlight.js/issues/2277");
      languageName = codeOrLanguageName;
      code = optionsOrCode;
    }
    if (ignoreIllegals === void 0) {
      ignoreIllegals = true;
    }
    const context = {
      code,
      language: languageName
    };
    fire("before:highlight", context);
    const result = context.result ? context.result : _highlight(context.language, context.code, ignoreIllegals);
    result.code = context.code;
    fire("after:highlight", result);
    return result;
  }
  function _highlight(languageName, codeToHighlight, ignoreIllegals, continuation) {
    const keywordHits = /* @__PURE__ */ Object.create(null);
    function keywordData(mode, matchText) {
      return mode.keywords[matchText];
    }
    function processKeywords() {
      if (!top.keywords) {
        emitter.addText(modeBuffer);
        return;
      }
      let lastIndex = 0;
      top.keywordPatternRe.lastIndex = 0;
      let match2 = top.keywordPatternRe.exec(modeBuffer);
      let buf = "";
      while (match2) {
        buf += modeBuffer.substring(lastIndex, match2.index);
        const word = language.case_insensitive ? match2[0].toLowerCase() : match2[0];
        const data = keywordData(top, word);
        if (data) {
          const [kind, keywordRelevance] = data;
          emitter.addText(buf);
          buf = "";
          keywordHits[word] = (keywordHits[word] || 0) + 1;
          if (keywordHits[word] <= MAX_KEYWORD_HITS)
            relevance += keywordRelevance;
          if (kind.startsWith("_")) {
            buf += match2[0];
          } else {
            const cssClass = language.classNameAliases[kind] || kind;
            emitKeyword(match2[0], cssClass);
          }
        } else {
          buf += match2[0];
        }
        lastIndex = top.keywordPatternRe.lastIndex;
        match2 = top.keywordPatternRe.exec(modeBuffer);
      }
      buf += modeBuffer.substring(lastIndex);
      emitter.addText(buf);
    }
    function processSubLanguage() {
      if (modeBuffer === "")
        return;
      let result2 = null;
      if (typeof top.subLanguage === "string") {
        if (!languages[top.subLanguage]) {
          emitter.addText(modeBuffer);
          return;
        }
        result2 = _highlight(top.subLanguage, modeBuffer, true, continuations[top.subLanguage]);
        continuations[top.subLanguage] = /** @type {CompiledMode} */
        result2._top;
      } else {
        result2 = highlightAuto(modeBuffer, top.subLanguage.length ? top.subLanguage : null);
      }
      if (top.relevance > 0) {
        relevance += result2.relevance;
      }
      emitter.__addSublanguage(result2._emitter, result2.language);
    }
    function processBuffer() {
      if (top.subLanguage != null) {
        processSubLanguage();
      } else {
        processKeywords();
      }
      modeBuffer = "";
    }
    function emitKeyword(keyword, scope) {
      if (keyword === "")
        return;
      emitter.startScope(scope);
      emitter.addText(keyword);
      emitter.endScope();
    }
    function emitMultiClass(scope, match2) {
      let i = 1;
      const max = match2.length - 1;
      while (i <= max) {
        if (!scope._emit[i]) {
          i++;
          continue;
        }
        const klass = language.classNameAliases[scope[i]] || scope[i];
        const text2 = match2[i];
        if (klass) {
          emitKeyword(text2, klass);
        } else {
          modeBuffer = text2;
          processKeywords();
          modeBuffer = "";
        }
        i++;
      }
    }
    function startNewMode(mode, match2) {
      if (mode.scope && typeof mode.scope === "string") {
        emitter.openNode(language.classNameAliases[mode.scope] || mode.scope);
      }
      if (mode.beginScope) {
        if (mode.beginScope._wrap) {
          emitKeyword(modeBuffer, language.classNameAliases[mode.beginScope._wrap] || mode.beginScope._wrap);
          modeBuffer = "";
        } else if (mode.beginScope._multi) {
          emitMultiClass(mode.beginScope, match2);
          modeBuffer = "";
        }
      }
      top = Object.create(mode, { parent: { value: top } });
      return top;
    }
    function endOfMode(mode, match2, matchPlusRemainder) {
      let matched = startsWith(mode.endRe, matchPlusRemainder);
      if (matched) {
        if (mode["on:end"]) {
          const resp = new Response(mode);
          mode["on:end"](match2, resp);
          if (resp.isMatchIgnored)
            matched = false;
        }
        if (matched) {
          while (mode.endsParent && mode.parent) {
            mode = mode.parent;
          }
          return mode;
        }
      }
      if (mode.endsWithParent) {
        return endOfMode(mode.parent, match2, matchPlusRemainder);
      }
    }
    function doIgnore(lexeme) {
      if (top.matcher.regexIndex === 0) {
        modeBuffer += lexeme[0];
        return 1;
      } else {
        resumeScanAtSamePosition = true;
        return 0;
      }
    }
    function doBeginMatch(match2) {
      const lexeme = match2[0];
      const newMode = match2.rule;
      const resp = new Response(newMode);
      const beforeCallbacks = [newMode.__beforeBegin, newMode["on:begin"]];
      for (const cb2 of beforeCallbacks) {
        if (!cb2)
          continue;
        cb2(match2, resp);
        if (resp.isMatchIgnored)
          return doIgnore(lexeme);
      }
      if (newMode.skip) {
        modeBuffer += lexeme;
      } else {
        if (newMode.excludeBegin) {
          modeBuffer += lexeme;
        }
        processBuffer();
        if (!newMode.returnBegin && !newMode.excludeBegin) {
          modeBuffer = lexeme;
        }
      }
      startNewMode(newMode, match2);
      return newMode.returnBegin ? 0 : lexeme.length;
    }
    function doEndMatch(match2) {
      const lexeme = match2[0];
      const matchPlusRemainder = codeToHighlight.substring(match2.index);
      const endMode = endOfMode(top, match2, matchPlusRemainder);
      if (!endMode) {
        return NO_MATCH;
      }
      const origin = top;
      if (top.endScope && top.endScope._wrap) {
        processBuffer();
        emitKeyword(lexeme, top.endScope._wrap);
      } else if (top.endScope && top.endScope._multi) {
        processBuffer();
        emitMultiClass(top.endScope, match2);
      } else if (origin.skip) {
        modeBuffer += lexeme;
      } else {
        if (!(origin.returnEnd || origin.excludeEnd)) {
          modeBuffer += lexeme;
        }
        processBuffer();
        if (origin.excludeEnd) {
          modeBuffer = lexeme;
        }
      }
      do {
        if (top.scope) {
          emitter.closeNode();
        }
        if (!top.skip && !top.subLanguage) {
          relevance += top.relevance;
        }
        top = top.parent;
      } while (top !== endMode.parent);
      if (endMode.starts) {
        startNewMode(endMode.starts, match2);
      }
      return origin.returnEnd ? 0 : lexeme.length;
    }
    function processContinuations() {
      const list = [];
      for (let current = top; current !== language; current = current.parent) {
        if (current.scope) {
          list.unshift(current.scope);
        }
      }
      list.forEach((item) => emitter.openNode(item));
    }
    let lastMatch = {};
    function processLexeme(textBeforeMatch, match2) {
      const lexeme = match2 && match2[0];
      modeBuffer += textBeforeMatch;
      if (lexeme == null) {
        processBuffer();
        return 0;
      }
      if (lastMatch.type === "begin" && match2.type === "end" && lastMatch.index === match2.index && lexeme === "") {
        modeBuffer += codeToHighlight.slice(match2.index, match2.index + 1);
        if (!SAFE_MODE) {
          const err = new Error(`0 width match regex (${languageName})`);
          err.languageName = languageName;
          err.badRule = lastMatch.rule;
          throw err;
        }
        return 1;
      }
      lastMatch = match2;
      if (match2.type === "begin") {
        return doBeginMatch(match2);
      } else if (match2.type === "illegal" && !ignoreIllegals) {
        const err = new Error('Illegal lexeme "' + lexeme + '" for mode "' + (top.scope || "<unnamed>") + '"');
        err.mode = top;
        throw err;
      } else if (match2.type === "end") {
        const processed = doEndMatch(match2);
        if (processed !== NO_MATCH) {
          return processed;
        }
      }
      if (match2.type === "illegal" && lexeme === "") {
        return 1;
      }
      if (iterations > 1e5 && iterations > match2.index * 3) {
        const err = new Error("potential infinite loop, way more iterations than matches");
        throw err;
      }
      modeBuffer += lexeme;
      return lexeme.length;
    }
    const language = getLanguage(languageName);
    if (!language) {
      error(LANGUAGE_NOT_FOUND.replace("{}", languageName));
      throw new Error('Unknown language: "' + languageName + '"');
    }
    const md2 = compileLanguage(language);
    let result = "";
    let top = continuation || md2;
    const continuations = {};
    const emitter = new options.__emitter(options);
    processContinuations();
    let modeBuffer = "";
    let relevance = 0;
    let index2 = 0;
    let iterations = 0;
    let resumeScanAtSamePosition = false;
    try {
      if (!language.__emitTokens) {
        top.matcher.considerAll();
        for (; ; ) {
          iterations++;
          if (resumeScanAtSamePosition) {
            resumeScanAtSamePosition = false;
          } else {
            top.matcher.considerAll();
          }
          top.matcher.lastIndex = index2;
          const match2 = top.matcher.exec(codeToHighlight);
          if (!match2)
            break;
          const beforeMatch = codeToHighlight.substring(index2, match2.index);
          const processedCount = processLexeme(beforeMatch, match2);
          index2 = match2.index + processedCount;
        }
        processLexeme(codeToHighlight.substring(index2));
      } else {
        language.__emitTokens(codeToHighlight, emitter);
      }
      emitter.finalize();
      result = emitter.toHTML();
      return {
        language: languageName,
        value: result,
        relevance,
        illegal: false,
        _emitter: emitter,
        _top: top
      };
    } catch (err) {
      if (err.message && err.message.includes("Illegal")) {
        return {
          language: languageName,
          value: escape(codeToHighlight),
          illegal: true,
          relevance: 0,
          _illegalBy: {
            message: err.message,
            index: index2,
            context: codeToHighlight.slice(index2 - 100, index2 + 100),
            mode: err.mode,
            resultSoFar: result
          },
          _emitter: emitter
        };
      } else if (SAFE_MODE) {
        return {
          language: languageName,
          value: escape(codeToHighlight),
          illegal: false,
          relevance: 0,
          errorRaised: err,
          _emitter: emitter,
          _top: top
        };
      } else {
        throw err;
      }
    }
  }
  function justTextHighlightResult(code) {
    const result = {
      value: escape(code),
      illegal: false,
      relevance: 0,
      _top: PLAINTEXT_LANGUAGE,
      _emitter: new options.__emitter(options)
    };
    result._emitter.addText(code);
    return result;
  }
  function highlightAuto(code, languageSubset) {
    languageSubset = languageSubset || options.languages || Object.keys(languages);
    const plaintext = justTextHighlightResult(code);
    const results = languageSubset.filter(getLanguage).filter(autoDetection).map(
      (name) => _highlight(name, code, false)
    );
    results.unshift(plaintext);
    const sorted = results.sort((a, b) => {
      if (a.relevance !== b.relevance)
        return b.relevance - a.relevance;
      if (a.language && b.language) {
        if (getLanguage(a.language).supersetOf === b.language) {
          return 1;
        } else if (getLanguage(b.language).supersetOf === a.language) {
          return -1;
        }
      }
      return 0;
    });
    const [best, secondBest] = sorted;
    const result = best;
    result.secondBest = secondBest;
    return result;
  }
  function updateClassName(element2, currentLang, resultLang) {
    const language = currentLang && aliases[currentLang] || resultLang;
    element2.classList.add("hljs");
    element2.classList.add(`language-${language}`);
  }
  function highlightElement(element2) {
    let node = null;
    const language = blockLanguage(element2);
    if (shouldNotHighlight(language))
      return;
    fire(
      "before:highlightElement",
      { el: element2, language }
    );
    if (element2.children.length > 0) {
      if (!options.ignoreUnescapedHTML) {
        console.warn("One of your code blocks includes unescaped HTML. This is a potentially serious security risk.");
        console.warn("https://github.com/highlightjs/highlight.js/wiki/security");
        console.warn("The element with unescaped HTML:");
        console.warn(element2);
      }
      if (options.throwUnescapedHTML) {
        const err = new HTMLInjectionError(
          "One of your code blocks includes unescaped HTML.",
          element2.innerHTML
        );
        throw err;
      }
    }
    node = element2;
    const text2 = node.textContent;
    const result = language ? highlight2(text2, { language, ignoreIllegals: true }) : highlightAuto(text2);
    element2.innerHTML = result.value;
    updateClassName(element2, language, result.language);
    element2.result = {
      language: result.language,
      // TODO: remove with version 11.0
      re: result.relevance,
      relevance: result.relevance
    };
    if (result.secondBest) {
      element2.secondBest = {
        language: result.secondBest.language,
        relevance: result.secondBest.relevance
      };
    }
    fire("after:highlightElement", { el: element2, result, text: text2 });
  }
  function configure(userOptions) {
    options = inherit(options, userOptions);
  }
  const initHighlighting = () => {
    highlightAll();
    deprecated("10.6.0", "initHighlighting() deprecated.  Use highlightAll() now.");
  };
  function initHighlightingOnLoad() {
    highlightAll();
    deprecated("10.6.0", "initHighlightingOnLoad() deprecated.  Use highlightAll() now.");
  }
  let wantsHighlight = false;
  function highlightAll() {
    if (document.readyState === "loading") {
      wantsHighlight = true;
      return;
    }
    const blocks = document.querySelectorAll(options.cssSelector);
    blocks.forEach(highlightElement);
  }
  function boot() {
    if (wantsHighlight)
      highlightAll();
  }
  if (typeof window !== "undefined" && window.addEventListener) {
    window.addEventListener("DOMContentLoaded", boot, false);
  }
  function registerLanguage(languageName, languageDefinition) {
    let lang = null;
    try {
      lang = languageDefinition(hljs);
    } catch (error$1) {
      error("Language definition for '{}' could not be registered.".replace("{}", languageName));
      if (!SAFE_MODE) {
        throw error$1;
      } else {
        error(error$1);
      }
      lang = PLAINTEXT_LANGUAGE;
    }
    if (!lang.name)
      lang.name = languageName;
    languages[languageName] = lang;
    lang.rawDefinition = languageDefinition.bind(null, hljs);
    if (lang.aliases) {
      registerAliases(lang.aliases, { languageName });
    }
  }
  function unregisterLanguage(languageName) {
    delete languages[languageName];
    for (const alias of Object.keys(aliases)) {
      if (aliases[alias] === languageName) {
        delete aliases[alias];
      }
    }
  }
  function listLanguages() {
    return Object.keys(languages);
  }
  function getLanguage(name) {
    name = (name || "").toLowerCase();
    return languages[name] || languages[aliases[name]];
  }
  function registerAliases(aliasList, { languageName }) {
    if (typeof aliasList === "string") {
      aliasList = [aliasList];
    }
    aliasList.forEach((alias) => {
      aliases[alias.toLowerCase()] = languageName;
    });
  }
  function autoDetection(name) {
    const lang = getLanguage(name);
    return lang && !lang.disableAutodetect;
  }
  function upgradePluginAPI(plugin) {
    if (plugin["before:highlightBlock"] && !plugin["before:highlightElement"]) {
      plugin["before:highlightElement"] = (data) => {
        plugin["before:highlightBlock"](
          Object.assign({ block: data.el }, data)
        );
      };
    }
    if (plugin["after:highlightBlock"] && !plugin["after:highlightElement"]) {
      plugin["after:highlightElement"] = (data) => {
        plugin["after:highlightBlock"](
          Object.assign({ block: data.el }, data)
        );
      };
    }
  }
  function addPlugin(plugin) {
    upgradePluginAPI(plugin);
    plugins.push(plugin);
  }
  function removePlugin(plugin) {
    const index2 = plugins.indexOf(plugin);
    if (index2 !== -1) {
      plugins.splice(index2, 1);
    }
  }
  function fire(event, args) {
    const cb2 = event;
    plugins.forEach(function(plugin) {
      if (plugin[cb2]) {
        plugin[cb2](args);
      }
    });
  }
  function deprecateHighlightBlock(el2) {
    deprecated("10.7.0", "highlightBlock will be removed entirely in v12.0");
    deprecated("10.7.0", "Please use highlightElement now.");
    return highlightElement(el2);
  }
  Object.assign(hljs, {
    highlight: highlight2,
    highlightAuto,
    highlightAll,
    highlightElement,
    // TODO: Remove with v12 API
    highlightBlock: deprecateHighlightBlock,
    configure,
    initHighlighting,
    initHighlightingOnLoad,
    registerLanguage,
    unregisterLanguage,
    listLanguages,
    getLanguage,
    registerAliases,
    autoDetection,
    inherit,
    addPlugin,
    removePlugin
  });
  hljs.debugMode = function() {
    SAFE_MODE = false;
  };
  hljs.safeMode = function() {
    SAFE_MODE = true;
  };
  hljs.versionString = version;
  hljs.regex = {
    concat,
    lookahead,
    either,
    optional,
    anyNumberOfTimes
  };
  for (const key in MODES) {
    if (typeof MODES[key] === "object") {
      deepFreeze(MODES[key]);
    }
  }
  Object.assign(hljs, MODES);
  return hljs;
};
const highlight = HLJS({});
highlight.newInstance = () => HLJS({});
var core = highlight;
highlight.HighlightJS = highlight;
highlight.default = highlight;
const HighlightJS = /* @__PURE__ */ getDefaultExportFromCjs(core);
const IDENT_RE = "[A-Za-z$_][0-9A-Za-z$_]*";
const KEYWORDS = [
  "as",
  // for exports
  "in",
  "of",
  "if",
  "for",
  "while",
  "finally",
  "var",
  "new",
  "function",
  "do",
  "return",
  "void",
  "else",
  "break",
  "catch",
  "instanceof",
  "with",
  "throw",
  "case",
  "default",
  "try",
  "switch",
  "continue",
  "typeof",
  "delete",
  "let",
  "yield",
  "const",
  "class",
  // JS handles these with a special rule
  // "get",
  // "set",
  "debugger",
  "async",
  "await",
  "static",
  "import",
  "from",
  "export",
  "extends"
];
const LITERALS = [
  "true",
  "false",
  "null",
  "undefined",
  "NaN",
  "Infinity"
];
const TYPES = [
  // Fundamental objects
  "Object",
  "Function",
  "Boolean",
  "Symbol",
  // numbers and dates
  "Math",
  "Date",
  "Number",
  "BigInt",
  // text
  "String",
  "RegExp",
  // Indexed collections
  "Array",
  "Float32Array",
  "Float64Array",
  "Int8Array",
  "Uint8Array",
  "Uint8ClampedArray",
  "Int16Array",
  "Int32Array",
  "Uint16Array",
  "Uint32Array",
  "BigInt64Array",
  "BigUint64Array",
  // Keyed collections
  "Set",
  "Map",
  "WeakSet",
  "WeakMap",
  // Structured data
  "ArrayBuffer",
  "SharedArrayBuffer",
  "Atomics",
  "DataView",
  "JSON",
  // Control abstraction objects
  "Promise",
  "Generator",
  "GeneratorFunction",
  "AsyncFunction",
  // Reflection
  "Reflect",
  "Proxy",
  // Internationalization
  "Intl",
  // WebAssembly
  "WebAssembly"
];
const ERROR_TYPES = [
  "Error",
  "EvalError",
  "InternalError",
  "RangeError",
  "ReferenceError",
  "SyntaxError",
  "TypeError",
  "URIError"
];
const BUILT_IN_GLOBALS = [
  "setInterval",
  "setTimeout",
  "clearInterval",
  "clearTimeout",
  "require",
  "exports",
  "eval",
  "isFinite",
  "isNaN",
  "parseFloat",
  "parseInt",
  "decodeURI",
  "decodeURIComponent",
  "encodeURI",
  "encodeURIComponent",
  "escape",
  "unescape"
];
const BUILT_IN_VARIABLES = [
  "arguments",
  "this",
  "super",
  "console",
  "window",
  "document",
  "localStorage",
  "sessionStorage",
  "module",
  "global"
  // Node.js
];
const BUILT_INS = [].concat(
  BUILT_IN_GLOBALS,
  TYPES,
  ERROR_TYPES
);
function javascript(hljs) {
  const regex = hljs.regex;
  const hasClosingTag = (match2, { after }) => {
    const tag = "</" + match2[0].slice(1);
    const pos = match2.input.indexOf(tag, after);
    return pos !== -1;
  };
  const IDENT_RE$12 = IDENT_RE;
  const FRAGMENT = {
    begin: "<>",
    end: "</>"
  };
  const XML_SELF_CLOSING = /<[A-Za-z0-9\\._:-]+\s*\/>/;
  const XML_TAG = {
    begin: /<[A-Za-z0-9\\._:-]+/,
    end: /\/[A-Za-z0-9\\._:-]+>|\/>/,
    /**
     * @param {RegExpMatchArray} match
     * @param {CallbackResponse} response
     */
    isTrulyOpeningTag: (match2, response) => {
      const afterMatchIndex = match2[0].length + match2.index;
      const nextChar = match2.input[afterMatchIndex];
      if (
        // HTML should not include another raw `<` inside a tag
        // nested type?
        // `<Array<Array<number>>`, etc.
        nextChar === "<" || // the , gives away that this is not HTML
        // `<T, A extends keyof T, V>`
        nextChar === ","
      ) {
        response.ignoreMatch();
        return;
      }
      if (nextChar === ">") {
        if (!hasClosingTag(match2, { after: afterMatchIndex })) {
          response.ignoreMatch();
        }
      }
      let m2;
      const afterMatch = match2.input.substring(afterMatchIndex);
      if (m2 = afterMatch.match(/^\s*=/)) {
        response.ignoreMatch();
        return;
      }
      if (m2 = afterMatch.match(/^\s+extends\s+/)) {
        if (m2.index === 0) {
          response.ignoreMatch();
          return;
        }
      }
    }
  };
  const KEYWORDS$1 = {
    $pattern: IDENT_RE,
    keyword: KEYWORDS,
    literal: LITERALS,
    built_in: BUILT_INS,
    "variable.language": BUILT_IN_VARIABLES
  };
  const decimalDigits = "[0-9](_?[0-9])*";
  const frac = `\\.(${decimalDigits})`;
  const decimalInteger = `0|[1-9](_?[0-9])*|0[0-7]*[89][0-9]*`;
  const NUMBER = {
    className: "number",
    variants: [
      // DecimalLiteral
      { begin: `(\\b(${decimalInteger})((${frac})|\\.)?|(${frac}))[eE][+-]?(${decimalDigits})\\b` },
      { begin: `\\b(${decimalInteger})\\b((${frac})\\b|\\.)?|(${frac})\\b` },
      // DecimalBigIntegerLiteral
      { begin: `\\b(0|[1-9](_?[0-9])*)n\\b` },
      // NonDecimalIntegerLiteral
      { begin: "\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*n?\\b" },
      { begin: "\\b0[bB][0-1](_?[0-1])*n?\\b" },
      { begin: "\\b0[oO][0-7](_?[0-7])*n?\\b" },
      // LegacyOctalIntegerLiteral (does not include underscore separators)
      // https://tc39.es/ecma262/#sec-additional-syntax-numeric-literals
      { begin: "\\b0[0-7]+n?\\b" }
    ],
    relevance: 0
  };
  const SUBST = {
    className: "subst",
    begin: "\\$\\{",
    end: "\\}",
    keywords: KEYWORDS$1,
    contains: []
    // defined later
  };
  const HTML_TEMPLATE = {
    begin: "html`",
    end: "",
    starts: {
      end: "`",
      returnEnd: false,
      contains: [
        hljs.BACKSLASH_ESCAPE,
        SUBST
      ],
      subLanguage: "xml"
    }
  };
  const CSS_TEMPLATE = {
    begin: "css`",
    end: "",
    starts: {
      end: "`",
      returnEnd: false,
      contains: [
        hljs.BACKSLASH_ESCAPE,
        SUBST
      ],
      subLanguage: "css"
    }
  };
  const GRAPHQL_TEMPLATE = {
    begin: "gql`",
    end: "",
    starts: {
      end: "`",
      returnEnd: false,
      contains: [
        hljs.BACKSLASH_ESCAPE,
        SUBST
      ],
      subLanguage: "graphql"
    }
  };
  const TEMPLATE_STRING = {
    className: "string",
    begin: "`",
    end: "`",
    contains: [
      hljs.BACKSLASH_ESCAPE,
      SUBST
    ]
  };
  const JSDOC_COMMENT = hljs.COMMENT(
    /\/\*\*(?!\/)/,
    "\\*/",
    {
      relevance: 0,
      contains: [
        {
          begin: "(?=@[A-Za-z]+)",
          relevance: 0,
          contains: [
            {
              className: "doctag",
              begin: "@[A-Za-z]+"
            },
            {
              className: "type",
              begin: "\\{",
              end: "\\}",
              excludeEnd: true,
              excludeBegin: true,
              relevance: 0
            },
            {
              className: "variable",
              begin: IDENT_RE$12 + "(?=\\s*(-)|$)",
              endsParent: true,
              relevance: 0
            },
            // eat spaces (not newlines) so we can find
            // types or variables
            {
              begin: /(?=[^\n])\s/,
              relevance: 0
            }
          ]
        }
      ]
    }
  );
  const COMMENT2 = {
    className: "comment",
    variants: [
      JSDOC_COMMENT,
      hljs.C_BLOCK_COMMENT_MODE,
      hljs.C_LINE_COMMENT_MODE
    ]
  };
  const SUBST_INTERNALS = [
    hljs.APOS_STRING_MODE,
    hljs.QUOTE_STRING_MODE,
    HTML_TEMPLATE,
    CSS_TEMPLATE,
    GRAPHQL_TEMPLATE,
    TEMPLATE_STRING,
    // Skip numbers when they are part of a variable name
    { match: /\$\d+/ },
    NUMBER
    // This is intentional:
    // See https://github.com/highlightjs/highlight.js/issues/3288
    // hljs.REGEXP_MODE
  ];
  SUBST.contains = SUBST_INTERNALS.concat({
    // we need to pair up {} inside our subst to prevent
    // it from ending too early by matching another }
    begin: /\{/,
    end: /\}/,
    keywords: KEYWORDS$1,
    contains: [
      "self"
    ].concat(SUBST_INTERNALS)
  });
  const SUBST_AND_COMMENTS = [].concat(COMMENT2, SUBST.contains);
  const PARAMS_CONTAINS = SUBST_AND_COMMENTS.concat([
    // eat recursive parens in sub expressions
    {
      begin: /\(/,
      end: /\)/,
      keywords: KEYWORDS$1,
      contains: ["self"].concat(SUBST_AND_COMMENTS)
    }
  ]);
  const PARAMS = {
    className: "params",
    begin: /\(/,
    end: /\)/,
    excludeBegin: true,
    excludeEnd: true,
    keywords: KEYWORDS$1,
    contains: PARAMS_CONTAINS
  };
  const CLASS_OR_EXTENDS = {
    variants: [
      // class Car extends vehicle
      {
        match: [
          /class/,
          /\s+/,
          IDENT_RE$12,
          /\s+/,
          /extends/,
          /\s+/,
          regex.concat(IDENT_RE$12, "(", regex.concat(/\./, IDENT_RE$12), ")*")
        ],
        scope: {
          1: "keyword",
          3: "title.class",
          5: "keyword",
          7: "title.class.inherited"
        }
      },
      // class Car
      {
        match: [
          /class/,
          /\s+/,
          IDENT_RE$12
        ],
        scope: {
          1: "keyword",
          3: "title.class"
        }
      }
    ]
  };
  const CLASS_REFERENCE = {
    relevance: 0,
    match: regex.either(
      // Hard coded exceptions
      /\bJSON/,
      // Float32Array, OutT
      /\b[A-Z][a-z]+([A-Z][a-z]*|\d)*/,
      // CSSFactory, CSSFactoryT
      /\b[A-Z]{2,}([A-Z][a-z]+|\d)+([A-Z][a-z]*)*/,
      // FPs, FPsT
      /\b[A-Z]{2,}[a-z]+([A-Z][a-z]+|\d)*([A-Z][a-z]*)*/
      // P
      // single letters are not highlighted
      // BLAH
      // this will be flagged as a UPPER_CASE_CONSTANT instead
    ),
    className: "title.class",
    keywords: {
      _: [
        // se we still get relevance credit for JS library classes
        ...TYPES,
        ...ERROR_TYPES
      ]
    }
  };
  const USE_STRICT = {
    label: "use_strict",
    className: "meta",
    relevance: 10,
    begin: /^\s*['"]use (strict|asm)['"]/
  };
  const FUNCTION_DEFINITION = {
    variants: [
      {
        match: [
          /function/,
          /\s+/,
          IDENT_RE$12,
          /(?=\s*\()/
        ]
      },
      // anonymous function
      {
        match: [
          /function/,
          /\s*(?=\()/
        ]
      }
    ],
    className: {
      1: "keyword",
      3: "title.function"
    },
    label: "func.def",
    contains: [PARAMS],
    illegal: /%/
  };
  const UPPER_CASE_CONSTANT = {
    relevance: 0,
    match: /\b[A-Z][A-Z_0-9]+\b/,
    className: "variable.constant"
  };
  function noneOf(list) {
    return regex.concat("(?!", list.join("|"), ")");
  }
  const FUNCTION_CALL = {
    match: regex.concat(
      /\b/,
      noneOf([
        ...BUILT_IN_GLOBALS,
        "super",
        "import"
      ]),
      IDENT_RE$12,
      regex.lookahead(/\(/)
    ),
    className: "title.function",
    relevance: 0
  };
  const PROPERTY_ACCESS = {
    begin: regex.concat(/\./, regex.lookahead(
      regex.concat(IDENT_RE$12, /(?![0-9A-Za-z$_(])/)
    )),
    end: IDENT_RE$12,
    excludeBegin: true,
    keywords: "prototype",
    className: "property",
    relevance: 0
  };
  const GETTER_OR_SETTER = {
    match: [
      /get|set/,
      /\s+/,
      IDENT_RE$12,
      /(?=\()/
    ],
    className: {
      1: "keyword",
      3: "title.function"
    },
    contains: [
      {
        // eat to avoid empty params
        begin: /\(\)/
      },
      PARAMS
    ]
  };
  const FUNC_LEAD_IN_RE = "(\\([^()]*(\\([^()]*(\\([^()]*\\)[^()]*)*\\)[^()]*)*\\)|" + hljs.UNDERSCORE_IDENT_RE + ")\\s*=>";
  const FUNCTION_VARIABLE = {
    match: [
      /const|var|let/,
      /\s+/,
      IDENT_RE$12,
      /\s*/,
      /=\s*/,
      /(async\s*)?/,
      // async is optional
      regex.lookahead(FUNC_LEAD_IN_RE)
    ],
    keywords: "async",
    className: {
      1: "keyword",
      3: "title.function"
    },
    contains: [
      PARAMS
    ]
  };
  return {
    name: "JavaScript",
    aliases: ["js", "jsx", "mjs", "cjs"],
    keywords: KEYWORDS$1,
    // this will be extended by TypeScript
    exports: { PARAMS_CONTAINS, CLASS_REFERENCE },
    illegal: /#(?![$_A-z])/,
    contains: [
      hljs.SHEBANG({
        label: "shebang",
        binary: "node",
        relevance: 5
      }),
      USE_STRICT,
      hljs.APOS_STRING_MODE,
      hljs.QUOTE_STRING_MODE,
      HTML_TEMPLATE,
      CSS_TEMPLATE,
      GRAPHQL_TEMPLATE,
      TEMPLATE_STRING,
      COMMENT2,
      // Skip numbers when they are part of a variable name
      { match: /\$\d+/ },
      NUMBER,
      CLASS_REFERENCE,
      {
        className: "attr",
        begin: IDENT_RE$12 + regex.lookahead(":"),
        relevance: 0
      },
      FUNCTION_VARIABLE,
      {
        // "value" container
        begin: "(" + hljs.RE_STARTERS_RE + "|\\b(case|return|throw)\\b)\\s*",
        keywords: "return throw case",
        relevance: 0,
        contains: [
          COMMENT2,
          hljs.REGEXP_MODE,
          {
            className: "function",
            // we have to count the parens to make sure we actually have the
            // correct bounding ( ) before the =>.  There could be any number of
            // sub-expressions inside also surrounded by parens.
            begin: FUNC_LEAD_IN_RE,
            returnBegin: true,
            end: "\\s*=>",
            contains: [
              {
                className: "params",
                variants: [
                  {
                    begin: hljs.UNDERSCORE_IDENT_RE,
                    relevance: 0
                  },
                  {
                    className: null,
                    begin: /\(\s*\)/,
                    skip: true
                  },
                  {
                    begin: /\(/,
                    end: /\)/,
                    excludeBegin: true,
                    excludeEnd: true,
                    keywords: KEYWORDS$1,
                    contains: PARAMS_CONTAINS
                  }
                ]
              }
            ]
          },
          {
            // could be a comma delimited list of params to a function call
            begin: /,/,
            relevance: 0
          },
          {
            match: /\s+/,
            relevance: 0
          },
          {
            // JSX
            variants: [
              { begin: FRAGMENT.begin, end: FRAGMENT.end },
              { match: XML_SELF_CLOSING },
              {
                begin: XML_TAG.begin,
                // we carefully check the opening tag to see if it truly
                // is a tag and not a false positive
                "on:begin": XML_TAG.isTrulyOpeningTag,
                end: XML_TAG.end
              }
            ],
            subLanguage: "xml",
            contains: [
              {
                begin: XML_TAG.begin,
                end: XML_TAG.end,
                skip: true,
                contains: ["self"]
              }
            ]
          }
        ]
      },
      FUNCTION_DEFINITION,
      {
        // prevent this from getting swallowed up by function
        // since they appear "function like"
        beginKeywords: "while if switch catch for"
      },
      {
        // we have to count the parens to make sure we actually have the correct
        // bounding ( ).  There could be any number of sub-expressions inside
        // also surrounded by parens.
        begin: "\\b(?!function)" + hljs.UNDERSCORE_IDENT_RE + "\\([^()]*(\\([^()]*(\\([^()]*\\)[^()]*)*\\)[^()]*)*\\)\\s*\\{",
        // end parens
        returnBegin: true,
        label: "func.def",
        contains: [
          PARAMS,
          hljs.inherit(hljs.TITLE_MODE, { begin: IDENT_RE$12, className: "title.function" })
        ]
      },
      // catch ... so it won't trigger the property rule below
      {
        match: /\.\.\./,
        relevance: 0
      },
      PROPERTY_ACCESS,
      // hack: prevents detection of keywords in some circumstances
      // .keyword()
      // $keyword = x
      {
        match: "\\$" + IDENT_RE$12,
        relevance: 0
      },
      {
        match: [/\bconstructor(?=\s*\()/],
        className: { 1: "title.function" },
        contains: [PARAMS]
      },
      FUNCTION_CALL,
      UPPER_CASE_CONSTANT,
      CLASS_OR_EXTENDS,
      GETTER_OR_SETTER,
      {
        match: /\$[(.]/
        // relevance booster for a pattern common to JS libs: `$(something)` and `$.something`
      }
    ]
  };
}
function typescript(hljs) {
  const tsLanguage = javascript(hljs);
  const IDENT_RE$12 = IDENT_RE;
  const TYPES2 = [
    "any",
    "void",
    "number",
    "boolean",
    "string",
    "object",
    "never",
    "symbol",
    "bigint",
    "unknown"
  ];
  const NAMESPACE = {
    beginKeywords: "namespace",
    end: /\{/,
    excludeEnd: true,
    contains: [tsLanguage.exports.CLASS_REFERENCE]
  };
  const INTERFACE = {
    beginKeywords: "interface",
    end: /\{/,
    excludeEnd: true,
    keywords: {
      keyword: "interface extends",
      built_in: TYPES2
    },
    contains: [tsLanguage.exports.CLASS_REFERENCE]
  };
  const USE_STRICT = {
    className: "meta",
    relevance: 10,
    begin: /^\s*['"]use strict['"]/
  };
  const TS_SPECIFIC_KEYWORDS = [
    "type",
    "namespace",
    "interface",
    "public",
    "private",
    "protected",
    "implements",
    "declare",
    "abstract",
    "readonly",
    "enum",
    "override"
  ];
  const KEYWORDS$1 = {
    $pattern: IDENT_RE,
    keyword: KEYWORDS.concat(TS_SPECIFIC_KEYWORDS),
    literal: LITERALS,
    built_in: BUILT_INS.concat(TYPES2),
    "variable.language": BUILT_IN_VARIABLES
  };
  const DECORATOR = {
    className: "meta",
    begin: "@" + IDENT_RE$12
  };
  const swapMode = (mode, label, replacement) => {
    const indx = mode.contains.findIndex((m2) => m2.label === label);
    if (indx === -1) {
      throw new Error("can not find mode to replace");
    }
    mode.contains.splice(indx, 1, replacement);
  };
  Object.assign(tsLanguage.keywords, KEYWORDS$1);
  tsLanguage.exports.PARAMS_CONTAINS.push(DECORATOR);
  tsLanguage.contains = tsLanguage.contains.concat([
    DECORATOR,
    NAMESPACE,
    INTERFACE
  ]);
  swapMode(tsLanguage, "shebang", hljs.SHEBANG());
  swapMode(tsLanguage, "use_strict", USE_STRICT);
  const functionDeclaration = tsLanguage.contains.find((m2) => m2.label === "func.def");
  functionDeclaration.relevance = 0;
  Object.assign(tsLanguage, {
    name: "TypeScript",
    aliases: [
      "ts",
      "tsx",
      "mts",
      "cts"
    ]
  });
  return tsLanguage;
}
function xml(hljs) {
  const regex = hljs.regex;
  const TAG_NAME_RE = regex.concat(/[\p{L}_]/u, regex.optional(/[\p{L}0-9_.-]*:/u), /[\p{L}0-9_.-]*/u);
  const XML_IDENT_RE = /[\p{L}0-9._:-]+/u;
  const XML_ENTITIES = {
    className: "symbol",
    begin: /&[a-z]+;|&#[0-9]+;|&#x[a-f0-9]+;/
  };
  const XML_META_KEYWORDS = {
    begin: /\s/,
    contains: [
      {
        className: "keyword",
        begin: /#?[a-z_][a-z1-9_-]+/,
        illegal: /\n/
      }
    ]
  };
  const XML_META_PAR_KEYWORDS = hljs.inherit(XML_META_KEYWORDS, {
    begin: /\(/,
    end: /\)/
  });
  const APOS_META_STRING_MODE = hljs.inherit(hljs.APOS_STRING_MODE, { className: "string" });
  const QUOTE_META_STRING_MODE = hljs.inherit(hljs.QUOTE_STRING_MODE, { className: "string" });
  const TAG_INTERNALS = {
    endsWithParent: true,
    illegal: /</,
    relevance: 0,
    contains: [
      {
        className: "attr",
        begin: XML_IDENT_RE,
        relevance: 0
      },
      {
        begin: /=\s*/,
        relevance: 0,
        contains: [
          {
            className: "string",
            endsParent: true,
            variants: [
              {
                begin: /"/,
                end: /"/,
                contains: [XML_ENTITIES]
              },
              {
                begin: /'/,
                end: /'/,
                contains: [XML_ENTITIES]
              },
              { begin: /[^\s"'=<>`]+/ }
            ]
          }
        ]
      }
    ]
  };
  return {
    name: "HTML, XML",
    aliases: [
      "html",
      "xhtml",
      "rss",
      "atom",
      "xjb",
      "xsd",
      "xsl",
      "plist",
      "wsf",
      "svg"
    ],
    case_insensitive: true,
    unicodeRegex: true,
    contains: [
      {
        className: "meta",
        begin: /<![a-z]/,
        end: />/,
        relevance: 10,
        contains: [
          XML_META_KEYWORDS,
          QUOTE_META_STRING_MODE,
          APOS_META_STRING_MODE,
          XML_META_PAR_KEYWORDS,
          {
            begin: /\[/,
            end: /\]/,
            contains: [
              {
                className: "meta",
                begin: /<![a-z]/,
                end: />/,
                contains: [
                  XML_META_KEYWORDS,
                  XML_META_PAR_KEYWORDS,
                  QUOTE_META_STRING_MODE,
                  APOS_META_STRING_MODE
                ]
              }
            ]
          }
        ]
      },
      hljs.COMMENT(
        /<!--/,
        /-->/,
        { relevance: 10 }
      ),
      {
        begin: /<!\[CDATA\[/,
        end: /\]\]>/,
        relevance: 10
      },
      XML_ENTITIES,
      // xml processing instructions
      {
        className: "meta",
        end: /\?>/,
        variants: [
          {
            begin: /<\?xml/,
            relevance: 10,
            contains: [
              QUOTE_META_STRING_MODE
            ]
          },
          {
            begin: /<\?[a-z][a-z0-9]+/
          }
        ]
      },
      {
        className: "tag",
        /*
        The lookahead pattern (?=...) ensures that 'begin' only matches
        '<style' as a single word, followed by a whitespace or an
        ending bracket.
        */
        begin: /<style(?=\s|>)/,
        end: />/,
        keywords: { name: "style" },
        contains: [TAG_INTERNALS],
        starts: {
          end: /<\/style>/,
          returnEnd: true,
          subLanguage: [
            "css",
            "xml"
          ]
        }
      },
      {
        className: "tag",
        // See the comment in the <style tag about the lookahead pattern
        begin: /<script(?=\s|>)/,
        end: />/,
        keywords: { name: "script" },
        contains: [TAG_INTERNALS],
        starts: {
          end: /<\/script>/,
          returnEnd: true,
          subLanguage: [
            "javascript",
            "handlebars",
            "xml"
          ]
        }
      },
      // we need this for now for jSX
      {
        className: "tag",
        begin: /<>|<\/>/
      },
      // open tag
      {
        className: "tag",
        begin: regex.concat(
          /</,
          regex.lookahead(regex.concat(
            TAG_NAME_RE,
            // <tag/>
            // <tag>
            // <tag ...
            regex.either(/\/>/, />/, /\s/)
          ))
        ),
        end: /\/?>/,
        contains: [
          {
            className: "name",
            begin: TAG_NAME_RE,
            relevance: 0,
            starts: TAG_INTERNALS
          }
        ]
      },
      // close tag
      {
        className: "tag",
        begin: regex.concat(
          /<\//,
          regex.lookahead(regex.concat(
            TAG_NAME_RE,
            />/
          ))
        ),
        contains: [
          {
            className: "name",
            begin: TAG_NAME_RE,
            relevance: 0
          },
          {
            begin: />/,
            relevance: 0,
            endsParent: true
          }
        ]
      }
    ]
  };
}
const github = "";
const CodeSnippet = ({ lang, allowCopy, code, children: children2 }) => {
  const [output, setOutput] = reactExports$1.useState("");
  const [isCopied, setIsCopied] = reactExports$1.useState(false);
  const cleanTabs = (code2 = "", tabSize) => {
    const lines = code2.split("\n");
    if (lines.length === 1) {
      return code2.trim();
    }
    const space0 = lines[0].length - lines[0].trimStart().length;
    const space1 = lines[1].length - lines[1].trimStart().length;
    const space2 = space0 < tabSize ? space1 : space0;
    return lines.map((line) => line.substring(space2)).join("\n").trim();
  };
  function copyCode() {
    navigator.clipboard.writeText(output);
    setIsCopied(true);
    setTimeout(() => {
      setIsCopied(false);
    }, 2e3);
  }
  reactExports$1.useEffect(() => {
    HighlightJS.registerLanguage("typescript", typescript);
    HighlightJS.registerLanguage("html", xml);
  }, []);
  reactExports$1.useEffect(() => {
    setOutput(render());
    setTimeout(HighlightJS.highlightAll, 1);
  }, [code, children2]);
  function render() {
    if (code) {
      return cleanTabs(code, 2);
    }
    if (typeof children2 !== "string") {
      return renderToString(children2);
    }
    return children2;
  }
  return /* @__PURE__ */ jsxRuntimeExports$1.jsxs("div", { className: "goa-code-snippet", children: [
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("pre", { children: /* @__PURE__ */ jsxRuntimeExports$1.jsx("code", { className: `highlight-${lang}`, children: output }) }),
    allowCopy && /* @__PURE__ */ jsxRuntimeExports$1.jsxs("div", { className: "goa-code-snippet-actions", children: [
      /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAButton, { type: "tertiary", size: "compact", leadingIcon: "copy", onClick: copyCode, children: "Copy code" }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx(
        "span",
        {
          className: "copy-feedback",
          style: isCopied ? { visibility: "visible" } : { visibility: "hidden" },
          children: "Copied!"
        }
      )
    ] })
  ] });
};
const ReactiveComponents = [
  "goa-input",
  "goa-textarea",
  "goa-dropdown",
  "goa-checkbox",
  "goa-radio-group"
];
class AngularReactiveSerializer extends BaseSerializer {
  constructor(properties) {
    super(properties);
    __privateAdd(this, _dynamicProp2);
    __privateAdd(this, _toFunc2);
    __publicField(this, "isRoot", false);
    __publicField(this, "nativeEls", "div span p br header footer blockquote input textarea a button h2 h2 h3 h4 img label ul li ol hr section".split(" "));
  }
  setIsRoot(isRoot) {
    this.isRoot = isRoot;
  }
  setState(state) {
    super.setState(state);
  }
  stringToProp(name, item) {
    if (ReactiveComponents.includes(this.state.element) && name === "value") {
      return `goaValue [formControl]="${this.state.props.name}FormCtrl" [value]="${this.state.props.name}FormCtrl.value"`;
    }
    if (this.isDynamic(name)) {
      return __privateMethod(this, _dynamicProp2, dynamicProp_fn2).call(this, name);
    }
    if (item === "")
      return "";
    return `${name.toLowerCase()}="${item}"`;
  }
  numberToProp(name, item) {
    if (this.isDynamic(name)) {
      return __privateMethod(this, _dynamicProp2, dynamicProp_fn2).call(this, name);
    }
    return `${name.toLowerCase()}="${item}"`;
  }
  booleanToProp(propName, propValue) {
    if (ReactiveComponents.includes(this.state.element) && propName === "checked") {
      return `goaChecked [formControl]="${this.state.props.name}FormCtrl" [value]="${this.state.props.name}FormCtrl.value"`;
    }
    if (this.isDynamic(propName)) {
      return __privateMethod(this, _dynamicProp2, dynamicProp_fn2).call(this, propName);
    }
    if (!propValue)
      return "";
    return `${propName.toLowerCase()}=${propValue}`;
  }
  funcToProp(name, _item) {
    return __privateMethod(this, _toFunc2, toFunc_fn2).call(this, name);
  }
  arrayToProp(name, items, delimit) {
    if (this.isDynamic(name)) {
      return __privateMethod(this, _dynamicProp2, dynamicProp_fn2).call(this, name);
    }
    return delimit ? `${name.toLowerCase()}=[${items}]` : `${name.toLowerCase()}=${items}`;
  }
  componentNameToString(name) {
    if (this.nativeEls.includes(name)) {
      return name;
    }
    const prefix = "GoA";
    const tail = name.replace(prefix, "");
    return `${prefix.toLowerCase()}-${this.dasherize(tail)}`;
  }
  componentToString(name) {
    name = this.dasherize(name);
    return `<${name} />`;
  }
}
_dynamicProp2 = new WeakSet();
dynamicProp_fn2 = function(name) {
  return `[${name.toLowerCase()}]="some${this.capitalize(name)}Value"`;
};
_toFunc2 = new WeakSet();
toFunc_fn2 = function(name) {
  if (name === "onChange") {
    return "";
  }
  let _name = name.replace(/^on/, "");
  _name = _name.substring(0, 1).toLowerCase() + _name.substring(1);
  return `(_${_name})="${name}($event)"`;
};
const Sandbox$1 = "";
const Sandbox = (props) => {
  const serializers = {
    react: (els, properties) => {
      const serializer = new ComponentSerializer(new ReactSerializer(properties));
      return serializer.componentsToString(els);
    },
    angular: (els, properties) => {
      const serializer = new ComponentSerializer(new AngularSerializer(properties));
      return serializer.componentsToString(els);
    },
    "angular-reactive": (els, properties) => {
      const serializer = new ComponentSerializer(new AngularReactiveSerializer(properties));
      return serializer.componentsToString(els);
    }
  };
  const lang = reactExports$1.useContext(LanguageContext);
  const [formatLang, setFormatLang] = reactExports$1.useState("");
  const formatMap = {
    react: "tsx",
    angular: "html"
  };
  reactExports$1.useEffect(() => {
    if (!props.properties)
      return;
    if (!props.children)
      return;
    setFormatLang(formatMap[lang]);
  }, [lang, props.children, props.properties]);
  function onChange(bindings) {
    var _a;
    (_a = props.onChange) == null ? void 0 : _a.call(props, bindings, toKeyValue(bindings));
  }
  function toKeyValue(bindings) {
    return bindings.reduce((acc, prop) => {
      if (typeof prop.value === "string" && prop.value === "") {
        return acc;
      }
      acc[prop.name] = prop.value;
      return acc;
    }, {});
  }
  function getComponents(type) {
    const children2 = Array.isArray(props.children) ? props.children : [props.children];
    return children2.filter(
      (el2) => typeof el2.type !== "string" && el2.type.name.toLowerCase().startsWith(type)
    );
  }
  function getCodeSnippets(...tags) {
    const matches = (list) => {
      return tags.filter((tag) => list.includes(tag)).length === list.length;
    };
    return getComponents("codesnippet").filter((el2) => {
      const componentTags = Array.isArray(el2.props.tags) ? el2.props.tags : [el2.props.tags];
      if (tags.length !== componentTags.length)
        return false;
      return matches(componentTags);
    });
  }
  function output(fn) {
    return fn(getComponents("goa"), props.properties || []);
  }
  function render() {
    var _a;
    if (lang === "angular" && ((_a = props.flags) == null ? void 0 : _a.includes("reactive"))) {
      return /* @__PURE__ */ jsxRuntimeExports$1.jsxs(jsxRuntimeExports$1.Fragment, { children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("h4", { children: "Event based" }),
        getCodeSnippets("angular"),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(CodeSnippet, { lang: formatLang, allowCopy: true, children: output(serializers["angular"]) }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("h4", { children: "Reactive forms (FormControl)" }),
        getCodeSnippets("angular", "reactive"),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(CodeSnippet, { lang: formatLang, allowCopy: true, children: output(serializers["angular-reactive"]) })
      ] });
    }
    if (lang === "angular") {
      return /* @__PURE__ */ jsxRuntimeExports$1.jsxs(jsxRuntimeExports$1.Fragment, { children: [
        getCodeSnippets("angular"),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(CodeSnippet, { lang: formatLang, allowCopy: true, children: output(serializers["angular"]) })
      ] });
    }
    if (lang === "react") {
      return /* @__PURE__ */ jsxRuntimeExports$1.jsx(CodeSnippet, { lang: formatLang, allowCopy: true, children: output(serializers["react"]) });
    }
    return /* @__PURE__ */ jsxRuntimeExports$1.jsxs(jsxRuntimeExports$1.Fragment, { children: [
      "No formatter found for ",
      lang
    ] });
  }
  return /* @__PURE__ */ jsxRuntimeExports$1.jsxs(jsxRuntimeExports$1.Fragment, { children: [
    props.properties && /* @__PURE__ */ jsxRuntimeExports$1.jsx(SandboxProperties, { properties: props.properties, onChange }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("div", { className: "sandbox-note", children: props.note }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("div", { className: "sandbox-render", children: /* @__PURE__ */ jsxRuntimeExports$1.jsx("div", { className: props.fullWidth ? "sandbox-render-fullwidth" : "sandbox-render-centered", children: getComponents("goa") }) }),
    render()
  ] });
};
function getCssVarValue(tokenName) {
  return getComputedStyle(document.documentElement).getPropertyValue(tokenName).trim();
}
const SupportInfo$1 = "";
const SupportInfo = () => {
  return /* @__PURE__ */ jsxRuntimeExports$1.jsx("div", { className: "support-info", children: /* @__PURE__ */ jsxRuntimeExports$1.jsxs(
    GoACallout,
    {
      type: "information",
      heading: "Need help? Connect with us on Slack",
      children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "https://goa-dio.slack.com/archives/C02PLLT9HQ9", children: "#design-system-support" }),
        " ",
        "General information and discussion related to design system including questions, new component proposals, contribution, and other requests."
      ]
    }
  ) });
};
function Components() {
  const [language, setLanguage] = reactExports$1.useState("");
  reactExports$1.useEffect(() => {
    const lang = localStorage.getItem("goa-docs-lang") || "react";
    setLanguage(lang);
  }, []);
  function onLanguageChange(_name, value) {
    const lang = Array.isArray(value) ? value[0] : value;
    setLanguage(lang);
    localStorage.setItem("goa-docs-lang", lang);
  }
  return /* @__PURE__ */ jsxRuntimeExports$1.jsxs(LanguageContext.Provider, { value: language, children: [
    /* @__PURE__ */ jsxRuntimeExports$1.jsxs("section", { className: "side-menu", children: [
      /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoADropdown, { value: language, onChange: onLanguageChange, mb: "m", mt: "m", mr: "m", ml: "m", children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoADropdownItem, { label: "React", value: "react" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoADropdownItem, { label: "Angular", value: "angular" })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoASideMenu, { children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "", children: "All" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "accordion", children: "Accordion" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "badge", children: "Badge" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "block", children: "Block" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "button", children: "Button" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "callout", children: "Callout" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "checkbox", children: "Checkbox" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "chip", children: "Chip" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "combobox", children: "Combobox" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "container", children: "Container" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "details", children: "Details" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "divider", children: "Divider" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "dropdown", children: "Dropdown" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "file-uploader", children: "File uploader" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "footer", children: "Footer" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "form-item", children: "Form item" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "grid", children: "Grid" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "hero-banner", children: "Hero banner" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "icons", children: "Icons" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "list", children: "List" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "microsite-header", children: "Microsite header" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "modal", children: "Modal" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "notification-banner", children: "Notification banner" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "pagination", children: "Pagination" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "progress-indicator", children: "Progress indicator" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "radio", children: "Radio" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "skeleton-loader", children: "Skeleton loader" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "snackbar", children: "Snackbar" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "spacer", children: "Spacer" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "site-header", children: "Site header" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "form-stepper", children: "Stepper" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "table", children: "Table" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "text-area", children: "Text area" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "text-field", children: "Text field" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "tooltip", children: "Tooltip" })
      ] })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsxs("main", { className: "main", children: [
      /* @__PURE__ */ jsxRuntimeExports$1.jsx(Outlet, {}),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx(SupportInfo, {}),
      /* @__PURE__ */ jsxRuntimeExports$1.jsxs("div", { style: { marginTop: getCssVarValue("--goa-space-2xl") }, children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("h2", { children: "Help improve this component" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { children: "To help make sure that this page is useful, relevant, and up to date, you can:" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("ul", { style: { marginLeft: "1.875rem" }, children: /* @__PURE__ */ jsxRuntimeExports$1.jsxs("li", { children: [
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "https://github.com/GovAlta/ui…ts/issues/new/choose", children: "Propose a change or report a bug on Github" }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("span", { children: " - Read more about " }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "https://goa-dio.atlassian.net/wiki/spaces/DIO/pages/2763096293/How+to+work+with+us", children: "our contribution process" })
        ] }) })
      ] })
    ] })
  ] });
}
function DropdownPage$1() {
  const [dropdownProps, setDropdownProps] = reactExports$1.useState({});
  const [dropdownBindings, setDropdownBindings] = reactExports$1.useState([
    {
      label: "Leading Icon",
      type: "list",
      name: "leadingIcon",
      options: ["", "warning"],
      value: ""
    },
    { label: "Native", type: "boolean", name: "native", value: false },
    { label: "Disabled", type: "boolean", name: "disabled", value: false }
  ]);
  function onChange(bindings, props) {
    setDropdownBindings(bindings);
    setDropdownProps(props);
  }
  return /* @__PURE__ */ jsxRuntimeExports$1.jsxs(jsxRuntimeExports$1.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h1", { children: "Dropdown" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { children: "Dropdowns hide a long list of options, arranged vertically. A single select menu list is revealed upon interaction with this component." }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsxs(
      Sandbox,
      {
        properties: dropdownBindings,
        onChange,
        flags: ["reactive"],
        note: "When using a dropdown inside a modal where there is limited space for the menu items\n        to display, ensure the `native` property is set to `true` for the dropdown to function properly.",
        children: [
          /* @__PURE__ */ jsxRuntimeExports$1.jsx(
            CodeSnippet,
            {
              lang: "typescript",
              tags: "angular",
              allowCopy: true,
              code: `
          // non-reactive code
          export class MyComponent {
            onChange(event) {
              // handle change
            }
          }  
        `
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx(
            CodeSnippet,
            {
              lang: "typescript",
              tags: ["angular", "reactive"],
              allowCopy: true,
              code: `
          // reactive code
          import { FormControl } from "@angular/forms";
          export class MyComponent {
            reactiveFormCtrl = new FormControl("red");
          }  
        `
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx(
            CodeSnippet,
            {
              lang: "typescript",
              tags: "react",
              allowCopy: true,
              code: `
          const [value, setValue] = useState('green');
          function onChange(name: string, value: string | string[]) {
            setValue(value);
          }
        `
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoADropdown, { name: "colors", value: "red", onChange: () => {
          }, ...dropdownProps, children: [
            /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoADropdownItem, { value: "red", label: "Red" }),
            /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoADropdownItem, { value: "green", label: "Green" }),
            /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoADropdownItem, { value: "blue", label: "Blue" })
          ] })
        ]
      }
    )
  ] });
}
const ComponentProperties = (props) => {
  const lang = reactExports$1.useContext(LanguageContext);
  const [filteredProperties, setFilteredProperties] = reactExports$1.useState([]);
  const filterBy = (properties) => {
    const result = properties.filter((child) => {
      return !child.lang || child.lang === lang;
    });
    return result;
  };
  reactExports$1.useEffect(() => {
    setFilteredProperties([...filterBy(props.properties)]);
  }, [lang]);
  const rows = (properties) => {
    return properties.map((property, index2) => /* @__PURE__ */ jsxRuntimeExports$1.jsxs("tr", { children: [
      /* @__PURE__ */ jsxRuntimeExports$1.jsxs("td", { className: "token-name", children: [
        property.name,
        property.required && /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoABadge, { type: "midtone", content: "Required", ml: "xs" })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: property.type }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: property.description }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: property.defaultValue })
    ] }, index2));
  };
  return /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAAccordion, { heading: "Components properties", mt: "xl", children: /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoATable, { variant: "relaxed", children: [
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("thead", { children: /* @__PURE__ */ jsxRuntimeExports$1.jsxs("tr", { children: [
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("th", { children: "Name" }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("th", { children: "Type" }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("th", { children: "Description" }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("th", { children: "Default" })
    ] }) }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("tbody", { children: rows(filteredProperties) })
  ] }) });
};
const ComponentHeader$1 = "";
var Category = /* @__PURE__ */ ((Category2) => {
  Category2["CONTENT_AND_LAYOUT"] = "Content and layout";
  Category2["FEEDBACK_AND_ALERTS"] = "Feedback and alerts";
  Category2["STRUCTURE_AND_NAVIGATION"] = "Structure and navigation";
  Category2["INPUTS_AND_ACTIONS"] = "Inputs and actions";
  Category2["UTILITIES"] = "Utilities";
  return Category2;
})(Category || {});
const ComponentHeader = (props) => {
  var _a;
  const category = () => {
    switch (props.category) {
      case "Content and layout":
        return "emergency";
      case "Feedback and alerts":
        return "important";
      case "Structure and navigation":
        return "success";
      case "Inputs and actions":
        return "information";
      case "Utilities":
        return "midtone";
      default:
        return "information";
    }
  };
  return /* @__PURE__ */ jsxRuntimeExports$1.jsxs("div", { className: "component-header", children: [
    /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoABadge, { type: category(), content: props.category }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h1", { children: props.name }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h3", { children: props.description }),
    ((_a = props.relatedComponents) == null ? void 0 : _a.length) && /* @__PURE__ */ jsxRuntimeExports$1.jsxs(jsxRuntimeExports$1.Fragment, { children: [
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("span", { children: "Related components: " }),
      props.relatedComponents.map((relatedComponent, index2, array) => /* @__PURE__ */ jsxRuntimeExports$1.jsxs("span", { children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: relatedComponent.link, children: relatedComponent.name }),
        index2 < array.length - 1 && ", "
      ] }, index2))
    ] })
  ] });
};
function AccordionPage() {
  const [accordionProps, setAccordionProps] = reactExports$1.useState({ heading: "Heading" });
  const [accordionBindings, setAccordionBindings] = reactExports$1.useState([
    {
      label: "Heading",
      type: "string",
      name: "heading",
      value: "Heading"
    },
    {
      label: "Secondary Text",
      type: "string",
      name: "secondaryText",
      value: ""
    },
    {
      label: "Heading Size",
      type: "list",
      name: "headingSize",
      options: ["", "small", "medium"],
      value: ""
    },
    { label: "Open", type: "boolean", name: "open", value: false }
  ]);
  const componentProperties = [
    {
      name: "heading",
      type: "string",
      required: true,
      description: "Sets the heading text"
    },
    {
      name: "secondaryText",
      type: "string",
      lang: "react",
      description: "Sets secondary text"
    },
    {
      name: "secondarytext",
      type: "string",
      lang: "angular",
      description: "Sets secondary text"
    },
    {
      name: "open",
      type: "boolean",
      defaultValue: "false",
      description: "Sets the state of the accordion container open or closed"
    },
    {
      name: "headingSize",
      type: "small | medium",
      defaultValue: "small",
      lang: "react",
      description: "Sets the heading size of the accordion container heading"
    },
    {
      name: "headingsize",
      type: "small | medium",
      defaultValue: "small",
      lang: "angular",
      description: "Sets the heading size of the accordion container heading"
    },
    {
      name: "headingContent",
      type: "ReactNode",
      lang: "react",
      description: "Add components to the accordion container heading such as badges"
    },
    {
      name: "headingcontent",
      type: "slot",
      lang: "angular",
      description: "Add components to the accordion container heading such as badges"
    }
  ];
  const [open, setOpen] = reactExports$1.useState(false);
  function onSandboxChange(bindings, props) {
    setAccordionBindings(bindings);
    setAccordionProps(props);
  }
  return /* @__PURE__ */ jsxRuntimeExports$1.jsxs("div", { className: "accordion-page", children: [
    /* @__PURE__ */ jsxRuntimeExports$1.jsx(
      ComponentHeader,
      {
        name: "Accordion",
        category: Category.CONTENT_AND_LAYOUT,
        description: "Accordion containers enable multiple content sections to be displayed in a\n        limited space and collapsed or expanded by the user. You can create hierarchy of information\n        by hiding secondary content inside collapsed expand containers."
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoATabs, { children: [
      /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoATab, { heading: "Code examples", children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsxs(Sandbox, { properties: accordionBindings, onChange: onSandboxChange, fullWidth: true, children: [
          /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAAccordion, { ...accordionProps, children: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi" }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx(
            GoAAccordion,
            {
              ...accordionProps,
              headingContent: /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoABadge, { type: "success", content: "Success" }),
              children: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi"
            }
          )
        ] }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("h4", { children: "Accordion Group" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsxs(
          Sandbox,
          {
            note: "The open prop on accordion component can be used to control a group of accordions.",
            fullWidth: true,
            children: [
              /* @__PURE__ */ jsxRuntimeExports$1.jsx(
                CodeSnippet,
                {
                  lang: "typescript",
                  tags: "angular",
                  allowCopy: true,
                  code: `
                export class SomeOtherComponent {
                  open = "false";
                  onClick() {
                    this.open = this.open === "false" ? "true" : "false";
                  }
                }
              `
                }
              ),
              /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAButton, { type: "tertiary", mb: "xl", onClick: () => setOpen(!open), children: "Toggle Accordion Group" }),
              /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAAccordion, { open, heading: "Heading", children: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi" }),
              /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAAccordion, { open, heading: "Heading", children: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi" }),
              /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAAccordion, { open, heading: "Heading", children: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi" })
            ]
          }
        ),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(ComponentProperties, { properties: componentProperties })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx(
        GoATab,
        {
          heading: /* @__PURE__ */ jsxRuntimeExports$1.jsxs(jsxRuntimeExports$1.Fragment, { children: [
            "Design guidelines",
            /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoABadge, { type: "information", content: "In progress" })
          ] })
        }
      )
    ] })
  ] });
}
const Modal2 = "";
function GoAModal({ children: children2 }) {
  return /* @__PURE__ */ jsxRuntimeExports$1.jsx("div", { className: "modal", children: children2 });
}
function ButtonPage() {
  const [buttonProps, setButtonProps] = reactExports$1.useState({});
  const [buttonBindings, setButtonBindings] = reactExports$1.useState([
    {
      label: "Type",
      type: "list",
      name: "type",
      options: ["primary", "submit", "secondary", "tertiary", "start"],
      value: "",
      defaultValue: "primary"
    },
    {
      label: "Size",
      type: "list",
      name: "size",
      options: ["", "normal", "compact"],
      value: ""
    },
    {
      label: "Variant",
      type: "list",
      name: "variant",
      options: ["", "normal", "destructive"],
      value: ""
    },
    {
      label: "Leading Icon",
      type: "list",
      name: "leadingIcon",
      options: ["", "airplane"],
      value: ""
    },
    {
      label: "Trailing Icon",
      type: "list",
      name: "trailingIcon",
      options: ["", "airplane"],
      value: ""
    },
    { label: "Disabled", type: "boolean", name: "disabled", value: false }
  ]);
  const componentProperties = [
    {
      name: "type",
      type: "primary | submit | secondary | tertiary | start",
      description: "Define the type of button",
      defaultValue: "primary"
    },
    {
      name: "size",
      type: "normal | compact",
      defaultValue: "normal",
      description: "Set the size of button [to compact]"
    },
    {
      name: "variant",
      type: "normal | destructive",
      defaultValue: "normal",
      description: "Style this button to show a destructive action"
    },
    {
      name: "disabled",
      type: "boolean",
      defaultValue: "false",
      description: "Disable this button"
    },
    {
      name: "leadingIcon",
      type: "GoAIconType",
      lang: "react",
      description: "Show an icon to the left of the text"
    },
    {
      name: "leadingicon",
      type: "GoAIconType",
      lang: "angular",
      description: "Show an icon to the left of the text"
    },
    {
      name: "trailingIcon",
      type: "GoAIconType",
      lang: "react",
      description: "Show an icon to the right of the text"
    },
    {
      name: "trailingicon",
      type: "GoAIconType",
      lang: "angular",
      description: "Show an icon to the right of the text"
    },
    {
      name: "_click",
      lang: "angular",
      type: "CustomEvent",
      description: "Callback function when button is clicked"
    },
    {
      name: "onClick",
      lang: "react",
      type: "(e: any) => void",
      description: "Callback function when button is clicked"
    }
  ];
  const noop2 = () => {
  };
  function SandboxOnChange(bindings, props) {
    setButtonBindings(bindings);
    setButtonProps(props);
  }
  return /* @__PURE__ */ jsxRuntimeExports$1.jsxs(jsxRuntimeExports$1.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports$1.jsx(
      ComponentHeader,
      {
        name: "Button",
        category: Category.INPUTS_AND_ACTIONS,
        description: "Buttons allow users to perform an action or to navigate to another page.\n        They have multiple styles for various needs, and are ideal for calling\n        attention to where a user needs to do something or so they can move\n        forward in a flow.",
        relatedComponents: [
          { link: "/components/icon-button", name: "Icon button" },
          { link: "/components/link", name: "Link" }
        ]
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoATabs, { children: [
      /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoATab, { heading: "Code examples", children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsxs(Sandbox, { properties: buttonBindings, onChange: SandboxOnChange, children: [
          /* @__PURE__ */ jsxRuntimeExports$1.jsx(
            CodeSnippet,
            {
              lang: "typescript",
              tags: "angular",
              allowCopy: true,
              code: `
          export class SomeOtherComponent {
            onClick() {
              console.log('clicked');
            }
          }
        `
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAButton, { ...buttonProps, type: "primary", onClick: noop2, children: "Primary Button" })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(ComponentProperties, { properties: componentProperties }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsxs("goa-block", { gap: "xs", direction: "column", mt: "2xl", mb: "3xl", children: [
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "#ask-address", children: "Ask a user for an address" }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "#confirm-action", children: "Confirm a destructive action" }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "#disabled-button", children: "Disabled button in a form" })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("h3", { id: "ask-address", children: "Ask a user for an address" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsxs(Sandbox, { flags: ["reactive"], children: [
          /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAFormItem, { label: "Street Address", children: /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAInput, { name: "address", type: "text", value: "", onChange: noop2, width: "100%" }) }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAFormItem, { label: "Suite or unit #", children: /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAInput, { name: "suite", type: "text", value: "", onChange: noop2, width: "100%" }) }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAFormItem, { label: "City/town", children: /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAInput, { name: "city", type: "text", value: "", onChange: noop2, width: "100%" }) }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoABlock, { direction: "row", children: [
            /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAFormItem, { label: "Provice/territory", children: /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoADropdown, { onChange: noop2, name: "province", value: "alberta", children: [
              /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoADropdownItem, { label: "Alberta", value: "alberta" }),
              /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoADropdownItem, { label: "BC", value: "bc" }),
              /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoADropdownItem, { label: "Manitoba", value: "manitoba" }),
              /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoADropdownItem, { label: "New Brunswick", value: "new-brunswick" }),
              /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoADropdownItem, { label: "Newfoundland and Labrador", value: "newfoundland" }),
              /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoADropdownItem, { label: "Nova Scotia", value: "nova-scotia" }),
              /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoADropdownItem, { label: "Ontario", value: "ontario" }),
              /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoADropdownItem, { label: "Prince Edward Island", value: "prince-edward-island" }),
              /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoADropdownItem, { label: "Quebec", value: "quebec" }),
              /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoADropdownItem, { label: "Saskatchewan", value: "saskatchewan" })
            ] }) }),
            /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAFormItem, { label: "Postal Code", children: /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAInput, { name: "postalCode", type: "text", value: "", onChange: noop2, width: "100%" }) })
          ] }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoAButtonGroup, { alignment: "start", mt: "l", children: [
            /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAButton, { type: "primary", onClick: noop2, children: "Submit and continue" }),
            /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAButton, { type: "secondary", onClick: noop2, children: "Cancel" })
          ] })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("h3", { id: "confirm-action", children: "Confirm a destructive action" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(Sandbox, { flags: ["reactive"], children: /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoAModal, { children: [
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("h3", { children: "Are you sure you want to delete this record?" }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { children: "You cannot undo this action." }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoAButtonGroup, { alignment: "end", mt: "l", children: [
            /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAButton, { type: "secondary", onClick: noop2, children: "Cancel" }),
            /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAButton, { type: "primary", variant: "destructive", onClick: noop2, children: "Delete record" })
          ] })
        ] }) }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("h3", { id: "disabled-button", children: "Disabled button with a required field" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsxs(Sandbox, { flags: ["reactive"], children: [
          /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAFormItem, { label: "Input", children: /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAInput, { name: "input", type: "text", value: "", onChange: noop2, width: "400px" }) }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoAButtonGroup, { alignment: "start", mt: "l", children: [
            /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAButton, { disabled: true, onClick: noop2, children: "Confirm" }),
            /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAButton, { type: "secondary", onClick: noop2, children: "Cancel" })
          ] })
        ] })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx(
        GoATab,
        {
          heading: /* @__PURE__ */ jsxRuntimeExports$1.jsxs(jsxRuntimeExports$1.Fragment, { children: [
            "Design guidelines",
            /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoABadge, { type: "information", content: "In progress" })
          ] }),
          children: /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { children: "Coming Soon" })
        }
      )
    ] })
  ] });
}
function DropdownPage() {
  const [formStepProps, setFormStepProps] = reactExports$1.useState({});
  const [formStepperBindings, setFormStepperBindings] = reactExports$1.useState([]);
  function onChange(bindings, props) {
    setFormStepperBindings(bindings);
    setFormStepProps(props);
  }
  const [step, setStep] = reactExports$1.useState(-1);
  return /* @__PURE__ */ jsxRuntimeExports$1.jsxs(jsxRuntimeExports$1.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h1", { children: "Form Stepper" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { children: "Form steppers provide a visual representation of a user's journey through a series of steps." }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsxs(
      Sandbox,
      {
        properties: formStepperBindings,
        fullWidth: true,
        onChange,
        children: [
          /* @__PURE__ */ jsxRuntimeExports$1.jsx(CodeSnippet, { lang: "typescript", tags: "angular", allowCopy: true, code: `
          export class SomeComponent {
            step = -1;
            updateStep(event: Event) {
              this.step = (event as CustomEvent).detail.step;
            }
          }
        ` }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx(CodeSnippet, { lang: "typescript", tags: "react", allowCopy: true, code: `
          const [step, setStep] = useState(-1); 
        ` }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoAFormStepper, { testId: "foo", onChange: (step2) => setStep(step2), ...formStepProps, children: [
            /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAFormStep, { text: "Personal details" }),
            /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAFormStep, { text: "Employment history" }),
            /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAFormStep, { text: "References" }),
            /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAFormStep, { text: "Review" })
          ] }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoAPages, { current: step, mb: "3xl", children: [
            /* @__PURE__ */ jsxRuntimeExports$1.jsx("div", { children: "Page 1 content" }),
            /* @__PURE__ */ jsxRuntimeExports$1.jsx("div", { children: "Page 2 content" }),
            /* @__PURE__ */ jsxRuntimeExports$1.jsx("div", { children: "Page 3 content" }),
            /* @__PURE__ */ jsxRuntimeExports$1.jsx("div", { children: "Page 4 content" })
          ] })
        ]
      }
    )
  ] });
}
const DoDont$1 = "";
function DoDont({ type, children: children2, description }) {
  return /* @__PURE__ */ jsxRuntimeExports$1.jsxs("div", { children: [
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("div", { className: "do-container", children: children2 }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsxs("div", { className: "do-content", "data-positive": type, children: [
      type === "do" ? /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAIcon, { type: "checkmark-circle" }) : /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAIcon, { type: "close-circle" }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("div", { className: "content-label", children: type === "do" ? "Do" : "Dont" })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("div", { children: description })
  ] });
}
function CheckboxPage$1() {
  const [checkboxProps, setCheckboxProps] = reactExports$1.useState({});
  const [checkboxBindings, setCheckboxBindings] = reactExports$1.useState([
    { label: "Checked", type: "boolean", name: "checked", value: false, dynamic: true, hidden: true }
  ]);
  const noop2 = () => {
  };
  function onChange(bindings, props) {
    setCheckboxBindings(bindings);
    setCheckboxProps(props);
  }
  return /* @__PURE__ */ jsxRuntimeExports$1.jsxs(jsxRuntimeExports$1.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h1", { children: "Checkbox" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { children: "Checkbox allows users to ..." }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsxs(
      Sandbox,
      {
        properties: checkboxBindings,
        onChange,
        note: "",
        children: [
          /* @__PURE__ */ jsxRuntimeExports$1.jsx(CodeSnippet, { lang: "typescript", tags: "angular", allowCopy: true, code: `
          export class SomeOtherComponent {
            checked = false;
            onChange(event) {
              const {name, checked, value} = event.detail;
              // ..
            }
          }
        ` }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx(CodeSnippet, { lang: "typescript", tags: ["angular", "reactive"], allowCopy: true, code: `
          import { FormControl } from "@angular/forms";
          export class SomeOtherComponent {
            reactiveFormCtrl = new FormControl("red");
          }
        ` }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx(CodeSnippet, { lang: "tsx", tags: "react", allowCopy: true, code: `
          // react code
        ` }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoACheckbox, { name: "someName", checked: false, ...checkboxProps, onChange: noop2 })
        ]
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h2", { children: "Do" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx(DoDont, { type: "do", children: "Document types will gradually be made avalible. If you need to file an unsupported document type, you must file via the existing email filing procedure or it will be rejected by the digital service.", description: "Always capitalize the first word of a new sentence." }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h2", { children: "Don't" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx(DoDont, { type: "dont", children: "Document types will gradually be made avalible. If you need to file an UNSUPPORTED DOCUMENT TYPE, you must file via the existing email filing procedure or it will be rejected by the digital service.", description: "Don’t use all uppercase for emphasis." })
  ] });
}
function BadgePage() {
  const [badgeProps, setBadgeProps] = reactExports$1.useState({
    type: "information",
    content: "Information"
  });
  const [badgeBindings, setBadgeBindings] = reactExports$1.useState([
    {
      label: "Type",
      type: "list",
      name: "type",
      options: ["success", "important", "information", "emergency", "dark", "midtone", "light"],
      value: "information"
    },
    {
      label: "Icon",
      type: "boolean",
      name: "icon",
      value: false
    },
    {
      label: "Content",
      type: "string",
      name: "content",
      value: "Information"
    },
    {
      label: "AriaLabel",
      type: "string",
      name: "ariaLabel",
      value: ""
    }
  ]);
  const componentProperties = [
    {
      name: "type",
      type: "success | important | information | emergency | dark | midtone | light",
      description: "Define the context and colour of the badge",
      required: true
    },
    {
      name: "icon",
      type: "boolean",
      description: "Include an icon in the badge",
      defaultValue: "false"
    },
    {
      name: "content",
      type: "string",
      description: "Text label of the badge"
    },
    {
      name: "ariaLabel",
      type: "string",
      description: "Accessible label",
      lang: "react"
    },
    {
      name: "arialabel",
      type: "string",
      description: "Accessible label",
      lang: "angular"
    }
  ];
  function onSandboxChange(badgeBindings2, props) {
    setBadgeBindings(badgeBindings2);
    setBadgeProps(props);
  }
  return /* @__PURE__ */ jsxRuntimeExports$1.jsxs(jsxRuntimeExports$1.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports$1.jsx(
      ComponentHeader,
      {
        name: "Badge",
        category: Category.FEEDBACK_AND_ALERTS,
        description: "Small labels which hold small amounts of information, system feedback, or states."
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoATabs, { children: [
      /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoATab, { heading: "Code examples", children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(Sandbox, { properties: badgeBindings, onChange: onSandboxChange, children: /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoABadge, { ...badgeProps }) }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(ComponentProperties, { properties: componentProperties })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx(
        GoATab,
        {
          heading: /* @__PURE__ */ jsxRuntimeExports$1.jsxs(jsxRuntimeExports$1.Fragment, { children: [
            "Design guidelines",
            /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoABadge, { type: "information", content: "In progress" })
          ] })
        }
      )
    ] })
  ] });
}
const ComponentCard$1 = "";
function dasherize(value) {
  return value.split(" ").join("-");
}
function ComponentCard(props) {
  return /* @__PURE__ */ jsxRuntimeExports$1.jsxs("div", { className: "card", children: [
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("div", { className: "card-image", style: { backgroundImage: `url(/images/${dasherize(props.name)}.png)` } }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsxs("div", { className: "card-content", children: [
      /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: props.name, children: `${props.name.substring(0, 1).toUpperCase()}${props.name.substring(1)}` }),
      props.description
    ] })
  ] });
}
const AllComponents = "";
function CheckboxPage() {
  const cards = [
    {
      name: "accordion",
      groups: ["content"],
      description: "Accordions let users show and hide sections of related content on a page."
    },
    {
      name: "container",
      groups: ["content"],
      description: "Group information, create hierarchy, and show related information."
    },
    {
      name: "details",
      groups: ["content"],
      description: "Let users reveal more detailed information when they need it."
    },
    { name: "list", groups: ["content"], description: "Needs description" },
    {
      name: "table",
      groups: ["content"],
      description: "A set of structured data that is easy for a user to scan, examine, and compare."
    },
    {
      name: "badge",
      groups: ["feedback"],
      description: "Small labels which hold small amounts of information, system feedback, or states."
    },
    {
      name: "callout",
      groups: ["feedback"],
      description: "Communicate important information through a strong visual emphasis."
    },
    {
      name: "modal",
      groups: ["feedback"],
      description: "An overlay that appears in front of the main page content."
    },
    {
      name: "notification banner",
      groups: ["feedback"],
      description: "Display important page level information or notifications."
    },
    {
      name: "progress indicator",
      groups: ["feedback"],
      description: "Provide visual feedback to users while loading."
    },
    {
      name: "snackbar",
      groups: ["feedback"],
      description: "A temporary notification showing a process started or completed."
    },
    {
      name: "tooltip",
      groups: ["feedback"],
      description: "More information displayed in a popover when a user hovers over an element."
    },
    {
      name: "button",
      groups: ["inputs"],
      description: "Use a button to carry out an important action or to navigate to another page."
    },
    {
      name: "checkbox",
      groups: ["inputs"],
      description: "Let the user select one or more options."
    },
    {
      name: "chip",
      groups: ["inputs"],
      description: "Allow the user to enter information, filter content, and make selections."
    },
    {
      name: "combobox",
      groups: ["inputs"],
      description: "Functions like a dropdown with the ability to filter options by typing."
    },
    {
      name: "dropdown",
      groups: ["inputs"],
      tags: ["select"],
      description: "Functions like a dropdown with the ability to filter options by typing."
    },
    {
      name: "file uploader",
      groups: ["inputs"],
      description: "Help users select and upload a file from their computer."
    },
    {
      name: "radio",
      groups: ["inputs"],
      description: "Allow users to select one option from a set."
    },
    {
      name: "text area",
      groups: ["inputs"],
      description: "Let users enter and input text for multiple lines of information."
    },
    {
      name: "input",
      groups: ["inputs"],
      tags: ["text"],
      description: "Let users enter and input text for a single line of information."
    },
    {
      name: "footer",
      groups: ["structure"],
      description: "Provides information related your service at the bottom of every page."
    },
    {
      name: "hero banner",
      groups: ["structure"],
      description: "A visual band of text, including an image and a call to action."
    },
    {
      name: "microsite header",
      groups: ["structure"],
      description: "Communicate what stage the service is at, and connect to Alberta.ca."
    },
    {
      name: "pagination",
      groups: ["structure"],
      description: "Help users navigation between multiple pages or screens as part of a set."
    },
    {
      name: "app header",
      groups: ["structure"],
      description: "Used to help users find their way around a website or app."
    },
    {
      name: "form stepper",
      groups: ["structure"],
      description: "Provides a visual representation of a form through a series of steps."
    },
    {
      name: "block",
      groups: ["utilities"],
      description: "Used when grouping components into a block with consistent space between."
    },
    {
      name: "form item",
      groups: ["utilities"],
      description: "Wraps an input control with a text label, requirement label, helper text, and error text."
    },
    {
      name: "grid",
      groups: ["utilities"],
      description: "The grid helps to arrange a number of components into a responsive grid pattern."
    },
    {
      name: "spacer",
      groups: ["utilities"],
      description: "Negative area between the components and the interface."
    }
  ];
  function getComponentsByGroup(group) {
    return cards.filter((card) => card.groups.includes(group)).map((card) => /* @__PURE__ */ jsxRuntimeExports$1.jsx(
      ComponentCard,
      {
        name: card.name,
        groups: card.groups,
        description: card.description
      },
      card.name
    ));
  }
  function getComponentsByFilter() {
    return cards.filter((card) => {
      var _a;
      return card.name.includes(filter) || ((_a = card.tags) == null ? void 0 : _a.includes(filter));
    }).map((card) => /* @__PURE__ */ jsxRuntimeExports$1.jsx(
      ComponentCard,
      {
        name: card.name,
        groups: card.groups,
        description: card.description
      },
      card.name
    ));
  }
  const [mode, setMode] = reactExports$1.useState("list");
  const [filter, setFilter] = reactExports$1.useState("");
  function filterComponents(value) {
    if (value === "") {
      setMode("list");
      return;
    }
    setFilter(value);
    setMode("search");
  }
  return /* @__PURE__ */ jsxRuntimeExports$1.jsxs(jsxRuntimeExports$1.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { id: "top" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h1", { children: "Components" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h3", { children: "Components are reusable parts of the user interface that have been made to support a variety of applications. You can use individual components in many different patterns and contexts." }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoABlock, { mt: "xs", mb: "xl", children: /* @__PURE__ */ jsxRuntimeExports$1.jsx(
      GoAInput,
      {
        name: "filter",
        value: "",
        type: "text",
        width: "80ch",
        leadingIcon: "search",
        onChange: (_name, value) => filterComponents(value)
      }
    ) }),
    mode === "search" && /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAGrid, { minChildWidth: "300px", children: getComponentsByFilter() }),
    mode === "list" && /* @__PURE__ */ jsxRuntimeExports$1.jsxs(jsxRuntimeExports$1.Fragment, { children: [
      /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoAGrid, { minChildWidth: "30ch", gap: "xs", mt: "2xl", mb: "3xl", children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "#content", children: "Content layout" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "#feedback", children: "Feedback and alerts" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "#structure", children: "Structure and navigation" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "#inputs", children: "Inputs and actions" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "#utilities", children: "Utilities" })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { id: "content" }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("h2", { children: "Content layout" }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("h3", { children: "Organize content" }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAGrid, { minChildWidth: "15rem", gap: "xl", children: getComponentsByGroup("content") }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("div", { className: "back-to-top", children: /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "#top", children: "Back to top" }) }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { id: "feedback" }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("h2", { children: "Feedback and alerts" }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("h3", { children: "Capture attention" }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAGrid, { minChildWidth: "15rem", gap: "xl", children: getComponentsByGroup("feedback") }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("div", { className: "back-to-top", children: /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "#top", children: "Back to top" }) }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { id: "inputs" }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("h2", { children: "Inputs and actions" }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("h3", { children: "Gather information" }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAGrid, { minChildWidth: "15rem", gap: "xl", children: getComponentsByGroup("inputs") }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("div", { className: "back-to-top", children: /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "#top", children: "Back to top" }) }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { id: "structure" }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("h2", { children: "Structure and navigation" }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("h3", { children: "Create structure" }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAGrid, { minChildWidth: "15rem", gap: "xl", children: getComponentsByGroup("structure") }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("div", { className: "back-to-top", children: /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "#top", children: "Back to top" }) }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { id: "utilities" }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("h2", { children: "Utilities" }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAGrid, { minChildWidth: "15rem", gap: "xl", children: getComponentsByGroup("utilities") }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("div", { className: "back-to-top", children: /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "#top", children: "Back to top" }) }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx(
        GoATooltip,
        {
          content: `This is a tooltip alignment`,
          position: "left",
          hAlign: "center",
          children: /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAIcon, { type: "information-circle" })
        }
      )
    ] })
  ] });
}
function ComponentNotFound() {
  return /* @__PURE__ */ jsxRuntimeExports$1.jsx("h1", { children: "Coming Soon!" });
}
const root = "";
function ScrollToTop() {
  const { pathname } = useLocation();
  reactExports$1.useEffect(() => {
    window.scrollTo(0, 0);
  }, [pathname]);
  return null;
}
function Root() {
  const [visible, setVisibility] = reactExports$1.useState(false);
  reactExports$1.useEffect(() => {
    setTimeout(() => {
      setVisibility(true);
    }, 50);
  });
  return /* @__PURE__ */ jsxRuntimeExports$1.jsxs("div", { className: "app", style: { opacity: visible ? "1" : "0" }, children: [
    /* @__PURE__ */ jsxRuntimeExports$1.jsx(ScrollToTop, {}),
    /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoAOneColumnLayout, { children: [
      /* @__PURE__ */ jsxRuntimeExports$1.jsxs("section", { className: "header", slot: "header", children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(
          GoAMicrositeHeader,
          {
            type: "alpha",
            feedbackUrl: "https://github.com/GovAlta/ui-components/discussions",
            maxContentWidth: "1440px"
          }
        ),
        /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoAAppHeader, { heading: "Design system", maxContentWidth: "1440px", url: `${base}`, children: [
          /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: `${base}get-started`, children: "Get started" }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: `${base}patterns`, children: "Patterns and templates" }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: `${base}components`, children: "Components" }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: `${base}design-tokens`, children: "Styles" }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: `${base}content`, children: "Content" }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: `${base}support`, children: "Support" }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx(
            Link,
            {
              to: "https://github.com/GovAlta/ui-components/issues/new/choose",
              target: "_blank",
              children: "Report a bug"
            }
          )
        ] })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("section", { className: "content", children: /* @__PURE__ */ jsxRuntimeExports$1.jsx(Outlet, {}) }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("section", { slot: "footer", children: /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoAAppFooter, { maxContentWidth: "1440px", children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoAAppFooterNavSection, { heading: "Resources", maxColumnCount: 2, children: [
          /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: `${base}get-started`, children: "Get started" }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: `${base}patterns`, children: "Patterns and templates" }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: `${base}components`, children: "Components" }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: `${base}design-tokens`, children: "Styles" }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: `${base}ux-writing`, children: "UX writing" }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: `${base}contribute`, children: "Contribute" })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoAAppFooterNavSection, { heading: "Get support", children: [
          /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: `${base}submit-an-issue`, children: "Submit an issue" }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: `${base}support`, children: "#design-system-support" }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: `${base}drop-in-hours`, children: "Drop in hours" })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoAAppFooterMetaSection, { children: [
          /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: `${base}contribute-design-system`, children: "Contribute to the design system" }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: `${base}leave-feedback`, children: "Leave feedback" }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: `${base}release-notes`, children: "Release notes" })
        ] })
      ] }) })
    ] })
  ] });
}
const index = "";
const DesignToken = "";
function DesignTokenLayout() {
  const [tokenLanguage, setLanguage] = reactExports$1.useState("");
  reactExports$1.useEffect(() => {
    const lang = localStorage.getItem("goa-docs-design-tokens-lang");
    setLanguage(lang || "scss");
  }, []);
  function designTokenLanguageChange(_name, value) {
    const lang = Array.isArray(value) ? value[0] : value;
    setLanguage(lang);
    localStorage.setItem("goa-docs-design-tokens-lang", lang);
  }
  return /* @__PURE__ */ jsxRuntimeExports$1.jsx(DesignTokensLanguageContext.Provider, { value: tokenLanguage, children: /* @__PURE__ */ jsxRuntimeExports$1.jsxs("div", { className: "content design-tokens", children: [
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("section", { className: "side-menu", children: /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoASideMenu, { children: [
      /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoASideMenuHeading, { children: "Styles" }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsxs(
        GoADropdown,
        {
          value: tokenLanguage,
          mb: "m",
          ml: "m",
          mr: "m",
          mt: "m",
          onChange: designTokenLanguageChange,
          children: [
            /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoADropdownItem, { label: "SCSS", value: "scss" }),
            /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoADropdownItem, { label: "CSS", value: "css" })
          ]
        }
      ),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "", children: "Overview" }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "border-radius", children: "Border Radius" }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "border-width", children: "Border Width" }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "color", children: "Color" }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "icon-size", children: "Icon Size" }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "opacity", children: "Opacity" }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "shadow", children: "Shadow" }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "spacing", children: "Spacing" }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "typography", children: "Typography" })
    ] }) }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsxs("main", { className: "main", children: [
      /* @__PURE__ */ jsxRuntimeExports$1.jsx(Outlet, {}),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx(SupportInfo, {})
    ] })
  ] }) });
}
const TokenSnippet$1 = "";
const TokenSnippet = ({ code }) => {
  const [isCopied, setIsCopied] = reactExports$1.useState(false);
  const lang = reactExports$1.useContext(DesignTokensLanguageContext);
  function copyCode() {
    let codeToCopy = lang === "css" ? `--${code}` : `$${code}`;
    navigator.clipboard.writeText(codeToCopy).then(() => {
      setIsCopied(true);
      setTimeout(() => setIsCopied(false), 1e3);
    });
  }
  return /* @__PURE__ */ jsxRuntimeExports$1.jsxs("div", { className: "goa-token-snippet", children: [
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("pre", { className: "goa-token-snippet", children: /* @__PURE__ */ jsxRuntimeExports$1.jsxs("a", { onClick: copyCode, children: [
      /* @__PURE__ */ jsxRuntimeExports$1.jsxs("u", { children: [
        lang === "css" ? "--" : "$",
        code
      ] }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("span", { style: { marginTop: "5px", marginLeft: "10px" }, children: /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAIcon, { type: "copy" }) })
    ] }) }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx(
      "span",
      {
        className: "copy-feedback",
        style: isCopied ? { visibility: "visible" } : { visibility: "hidden" },
        children: "Copied"
      }
    )
  ] });
};
const BorderWidth = "";
function getTokenGroups(tokens) {
  const tokenGroups = [];
  for (let i = 0; i < tokens.length; i += 2) {
    tokenGroups.push(tokens.slice(i, i + 2));
  }
  return tokenGroups;
}
const DeviceWidthContext = React.createContext({
  isDesktop: true,
  isMobile: false
});
function BorderWidthPage() {
  const tokens = [
    {
      tokenName: "goa-border-width-s",
      rem: "0.0625rem",
      px: "1px",
      figmaUsage: "Use a border width of 1px."
    },
    {
      tokenName: "goa-border-width-m",
      rem: "0.125rem",
      px: "2px",
      figmaUsage: "Use a border width of 2px."
    },
    {
      tokenName: "goa-border-width-l",
      rem: "0.1875rem",
      px: "3px",
      figmaUsage: "Use a border width of 3px."
    }
  ];
  const { isDesktop } = reactExports$1.useContext(DeviceWidthContext);
  const renderDesktop = () => {
    return /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoATable, { variant: "normal", children: [
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("thead", { children: /* @__PURE__ */ jsxRuntimeExports$1.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("th", {}),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("th", { children: "Token name" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("th", { children: "REM" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("th", { children: "PX" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("th", { children: "Figma usage" })
      ] }) }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("tbody", { children: tokens.map((token, index2) => /* @__PURE__ */ jsxRuntimeExports$1.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: /* @__PURE__ */ jsxRuntimeExports$1.jsx(
          "div",
          {
            className: "token-block",
            style: {
              height: getCssVarValue(`--${token.tokenName}`)
            }
          }
        ) }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: /* @__PURE__ */ jsxRuntimeExports$1.jsx(TokenSnippet, { code: token.tokenName }) }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: token.rem }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: token.px }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: token.figmaUsage })
      ] }, index2)) })
    ] });
  };
  const renderMobile = () => {
    return /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAGrid, { minChildWidth: "22rem", gap: "xl", children: getTokenGroups(tokens).map(
      (group) => group.map((token, idx) => /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoAContainer, { children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(
          "div",
          {
            className: "token-block",
            style: {
              height: getCssVarValue(`--${token.tokenName}`)
            }
          }
        ),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(TokenSnippet, { code: token.tokenName }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsxs("dl", { children: [
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("dt", { children: "REM" }),
          " ",
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("dd", { children: token.rem }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("dt", { children: "PX" }),
          " ",
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("dd", { children: token.px }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("dt", { children: "Figma usage" }),
          " ",
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("dd", { children: token.figmaUsage })
        ] })
      ] }, idx))
    ) });
  };
  return /* @__PURE__ */ jsxRuntimeExports$1.jsxs("div", { className: "border-width-page", children: [
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h1", { children: "Border Width" }),
    isDesktop ? renderDesktop() : renderMobile()
  ] });
}
const BorderRadius = "";
function BorderRadiusPage() {
  const tokens = [
    {
      tokenName: "goa-border-radius-none",
      rem: "0rem",
      px: "0px",
      figmaUsage: "Use a border radius of 0px."
    },
    {
      tokenName: "goa-border-radius-m",
      rem: "0.25rem",
      px: "4px",
      figmaUsage: "Use a border radius of 4px."
    }
  ];
  const { isDesktop } = reactExports$1.useContext(DeviceWidthContext);
  const renderDesktop = () => {
    return /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoATable, { variant: "normal", children: [
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("thead", { children: /* @__PURE__ */ jsxRuntimeExports$1.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("th", {}),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("th", { children: "Token name" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("th", { children: "REM" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("th", { children: "PX" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("th", { children: "Figma usage" })
      ] }) }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("tbody", { children: tokens.map((token, index2) => /* @__PURE__ */ jsxRuntimeExports$1.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: /* @__PURE__ */ jsxRuntimeExports$1.jsx(
          "div",
          {
            className: "token-block",
            style: {
              borderRadius: getCssVarValue(`--${token.tokenName}`)
            }
          }
        ) }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: /* @__PURE__ */ jsxRuntimeExports$1.jsx(TokenSnippet, { code: token.tokenName }) }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: token.rem }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: token.px }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: token.figmaUsage })
      ] }, index2)) })
    ] });
  };
  const renderMobile = () => {
    return /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAGrid, { minChildWidth: "22rem", gap: "xl", children: getTokenGroups(tokens).map(
      (group) => group.map((token, idx) => /* @__PURE__ */ jsxRuntimeExports$1.jsx(jsxRuntimeExports$1.Fragment, { children: /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoAContainer, { children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(
          "div",
          {
            className: "token-block",
            style: {
              borderRadius: getCssVarValue(`--${token.tokenName}`)
            }
          }
        ),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(TokenSnippet, { code: token.tokenName }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsxs("dl", { children: [
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("dt", { children: "REM" }),
          " ",
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("dd", { children: token.rem }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("dt", { children: "PX" }),
          " ",
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("dd", { children: token.px }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("dt", { children: "Figma usage" }),
          " ",
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("dd", { children: token.figmaUsage })
        ] })
      ] }, idx) }))
    ) });
  };
  return /* @__PURE__ */ jsxRuntimeExports$1.jsxs("div", { className: "border-radius-page", children: [
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h1", { children: "Border Radius" }),
    isDesktop ? renderDesktop() : renderMobile()
  ] });
}
const Color = "";
const COLORS = [
  {
    name: "Interactive",
    tokens: [
      {
        code: "goa-color-interactive-default",
        value: "#0070C4",
        figmaColorStyle: "Interactive/Default",
        description: "Default color for interactive elements."
      },
      {
        code: "goa-color-interactive-hover",
        value: "#004F84",
        figmaColorStyle: "Interactive/Hover",
        description: "Hover state for interactive elements."
      },
      {
        code: "goa-color-interactive-focus",
        value: "#FEBA35",
        figmaColorStyle: "Interactive/Focus",
        description: "Focus state color for interactive elements."
      },
      {
        code: "goa-color-interactive-error",
        value: "#EC040B",
        figmaColorStyle: "Interactive/Error",
        description: "Error state for interactive elements."
      },
      {
        code: "goa-color-interactive-disabled",
        value: "#80B7E1",
        figmaColorStyle: "Interactive/Disabled",
        description: "Disabled state for interactive elements."
      },
      {
        code: "goa-color-interactive-error-hover",
        value: "#BA0000",
        figmaColorStyle: "Interactive/Error/Hover",
        description: "Error state color for interactive elements when hovering."
      },
      {
        code: "goa-color-interactive-error-disabled",
        value: "#F58185",
        figmaColorStyle: "Interactive/Error/Disabled",
        description: "Error state color for interactive elements when disabled."
      }
    ]
  },
  {
    name: "Text",
    tokens: [
      {
        code: "goa-color-text-default",
        value: "#333333",
        figmaColorStyle: "Text/Default",
        description: "Default color for most text (such as body, headings, subheadings)"
      },
      {
        code: "goa-color-text-secondary",
        value: "#666666",
        figmaColorStyle: "Text/Secondary",
        description: 'Default color for secondary text labels such as "optional" or "required", or within a table heading.'
      },
      {
        code: "goa-color-text-light",
        value: "#FFFFFF",
        figmaColorStyle: "Text/Light",
        description: "Use as the text colour on dark backgrounds."
      },
      {
        code: "goa-color-text-disabled",
        value: "#666666",
        figmaColorStyle: "Text/Disabled",
        description: "Text on a grey background within the disabled text input, text area, combobox, and dropdown."
      }
    ]
  },
  {
    name: "Brand",
    tokens: [
      {
        code: "goa-color-brand-default",
        value: "#0081A2",
        figmaColorStyle: "Brand/Default",
        description: "GOA brand colour."
      },
      {
        code: "goa-color-brand-dark",
        value: "#005072",
        figmaColorStyle: "Brand/Dark",
        description: "Dark GOA brand colour."
      },
      {
        code: "goa-color-brand-light",
        value: "#C8EEFA",
        figmaColorStyle: "Brand/Default",
        description: "Light GOA brand colour."
      }
    ]
  },
  {
    name: "Status",
    tokens: [
      {
        code: "goa-color-info-default",
        value: "#004A8F",
        figmaColorStyle: "Status/Info/Default",
        description: "Use this color to indicate information to the user."
      },
      {
        code: "goa-color-info-light",
        value: "#AAC9E7",
        figmaColorStyle: "Status/Info/Light",
        description: ""
      },
      {
        code: "goa-color-brand-light",
        value: "#003B70",
        figmaColorStyle: "Status/Info/Dark",
        description: ""
      },
      {
        code: "goa-color-info-background",
        value: "#EFF8FF",
        figmaColorStyle: "Status/Info/Background",
        description: "Use this color as a background when indicating caution to the user such as within a container or small callout."
      },
      {
        code: "goa-color-warning-default",
        value: "#F9CE2D",
        figmaColorStyle: "Status/Warning/Default",
        description: "Use this color to indicate a warning to the user."
      },
      {
        code: "goa-color-warning-light",
        value: "#FFEAB6",
        figmaColorStyle: "Status/Warning/Light",
        description: ""
      },
      {
        code: "goa-color-warning-dark",
        value: "#BF8D23",
        figmaColorStyle: "Status/Warning/Dark",
        description: ""
      },
      {
        code: "goa-color-warning-background",
        value: "#FFF6E5",
        figmaColorStyle: "Status/Warning/Background",
        description: "Use this color as a background when indicating caution to the user such as within a container or small callout."
      },
      {
        code: "goa-color-emergency-default",
        value: "#DA291C",
        figmaColorStyle: "Status/Emergency/Default",
        description: "Use this color to indicate an emergency to the user."
      },
      {
        code: "goa-color-emergency-light",
        value: "#FBD1CE",
        figmaColorStyle: "Status/Emergency/Light",
        description: ""
      },
      {
        code: "goa-color-emergency-dark",
        value: "#A91A10",
        figmaColorStyle: "Status/Emergency/Dark",
        description: ""
      },
      {
        code: "goa-color-emergency-background",
        value: "#FFF1F2",
        figmaColorStyle: "Status/Emergency/Background",
        description: "Use this color as a background when indicating emergency to the user such as within a container or small callout."
      },
      {
        code: "goa-color-success-default",
        value: "#006F4C",
        figmaColorStyle: "Status/Success/Default",
        description: "Use this color to indicate success to the user."
      },
      {
        code: "goa-color-success-light",
        value: "#CCE4DC",
        figmaColorStyle: "Status/Success/Light",
        description: ""
      },
      {
        code: "goa-color-success-dark",
        value: "#00563A",
        figmaColorStyle: "Status/Success/Dark",
        description: ""
      },
      {
        code: "goa-color-success-background",
        value: "#EEF9F3",
        figmaColorStyle: "Status/Success/Background",
        description: "Use this color as a background when indicating success to the user such as within a container or small callout."
      },
      {
        code: "goa-color-critical",
        value: "#171D23",
        figmaColorStyle: "Status/Critical",
        description: "Status color for critical events such as the king passing."
      }
    ]
  },
  {
    name: "Greyscale",
    tokens: [
      {
        code: "goa-color-greyscale-white",
        value: "#FFFFFF",
        figmaColorStyle: "Greyscale/White",
        description: ""
      },
      {
        code: "goa-color-greyscale-100",
        value: "#F1F1F1",
        figmaColorStyle: "Greyscale/100",
        description: ""
      },
      {
        code: "goa-color-greyscale-200",
        value: "#DCDCDC",
        figmaColorStyle: "Greyscale/200",
        description: ""
      },
      {
        code: "goa-color-greyscale-400",
        value: "#ADADAD",
        figmaColorStyle: "Greyscale/400",
        description: ""
      },
      {
        code: "goa-color-greyscale-500",
        value: "#949494",
        figmaColorStyle: "Greyscale/500",
        description: ""
      },
      {
        code: "goa-color-greyscale-600",
        value: "#858585",
        figmaColorStyle: "Greyscale/600",
        description: ""
      },
      {
        code: "goa-color-greyscale-700",
        value: "#666666",
        figmaColorStyle: "Greyscale/700",
        description: ""
      },
      {
        code: "goa-color-greyscale-black",
        value: "#333333",
        figmaColorStyle: "Greyscale/Black",
        description: ""
      }
    ]
  }
];
function ColorPage() {
  const colors = COLORS;
  const { isDesktop, isMobile } = reactExports$1.useContext(DeviceWidthContext);
  const renderDesktop = () => {
    return /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoATable, { variant: "normal", children: [
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("thead", { children: /* @__PURE__ */ jsxRuntimeExports$1.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("th", { children: "Type" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("th", {}),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("th", { children: "Token" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("th", { children: "Hex value" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("th", { children: "Figma colour style" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("th", { children: "Description" })
      ] }) }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("tbody", { children: colors.map((color, index2) => /* @__PURE__ */ jsxRuntimeExports$1.jsx(React.Fragment, { children: color.tokens.map((token, tokenIndex) => /* @__PURE__ */ jsxRuntimeExports$1.jsxs("tr", { children: [
        tokenIndex === 0 && /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { rowSpan: color.tokens.length, children: color.name }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: /* @__PURE__ */ jsxRuntimeExports$1.jsx(
          "div",
          {
            className: "token-block",
            style: {
              backgroundColor: getCssVarValue(`--${token.code}`) || token.value
            }
          }
        ) }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: /* @__PURE__ */ jsxRuntimeExports$1.jsx(TokenSnippet, { code: token.code }) }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: token.value }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: token.figmaColorStyle }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: token.description })
      ] }, tokenIndex)) }, index2)) })
    ] });
  };
  const renderColorsLinks = () => {
    if (isMobile)
      return null;
    return /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAGrid, { minChildWidth: "15rem", gap: "m", children: colors.map((color, index2) => /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: `#${color.name.toLowerCase()}`, children: color.name }, index2)) });
  };
  const renderTablet = () => {
    return /* @__PURE__ */ jsxRuntimeExports$1.jsxs("section", { children: [
      renderColorsLinks(),
      colors.map((color, index2) => /* @__PURE__ */ jsxRuntimeExports$1.jsxs(React.Fragment, { children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { id: color.name.toLowerCase(), className: "category", children: color.name }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAGrid, { minChildWidth: "22rem", gap: "xl", children: color.tokens.map((token, tokenIndex) => /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoAContainer, { children: [
          /* @__PURE__ */ jsxRuntimeExports$1.jsx(
            "div",
            {
              className: "token-block",
              style: {
                backgroundColor: getCssVarValue(`--${token.code}`) || token.value
              }
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx(TokenSnippet, { code: token.code }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsxs("dl", { children: [
            /* @__PURE__ */ jsxRuntimeExports$1.jsx("dt", { children: "Hex value" }),
            " ",
            /* @__PURE__ */ jsxRuntimeExports$1.jsx("dd", { children: token.value }),
            /* @__PURE__ */ jsxRuntimeExports$1.jsx("dt", { children: "Figma colour style" }),
            " ",
            /* @__PURE__ */ jsxRuntimeExports$1.jsx("dd", { children: token.figmaColorStyle }),
            /* @__PURE__ */ jsxRuntimeExports$1.jsx("dt", { children: "Description" }),
            " ",
            /* @__PURE__ */ jsxRuntimeExports$1.jsx("dd", { children: token.description })
          ] })
        ] }, tokenIndex)) })
      ] }, index2))
    ] });
  };
  return /* @__PURE__ */ jsxRuntimeExports$1.jsxs("div", { className: "colors-page", children: [
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h1", { children: "Color" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h3", { className: "introduction", children: "Our design system has a wide range of color design tokens to ensure brand consistency. Tokens are semantically named to make it easier for easy application by both developers and designers." }),
    isDesktop ? renderDesktop() : renderTablet()
  ] });
}
const IconSize = "";
function IconSizePage() {
  const tokens = [
    {
      tokenName: "goa-icon-size-s",
      rem: "1rem",
      px: "16px",
      figmaUsage: "Icon Size/Small",
      size: "small"
    },
    {
      tokenName: "goa-icon-size-m",
      rem: "1.25rem",
      px: "20px",
      figmaUsage: "Icon Size/Medium",
      size: "medium"
    },
    {
      tokenName: "goa-icon-size-l",
      rem: "1.5rem",
      px: "24px",
      figmaUsage: "Icon Size/Large",
      size: "large"
    }
  ];
  const { isDesktop } = reactExports$1.useContext(DeviceWidthContext);
  const renderDesktop = () => {
    return /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoATable, { variant: "normal", children: [
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("thead", { children: /* @__PURE__ */ jsxRuntimeExports$1.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("th", {}),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("th", { children: "Token name" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("th", { children: "REM" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("th", { children: "PX" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("th", { children: "Figma usage" })
      ] }) }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("tbody", { children: tokens.map((token, index2) => /* @__PURE__ */ jsxRuntimeExports$1.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: /* @__PURE__ */ jsxRuntimeExports$1.jsx("div", { className: `icon ${token.tokenName}`, children: /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAIcon, { type: "add", size: token.size }) }) }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: /* @__PURE__ */ jsxRuntimeExports$1.jsx(TokenSnippet, { code: token.tokenName }) }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: token.rem }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: token.px }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: token.figmaUsage })
      ] }, index2)) })
    ] });
  };
  const renderMobile = () => {
    return /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAGrid, { minChildWidth: "22rem", gap: "xl", children: getTokenGroups(tokens).map(
      (group) => group.map((token, idx) => /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoAContainer, { children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("div", { className: `icon ${token.tokenName}`, children: /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAIcon, { type: "add", size: token.size }) }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(TokenSnippet, { code: token.tokenName }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsxs("dl", { children: [
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("dt", { children: "REM" }),
          " ",
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("dd", { children: token.rem }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("dt", { children: "PX" }),
          " ",
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("dd", { children: token.px }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("dt", { children: "Figma usage" }),
          " ",
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("dd", { children: token.figmaUsage })
        ] })
      ] }, idx))
    ) });
  };
  return /* @__PURE__ */ jsxRuntimeExports$1.jsxs("div", { className: "icon-size", children: [
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h1", { children: "Icon size" }),
    isDesktop ? renderDesktop() : renderMobile()
  ] });
}
const Opacity = "";
function OpacityPage() {
  const tokens = [
    {
      tokenName: "goa-opacity-background-modal",
      percentage: "50%",
      figmaUsage: "Use an opacity of 50%"
    },
    {
      tokenName: "goa-opacity-background-loading",
      percentage: "90%",
      figmaUsage: "Use an opacity of 90%"
    }
  ];
  const { isDesktop } = reactExports$1.useContext(DeviceWidthContext);
  const renderDesktop = () => {
    return /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoATable, { variant: "normal", children: [
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("thead", { children: /* @__PURE__ */ jsxRuntimeExports$1.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("th", {}),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("th", { children: "Token name" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("th", { children: "%" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("th", { children: "Figma usage" })
      ] }) }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("tbody", { children: tokens.map((token, index2) => /* @__PURE__ */ jsxRuntimeExports$1.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: /* @__PURE__ */ jsxRuntimeExports$1.jsxs("div", { style: { display: "flex" }, children: [
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("div", { className: "blue-box" }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx(
            "div",
            {
              className: "grey-box",
              style: {
                opacity: getCssVarValue(`--${token.tokenName}`)
              }
            }
          )
        ] }) }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: /* @__PURE__ */ jsxRuntimeExports$1.jsx(TokenSnippet, { code: token.tokenName }) }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: token.percentage }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: token.figmaUsage })
      ] }, index2)) })
    ] });
  };
  const renderMobile = () => {
    return /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAGrid, { minChildWidth: "22rem", gap: "xl", children: getTokenGroups(tokens).map(
      (group) => group.map((token, idx) => /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoAContainer, { children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsxs("div", { style: { display: "flex" }, children: [
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("div", { className: "blue-box" }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx(
            "div",
            {
              className: "grey-box",
              style: {
                opacity: getCssVarValue(`--${token.tokenName}`)
              }
            }
          )
        ] }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(TokenSnippet, { code: token.tokenName }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsxs("dl", { children: [
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("dt", { children: "%" }),
          " ",
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("dd", { children: token.percentage }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("dt", { children: "Figma usage" }),
          " ",
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("dd", { children: token.figmaUsage })
        ] })
      ] }, idx))
    ) });
  };
  return /* @__PURE__ */ jsxRuntimeExports$1.jsxs("div", { className: "opacity-page", children: [
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h1", { children: "Opacity" }),
    isDesktop ? renderDesktop() : renderMobile()
  ] });
}
const Shadow = "";
function ShadowPage() {
  const tokens = [
    {
      tokenName: "goa-shadow-modal",
      value: "x=6,y=6,blur=6,spread=0, rgba(0,0,0,0,16)",
      figmaUsage: "Drop Shadow/Small"
    }
  ];
  const { isDesktop } = reactExports$1.useContext(DeviceWidthContext);
  const renderDesktop = () => {
    return /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoATable, { variant: "normal", children: [
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("thead", { children: /* @__PURE__ */ jsxRuntimeExports$1.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("th", {}),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("th", { children: "Token name" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("th", { children: "Value" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("th", { children: "Figma usage" })
      ] }) }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("tbody", { children: tokens.map((token, index2) => /* @__PURE__ */ jsxRuntimeExports$1.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: /* @__PURE__ */ jsxRuntimeExports$1.jsx("div", { className: "token-block" }) }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: /* @__PURE__ */ jsxRuntimeExports$1.jsx(TokenSnippet, { code: token.tokenName }) }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: token.value }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: token.figmaUsage })
      ] }, index2)) })
    ] });
  };
  const renderMobile = () => {
    return /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAGrid, { minChildWidth: "22rem", gap: "xl", children: getTokenGroups(tokens).map(
      (group) => group.map((token, idx) => /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoAContainer, { children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("div", { className: "token-block" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(TokenSnippet, { code: token.tokenName }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsxs("dl", { children: [
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("dt", { children: "Value" }),
          " ",
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("dd", { children: token.value }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("dt", { children: "Figma usage" }),
          " ",
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("dd", { children: token.figmaUsage })
        ] })
      ] }, idx))
    ) });
  };
  return /* @__PURE__ */ jsxRuntimeExports$1.jsxs("div", { className: "shadow-page", children: [
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h1", { children: "Shadow" }),
    isDesktop ? renderDesktop() : renderMobile()
  ] });
}
const Spacing = "";
const SPACING_TOKENS = [
  {
    tokenName: "goa-space-none",
    rem: "0rem",
    px: "0px",
    figmaUsage: "Spacing/none"
  },
  {
    tokenName: "goa-space-3xs",
    rem: "0.125rem",
    px: "2px",
    figmaUsage: "Spacing/3XS"
  },
  {
    tokenName: "goa-space-2xs",
    rem: "0.25rem",
    px: "4px",
    figmaUsage: "Spacing/2XS"
  },
  {
    tokenName: "goa-space-xs",
    rem: "0.5rem",
    px: "8px",
    figmaUsage: "Spacing/XS"
  },
  {
    tokenName: "goa-space-s",
    rem: "0.75rem",
    px: "12px",
    figmaUsage: "Spacing/S"
  },
  {
    tokenName: "goa-space-m",
    rem: "1rem",
    px: "16px",
    figmaUsage: "Spacing/M"
  },
  {
    tokenName: "goa-space-l",
    rem: "1.5rem",
    px: "24px",
    figmaUsage: "Spacing/L"
  },
  {
    tokenName: "goa-space-xl",
    rem: "2rem",
    px: "32px",
    figmaUsage: "Spacing/XL"
  },
  {
    tokenName: "goa-space-2xl",
    rem: "3rem",
    px: "48px",
    figmaUsage: "Spacing/2XL"
  },
  {
    tokenName: "goa-space-3xl",
    rem: "4rem",
    px: "64px",
    figmaUsage: "Spacing/3XL"
  },
  {
    tokenName: "goa-space-4xl",
    rem: "8rem",
    px: "128px",
    figmaUsage: "Spacing/4XL"
  }
];
function SpacingPage() {
  const tokens = SPACING_TOKENS;
  const { isDesktop } = reactExports$1.useContext(DeviceWidthContext);
  const renderDesktop = () => {
    return /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoATable, { variant: "normal", children: [
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("thead", { children: /* @__PURE__ */ jsxRuntimeExports$1.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("th", {}),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("th", { children: "Token name" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("th", { children: "REM" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("th", { children: "PX" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("th", { children: "Figma usage" })
      ] }) }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("tbody", { children: tokens.map((token, index2) => /* @__PURE__ */ jsxRuntimeExports$1.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: /* @__PURE__ */ jsxRuntimeExports$1.jsxs("div", { className: "represent", children: [
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("div", { className: "grey-circle" }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx(
            "div",
            {
              className: `space-rect ${token.tokenName}`,
              style: {
                width: getCssVarValue(`--${token.tokenName}`)
              }
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("div", { className: "grey-circle" })
        ] }) }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: /* @__PURE__ */ jsxRuntimeExports$1.jsx(TokenSnippet, { code: token.tokenName }) }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: token.rem }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: token.px }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: token.figmaUsage })
      ] }, index2)) })
    ] });
  };
  const renderMobile = () => {
    return /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAGrid, { minChildWidth: "22rem", gap: "xl", children: getTokenGroups(tokens).map(
      (group) => group.map((token, idx) => /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoAContainer, { children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsxs("div", { className: "represent", children: [
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("div", { className: "grey-circle" }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx(
            "div",
            {
              className: `space-rect ${token.tokenName}`,
              style: {
                width: getCssVarValue(`--${token.tokenName}`)
              }
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("div", { className: "grey-circle" })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(TokenSnippet, { code: token.tokenName }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsxs("dl", { children: [
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("dt", { children: "REM" }),
          " ",
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("dd", { children: token.rem }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("dt", { children: "PX" }),
          " ",
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("dd", { children: token.px }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("dt", { children: "Figma usage" }),
          " ",
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("dd", { children: token.figmaUsage })
        ] })
      ] }, idx))
    ) });
  };
  return /* @__PURE__ */ jsxRuntimeExports$1.jsxs("div", { className: "spacing-page", children: [
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h1", { children: "Spacing" }),
    isDesktop ? renderDesktop() : renderMobile()
  ] });
}
const TYPO_TOKENS = [
  {
    figmaTypeStyle: "XLarge heading",
    tokenName: "goa-typography-heading-xl",
    typeFamily: "Acumin Pro SemiCondensed",
    weight: "Bold",
    fontSize: "48px | 3rem",
    lineHeight: "56px | 3.5rem"
  },
  {
    figmaTypeStyle: "Large heading",
    tokenName: "goa-typography-heading-l",
    typeFamily: "Acumin Pro SemiCondensed",
    weight: "Regular",
    fontSize: "36px | 2.25rem",
    lineHeight: "44px | 2.75rem"
  },
  {
    figmaTypeStyle: "Medium heading",
    tokenName: "goa-typography-heading-m",
    typeFamily: "Acumin Pro SemiCondensed",
    weight: "Regular",
    fontSize: "24px | 1.5rem",
    lineHeight: "32px | 2rem"
  },
  {
    figmaTypeStyle: "Small heading",
    tokenName: "goa-typography-heading-s",
    typeFamily: "Acumin Pro SemiCondensed",
    weight: "Bold",
    fontSize: "18px | 1.125rem",
    lineHeight: "28px | 1.75rem"
  },
  {
    figmaTypeStyle: "XSmall heading",
    tokenName: "goa-typography-heading-xs",
    typeFamily: "Acumin Pro SemiCondensed",
    weight: "Bold",
    fontSize: "16px | 1rem",
    lineHeight: "24px | 1.5rem"
  },
  {
    figmaTypeStyle: "Large text",
    tokenName: "goa-typography-body-l",
    typeFamily: "Acumin Pro SemiCondensed",
    weight: "Regular",
    fontSize: "24px | 1.5rem",
    lineHeight: "32px | 2rem"
  },
  {
    figmaTypeStyle: "Medium text",
    tokenName: "goa-typography-body-m",
    typeFamily: "Acumin Pro SemiCondensed",
    weight: "Regular",
    fontSize: "18px | 1.125rem",
    lineHeight: "28px  | 1.75rem"
  },
  {
    figmaTypeStyle: "Small text",
    tokenName: "goa-typography-body-s",
    typeFamily: "Acumin Pro SemiCondensed",
    weight: "Regular",
    fontSize: "16px | 1rem",
    lineHeight: "24px | 1.5rem"
  },
  {
    figmaTypeStyle: "XSmall text",
    tokenName: "goa-typography-body-xs",
    typeFamily: "Acumin Pro SemiCondensed",
    weight: "Regular",
    fontSize: "14px | 0.875rem",
    lineHeight: "20px | 1.25rem"
  },
  {
    figmaTypeStyle: "Medium number",
    tokenName: "goa-typography-number-m",
    typeFamily: "Roboto Mono",
    weight: "Regular",
    fontSize: "18px | 1.125rem",
    lineHeight: "28px | 1.75rem"
  }
];
function TypographyPage() {
  const tokens = TYPO_TOKENS;
  const { isDesktop } = reactExports$1.useContext(DeviceWidthContext);
  const renderDesktop = () => {
    return /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoATable, { variant: "normal", children: [
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("thead", { children: /* @__PURE__ */ jsxRuntimeExports$1.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("th", { children: "Figma type style" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("th", { children: "Design token" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("th", { children: "Type family" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("th", { children: "Weight" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("th", { children: "Font size" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("th", { children: "Line height" })
      ] }) }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("tbody", { children: tokens.map((token, index2) => /* @__PURE__ */ jsxRuntimeExports$1.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { style: { font: getCssVarValue(`--${token.tokenName}`) }, children: token.figmaTypeStyle }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: /* @__PURE__ */ jsxRuntimeExports$1.jsx(TokenSnippet, { code: token.tokenName }) }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: token.typeFamily }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: token.weight === "Bold" ? /* @__PURE__ */ jsxRuntimeExports$1.jsx("strong", { children: token.weight }) : token.weight }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: token.fontSize }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: token.lineHeight })
      ] }, index2)) })
    ] });
  };
  const renderMobile = () => {
    return /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAGrid, { minChildWidth: "22rem", gap: "xl", children: getTokenGroups(tokens).map(
      (group) => group.map((token, idx) => /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAContainer, { children: /* @__PURE__ */ jsxRuntimeExports$1.jsxs("dl", { children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("dd", { style: { font: getCssVarValue(`--${token.tokenName}`) }, children: token.figmaTypeStyle }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("dd", { children: /* @__PURE__ */ jsxRuntimeExports$1.jsx(TokenSnippet, { code: token.tokenName }) }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("dt", { children: "Type family" }),
        " ",
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("dd", { children: token.typeFamily }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("dt", { children: "Weight" }),
        " ",
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("dd", { children: token.weight }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("dt", { children: "Font size" }),
        " ",
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("dd", { children: token.fontSize }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("dt", { children: "Line height" }),
        " ",
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("dd", { children: token.lineHeight })
      ] }) }, idx))
    ) });
  };
  return /* @__PURE__ */ jsxRuntimeExports$1.jsxs("div", { style: { whiteSpace: "normal" }, children: [
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h1", { children: "Typography" }),
    isDesktop ? renderDesktop() : renderMobile()
  ] });
}
const Overview = "";
function DesignTokensOverviewPage() {
  return /* @__PURE__ */ jsxRuntimeExports$1.jsxs("div", { className: "overview-page", children: [
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h1", { children: "Styles" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h3", { className: "introduction", children: "We use design tokens to communicate design decisions across design and development. These design decisions are a limited set of options for spacing, colour, typography, object styles, and more that maintain consistency across the design system." }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { children: "These design tokens are used in place of hard-coded values in order to ensure flexibility and unity across all digital products. They are shared references used together by design and development, packaged in a format that’s consumable and easily distributed across all platforms." }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { children: "The tokens are an abstraction, allowing underlying values to change in different scenarios without affecting the designer or developer experience." }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { children: "Design tokens are created and updated through the design tool and exported as a JSON file. This file is then converted with Style Dictionary into formats like CSS and Sass for use by product teams." }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoAContainer, { type: "non-interactive", mt: "2xl", mb: "xs", children: [
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("h4", { children: "Design token example" }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsxs("p", { children: [
        "The GoA’s colour for a hover interaction is #004F84. This property is defined as a design token called",
        " ",
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("code", { children: "--goa-color-interactive-hover" }),
        ". This token is used in Figma as a style and used in code as CSS or SASS variables"
      ] })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h3", { children: "What this means for..." }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h4", { children: "Developers" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsxs("p", { children: [
      "You can access the design tokens as an NPM package here:",
      " ",
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "https://www.npmjs.com/package/@abgov/design-tokens", children: "npm: @abgov/design-tokens" }),
      ". Incorporate the SCSS or CSS file into your projects, replacing hard-coded values with the token variables from the design system. Your designers can use and reference these design tokens in their tools to hand off their designs to you."
    ] }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsxs("p", { children: [
      'Save time going back and forth with your designer on hex values and adjusting a few pixels at a time. "The colour is:',
      " ",
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("code", { children: "--goa-color-info-default" }),
      ", the spacing is:",
      " ",
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("code", { children: "--goa-spacing-m" }),
      '".'
    ] }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h4", { children: "Designers" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsxs("p", { children: [
      "Many of the design tokens are represented in Figma as styles within the shared GOA Figma Styles Library here:",
      " ",
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "/guidelines", children: "Styles, Guidelines, and Patterns | DDD" }),
      ", and is automatically enabled in your project files. Spacing can be applied in Figma using the spacing component. As a designer, you can communicate design decisions using design tokens, which developers can then use in code."
    ] }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsxs("p", { children: [
      'Save time going back and forth with your developer on hex values and adjusting a few pixels at a time. "The colour is:',
      " ",
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("code", { children: "--goa-color-info-default" }),
      ", the spacing is:",
      " ",
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("code", { children: " --goa-spacing-m" }),
      '".'
    ] })
  ] });
}
function GetStartedLayout() {
  return /* @__PURE__ */ jsxRuntimeExports$1.jsxs("div", { className: "content", children: [
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("section", { className: "side-menu", children: /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoASideMenu, { children: [
      /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoASideMenuHeading, { children: "Get Started" }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "", children: "Overview" }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "designers", children: "UX Designers" }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoASideMenuGroup, { heading: "Developers", children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "developers", children: "Overview" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "developers/setup", children: "Setup" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "developers/vscode", children: "VS Code" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "developers/technologies", children: "Technologies" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "developers/browsers", children: "Supported Browsers" })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "qa-testing", children: "QA testing" }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "roadmap", children: "Roadmap" }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx(Link, { to: "service-principles", children: "Service principles" })
    ] }) }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsxs("main", { className: "main", children: [
      /* @__PURE__ */ jsxRuntimeExports$1.jsx(Outlet, {}),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx(SupportInfo, {})
    ] })
  ] });
}
function UxDesignerPage() {
  return /* @__PURE__ */ jsxRuntimeExports$1.jsxs(jsxRuntimeExports$1.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h1", { children: "UX Designers" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h3", { children: "As a designer, you can consume the design system through Figma. Through Figma you can use tokens, components, and page templates." }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h2", { children: "Overview" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsxs("p", { children: [
      "The design system provides designers with a library of",
      " ",
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "/design-tokens", children: "design tokens" }),
      ", ",
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "/components", children: "components" }),
      ", and",
      " ",
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "/patterns", children: "patterns" }),
      " in Figma that are also available to developers in code. Start by using the design system components for common parts of your service so that your developers can also use the coded components."
    ] }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsxs("ol", { className: "max-width-72ch", children: [
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("li", { children: "Start with the design system and validate your design through user testing." }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("li", { children: "If usability issues arise or a problem cannot be resolved within the system, then consider a custom solution or extending a component." })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { children: "The tools below will set you up to access the most up-to-date designs and standards:" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h3", { children: "Figma" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { children: "The design system tokens, styles, components and page templates are all available to pull into your file in Figma." }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h4", { children: "Design system library - Figma" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { children: /* @__PURE__ */ jsxRuntimeExports$1.jsx(
      "a",
      {
        href: "https://www.figma.com/file/3pb2IK8s2QUqWieH79KdN7/%E2%9D%96-Components-%7C-DDI?node-id=1101%3A7241",
        target: "_blank",
        children: "View the Figma design system library"
      }
    ) }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h3", { children: "Design tokens" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsxs("p", { children: [
      "The components and resources in the design system libraries in both Figma and code are built using ",
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "/design-tokens", children: "design tokens" }),
      ". As a designer, you can communicate design decisions using design tokens, which developers can then use in code."
    ] }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { children: "Save time going back and forth with your developer on hex values and adjusting a few pixels at a time. Instead, reference semantic tokens that the developer can consume." }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsxs("p", { children: [
      "eg. “The colour is:",
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("code", { children: "--goa-color-info-default" }),
      ", the spacing is: ",
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("code", { children: '--goa-spacing-m"' }),
      "."
    ] }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h3", { children: "Components" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { children: "All of the components in the design system are available in Figma and in code." }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsxs("p", { children: [
      "These design system components have all been designed and coded to meet a",
      " ",
      /* @__PURE__ */ jsxRuntimeExports$1.jsxs("a", { href: "https://www.w3.org/WAI/standards-guidelines/wcag/", target: "_blank", children: [
        " ",
        "WCAG 2.1 accessibility standard"
      ] }),
      "."
    ] }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsxs("p", { children: [
      "Avoid detaching components when possible. Instead, use the component's variant options or show and hide layers within the component. If a component is not working as expected, reach out via",
      " ",
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "https://goa-dio.slack.com/archives/C02PLLT9HQ9", target: "_blank", children: "#design-system-support" }),
      "."
    ] }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { children: "Make sure to keep your components up-to-date. You may see a notification in the bottom right corner of Figma when an update is available." }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h3", { children: "Figma file templates and helper components" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsxs("p", { children: [
      "A",
      " ",
      /* @__PURE__ */ jsxRuntimeExports$1.jsx(
        "a",
        {
          href: "https://www.figma.com/file/7xRtDWqMrJi2msuxgzyU79/DDD-Figma-file-template?type=design&node-id=53-350&mode=design&t=xrLI0oN7vgLk0HXQ-0",
          target: "_blank",
          children: "starter template file"
        }
      ),
      " ",
      "is included within each digital service project folder in Figma to help provide some initial structure and organization to your design file. This is important for better handoff with developers, and to help others navigate and find what you're looking for in each other's design files."
    ] }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsxs("p", { children: [
      "In addition to these templates ,",
      " ",
      /* @__PURE__ */ jsxRuntimeExports$1.jsx(
        "a",
        {
          href: "https://www.figma.com/file/LTUW8lBTgtTJKOFrLE93zP/%E2%9D%96-Design-file-utilities-(Figma-helper-components)?type=design&node-id=52-7&mode=design&t=GrjjCo71z9UFWoUO-0",
          target: "_blank",
          children: "helper components"
        }
      ),
      " ",
      "can help clearly communicate your intent when sharing your design with developers, other designers, and other members of your team."
    ] })
  ] });
}
function DevelopersTechnologiesPage() {
  return /* @__PURE__ */ jsxRuntimeExports$1.jsxs(jsxRuntimeExports$1.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h1", { children: "Developers" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h2", { children: "Design system technologies" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("div", { className: "design-system-image", children: /* @__PURE__ */ jsxRuntimeExports$1.jsx("img", { src: "/images/design-system-technologies.png" }) }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h3", { children: "Web components" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsxs("p", { children: [
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "https://developer.mozilla.org/en-US/docs/Web/API/Web_components", target: "_blank", children: "Web Components" }),
      " ",
      "is a suite of different technologies allowing you to create reusable custom elements with styling and functionality encapsulated away from the rest of your code."
    ] }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h4", { children: "Benefits of using web components" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsxs("ul", { children: [
      /* @__PURE__ */ jsxRuntimeExports$1.jsxs("li", { children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("strong", { children: "Reuse:" }),
        " A component is made once and can be reused across different pages, apps, or frameworks."
      ] }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsxs("li", { children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("strong", { children: "Support:" }),
        " Once fully standardized, it will work on any browser without additional libraries."
      ] }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsxs("li", { children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("strong", { children: "Maintenance:" }),
        " Since the design is modular and the components are self-contained, they're easier to maintain."
      ] }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsxs("li", { children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("strong", { children: "Encapsulation:" }),
        " Markup structure, style, and behaviour will be kept hidden and separate from other code on the page so that different parts do not clash."
      ] }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsxs("li", { children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("strong", { children: "Reliability:" }),
        " Code is not spread across HTML and JS files, thereby avoiding inconsistencies."
      ] }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsxs("li", { children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("strong", { children: "Flexibility:" }),
        " Components can be written inline, imported or even compiled."
      ] }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsxs("li", { children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("strong", { children: "Composability:" }),
        " Components can use or interface with other components."
      ] })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h4", { children: "Using web components in your project" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { children: "Web Components generated from Svelte can be used along side various other front-end frameworks or used with our Angular or React implementations." }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h3", { children: "Svelte" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsxs("p", { children: [
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "https://svelte.dev/", target: "_blank", children: "Svelte" }),
      " ",
      "is a JavaScript framework that we are using to generate web components."
    ] }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h4", { children: "Why use Svelte" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { children: "We use Svelte to build our web components. Svelte gathers the logic (JavaScript), the structure (HTML), and the style (CSS) in the same file. Then, Svelte is used to build single and reusable components for larger applications written with various front-end frameworks." }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h3", { children: "Angular" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsxs("p", { children: [
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "https://angular.io/", target: "_blank", children: "Angular" }),
      " ",
      "is a TypeScript-based open-source platform and web application framework that helps us to create single-page applications using TypeScript and HTML. It uses HTML to define the UI of the application. It is a declarative and intuitive language with directives like ng-app, ng-model, ng-repeat, and forms control."
    ] }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { children: "Angular is the most used web application framework in this organization." }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h4", { children: "How Web Components and Angular work together" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { children: "Our Angular implementation adds form binding, both Reactive and Template, to our web components." }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { children: "Angular applications will need to use our web components and Angular components." }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h3", { children: "React" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsxs("p", { children: [
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "https://react.dev/", target: "_blank", children: "React" }),
      " ",
      "is an open-source JavaScript library commonly used to create user interfaces for single-page applications from isolated components."
    ] }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { children: "React is the 2nd most used web application framework in this organization." }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h4", { children: "How Web Components and React work together" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { children: "We use React to create wrappers around our web components. This helps manage events and properties of the web components rather than trying to use our web components by themselves." }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { children: "The React wrappers are used inside a React app, which then makes requests back to our web components to create the actual component." })
  ] });
}
function DevelopersVSCodePage() {
  return /* @__PURE__ */ jsxRuntimeExports$1.jsxs(jsxRuntimeExports$1.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h1", { children: "Developers" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h2", { children: "VS Code" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { children: "You can use VS Code's autocomplete suggestions for design system components and design tokens." }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h3", { children: "Design tokens autocomplete" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsxs("p", { children: [
      "Get code autocomplete suggestions for the ",
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "/design-tokens", children: "goa design tokens." })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsxs("ul", { children: [
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("li", { children: "Automatically works for CSS and Sass files" }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("li", { children: "Preview design token values in autocomplete description" }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("li", { children: "Color previews for all color tokens" }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("li", { children: "Relevant code completions based on the current line of code" })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h3", { children: "Components autocomplete" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsxs("p", { children: [
      "In order to use VS Code's",
      " ",
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "https://github.com/microsoft/vscode-custom-data", target: "_blank", children: "HTML/CSS Custom Data" }),
      " ",
      "support to enhance GoA Web Components HTML editing experience, include our html custom data setting found in ",
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("code", { children: ".vscode/settings.json" }),
      ":"
    ] })
  ] });
}
function SupportedBrowsersPage() {
  return /* @__PURE__ */ jsxRuntimeExports$1.jsxs(jsxRuntimeExports$1.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h1", { children: "Developers" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h2", { children: "Supported browsers" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h3", { className: "introduction", children: "The design system components are tested and supported on the following browsers and devices:" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoATable, { width: "564px", children: [
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("thead", { children: /* @__PURE__ */ jsxRuntimeExports$1.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("th", { children: "Browser" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("th", { children: "Windows" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("th", { children: "Mac OS" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("th", { children: "Android" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("th", { children: "iOS" })
      ] }) }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsxs("tbody", { children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsxs("tr", { children: [
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: "Google Chrome" }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoACheckbox, { checked: true, name: "browser", disabled: true }) }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoACheckbox, { checked: true, name: "browser", disabled: true }) }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoACheckbox, { checked: true, name: "browser", disabled: true }) }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoACheckbox, { checked: true, name: "browser", disabled: true }) })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsxs("tr", { children: [
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: "Microsoft Edge" }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoACheckbox, { checked: true, name: "browser", disabled: true }) }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoACheckbox, { checked: true, name: "browser", disabled: true }) }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoACheckbox, { checked: false, name: "browser", disabled: true }) }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoACheckbox, { checked: false, name: "browser", disabled: true }) })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsxs("tr", { children: [
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: "Mozilla Firefox" }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoACheckbox, { checked: true, name: "browser", disabled: true }) }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoACheckbox, { checked: true, name: "browser", disabled: true }) }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoACheckbox, { checked: true, name: "browser", disabled: true }) }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoACheckbox, { checked: false, name: "browser", disabled: true }) })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsxs("tr", { children: [
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: "Apple Safari" }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: "N/A" }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoACheckbox, { checked: true, name: "browser", disabled: true }) }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: "N/A" }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("td", { children: /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoACheckbox, { checked: true, name: "browser", disabled: true }) })
        ] })
      ] })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsxs("div", { className: "max-width-72ch", children: [
      /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoAContainer, { type: "non-interactive", mt: "2xl", children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("h3", { children: "Browser version support" }),
        "The design system components support the two latest stable versions of each browser. Latest version and Latest version -1"
      ] }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoAContainer, { type: "non-interactive", mt: "2xs", children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("h3", { children: "Representative mobile OS used in testing" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsxs("p", { children: [
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("strong", { children: "Android OS:" }),
          " 10+"
        ] }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsxs("p", { children: [
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("strong", { children: "iOS: " }),
          " 15+"
        ] })
      ] })
    ] })
  ] });
}
function QATestingOverviewPage() {
  return /* @__PURE__ */ jsxRuntimeExports$1.jsxs(jsxRuntimeExports$1.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h1", { children: "QA testing" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h3", { className: "introduction", children: "The QA testing practice involves creating test cases based on user acceptance criteria, conducting functional and cross-browser testing of components, and executing accessibility validations using assistive technologies." }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsxs("div", { className: "max-width-72ch", children: [
      /* @__PURE__ */ jsxRuntimeExports$1.jsxs(
        GoACallout,
        {
          type: "information",
          heading: "Design system components are thoroughly tested",
          size: "large",
          mt: "xl",
          mb: "xl",
          children: [
            "You don't need to test the design system components. ",
            /* @__PURE__ */ jsxRuntimeExports$1.jsx("br", {}),
            /* @__PURE__ */ jsxRuntimeExports$1.jsxs("strong", { children: [
              "If problems found regarding components",
              " ",
              /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "https://github.com/GovAlta/ui-components/issues/new/choose", target: "_blank", children: "report a bug" })
            ] })
          ]
        }
      ),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("h2", { children: "Definition of done for testing activities" }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsxs("ul", { children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("li", { children: "Automated unit testing is run." }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsxs("li", { children: [
          "The developed component is",
          " ",
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "/get-started/developers/browsers", children: "validated on all popular browsers leading to cross-browser testing." })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("li", { children: "Manual accessibility testing of components using Axe accessibility testing tools." }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("li", { children: "Defects observed are communicated to the development team by logging an issue or comment in Github." }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("li", { children: "Once the development team fixes all the issues/defects raised, retesting will be performed on the component to validate the fixes." }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("li", { children: "The component undergoes a design review to ensure alignment to the design." }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("li", { children: "After QA signoff, the code is deployed to Alpha branch." })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("h2", { children: "Accessibility testing" }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { children: "To perform accessibility testing, NVDA and VoiceOver screen reader software are used to navigate through the application, ensuring proper keyboard accessibility, accurate screen reader feedback, and adherence to accessibility guidelines for elements such as focus management, and semantic markup." }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("h3", { children: "We use following tools for accessibility testing:" }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsxs("ul", { children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsxs("li", { children: [
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("strong", { children: "NVDA (Windows):" }),
          " NVDA provides various features to test accessibility, such as Keyboard navigation, Screen reader announcements, ARIA support. Apple VoiceOver (Mac): Apple VoiceOver, the built-in screen reader for Mac and iOS devices, offers a range of features to enhance accessibility such as Spoken Feedback, Navigation and Gestures, Web Page Navigation, Multi-language Support."
        ] }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsxs("li", { children: [
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("strong", { children: "Apple VoiceOver (Mac):" }),
          " Apple VoiceOver, the built-in screen reader for Mac and iOS devices, offers a range of features to enhance accessibility such as Spoken Feedback, Navigation and Gestures, Web Page Navigation, Multi-language Support."
        ] })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsxs("p", { children: [
        "The design system team uses",
        " ",
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "https://www.lambdatest.com/", target: "_blank", children: "Lambda Test" }),
        " ",
        "which offers built-in accessibility testing features using NVDA for Windows and VoiceOver for macOS, allowing to easily test the accessibility of our components."
      ] }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsxs("p", { children: [
        "To see the latest updates, additions, changes, and improvements to our design system, view our",
        " ",
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "https://github.com/GovAlta/ui-components/releases", target: "_blank", children: "release notes on GitHub" }),
        "."
      ] })
    ] })
  ] });
}
function GetStartedOverviewPage() {
  const navigate = useNavigate();
  return /* @__PURE__ */ jsxRuntimeExports$1.jsxs(jsxRuntimeExports$1.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h1", { children: "Starting with the design system" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h3", { className: "introduction", children: "Start with the design system to build on the research and experience of other service teams and avoid repeating work that's already been done." }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsxs("div", { className: "max-width-72ch", children: [
      /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoAGrid, { minChildWidth: "32ch", mb: "xl", children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("h4", { className: "heading", children: "Using the design system by role:" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoAButtonGroup, { alignment: "start", children: [
          /* @__PURE__ */ jsxRuntimeExports$1.jsx(
            GoAButton,
            {
              type: "tertiary",
              size: "compact",
              onClick: () => navigate("/get-started/designers"),
              children: "Designers"
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx(
            GoAButton,
            {
              type: "tertiary",
              size: "compact",
              onClick: () => navigate("/get-started/developers"),
              children: "Developers"
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx(
            GoAButton,
            {
              type: "tertiary",
              size: "compact",
              onClick: () => navigate("/get-started/qa-testing"),
              children: "QA Testers"
            }
          )
        ] })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAContainer, { type: "non-interactive", mb: "l", children: "Start with the design system. You don’t need to reinvent the wheel. The design system is the floor, not the ceiling. Start with it to save time building the common parts of a service, so that you can spend time on the unique challenges within your service context." }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("h3", { children: "The value of starting with the design system components" }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { children: "The design system is your foundation for success and an incredible time-saver, allowing you to focus on high-value work. By starting with the design system, you can:" }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsxs("ul", { children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsxs("li", { children: [
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("strong", { children: "Streamline collaboration:" }),
          " Your developers can use the corresponding coded design system components."
        ] }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsxs("li", { children: [
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("strong", { children: "Ensure accessibility:" }),
          " Accessibility is built into the components from both design and code."
        ] }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsxs("li", { children: [
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("strong", { children: "Benefit from thorough testing:" }),
          " Components have been rigorously tested across various devices, browsers, and service contexts."
        ] }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsxs("li", { children: [
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("strong", { children: "Maintain consistency:" }),
          " Components are coordinated with the rest of the system for a cohesive experience."
        ] })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("h3", { children: "More time for other high value work" }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { children: "Leveraging what exists in the design system saves you time, enabling you to spend more time on other high-value tasks such as:" }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsxs("ul", { children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("li", { children: "Usability testing" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("li", { children: "User research" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("li", { children: "Content design" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("li", { children: "Accessibility" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("li", { children: "Design integrity of the product" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("li", { children: "Lo-fidelity design and testing" })
      ] })
    ] })
  ] });
}
function RoadmapPage() {
  return /* @__PURE__ */ jsxRuntimeExports$1.jsxs(jsxRuntimeExports$1.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h1", { children: "Roadmap" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsxs("h3", { className: "introduction", children: [
      "A high level summary of the work the design system team plans to complete in 2023. For more information on the latest releases, visit the ",
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "https://github.com/GovAlta/ui-components/releases", target: "_blank", children: "release notes" }),
      "."
    ] }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsxs("div", { className: "max-width-72ch", children: [
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { children: "Please note the roadmap is subject to changes as we learn more information. We will communicate any updates on the direction of the design system so that product teams can align, prepare, and strategize their work as applicable." }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsxs("p", { children: [
        "See our ",
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "https://github.com/orgs/GovAlta/projects/35/views/1", target: "_blank", children: "GitHub design system backlog" }),
        " for more details on our priorities and day-to-day activities."
      ] }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("h2", { children: "Now" }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsxs("ul", { children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsxs("li", { children: [
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("strong", { children: "Design System Documentation Upgrade:" }),
          " We plan to enhance and centralize our documentation site to serve both design and technical practitioners better. Key updates will include a real-time component sandbox for configuring components, and context-specific examples with code samples, all designed to expedite product development."
        ] }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsxs("li", { children: [
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("strong", { children: "User Experience-focused Form Improvements:" }),
          " Acknowledging the importance of forms in government services, we are developing a form pattern in conjunction with product teams. This will provide guidance and design and development resources to easily create user-friendly and accessible forms, thereby enhancing the user experience and streamline data collection."
        ] }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsxs("li", { children: [
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("strong", { children: "Design System Onboarding:" }),
          " We're preparing a comprehensive onboarding process for new design and technical practitioners, providing them with the knowledge and tools to build efficient, consistent services that encourage cross-functional collaboration."
        ] })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("h2", { children: "Next" }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsxs("ul", { children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsxs("li", { children: [
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("strong", { children: "Pattern research initiative:" }),
          " With this initiative we aim to improve our visibility and understanding of the organization's existing 3D products to identify and document the most effective and frequently used service patterns, thereby accelerating development and creating better services."
        ] }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsxs("li", { children: [
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("strong", { children: "Collaborative UI Components Delivery:" }),
          " The design system plans to partner with platform teams to co-create components and patterns. This initiative builds on the success of our past collaboration with the Seniors Community and Social Services (SCSS) platform team. It aims to foster similar partnerships to deliver UI components and patterns effectively."
        ] })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("h2", { children: "Future" }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("ul", { children: /* @__PURE__ */ jsxRuntimeExports$1.jsxs("li", { children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("strong", { children: "Initiate a pilot project to build a digital service with a product team:" }),
        " As part of this initiative, members of the design system team will be integrated into a product team. This arrangement benefits both sides - product teams will have direct access to design system expertise, speeding up their processes. Concurrently, design system team members will gain hands-on experience on how design system components are incorporated into a real DDD product."
      ] }) })
    ] })
  ] });
}
const ServicePrinciples = "";
function ServicePrinciplesPage() {
  return /* @__PURE__ */ jsxRuntimeExports$1.jsxs("div", { className: "services-principle-page", children: [
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h1", { children: "DDD Service principles" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h3", { className: "introduction", children: "At DDD, we work as user centred, agile teams to provide better digital services to Alberta." }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsxs("ol", { children: [
      /* @__PURE__ */ jsxRuntimeExports$1.jsxs("li", { children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("h3", { children: "Nothing for users without users" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { children: "We put user needs at the centre of service delivery. Users may include Albertans, internal GoA staff, and anyone who has a stake in the way that the service is delivered." }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { children: "From the outset of every project, we identify and work directly with users to understand their experience. Sometimes we map the user service journey to identify needs and challenges that users encounter." }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsxs("p", { children: [
          " ",
          "We continue to engage users throughout the whole digital delivery process, testing the service with real users, and incorporating our findings."
        ] })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsxs("li", { children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("h3", { children: "Collaborative, nimble culture" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { children: "Modern service delivery requires modern ways of working. We are transforming the Government of Alberta into an organization that can deliver world-class digital services." }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { children: "This means shifting the way that we work to reduce bureaucracy, empower agile product teams to make decisions, increase digital literacy, and inspire transformation that endures beyond product delivery." })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsxs("li", { children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("h3", { children: "Quick, iterative and continuous delivery" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { children: "We use agile methods to design, develop, test, and iterate possible solutions with users." }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { children: "We don't fixate on one potential solution; instead, we explore possible ideas with users early and often, incorporating findings from usability testing along the way. Our priority is to place something of value in the user's hands as quickly and as often as possible." })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsxs("li", { children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("h3", { children: "Open by default" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { children: "A modern digital service should be transparent and accountable, both to the public and internally among government stakeholders." }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { children: "We are open about our process, sharing our work in progress, tools, standards, and code freely with Albertans and the broader service sector across the country. It also means we communicate openly about our successes and failures." })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsxs("li", { children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("h3", { children: "Consider the end to end experience" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { children: "We consider the start-to-finish journey users take to complete their objective." }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { children: "We endeavour to create a resilient and seamless service experience for Albertans across digital and physical channels. In some cases, this may include changes to policies and legislation, processes, and ways in which users interact with the service." })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsxs("li", { children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("h3", { children: "Flexible technology ecosystem" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { children: "We build ecosystems to meet the constant evolution of user needs and technology." }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { children: "This means starting small and scaling up, developing compatible common components, and judiciously choosing the right tool for the job. We believe in being frugal with Albertans' tax dollars, and endeavour to leverage existing components of the ecosystem wherever possible." })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsxs("li", { children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("h3", { children: "Resilient security and privacy practices" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { children: "We respect that Albertans have entrusted us to handle their personal information with care. We recognize that people own their personal data and have a stake in how the government uses that information." }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { children: "In partnership with the Cybersecurity Services and Data, Information and Privacy Services Divisions of Service Alberta, we are committed to implementing privacy, security, and data management best practices that are in line with industry standards and Albertans' evolving expectations of digital services." })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsxs("li", { children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("h3", { children: "Inclusive practices that work for all" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { children: "We humbly acknowledge that societal inequities exist and recognize that these inequities can—often unintentionally—manifest in an organizational setting. We are dedicated to policies and practices that strive to mitigate inequities before they happen and confront them if they inadvertently arise. We consider accessibility and diversity as foundational design criteria for any public service. We are committed to designing inclusive government services that prioritize the experiences of users with distinct needs." }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { children: "We acknowledge the complex historical relationship that the government has with Indigenous peoples and endeavour to work in the spirit of reconciliation in every project." })
      ] })
    ] })
  ] });
}
function DevelopersOverviewPage() {
  return /* @__PURE__ */ jsxRuntimeExports$1.jsxs(jsxRuntimeExports$1.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h1", { children: "Developers" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h3", { children: "As a developer, you can consume the design system using tokens, components, templates, and the demo application." }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h2", { children: "Overview" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { children: "The DDD Design System is built with Web Components. Web Components are technology agnostic. You can choose various front-end frameworks, like Angular, React, or Vue, to use with our web components. All components include sample HTML and only use JavaScript when necessary." }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { children: "The design system consists of:" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsxs("goa-block", { gap: "xs", direction: "column", mb: "m", children: [
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "#design-token-intro", children: "Design tokens" }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "#components-intro", children: "Components" }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "#product-templates-intro", children: "Product templates" })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { children: "Designers also have access to the same resources in Figma. To begin with, they should utilize the components from the design system for common elements of the service. This will save you from having to create everything from scratch." }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsxs("p", { children: [
      "These design system components have all been designed and coded to meet a",
      " ",
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "https://www.w3.org/WAI/standards-guidelines/wcag/", target: "_blank", children: "WCAG 2.1 accessibility standard" }),
      "."
    ] }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h3", { id: "design-token-intro", children: "Design tokens" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsxs("p", { children: [
      "You can access the ",
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "/design-tokens", children: "design tokens" }),
      " as an NPM package here:",
      " ",
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "https://www.npmjs.com/package/@abgov/design-tokens", target: "_blank", children: "npm: @abgov/design-tokens" }),
      ". Incorporate the SCSS or CSS file into your projects and replace hard-coded values with the token variables from the design system."
    ] }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { children: "Your designers can use and reference these design tokens in their tools to hand off their designs to you." }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h3", { id: "components-intro", children: "Components" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsxs("p", { children: [
      "Components are reusable parts of the user interface that have been made to support a variety of applications. You can use individual components in many different patterns and contexts. Our components are available in",
      " ",
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "https://www.npmjs.com/package/@abgov/angular-components", target: "_blank", children: "Angular" }),
      ",",
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "https://www.npmjs.com/package/@abgov/react-components", target: "_blank", children: "React" }),
      ", and as",
      " ",
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "https://www.npmjs.com/package/@abgov/web-components", target: "_blank", children: "Web Components" }),
      "."
    ] }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "/get-started/developers/technologies", children: "Read more about design system technologies" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h4", { children: "Visual Studio Code support" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsxs("p", { children: [
      "In order to use VS Code's",
      " ",
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "https://github.com/microsoft/vscode-custom-data", target: "_blank", children: "HTML/CSS Custom Data" }),
      " ",
      "support to enhance GoA Web Components HTML editing experience, include our html custom data setting found in.vscode/settings.json:"
    ] }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("div", { className: "max-width-72ch", children: /* @__PURE__ */ jsxRuntimeExports$1.jsx(
      CodeSnippet,
      {
        lang: "typescript",
        tags: "react",
        allowCopy: true,
        code: `{
            "html.customData":[
              "./node_modules/@abgov/web-components/html.html-data.json"
              ]
            }`
      }
    ) }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h3", { id: "product-templates-intro", children: "Product templates" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsxs("p", { children: [
      "To help get teams up and running sooner, this product template has been created for teams to quickly use the ui-components and provide a starting point for building DDD products. The product templates are available in",
      " ",
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "https://github.com/GovAlta/ui-components-angular-template", target: "_blank", children: "Angular" }),
      " ",
      "and",
      " ",
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "https://github.com/GovAlta/ui-components-react-template", target: "_blank", children: "React" }),
      "."
    ] }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h3", { children: "Demo application" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { children: "This is a demo application to see and interact with the design system components." }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "https://abgov-ui-react.netlify.app/", target: "_blank", children: "View demo application" })
  ] });
}
const Developers = "";
function DevelopersSetupPage() {
  function scrollToDiv(targetId) {
    const element2 = document.getElementById(targetId);
    if (element2) {
      element2.scrollIntoView({ behavior: "smooth" });
    }
  }
  return /* @__PURE__ */ jsxRuntimeExports$1.jsxs("div", { className: "developer-setup", children: [
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h1", { children: "Developers" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h2", { children: "Setup" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoAGrid, { minChildWidth: "20ch", gap: "xs", mt: "m", mb: "3xl", children: [
      /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoABlock, { gap: "xs", direction: "column", children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "#angular", children: "Angular" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "#vue", children: "Vue" })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoABlock, { gap: "xs", direction: "column", children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "#react", children: "React" }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "#templates", children: "Template" })
      ] })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoAContainer, { type: "non-interactive", children: [
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("h3", { children: "Once you are setup, you can use the project template to quickly get started." }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoAButton, { type: "tertiary", onClick: () => scrollToDiv("templates"), children: "View project templates" })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h3", { id: "angular", children: "Angular UI components" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { children: "This is the web component library and utilizes Angular's web component integration." }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h4", { children: "1. Add Dependencies" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx(
      CodeSnippet,
      {
        lang: "typescript",
        tags: "react",
        allowCopy: true,
        code: `
          npm i @abgov/web-components
          npm i @abgov/angular-components -f
        `
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h4", { children: "2. Link ionicons in app/index.html Add the following in the head element" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx(
      CodeSnippet,
      {
        lang: "typescript",
        tags: "react",
        allowCopy: true,
        code: `
          <script type="module" src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.esm.js"><\/script>
          <script nomodule src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.js"><\/script>
        `
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h4", { children: "3. Update src/app/app.module.ts as per the four steps below" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx(
      CodeSnippet,
      {
        lang: "typescript",
        tags: "react",
        allowCopy: true,
        code: `
          // 1. Import the CUSTOM_ELEMENTS_SCHEMA
          import { CUSTOM_ELEMENTS_SCHEMA } from "@angular/core";
          // 2. Import the libs
          import "@abgov/web-components";
          import { AngularComponentsModule } from "@abgov/angular-components";
          
          @NgModule({
            declarations: [AppComponent],
            imports: [
              // 3. Add the needed imports
              BrowserModule,
              AngularComponentsModule,
            ],
            providers: [],
            bootstrap: [AppComponent],
            // 4. Add the CUSTOM_ELEMENTS_SCHEMA to the NgModule
            schemas: [CUSTOM_ELEMENTS_SCHEMA],
          })
          export class AppModule {}
        `
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h4", { children: "4. Add the styles link in the src/styles.css file" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx(
      CodeSnippet,
      {
        lang: "typescript",
        tags: "react",
        allowCopy: true,
        code: `@import "abgov/web-components/index.css";`
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoADivider, { mt: "2xl", mb: "xl" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h3", { id: "react", children: "React UI components" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { children: "This library contains React components which wrap the Government of Alberta Web Components." }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h4", { children: "1. Add Dependencies" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx(
      CodeSnippet,
      {
        lang: "typescript",
        tags: "react",
        allowCopy: true,
        code: `
          npm i @abgov/react-components
          npm i @abgov/web-components
        `
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h4", { children: "2. Link ionicons in app/index.html Add the following to the head element" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx(
      CodeSnippet,
      {
        lang: "typescript",
        tags: "react",
        allowCopy: true,
        code: `
          <script type="module" src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.esm.js"><\/script>
          <script nomodule src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.js"><\/script>
        `
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h4", { children: "3. Import the web-component styles in the src/index.css file" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx(
      CodeSnippet,
      {
        lang: "typescript",
        tags: "react",
        allowCopy: true,
        code: `@import "abgov/web-components/index.css";`
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoADivider, { mt: "2xl", mb: "xl" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h3", { id: "vue", children: "Vue web components" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { children: "This library contains react components from the Government of Alberta." }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h4", { children: "1. Add Dependencies" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx(
      CodeSnippet,
      {
        lang: "typescript",
        tags: "react",
        allowCopy: true,
        code: `npm i @abgov/web-components`
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h4", { children: "2. Link ionicons in index.html Add the following in the head element" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx(
      CodeSnippet,
      {
        lang: "typescript",
        tags: "react",
        allowCopy: true,
        code: `
          <script type="module" src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.esm.js"><\/script>
          <script nomodule src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.js"><\/script>
        `
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h4", { children: "3. Update vite.config.js with the following:" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx(
      CodeSnippet,
      {
        lang: "typescript",
        tags: "react",
        allowCopy: true,
        code: `
          plugins: [
            vue({
              template: {
               compilerOptions: {
                 // treat all tags with goa- as custom elements
                 isCustomElement: (tag) => tag.includes('goa-')
               }
            }
          })],
        `
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h4", { children: "4. Import the web-components into src/main.js:" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx(
      CodeSnippet,
      {
        lang: "typescript",
        tags: "react",
        allowCopy: true,
        code: `import "@abgov/web-components";`
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h4", { children: "5. Add the styles link in the src/assets/main.css file or wherever your main css file is located:" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx(
      CodeSnippet,
      {
        lang: "typescript",
        tags: "react",
        allowCopy: true,
        code: `@import "@abgov/web-components/index.css";`
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx(GoADivider, { mt: "2xl", mb: "xl" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("h3", { id: "templates", children: "Angular/React templates" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsxs(GoABlock, { gap: "xl", mb: "xl", children: [
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "https://github.com/GovAlta/ui-components-angular-template", target: "_blank", children: "Angular template" }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("a", { href: "https://github.com/GovAlta/ui-components-react-template", target: "_blank", children: "React template" })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsx("p", { children: "To use the templates, follow these steps:" }),
    /* @__PURE__ */ jsxRuntimeExports$1.jsxs("ol", { children: [
      /* @__PURE__ */ jsxRuntimeExports$1.jsxs("li", { children: [
        "Click the green ",
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("strong", { children: "Use this template" }),
        " button"
      ] }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsxs("li", { children: [
        "Select ",
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("strong", { children: "Create a new repository" })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("li", { children: "Select an owner and give the repo a suitable name for your project" }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("li", { children: "Select either Public or Private" }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsxs("li", { children: [
        "Click the button ",
        /* @__PURE__ */ jsxRuntimeExports$1.jsx("strong", { children: "Create repository from template" })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("li", { children: "Clone the repo onto your machine" }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsxs("li", { children: [
        "Using a terminal of some kind, go into the directory you created and run the following commands (in order):",
        /* @__PURE__ */ jsxRuntimeExports$1.jsxs("ol", { children: [
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("li", { children: /* @__PURE__ */ jsxRuntimeExports$1.jsx("code", { children: "npm i" }) }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx("li", { children: /* @__PURE__ */ jsxRuntimeExports$1.jsx("code", { children: "npm run build" }) }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsxs("li", { children: [
            /* @__PURE__ */ jsxRuntimeExports$1.jsx("code", { children: "npm run start" }),
            "-- if using Angular, ",
            /* @__PURE__ */ jsxRuntimeExports$1.jsx("code", { children: "npm run dev" }),
            " --if using react"
          ] })
        ] })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports$1.jsx("li", { children: "Go to the listed port number of your localhost" })
    ] })
  ] });
}
const useMediaQuery = (query) => {
  const [matches, setMatches] = reactExports$1.useState(false);
  reactExports$1.useEffect(() => {
    const media = window.matchMedia(query);
    if (media.matches !== matches) {
      setMatches(media.matches);
    }
    const listener = () => setMatches(media.matches);
    media.addEventListener("change", listener);
    return () => media.removeEventListener("change", listener);
  }, [matches, query]);
  return matches;
};
const DeviceWidthProvider = ({ children: children2 }) => {
  const isDesktop = useMediaQuery("(min-width: 1232px)");
  const isMobile = useMediaQuery("(max-width: 623px)");
  return /* @__PURE__ */ jsxRuntimeExports$1.jsx(DeviceWidthContext.Provider, { value: { isDesktop, isMobile }, children: children2 });
};
const base = "/ui-components-docs/";
const router = createBrowserRouter(
  createRoutesFromChildren(
    /* @__PURE__ */ jsxRuntimeExports$1.jsxs(Route, { path: `${base}`, element: /* @__PURE__ */ jsxRuntimeExports$1.jsx(Root, {}), children: [
      /* @__PURE__ */ jsxRuntimeExports$1.jsxs(
        Route,
        {
          path: `${base}components`,
          element: /* @__PURE__ */ jsxRuntimeExports$1.jsx(Components, {}),
          errorElement: /* @__PURE__ */ jsxRuntimeExports$1.jsx(ComponentNotFound, {}),
          children: [
            /* @__PURE__ */ jsxRuntimeExports$1.jsx(Route, { index: true, element: /* @__PURE__ */ jsxRuntimeExports$1.jsx(CheckboxPage, {}) }),
            /* @__PURE__ */ jsxRuntimeExports$1.jsx(Route, { path: "accordion", element: /* @__PURE__ */ jsxRuntimeExports$1.jsx(AccordionPage, {}) }),
            /* @__PURE__ */ jsxRuntimeExports$1.jsx(Route, { path: "button", element: /* @__PURE__ */ jsxRuntimeExports$1.jsx(ButtonPage, {}) }),
            /* @__PURE__ */ jsxRuntimeExports$1.jsx(Route, { path: "dropdown", element: /* @__PURE__ */ jsxRuntimeExports$1.jsx(DropdownPage$1, {}) }),
            /* @__PURE__ */ jsxRuntimeExports$1.jsx(Route, { path: "form-stepper", element: /* @__PURE__ */ jsxRuntimeExports$1.jsx(DropdownPage, {}) }),
            /* @__PURE__ */ jsxRuntimeExports$1.jsx(Route, { path: "checkbox", element: /* @__PURE__ */ jsxRuntimeExports$1.jsx(CheckboxPage$1, {}) }),
            /* @__PURE__ */ jsxRuntimeExports$1.jsx(Route, { path: "badge", element: /* @__PURE__ */ jsxRuntimeExports$1.jsx(BadgePage, {}) }),
            /* @__PURE__ */ jsxRuntimeExports$1.jsx(Route, { path: "*", element: /* @__PURE__ */ jsxRuntimeExports$1.jsx(ComponentNotFound, {}) })
          ]
        }
      ),
      /* @__PURE__ */ jsxRuntimeExports$1.jsxs(
        Route,
        {
          path: `${base}/design-tokens`,
          element: /* @__PURE__ */ jsxRuntimeExports$1.jsx(DesignTokenLayout, {}),
          errorElement: /* @__PURE__ */ jsxRuntimeExports$1.jsx(ComponentNotFound, {}),
          children: [
            /* @__PURE__ */ jsxRuntimeExports$1.jsx(Route, { index: true, element: /* @__PURE__ */ jsxRuntimeExports$1.jsx(DesignTokensOverviewPage, {}) }),
            /* @__PURE__ */ jsxRuntimeExports$1.jsx(Route, { path: "border-width", element: /* @__PURE__ */ jsxRuntimeExports$1.jsx(BorderWidthPage, {}) }),
            /* @__PURE__ */ jsxRuntimeExports$1.jsx(Route, { path: "border-radius", element: /* @__PURE__ */ jsxRuntimeExports$1.jsx(BorderRadiusPage, {}) }),
            /* @__PURE__ */ jsxRuntimeExports$1.jsx(Route, { path: "color", element: /* @__PURE__ */ jsxRuntimeExports$1.jsx(ColorPage, {}) }),
            /* @__PURE__ */ jsxRuntimeExports$1.jsx(Route, { path: "icon-size", element: /* @__PURE__ */ jsxRuntimeExports$1.jsx(IconSizePage, {}) }),
            /* @__PURE__ */ jsxRuntimeExports$1.jsx(Route, { path: "opacity", element: /* @__PURE__ */ jsxRuntimeExports$1.jsx(OpacityPage, {}) }),
            /* @__PURE__ */ jsxRuntimeExports$1.jsx(Route, { path: "shadow", element: /* @__PURE__ */ jsxRuntimeExports$1.jsx(ShadowPage, {}) }),
            /* @__PURE__ */ jsxRuntimeExports$1.jsx(Route, { path: "spacing", element: /* @__PURE__ */ jsxRuntimeExports$1.jsx(SpacingPage, {}) }),
            /* @__PURE__ */ jsxRuntimeExports$1.jsx(Route, { path: "typography", element: /* @__PURE__ */ jsxRuntimeExports$1.jsx(TypographyPage, {}) })
          ]
        }
      ),
      /* @__PURE__ */ jsxRuntimeExports$1.jsxs(Route, { path: "get-started", element: /* @__PURE__ */ jsxRuntimeExports$1.jsx(GetStartedLayout, {}), children: [
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(Route, { index: true, element: /* @__PURE__ */ jsxRuntimeExports$1.jsx(GetStartedOverviewPage, {}) }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(Route, { path: "designers", children: /* @__PURE__ */ jsxRuntimeExports$1.jsx(Route, { index: true, element: /* @__PURE__ */ jsxRuntimeExports$1.jsx(UxDesignerPage, {}) }) }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsxs(Route, { path: "developers", children: [
          /* @__PURE__ */ jsxRuntimeExports$1.jsx(Route, { index: true, element: /* @__PURE__ */ jsxRuntimeExports$1.jsx(DevelopersOverviewPage, {}) }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx(Route, { path: "setup", element: /* @__PURE__ */ jsxRuntimeExports$1.jsx(DevelopersSetupPage, {}) }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx(Route, { path: "vscode", element: /* @__PURE__ */ jsxRuntimeExports$1.jsx(DevelopersVSCodePage, {}) }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx(Route, { path: "technologies", element: /* @__PURE__ */ jsxRuntimeExports$1.jsx(DevelopersTechnologiesPage, {}) }),
          /* @__PURE__ */ jsxRuntimeExports$1.jsx(Route, { path: "browsers", element: /* @__PURE__ */ jsxRuntimeExports$1.jsx(SupportedBrowsersPage, {}) })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(Route, { path: "qa-testing", children: /* @__PURE__ */ jsxRuntimeExports$1.jsx(Route, { index: true, element: /* @__PURE__ */ jsxRuntimeExports$1.jsx(QATestingOverviewPage, {}) }) }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(Route, { path: "roadmap", element: /* @__PURE__ */ jsxRuntimeExports$1.jsx(RoadmapPage, {}) }),
        /* @__PURE__ */ jsxRuntimeExports$1.jsx(Route, { path: "service-principles", element: /* @__PURE__ */ jsxRuntimeExports$1.jsx(ServicePrinciplesPage, {}) })
      ] })
    ] })
  )
);
client.createRoot(document.getElementById("root")).render(
  /* @__PURE__ */ jsxRuntimeExports$1.jsx(React.StrictMode, { children: /* @__PURE__ */ jsxRuntimeExports$1.jsx(DeviceWidthProvider, { children: /* @__PURE__ */ jsxRuntimeExports$1.jsx(RouterProvider, { router }) }) })
);
